openapi: 3.0.1
info:
  title: ebay官方api
  version: 1.0.0
servers:
- url: /
tags:
- name: Account API v1
- name: Account API v1/custom_policy
- name: Account API v1/fulfillment_policy
- name: Account API v1/payment_policy
- name: Account API v1/payments_program
- name: Account API v1/onboarding
- name: Account API v1/privilege
- name: Account API v1/program
- name: Account API v1/rate_table
- name: Account API v1/return_policy
- name: Account API v1/sales_tax
- name: Account API v1/kyc
- name: Account API v1/advertising_eligibility
- name: Account API v2
- name: Account API v2/rate_table
- name: Analytics API
- name: Analytics API/customer_service_metric
- name: Analytics API/seller_standards_profile
- name: Analytics API/traffic_report
- name: Compliance API
- name: Compliance API/listing_violation_summary
- name: Compliance API/listing_violation
- name: Feed API
- name: Feed API/order_task
- name: Feed API/inventory_task
- name: Feed API/schedule
- name: Feed API/task
- name: Feed API/customer_service_metric_task
- name: Finances API
- name: Finances API/payout
- name: Finances API/seller_funds_summary
- name: Finances API/transaction
- name: Finances API/transfer
- name: Fulfillment API
- name: Fulfillment API/order
- name: Fulfillment API/shipping_fulfillment
- name: Fulfillment API/payment_dispute
- name: Inventory API
- name: Inventory API/inventory_item
- name: Inventory API/product_compatibility
- name: Inventory API/inventory_item_group
- name: Inventory API/listing
- name: Inventory API/offer
- name: Inventory API/location
- name: Logistics API
- name: Logistics API/shipping_quote
- name: Logistics API/shipment
- name: Marketing API
- name: Marketing API/marketplace
- name: Marketing API/ad
- name: Marketing API/ad_group
- name: Marketing API/country
- name: Marketing API/campaign
- name: Marketing API/keyword
- name: Marketing API/negative_keyword
- name: Marketing API/ad_report
- name: Marketing API/ad_report_metadata
- name: Marketing API/ad_report_task
- name: Marketing API/item_price_markdown
- name: Marketing API/item_promotion
- name: Marketing API/promotion
- name: Marketing API/promotion_report
- name: Marketing API/promotion_summary_report
- name: Negotiation API
- name: Negotiation API/offer
- name: Recommendation API
- name: Recommendation API/listing_recommendation
paths:
  /custom_policy/:
    get:
      deprecated: false
      description: 'This method retrieves the list of custom policies specified by
        the <b>policy_types</b> query parameter for the selected eBay marketplace.<br/>
        <br/> <span class="tablenote"><strong>Note:</strong> The following eBay marketplaces
        support Custom Policies: <ul><li>Germany (EBAY_DE)</li> <li>Canada (EBAY_CA)</li>
        <li>Australia (EBAY_AU)</li> <li>United States (EBAY_US)</li> <li>France (EBAY_FR)</li></ul></span><br/><br/>For
        details on header values, see <a href="/api-docs/static/rest-request-components.html#HTTP"
        target="_blank">HTTP request headers</a>.'
      operationId: getCustomPolicies
      parameters:
      - description: 'This query parameter specifies the type of custom policies to
          be returned.<br /><br />Multiple policy types may be requested in a single
          call by providing a comma-delimited set of all policy types to be returned.<br/><br/><span
          class="tablenote"><strong>Note:</strong> Omitting this query parameter from
          a request will also return policies of all policy types.</span><br/><br/>Two
          Custom Policy types are supported: <ul><li>Product Compliance (PRODUCT_COMPLIANCE)</li>
          <li>Takeback (TAKE_BACK)</li></ul>'
        explode: true
        in: query
        name: policy_types
        required: false
        schema:
          type: string
        style: form
      - description: 'This header parameter specifies the eBay markeplace for the
          custom policy that is being created. Supported values for this header can
          be found in the <a href="/api-docs/sell/account/types/ba:MarketplaceIdEnum"
          target="_blank">MarketplaceIdEnum</a> type definition.<br/> <br/> <span
          class="tablenote"><strong>Note:</strong> The following eBay marketplaces
          support Custom Policies: <ul><li>Germany (EBAY_DE)</li> <li>Canada (EBAY_CA)</li>
          <li>Australia (EBAY_AU)</li> <li>United States (EBAY_US)</li> <li>France
          (EBAY_FR)</li></ul></span>'
        explode: false
        in: header
        name: X-EBAY-C-MARKETPLACE-ID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPolicyResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /custom_policy/
      tags:
      - Account API v1/custom_policy
      x-apifox-folder: Account API v1/custom_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495627-run
      x-accepts: application/json
    post:
      deprecated: false
      description: 'This method creates a new custom policy in which a seller specifies
        their terms for complying with local governmental regulations. <br/><br/>Two
        Custom Policy types are supported: <ul><li>Product Compliance (PRODUCT_COMPLIANCE)</li>
        <li>Takeback (TAKE_BACK)</li></ul>Each Custom Policy targets a <b>policyType</b>
        and <b>eBay marketplace</b> combination. Multiple policies may be created
        as follows: <ul><li><b>Product Compliance</b>: a maximum of 10 policies per
        eBay marketplace may be created</li> <li><b>Takeback</b>: a maximum of 3 policies
        per eBay marketplace may be created</li></ul>A successful create policy call
        returns an HTTP status code of <b>201 Created</b> with the system-generated
        policy ID included in the <b>Location</b> response header.<br/><br/><b>Product
        Compliance Policy</b><br/><br/>Product Compliance policies disclose product
        information as required for regulatory compliance.<br/><br/><span class="tablenote"><strong>Note:</strong>
        A maximum of 10 Product Compliance policies per eBay marketplace may be created.</span>
        <br/><br/> <b>Takeback Policy</b><br/><br/>Takeback policies describe the
        seller''s legal obligation to take back a previously purchased item when the
        buyer purchases a new one.<br/><br/><span class="tablenote"><strong>Note:</strong>
        A maximum of 3 Takeback policies per eBay marketplace may be created.</span>'
      operationId: createCustomPolicy
      parameters:
      - description: 'This header parameter specifies the eBay markeplace for the
          custom policy that is being created. Supported values for this header can
          be found in the <a href="/api-docs/sell/account/types/ba:MarketplaceIdEnum"
          target="_blank">MarketplaceIdEnum</a> type definition.<br/> <br/> <span
          class="tablenote"><strong>Note:</strong> The following eBay marketplaces
          support Custom Policies: <ul><li>Germany (EBAY_DE)</li> <li>Canada (EBAY_CA)</li>
          <li>Australia (EBAY_AU)</li> <li>United States (EBAY_US)</li> <li>France
          (EBAY_FR)</li></ul></span>'
        explode: false
        in: header
        name: X-EBAY-C-MARKETPLACE-ID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomPolicyCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Policy Name already used/ Maximum no of policies per site reached
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /custom_policy/
      tags:
      - Account API v1/custom_policy
      x-apifox-folder: Account API v1/custom_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495633-run
      x-contentType: application/json
      x-accepts: application/json
  /fulfillment_policy/get_by_policy_name:
    get:
      deprecated: false
      description: 'This method retrieves the details for a specific fulfillment policy.
        In the request, supply both the policy <code>name</code> and its associated
        <code>marketplace_id</code> as query parameters.   <br/><br/><b>Marketplaces
        and locales</b>  <br/><br/>Get the correct policy for a marketplace that supports
        multiple locales using the <code>Content-Language</code> request header. For
        example, get a policy for the French locale of the Canadian marketplace by
        specifying <code>fr-CA</code> for the <code>Content-Language</code> header.
        Likewise, target the Dutch locale of the Belgium marketplace by setting <code>Content-Language:
        nl-BE</code>. For details on header values, see <a href="/api-docs/static/rest-request-components.html#HTTP">HTTP
        request headers</a>.'
      operationId: getFulfillmentPolicyByName
      parameters:
      - description: This query parameter specifies the eBay marketplace of the policy
          you want to retrieve. For implementation help, refer to eBay API documentation
          at https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum
        explode: true
        in: query
        name: marketplace_id
        required: true
        schema:
          type: string
        style: form
      - description: This query parameter specifies the seller-defined name of the
          fulfillment policy you want to retrieve.
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /fulfillment_policy/get_by_policy_name
      tags:
      - Account API v1/fulfillment_policy
      x-apifox-folder: Account API v1/fulfillment_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495628-run
      x-accepts: application/json
  /payment_policy:
    get:
      deprecated: false
      description: 'This method retrieves all the payment policies configured for
        the marketplace you specify using the <code>marketplace_id</code> query parameter.  <br/><br/><b>Marketplaces
        and locales</b>  <br/><br/>Get the correct policies for a marketplace that
        supports multiple locales using the <code>Content-Language</code> request
        header. For example, get the policies for the French locale of the Canadian
        marketplace by specifying <code>fr-CA</code> for the <code>Content-Language</code>
        header. Likewise, target the Dutch locale of the Belgium marketplace by setting
        <code>Content-Language: nl-BE</code>. For details on header values, see <a
        href="/api-docs/static/rest-request-components.html#HTTP" target="_blank">HTTP
        request headers</a>.'
      operationId: getPaymentPolicies
      parameters:
      - description: This query parameter specifies the eBay marketplace of the policies
          you want to retrieve. For implementation help, refer to eBay API documentation
          at https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum
        explode: true
        in: query
        name: marketplace_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentPolicyResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /payment_policy
      tags:
      - Account API v1/payment_policy
      x-apifox-folder: Account API v1/payment_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495629-run
      x-accepts: application/json
    post:
      deprecated: false
      description: This method creates a new payment policy where the policy encapsulates
        seller's terms for order payments.  <br/><br/>Each policy targets a specific
        eBay marketplace and category group, and you can create multiple policies
        for each combination.  <br/><br/>A successful request returns the <b>getPaymentPolicy</b>
        URI to the new policy in the <b>Location</b> response header and the ID for
        the new policy is returned in the response payload.  <p class="tablenote"><b>Tip:</b>
        For details on creating and using the business policies supported by the Account
        API, see <a href="/api-docs/sell/static/seller-accounts/business-policies.html">eBay
        business policies</a>.</p>
      operationId: createPaymentPolicy
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentPolicyRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPaymentPolicyResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /payment_policy
      tags:
      - Account API v1/payment_policy
      x-apifox-folder: Account API v1/payment_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495631-run
      x-contentType: application/json
      x-accepts: application/json
  /custom_policy/{custom_policy_id}:
    get:
      deprecated: false
      description: 'This method retrieves the custom policy specified by the <b>custom_policy_id</b>
        path parameter for the selected eBay marketplace.<br/> <br/> <span class="tablenote"><strong>Note:</strong>
        The following eBay marketplaces support Custom Policies: <ul><li>Germany (EBAY_DE)</li>
        <li>Canada (EBAY_CA)</li> <li>Australia (EBAY_AU)</li> <li>United States (EBAY_US)</li>
        <li>France (EBAY_FR)</li></ul></span><br/><br/>For details on header values,
        see <a href="/api-docs/static/rest-request-components.html#HTTP" target="_blank">HTTP
        request headers</a>.'
      operationId: getCustomPolicy
      parameters:
      - description: This path parameter is the unique custom policy identifier for
          the policy to be returned.<br/><br/><span class="tablenote"><strong>Note:</strong>
          This value is automatically assigned by the system when the policy is created.</span>
        explode: false
        in: path
        name: custom_policy_id
        required: true
        schema:
          type: string
        style: simple
      - description: 'This header parameter specifies the eBay markeplace for the
          custom policy that is being created. Supported values for this header can
          be found in the <a href="/api-docs/sell/account/types/ba:MarketplaceIdEnum"
          target="_blank">MarketplaceIdEnum</a> type definition.<br/> <br/> <span
          class="tablenote"><strong>Note:</strong> The following eBay marketplaces
          support Custom Policies: <ul><li>Germany (EBAY_DE)</li> <li>Canada (EBAY_CA)</li>
          <li>Australia (EBAY_AU)</li> <li>United States (EBAY_US)</li> <li>France
          (EBAY_FR)</li></ul></span>'
        explode: false
        in: header
        name: X-EBAY-C-MARKETPLACE-ID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /custom_policy/{custom_policy_id}
      tags:
      - Account API v1/custom_policy
      x-apifox-folder: Account API v1/custom_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495630-run
      x-accepts: application/json
    put:
      deprecated: false
      description: 'This method updates an existing custom policy specified by the
        <b>custom_policy_id</b> path parameter for the selected marketplace. This
        method overwrites the policy''s <b>Name</b>, <b>Label</b>, and <b>Description</b>
        fields. Therefore, the complete, current text of all three policy fields must
        be included in the request payload even when one or two of these fields will
        not actually be updated.<br/> <br/>For example, the value for the <b>Label</b>
        field is to be updated, but the <b>Name</b> and <b>Description</b> values
        will remain unchanged. The existing <b>Name</b> and <b>Description</b> values,
        as they are defined in the current policy, must also be passed in. <br/><br/>A
        successful policy update call returns an HTTP status code of <b>204 No Content</b>.<br/><br/><span
        class="tablenote"><strong>Note:</strong> The following eBay marketplaces support
        Custom Policies: <ul><li>Germany (EBAY_DE)</li> <li>Canada (EBAY_CA)</li>
        <li>Australia (EBAY_AU)</li> <li>United States (EBAY_US)</li> <li>France (EBAY_FR)</li></ul></span><br/><br/>For
        details on header values, see <a href="/api-docs/static/rest-request-components.html#HTTP">HTTP
        request headers</a>.'
      operationId: updateCustomPolicy
      parameters:
      - description: This path parameter is the unique custom policy identifier for
          the policy to be returned.<br/><br/><span class="tablenote"><strong>Note:</strong>
          This value is automatically assigned by the system when the policy is created.</span>
        explode: false
        in: path
        name: custom_policy_id
        required: true
        schema:
          type: string
        style: simple
      - description: 'This header parameter specifies the eBay markeplace for the
          custom policy that is being created. Supported values for this header can
          be found in the <a href="/api-docs/sell/account/types/ba:MarketplaceIdEnum"
          target="_blank">MarketplaceIdEnum</a> type definition.<br/> <br/> <span
          class="tablenote"><strong>Note:</strong> The following eBay marketplaces
          support Custom Policies: <ul><li>Germany (EBAY_DE)</li> <li>Canada (EBAY_CA)</li>
          <li>Australia (EBAY_AU)</li> <li>United States (EBAY_US)</li> <li>France
          (EBAY_FR)</li></ul></span>'
        explode: false
        in: header
        name: X-EBAY-C-MARKETPLACE-ID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomPolicyRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Policy Name already used/ Maximum no of policies per site reached
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /custom_policy/{custom_policy_id}
      tags:
      - Account API v1/custom_policy
      x-apifox-folder: Account API v1/custom_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495637-run
      x-contentType: application/json
      x-accepts: application/json
  /program/get_opted_in_programs:
    get:
      deprecated: false
      description: This method gets a list of the seller programs that the seller
        has opted-in to.
      operationId: getOptedInPrograms
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Programs'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /program/get_opted_in_programs
      tags:
      - Account API v1/program
      x-apifox-folder: Account API v1/program
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495632-run
      x-accepts: application/json
  /fulfillment_policy/{fulfillmentPolicyId}:
    delete:
      deprecated: false
      description: This method deletes a fulfillment policy. Supply the ID of the
        policy you want to delete in the <b>fulfillmentPolicyId</b> path parameter.
      operationId: deleteFulfillmentPolicy
      parameters:
      - description: This path parameter specifies the ID of the fulfillment policy
          to delete.
        explode: false
        in: path
        name: fulfillmentPolicyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /fulfillment_policy/{fulfillmentPolicyId}
      tags:
      - Account API v1/fulfillment_policy
      x-apifox-folder: Account API v1/fulfillment_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495635-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This method retrieves the complete details of a fulfillment policy.
        Supply the ID of the policy you want to retrieve using the <b>fulfillmentPolicyId</b>
        path parameter.
      operationId: getFulfillmentPolicy
      parameters:
      - description: This path parameter specifies the ID of the fulfillment policy
          you want to retrieve.
        explode: false
        in: path
        name: fulfillmentPolicyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /fulfillment_policy/{fulfillmentPolicyId}
      tags:
      - Account API v1/fulfillment_policy
      x-apifox-folder: Account API v1/fulfillment_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495634-run
      x-accepts: application/json
    put:
      deprecated: false
      description: This method updates an existing fulfillment policy. Specify the
        policy you want to update using the <b>fulfillment_policy_id</b> path parameter.
        Supply a complete policy payload with the updates you want to make; this call
        overwrites the existing policy with the new details specified in the payload.
      operationId: updateFulfillmentPolicy
      parameters:
      - description: This path parameter specifies the ID of the fulfillment policy
          you want to update.
        explode: false
        in: path
        name: fulfillmentPolicyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetFulfillmentPolicyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /fulfillment_policy/{fulfillmentPolicyId}
      tags:
      - Account API v1/fulfillment_policy
      x-apifox-folder: Account API v1/fulfillment_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495646-run
      x-contentType: application/json
      x-accepts: application/json
  /payment_policy/{payment_policy_id}:
    delete:
      deprecated: false
      description: 'This method deletes a payment policy. Supply the ID of the policy
        you want to delete in the <b>paymentPolicyId</b> path parameter. '
      operationId: deletePaymentPolicy
      parameters:
      - description: This path parameter specifies the ID of the payment policy you
          want to delete.
        explode: false
        in: path
        name: payment_policy_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /payment_policy/{payment_policy_id}
      tags:
      - Account API v1/payment_policy
      x-apifox-folder: Account API v1/payment_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495636-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This method retrieves the complete details of a payment policy.
        Supply the ID of the policy you want to retrieve using the <b>paymentPolicyId</b>
        path parameter.
      operationId: getPaymentPolicy
      parameters:
      - description: This path parameter specifies the ID of the payment policy you
          want to retrieve.
        explode: false
        in: path
        name: payment_policy_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /payment_policy/{payment_policy_id}
      tags:
      - Account API v1/payment_policy
      x-apifox-folder: Account API v1/payment_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495642-run
      x-accepts: application/json
    put:
      deprecated: false
      description: This method updates an existing payment policy. Specify the policy
        you want to update using the <b>payment_policy_id</b> path parameter. Supply
        a complete policy payload with the updates you want to make; this call overwrites
        the existing policy with the new details specified in the payload.
      operationId: updatePaymentPolicy
      parameters:
      - description: This path parameter specifies the ID of the payment policy you
          want to update.
        explode: false
        in: path
        name: payment_policy_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPaymentPolicyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /payment_policy/{payment_policy_id}
      tags:
      - Account API v1/payment_policy
      x-apifox-folder: Account API v1/payment_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495644-run
      x-contentType: application/json
      x-accepts: application/json
  /fulfillment_policy:
    get:
      deprecated: false
      description: 'This method retrieves all the fulfillment policies configured
        for the marketplace you specify using the <code>marketplace_id</code> query
        parameter.  <br/><br/><b>Marketplaces and locales</b>  <br/><br/>Get the correct
        policies for a marketplace that supports multiple locales using the <code>Content-Language</code>
        request header. For example, get the policies for the French locale of the
        Canadian marketplace by specifying <code>fr-CA</code> for the <code>Content-Language</code>
        header. Likewise, target the Dutch locale of the Belgium marketplace by setting
        <code>Content-Language: nl-BE</code>. For details on header values, see <a
        href="/api-docs/static/rest-request-components.html#HTTP" target="_blank">HTTP
        request headers</a>.'
      operationId: getFulfillmentPolicies
      parameters:
      - description: This query parameter specifies the eBay marketplace of the policies
          you want to retrieve. For implementation help, refer to eBay API documentation
          at https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum
        explode: true
        in: query
        name: marketplace_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentPolicyResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /fulfillment_policy
      tags:
      - Account API v1/fulfillment_policy
      x-apifox-folder: Account API v1/fulfillment_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495638-run
      x-accepts: application/json
  /privilege:
    get:
      deprecated: false
      description: This method retrieves the seller's current set of privileges, including
        whether or not the seller's eBay registration has been completed, as well
        as the details of their site-wide <b>sellingLimt</b> (the amount and quantity
        they can sell on a given day).
      operationId: getPrivileges
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellingPrivileges'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /privilege
      tags:
      - Account API v1/privilege
      x-apifox-folder: Account API v1/privilege
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495639-run
      x-accepts: application/json
  /fulfillment_policy/:
    post:
      deprecated: false
      description: This method creates a new fulfillment policy where the policy encapsulates
        seller's terms for fulfilling item purchases. Fulfillment policies include
        the shipment options that the seller offers to buyers.  <br/><br/>Each policy
        targets a specific eBay marketplace and a category group type, and you can
        create multiple policies for each combination. <br/><br/>A successful request
        returns the <b>getFulfillmentPolicy</b> URI to the new policy in the <b>Location</b>
        response header and the ID for the new policy is returned in the response
        payload.  <p class="tablenote"><b>Tip:</b> For details on creating and using
        the business policies supported by the Account API, see <a href="/api-docs/sell/static/seller-accounts/business-policies.html">eBay
        business policies</a>.</p>  <p><b>Using the eBay standard envelope service
        (eSE)</b></p>  <p>The eBay standard envelope service (eSE) is a domestic envelope
        service with tracking through eBay. This service applies to specific Trading
        Cards categories (not all categories are supported), and to Coins & Paper
        Money, Postcards, and Stamps. See <a href="/api-docs/sell/static/seller-accounts/using-the-ebay-standard-envelope-service.html"
        target="_blank">Using the eBay standard envelope (eSE) service</a>.</p>
      operationId: createFulfillmentPolicy
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentPolicyRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetFulfillmentPolicyResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /fulfillment_policy/
      tags:
      - Account API v1/fulfillment_policy
      x-apifox-folder: Account API v1/fulfillment_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495640-run
      x-contentType: application/json
      x-accepts: application/json
  /payment_policy/get_by_policy_name:
    get:
      deprecated: false
      description: 'This method retrieves the details of a specific payment policy.
        Supply both the policy <code>name</code> and its associated <code>marketplace_id</code>
        in the request query parameters.   <br/><br/><b>Marketplaces and locales</b>  <br/><br/>Get
        the correct policy for a marketplace that supports multiple locales using
        the <code>Content-Language</code> request header. For example, get a policy
        for the French locale of the Canadian marketplace by specifying <code>fr-CA</code>
        for the <code>Content-Language</code> header. Likewise, target the Dutch locale
        of the Belgium marketplace by setting <code>Content-Language: nl-BE</code>.
        For details on header values, see <a href="/api-docs/static/rest-request-components.html#HTTP">HTTP
        request headers</a>.'
      operationId: getPaymentPolicyByName
      parameters:
      - description: This query parameter specifies the eBay marketplace of the policy
          you want to retrieve. For implementation help, refer to eBay API documentation
          at https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum
        explode: true
        in: query
        name: marketplace_id
        required: true
        schema:
          type: string
        style: form
      - description: This query parameter specifies the seller-defined name of the
          payment policy you want to retrieve.
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /payment_policy/get_by_policy_name
      tags:
      - Account API v1/payment_policy
      x-apifox-folder: Account API v1/payment_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495641-run
      x-accepts: application/json
  /payments_program/{marketplace_id}/{payments_program_type}:
    get:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This method is no longer applicable,
        as all seller accounts globally have been enabled for the new eBay payment
        and checkout flow.</span><br/><br/>This method returns whether or not the
        user is opted-in to the specified payments program. Sellers opt-in to payments
        programs by marketplace and you use the <b>marketplace_id</b> path parameter
        to specify the marketplace of the status flag you want returned.
      operationId: getPaymentsProgram
      parameters:
      - description: This path parameter specifies the eBay marketplace of the payments
          program for which you want to retrieve the seller's status.
        explode: false
        in: path
        name: marketplace_id
        required: true
        schema:
          type: string
        style: simple
      - description: This path parameter specifies the payments program whose status
          is returned by the call.
        explode: false
        in: path
        name: payments_program_type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsProgramResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /payments_program/{marketplace_id}/{payments_program_type}
      tags:
      - Account API v1/payments_program
      x-apifox-folder: Account API v1/payments_program
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495643-run
      x-accepts: application/json
  /payments_program/{marketplace_id}/{payments_program_type}/onboarding:
    get:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This method is no longer applicable,
        as all seller accounts globally have been enabled for the new eBay payment
        and checkout flow.</span><br/><br/>This method retrieves a seller's onboarding
        status for a payments program for a specified marketplace. The overall onboarding
        status of the seller and the status of each onboarding step is returned.
      operationId: getPaymentsProgramOnboarding
      parameters:
      - description: The eBay marketplace ID associated with the onboarding status
          to retrieve.
        explode: false
        in: path
        name: marketplace_id
        required: true
        schema:
          type: string
        style: simple
      - description: The type of payments program whose status is returned by the
          method.
        explode: false
        in: path
        name: payments_program_type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsProgramOnboardingResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /payments_program/{marketplace_id}/{payments_program_type}/onboarding
      tags:
      - Account API v1/onboarding
      x-apifox-folder: Account API v1/onboarding
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495645-run
      x-accepts: application/json
  /program/opt_in:
    post:
      deprecated: false
      description: This method opts the seller in to an eBay seller program. Refer
        to the <a href="/api-docs/sell/account/overview.html#opt-in" target="_blank">Account
        API overview</a> for information about available eBay seller programs.<br
        /><br /><span class="tablenote"><b>Note:</b> It can take up to 24-hours for
        eBay to process your request to opt-in to a Seller Program. Use the <a href="/api-docs/sell/account/resources/program/methods/getOptedInPrograms"
        target="_blank">getOptedInPrograms</a> call to check the status of your request
        after the processing period has passed.</span>
      operationId: optInToProgram
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Program'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /program/opt_in
      tags:
      - Account API v1/program
      x-apifox-folder: Account API v1/program
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495647-run
      x-contentType: application/json
      x-accepts: application/json
  /rate_table:
    get:
      deprecated: false
      description: This method retrieves a seller's <i>shipping rate tables</i> for
        the country specified in the <b>country_code</b> query parameter. If you call
        this method without specifying a country code, the call returns all of the
        seller's shipping rate tables.  <br/><br/>The method's response includes a
        <b>rateTableId</b> for each table defined by the seller. This <b>rateTableId</b>
        value is used in add/revise item call or in create/update fulfillment business
        policy call to specify the shipping rate table to use for that policy's domestic
        or international shipping options. <br/><br/>This call currently supports
        getting rate tables related to the following marketplaces:<ul><li><code>EBAY_AU</code></li>
        <li><code>EBAY_CA</code></li> <li><code>EBAY_DE</code></li> <li><code>EBAY_ES</code></li>
        <li><code>EBAY_FR</code></li> <li><code>EBAY_GB</code></li> <li><code>EBAY_IT</code></li>
        <li><code>EBAY_US</code></li></ul>  <span class="tablenote"><b>Note:</b> Rate
        tables created with the Trading API might not have been assigned a <b>rateTableId</b>
        at the time of their creation. This method can assign and return <b>rateTableId</b>
        values for rate tables with missing IDs if you make a request using the <b>country_code</b>
        where the seller has defined rate tables.</span>  <br/><br/>Sellers can define
        up to 40 shipping rate tables for their account, which lets them set up different
        rate tables for each of the marketplaces they sell into. Go to <a href="https://www.ebay.com/ship/rt">Shipping
        rate tables</a> in  <b>My eBay</b> to create and update rate tables.
      operationId: getRateTables
      parameters:
      - description: This query parameter specifies the two-letter <a href="https://www.iso.org/iso-3166-country-codes.html"
          title="https://www.iso.org" target="_blank">ISO 3166</a> code of country
          for which you want shipping rate table information. If you do not specify
          a country code, the request returns all of the seller's defined shipping
          rate tables for all eBay marketplaces. For implementation help, refer to
          eBay API documentation at https://developer.ebay.com/api-docs/sell/account/types/ba:CountryCodeEnum
        explode: true
        in: query
        name: country_code
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateTableResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /rate_table
      tags:
      - Account API v1/rate_table
      x-apifox-folder: Account API v1/rate_table
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495648-run
      x-accepts: application/json
  /program/opt_out:
    post:
      deprecated: false
      description: This method opts the seller out of a seller program to which you
        have previously opted-in to. Get a list of the seller programs you have opted-in
        to using the <b>getOptedInPrograms</b> call.
      operationId: optOutOfProgram
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Program'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /program/opt_out
      tags:
      - Account API v1/program
      x-apifox-folder: Account API v1/program
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495649-run
      x-contentType: application/json
      x-accepts: application/json
  /return_policy:
    get:
      deprecated: false
      description: 'This method retrieves all the return policies configured for the
        marketplace you specify using the <code>marketplace_id</code> query parameter.  <br/><br/><b>Marketplaces
        and locales</b>  <br/><br/>Get the correct policies for a marketplace that
        supports multiple locales using the <code>Content-Language</code> request
        header. For example, get the policies for the French locale of the Canadian
        marketplace by specifying <code>fr-CA</code> for the <code>Content-Language</code>
        header. Likewise, target the Dutch locale of the Belgium marketplace by setting
        <code>Content-Language: nl-BE</code>. For details on header values, see <a
        href="/api-docs/static/rest-request-components.html#HTTP" target="_blank">HTTP
        request headers</a>.'
      operationId: getReturnPolicies
      parameters:
      - description: This query parameter specifies the ID of the eBay marketplace
          of the policy you want to retrieve. For implementation help, refer to eBay
          API documentation at https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum
        explode: true
        in: query
        name: marketplace_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPolicyResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /return_policy
      tags:
      - Account API v1/return_policy
      x-apifox-folder: Account API v1/return_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495650-run
      x-accepts: application/json
    post:
      deprecated: false
      description: This method creates a new return policy where the policy encapsulates
        seller's terms for returning items.  <br/><br/>Each policy targets a specific
        marketplace, and you can create multiple policies for each marketplace. Return
        policies are not applicable to motor-vehicle listings.<br/><br/>A successful
        request returns the <b>getReturnPolicy</b> URI to the new policy in the <b>Location</b>
        response header and the ID for the new policy is returned in the response
        payload.  <p class="tablenote"><b>Tip:</b> For details on creating and using
        the business policies supported by the Account API, see <a href="/api-docs/sell/static/seller-accounts/business-policies.html">eBay
        business policies</a>.</p>
      operationId: createReturnPolicy
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnPolicyRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetReturnPolicyResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /return_policy
      tags:
      - Account API v1/return_policy
      x-apifox-folder: Account API v1/return_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495651-run
      x-contentType: application/json
      x-accepts: application/json
  /return_policy/{return_policy_id}:
    delete:
      deprecated: false
      description: This method deletes a return policy. Supply the ID of the policy
        you want to delete in the <b>returnPolicyId</b> path parameter.
      operationId: deleteReturnPolicy
      parameters:
      - description: This path parameter specifies the ID of the return policy you
          want to delete.
        explode: false
        in: path
        name: return_policy_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /return_policy/{return_policy_id}
      tags:
      - Account API v1/return_policy
      x-apifox-folder: Account API v1/return_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495654-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This method retrieves the complete details of the return policy
        specified by the <b>returnPolicyId</b> path parameter.
      operationId: getReturnPolicy
      parameters:
      - description: This path parameter specifies the of the return policy you want
          to retrieve.
        explode: false
        in: path
        name: return_policy_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /return_policy/{return_policy_id}
      tags:
      - Account API v1/return_policy
      x-apifox-folder: Account API v1/return_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495652-run
      x-accepts: application/json
    put:
      deprecated: false
      description: This method updates an existing return policy. Specify the policy
        you want to update using the <b>return_policy_id</b> path parameter. Supply
        a complete policy payload with the updates you want to make; this call overwrites
        the existing policy with the new details specified in the payload.
      operationId: updateReturnPolicy
      parameters:
      - description: This path parameter specifies the ID of the return policy you
          want to update.
        explode: false
        in: path
        name: return_policy_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetReturnPolicyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /return_policy/{return_policy_id}
      tags:
      - Account API v1/return_policy
      x-apifox-folder: Account API v1/return_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495653-run
      x-contentType: application/json
      x-accepts: application/json
  /return_policy/get_by_policy_name:
    get:
      deprecated: false
      description: 'This method retrieves the details of a specific return policy.
        Supply both the policy <code>name</code> and its associated <code>marketplace_id</code>
        in the request query parameters.   <br/><br/><b>Marketplaces and locales</b>  <br/><br/>Get
        the correct policy for a marketplace that supports multiple locales using
        the <code>Content-Language</code> request header. For example, get a policy
        for the French locale of the Canadian marketplace by specifying <code>fr-CA</code>
        for the <code>Content-Language</code> header. Likewise, target the Dutch locale
        of the Belgium marketplace by setting <code>Content-Language: nl-BE</code>.
        For details on header values, see <a href="/api-docs/static/rest-request-components.html#HTTP">HTTP
        request headers</a>.'
      operationId: getReturnPolicyByName
      parameters:
      - description: This query parameter specifies the ID of the eBay marketplace
          of the policy you want to retrieve. For implementation help, refer to eBay
          API documentation at https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum
        explode: true
        in: query
        name: marketplace_id
        required: true
        schema:
          type: string
        style: form
      - description: This query parameter specifies the seller-defined name of the
          return policy you want to retrieve.
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /return_policy/get_by_policy_name
      tags:
      - Account API v1/return_policy
      x-apifox-folder: Account API v1/return_policy
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495655-run
      x-accepts: application/json
  /sales_tax/{countryCode}/{jurisdictionId}:
    delete:
      deprecated: false
      description: This call deletes a sales tax table entry for a jurisdiction. Specify
        the jurisdiction to delete using the <b>countryCode</b> and <b>jurisdictionId</b>
        path parameters.
      operationId: deleteSalesTax
      parameters:
      - description: This path parameter specifies the two-letter <a href="https://www.iso.org/iso-3166-country-codes.html"
          title="https://www.iso.org" target="_blank">ISO 3166</a> code for the country
          whose sales tax table entry you want to delete.
        explode: false
        in: path
        name: countryCode
        required: true
        schema:
          type: string
        style: simple
      - description: This path parameter specifies the ID of the sales tax jurisdiction
          whose table entry you want to delete. Retrieve valid jurisdiction IDs using
          <b>getSalesTaxJurisdictions</b> in the Metadata API.
        explode: false
        in: path
        name: jurisdictionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /sales_tax/{countryCode}/{jurisdictionId}
      tags:
      - Account API v1/sales_tax
      x-apifox-folder: Account API v1/sales_tax
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495658-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This call gets the current sales tax table entry for a specific
        tax jurisdiction. Specify the jurisdiction to retrieve using the <b>countryCode</b>
        and <b>jurisdictionId</b> path parameters. All four response fields will be
        returned if a sales tax entry exists for the tax jurisdiction. Otherwise,
        the response will be returned as empty.<br/><br/><span class="tablenote"><b>Important!</b>
        In most US states and territories, eBay now 'collects and remits' sales tax,
        so sellers can no longer configure sales tax rates for these states/territories.</span>
      operationId: getSalesTax
      parameters:
      - description: This path parameter specifies the two-letter <a href="https://www.iso.org/iso-3166-country-codes.html"
          title="https://www.iso.org" target="_blank">ISO 3166</a> code for the country
          whose sales tax table you want to retrieve.
        explode: false
        in: path
        name: countryCode
        required: true
        schema:
          type: string
        style: simple
      - description: This path parameter specifies the ID of the sales tax jurisdiction
          for the tax table entry you want to retrieve. Retrieve valid jurisdiction
          IDs using <b>getSalesTaxJurisdictions</b> in the Metadata API.
        explode: false
        in: path
        name: jurisdictionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesTax'
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /sales_tax/{countryCode}/{jurisdictionId}
      tags:
      - Account API v1/sales_tax
      x-apifox-folder: Account API v1/sales_tax
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495656-run
      x-accepts: application/json
    put:
      deprecated: false
      description: 'This method creates or updates a sales tax table entry for a jurisdiction.
        Specify the tax table entry you want to configure using the two path parameters:
        <b>countryCode</b> and <b>jurisdictionId</b>.  <br/><br/>A tax table entry
        for a jurisdiction is comprised of two fields: one for the jurisdiction''s
        sales-tax rate and another that''s a boolean value indicating whether or not
        shipping and handling are taxed in the jurisdiction.  <br/><br/>You can set
        up <i>tax tables</i> for countries that support different <i>tax jurisdictions</i>.
        Currently, only Canada, India, and the US support separate tax jurisdictions.
        If you sell into any of these countries, you can set up tax tables for any
        of the country''s jurisdictions. Retrieve valid jurisdiction IDs using <b>getSalesTaxJurisdictions</b>
        in the Metadata API.  <br/><br/>For details on using this call, see <a href="/api-docs/sell/static/seller-accounts/tax-tables.html">Establishing
        sales-tax tables</a>. <br/><br/><span class="tablenote"><b>Important!</b>
        In the US, eBay now ''collects and remits'' sales tax for every US state except
        for Missouri (and a few US territories), so sellers can no longer configure
        sales tax rates for any states except Missouri. With eBay ''collect and remit'',
        eBay calculates the sales tax, collects the sales tax from the buyer, and
        remits the sales tax to the tax authorities at the buyer''s location.</span>'
      operationId: createOrReplaceSalesTax
      parameters:
      - description: This path parameter specifies the two-letter <a href="https://www.iso.org/iso-3166-country-codes.html"
          title="https://www.iso.org" target="_blank">ISO 3166</a> code for the country
          for which you want to create a sales tax table entry.
        explode: false
        in: path
        name: countryCode
        required: true
        schema:
          type: string
        style: simple
      - description: This path parameter specifies the ID of the tax jurisdiction
          for the table entry you want to create. Retrieve valid jurisdiction IDs
          using <b>getSalesTaxJurisdictions</b> in the Metadata API.
        explode: false
        in: path
        name: jurisdictionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesTaxBase'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /sales_tax/{countryCode}/{jurisdictionId}
      tags:
      - Account API v1/sales_tax
      x-apifox-folder: Account API v1/sales_tax
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495657-run
      x-contentType: application/json
      x-accepts: application/json
  /sales_tax:
    get:
      deprecated: false
      description: Use this call to retrieve all sales tax table entries that the
        seller has defined for a specific country. All four response fields will be
        returned for each tax jurisdiction that matches the search criteria. <br/><br/><span
        class="tablenote"><b>Important!</b> In most US states and territories, eBay
        now 'collects and remits' sales tax, so sellers can no longer configure sales
        tax rates for these states/territories.</span>
      operationId: getSalesTaxes
      parameters:
      - description: This path parameter specifies the two-letter <a href="https://www.iso.org/iso-3166-country-codes.html"
          title="https://www.iso.org" target="_blank">ISO 3166</a> code for the country
          whose tax table you want to retrieve. For implementation help, refer to
          eBay API documentation at https://developer.ebay.com/api-docs/sell/account/types/ba:CountryCodeEnum
        explode: true
        in: query
        name: country_code
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesTaxes'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /sales_tax
      tags:
      - Account API v1/sales_tax
      x-apifox-folder: Account API v1/sales_tax
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495659-run
      x-accepts: application/json
  /advertising_eligibility:
    get:
      deprecated: false
      description: This method allows developers to check the seller eligibility status
        for eBay advertising programs.
      operationId: getAdvertisingEligibility
      parameters:
      - description: A comma-separated list of eBay advertising programs.<br /><br
          /><span class="tablenote"><b>Tip:</b> See the <a href="/api-docs/sell/account/types/plser:AdvertisingProgramEnum">
          AdvertisingProgramEnum</a> type for possible values.</span><br /><br />If
          no programs are specified, the results will be returned for all programs.
        explode: true
        in: query
        name: program_types
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the eBay marketplace for which the seller
          eligibility status shall be checked.<br /><br /><span class="tablenote"><b>Note:</b>
          This value is case-sensitive.</span>
        explode: false
        in: header
        name: X-EBAY-C-MARKETPLACE-ID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerEligibilityMultiProgramResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /advertising_eligibility
      tags:
      - Account API v1/advertising_eligibility
      x-apifox-folder: Account API v1/advertising_eligibility
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495660-run
      x-accepts: application/json
  /kyc:
    get:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b>This method was originally
        created to see which onboarding requirements were still pending for sellers
        being onboarded for eBay managed payments, but now that all seller accounts
        are onboarded globally, this method should now just returne an empty payload
        with a <code>204 No Content</code> HTTP status code. </span>
      operationId: getKYC
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycResponse'
          description: OK
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /kyc
      tags:
      - Account API v1/kyc
      x-apifox-folder: Account API v1/kyc
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495661-run
      x-accepts: application/json
  /rate_table/{rate_table_id}:
    get:
      deprecated: false
      description: This method retrieves an existing rate table identified by the
        <b>rate_table_id</b> path parameter.<br><br><b>getRateTable</b> currently
        supports the retrieval of rate tables for the following eBay marketplace IDs:<ul><li><code>EBAY_AU</code></li><li><code>EBAY_CA</code></li><li><code>EBAY_DE</code></li><li><code>EBAY_ES</code></li><li><code>EBAY_FR</code></li><li><code>EBAY_GB</code></li><li><code>EBAY_IT</code></li><li><code>EBAY_US</code></li></ul><span
        class="tablenote"><b>Note:</b> To retrieve a list of all <b>rateTableId</b>
        values, issue a <a href="/api-docs/sell/account/resources/rate_table/methods/getRateTables
        " target="_blank">getRateTables</a> call (part of <a href="/api-docs/sell/account/static/overview.html
        " target="_blank">Account API V1</a>,) with no <b>countryCode</b> query parameter
        specifed. This will return a list of all shipping rate tables defined for
        each marketplace and their corresponding <b>rateTableId</b> values.</span><br/><br/>
        A successful call returns detailed information for the specified shipping
        rate table.
      operationId: getRateTable
      parameters:
      - description: The unique identifier for the shipping rate table. This identifier
          is generated by eBay when a shipping rate table is first created.<br/><br/><span
          class="tablenote"><strong>Note:</strong> To retrieve a list of all <b>rateTableId</b>
          values, issue a <a href="/api-docs/sell/account/resources/rate_table/methods/getRateTables"
          target="_blank">getRateTables</a> call (part of <a href="/api-docs/sell/account/static/overview.html
          " target="_blank">Account API V1</a>,) with no <b>countryCode</b> query
          parameter specifed. This will return a list of all shipping rate tables
          defined for each marketplace and their corresponding <b>rateTableId</b>
          values.</span>
        explode: false
        in: path
        name: rate_table_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateTableDetails'
          description: OK
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /rate_table/{rate_table_id}
      tags:
      - Account API v2/rate_table
      x-apifox-folder: Account API v2/rate_table
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495698-run
      x-accepts: application/json
  /rate_table/{rate_table_id}/update_shipping_cost:
    post:
      deprecated: false
      description: This method allows sellers to update <b>shippingCost</b> and/or
        <b>additionalCost</b> information for an existing shipping rate table identified
        by the <b>rate_table_id</b> path parameter.<br/><br/><span class="tablenote"><b>Note:</b>
        To retrieve a list of all <b>rateTableId</b> values, issue a <a href="/api-docs/sell/account/resources/rate_table/methods/getRateTables
        " target="_blank">getRateTables</a> call (part of <a href="/api-docs/sell/account/static/overview.html
        " target="_blank">Account API V1</a>,) with no <b>countryCode</b> query parameter
        specifed. This will return a list of all shipping rate tables and corresponding
        <b>rateTableId</b> values.</span><br/><br/>A successful call returns an HTTP
        status code of <b>204 No Content</b>.
      operationId: updateShippingCost
      parameters:
      - description: The unique identifier for the shipping rate table. This identifier
          is generated by eBay when a shipping rate table is first created.<br/><br/><span
          class="tablenote"><strong>Note:</strong> To retrieve a list of all <b>rateTableId</b>
          values, issue a <a href="/api-docs/sell/account/resources/rate_table/methods/getRateTables"
          target="_blank">getRateTables</a> call (part of <a href="/api-docs/sell/account/static/overview.html
          " target="_blank">Account API V1</a>,) with no <b>countryCode</b> query
          parameter specifed. This will return a list of all shipping rate tables
          defined for each marketplace and their corresponding <b>rateTableId</b>
          values.
        explode: false
        in: path
        name: rate_table_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateTableUpdate'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /rate_table/{rate_table_id}/update_shipping_cost
      tags:
      - Account API v2/rate_table
      x-apifox-folder: Account API v2/rate_table
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495699-run
      x-contentType: application/json
      x-accepts: application/json
  /seller_standards_profile:
    get:
      deprecated: false
      description: This call retrieves all the standards profiles for the associated
        seller. A standards profile is a set of eBay seller metrics and the seller's
        associated compliance values (either TOP_RATED, ABOVE_STANDARD, or BELOW_STANDARD).
        A seller's multiple profiles are distinguished by two criteria, a &quot;program&quot;
        and a &quot;cycle.&quot; A profile's program is one of three regions where
        the seller may have done business, or PROGRAM_GLOBAL to indicate all marketplaces
        where the seller has done business. The cycle value specifies whether the
        standards compliance values were determined at the last official eBay evaluation
        or at the time of the request.
      operationId: findSellerStandardsProfiles
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindSellerStandardsProfilesResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /seller_standards_profile
      tags:
      - Analytics API/seller_standards_profile
      x-apifox-folder: Analytics API/seller_standards_profile
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495736-run
      x-accepts: application/json
  /seller_standards_profile/{program}/{cycle}:
    get:
      deprecated: false
      description: This call retrieves a single standards profile for the associated
        seller. A standards profile is a set of eBay seller metrics and the seller's
        associated compliance values (either TOP_RATED, ABOVE_STANDARD, or BELOW_STANDARD).
        A seller can have multiple profiles distinguished by two criteria, a &quot;program&quot;
        and a &quot;cycle.&quot; A profile's program is one of three regions where
        the seller may have done business, or PROGRAM_GLOBAL to indicate all marketplaces
        where the seller has done business. The cycle value specifies whether the
        standards compliance values were determined at the last official eBay evaluation
        (CURRENT) or at the time of the request (PROJECTED). Both cycle and a program
        values are required URI parameters for this method.
      operationId: getSellerStandardsProfile
      parameters:
      - description: The period covered by the returned standards profile evaluation.
          Supply one of two values, CURRENT means the response reflects eBay's most
          recent monthly standards evaluation and PROJECTED means the response reflect
          the seller's projected monthly evaluation, as calculated at the time of
          the request.
        explode: false
        in: path
        name: cycle
        required: true
        schema:
          type: string
        style: simple
      - description: This input value specifies the region used to determine the seller's
          standards profile. Supply one of the four following values, PROGRAM_DE,
          PROGRAM_UK, PROGRAM_US, or PROGRAM_GLOBAL.
        explode: false
        in: path
        name: program
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardsProfile'
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Resource not found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /seller_standards_profile/{program}/{cycle}
      tags:
      - Analytics API/seller_standards_profile
      x-apifox-folder: Analytics API/seller_standards_profile
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495737-run
      x-accepts: application/json
  /customer_service_metric/{customer_service_metric_type}/{evaluation_type}:
    get:
      deprecated: false
      description: 'Use this method to retrieve a seller''s performance and rating
        for the customer service metric. Control the response from the getCustomerServiceMetric
        method using the following path and query parameters: customer_service_metric_type
        controls the type of customer service transactions evaluated for the metric
        rating. evaluation_type controls the period you want to review. evaluation_marketplace_id
        specifies the target marketplace for the evaluation. Currently, metric data
        is returned for only peer benchmarking. For more detail on the workings of
        peer benchmarking, see Service metrics policy.'
      operationId: getCustomerServiceMetric
      parameters:
      - description: 'Use this path parameter to specify the type of customer service
          metrics and benchmark data you want returned for the seller. Supported types
          are: ITEM_NOT_AS_DESCRIBED ITEM_NOT_RECEIVED'
        explode: false
        in: path
        name: customer_service_metric_type
        required: true
        schema:
          type: string
        style: simple
      - description: 'Use this path parameter to specify the type of the seller evaluation
          you want returned, either: CURRENT &ndash; A monthly evaluation that occurs
          on the 20th of every month. PROJECTED &ndash; A daily evaluation that provides
          a projection of how the seller is currently performing with regards to the
          upcoming evaluation period.'
        explode: false
        in: path
        name: evaluation_type
        required: true
        schema:
          type: string
        style: simple
      - description: Use this query parameter to specify the Marketplace ID to evaluate
          for the customer service metrics and benchmark data. For the list of supported
          marketplaces, see Analytics API requirements and restrictions. For implementation
          help, refer to eBay API documentation at https://developer.ebay.com/devzone/rest/api-ref/analytics/types/MarketplaceIdEnum.html
        explode: true
        in: query
        name: evaluation_marketplace_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerServiceMetricResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: 'Resource not found. Invalid path parameters. '
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /customer_service_metric/{customer_service_metric_type}/{evaluation_type}
      tags:
      - Analytics API/customer_service_metric
      x-apifox-folder: Analytics API/customer_service_metric
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495738-run
      x-accepts: application/json
  /traffic_report:
    get:
      deprecated: false
      description: 'This method returns a report that details the user traffic received
        by a seller''s listings. A traffic report gives sellers the ability to review
        how often their listings appeared on eBay, how many times their listings are
        viewed, and how many purchases were made. The report also returns the report''s
        start and end dates, and the date the information was last updated. When using
        this call: Be sure to URL-encode the values you pass in query parameters,
        as described in URI parameters. See the request samples below for details.
        You can only specify a single metric in the sort parameter and the specified
        metric must be listed in the metric parameter of your request. Parameter names
        are case sensitive, but metric names are not. For example, the following are
        correct: sort=LISTING_IMPRESSION_TOTAL sort=lisitng_impression_total metric=lisitng_impression_total
        However, these are incorrect: SORT=LISTING_IMPRESSION_TOTAL SORT=lisitng_impression_total
        Metric=lisitng_impression_total For more information, see Traffic report details.'
      operationId: getTrafficReport
      parameters:
      - description: 'This query parameter specifies the dimension, or &quot;attribute,&quot;
          that is applied to the report metric. Valid values: DAY or LISTING Examples
          If you specify dimension=DAY and metric=CLICK_THROUGH_RATE, the traffic
          report contains the number of times an item displayed on a search results
          page and the buyer clicked through to the View Item page for each day in
          the date range, as in: 12-06-17: 32, 12-07-17: 54, ... If you specify dimension=LISTING
          and metric=LISTING_IMPRESSION_STORE, the traffic report contains the number
          of times that listing appeared on the seller''s store during the specified
          date range. For example, LISTING_IMPRESSION_STORE: 157 means the item appeared
          157 times in the store during the date range.'
        explode: true
        in: query
        name: dimension
        required: false
        schema:
          type: string
        style: form
      - description: 'This query parameter refines the information returned in the
          traffic report. Configure the following properties of the filter parameter
          to tune the traffic report to your needs: date_range Limits the report to
          the specified range of dates. Format the date range by enclosing the earliest
          date and end date for the report in brackets (&quot;[ ]&quot;), as follows:
          [YYYYMMDD..YYYYMMDD] The maximum range between the start and end dates is
          90 days, and the earliest start date you can specify is two years prior
          to the current date, which is defined as 730 days (365 * 2), not accounting
          for Leap Year. The last date for which traffic data exists is a value called
          lastUpdatedDate. eBay returns an error if you specify a date range greater
          than 90 days, or the start date is after the lastUpdatedDate. If the specified
          end date is beyond the lastUpdatedDate, eBay returns data up to the lastUpdatedDate.
          Required: Always listing_ids This filter limits the results to only the
          supplied list of listingId values. You can specify to 200 different listingId
          values. Enclose the list of IDs with curly braces (&quot;{ }&quot;), and
          separate multiple values with a pipe character (&quot;|&quot;). This filter
          only returns data for listings that have been either active or sold in last
          90 days, and any unsold listings in the last 30 days. All listings must
          be the seller''s and they must be listed on the marketplace specified by
          the marketplace_ids filter argument. marketplace_ids This filter limits
          the report to seller data related to only the specified marketplace ID (currently
          the filter allows only a single marketplace ID). Enclose the marketplace
          ID in curly braces (&quot;{ }&quot;). Valid values: EBAY_AU EBAY_DE EBAY_GB
          EBAY_US EBAY_MOTORS_US Required if you set the dimension parameter to DAY.
          traffic_source Limits the report to either Promoted Listings items or non-Promoted
          Listings (organic) items. Valid values are ORGANIC and PROMOTED_LISTINGS.
          Enclose the list of values with curly braces (&quot;{ }&quot;), and separate
          multiple values with a pipe character (&quot;|&quot;) The default is both
          values. Example filter parameter The following example shows how to configure
          the filter parameter with the marketplace_ids and date_range filters: filter=marketplace_ids:{EBAY_US},date_range:[20170601..20170828]
          Note: You must URL encode all the values you supply in the filter parameter,
          as described in URL parameters. For implementation help, refer to eBay API
          documentation at https://developer.ebay.com/devzone/rest/api-ref/analytics/types/FilterField.html'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: 'This query parameter specifies the metrics you want covered
          in the report. Specify a comma-separated list of the metrics you want included
          in the report. Valid values: CLICK_THROUGH_RATE The number of times an item
          displays on the search results page divided by the number of times buyers
          clicked through to its View Item page. Localized name: Click through rate
          LISTING_IMPRESSION_SEARCH_RESULTS_PAGE The number of times the seller''s
          listings displayed on the search results page. Note, the listing might not
          have been visible to the buyer due to its position on the page. Localized
          name: Listing impressions from the search results page LISTING_IMPRESSION_STORE
          The number of times the seller''s listings displayed on the seller''s store.
          Note, the listing might not have been visible to the buyer due to its position
          on the page. Localized name: Listing impressions from your Store LISTING_IMPRESSION_TOTAL
          The total number of times the seller''s listings displayed on the search
          results page OR in the seller''s store. The item is counted each time it
          displays on either page. However, the listing might not have been visible
          to the buyer due to its position on the page. This is a combination of:
          LISTING_IMPRESSION_SEARCH_RESULTS_PAGE + LISTING_IMPRESSION_STORE. Localized
          name: Total listing impressions LISTING_VIEWS_SOURCE_DIRECT The number of
          times a View Item page was directly accessed, such as when a buyer navigates
          to the page using a bookmark. Localized name: Direct views LISTING_VIEWS_SOURCE_OFF_EBAY
          The number of times a View Item page was accessed via a site other than
          eBay, such as when a buyer clicks on a link to the listing from a search
          engine page. Localized name: Off eBay views LISTING_VIEWS_SOURCE_OTHER_EBAY
          The number of times a View Item page was accessed from an eBay page that
          is not either the search results page or the seller''s store. Localized
          name: Views from non-search and non-store pages within eBay LISTING_VIEWS_SOURCE_SEARCH_RESULTS_PAGE
          The number of times the item displayed on the search results page. Localized
          name: Views on the search results page LISTING_VIEWS_SOURCE_STORE The number
          of times a View Item page was accessed via the seller''s store. Localized
          name: Views from your Store LISTING_VIEWS_TOTAL Total number of listings
          viewed. This number sums: LISTING_VIEWS_SOURCE_DIRECT LISTING_VIEWS_SOURCE_OFF_EBAY
          LISTING_VIEWS_SOURCE_OTHER_EBAY LISTING_VIEWS_SOURCE_SEARCH_RESULTS_PAGE
          LISTING_VIEWS_SOURCE_STORE. Localized name: Total views SALES_CONVERSION_RATE
          The number of completed transactions divided by the number of View Item
          page views. Equals: TRANSACTION / LISTING_VIEWS_TOTAL Localized name: Sales
          conversion rate TRANSACTION The total number of completed transactions.
          Localized name: Transaction count'
        explode: true
        in: query
        name: metric
        required: false
        schema:
          type: string
        style: form
      - description: 'This query parameter sorts the report on the specified metric.
          The metric you specify must be included in the configuration of the report''s
          metric parameter. Sorting is helpful when you want to review how a specific
          metric is performing, such as the CLICK_THROUGH_RATE. Reports can be sorted
          in ascending or descending order. Precede the value of a descending-order
          request with a minus sign (&quot;-&quot;), for example: sort=-CLICK_THROUGH_RATE.
          For implementation help, refer to eBay API documentation at https://developer.ebay.com/devzone/rest/api-ref/analytics/types/SortField.html'
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /traffic_report
      tags:
      - Analytics API/traffic_report
      x-apifox-folder: Analytics API/traffic_report
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495739-run
      x-accepts: application/json
  /listing_violation_summary:
    get:
      deprecated: false
      description: 'This call returns listing violation counts for a seller. A user
        can pass in one or more compliance types through the compliance_type query
        parameter. See ComplianceTypeEnum for more information on the supported listing
        compliance types. Listing violations are returned for multiple marketplaces
        if the seller sells on multiple eBay marketplaces. Note: Only a canned response,
        with counts for all listing compliance types, is returned in the Sandbox environment.
        Due to this limitation, the compliance_type query parameter (if used) will
        not have an effect on the response.'
      operationId: getListingViolationsSummary
      parameters:
      - description: 'A user passes in one or more compliance type values through
          this query parameter. See ComplianceTypeEnum for more information on the
          supported compliance types that can be passed in here. If more than one
          compliance type value is used, delimit these values with a comma. If no
          compliance type values are passed in, the listing count for all compliance
          types will be returned. Note: Only a canned response, with counts for all
          listing compliance types, is returned in the Sandbox environment. Due to
          this limitation, the compliance_type query parameter (if used) will not
          have an effect on the response.'
        explode: true
        in: query
        name: compliance_type
        required: false
        schema:
          type: string
        style: form
      - description: Use this header to specify the eBay marketplace identifier. Supported
          values for this header can be found in the MarketplaceIdEnum type definition.
          Note that Version 1.4.0 of the Compliance API is only supported on the US,
          UK, Australia, Canada {English), and Germany sites.
        explode: false
        in: header
        name: X-EBAY-C-MARKETPLACE-ID
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /listing_violation_summary
      tags:
      - Compliance API/listing_violation_summary
      x-apifox-folder: Compliance API/listing_violation_summary
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495979-run
      x-accepts: application/json
  /suppress_listing_violation:
    post:
      deprecated: false
      description: 'This call suppresses a listing violation for a specific listing.
        Only listing violations in the AT_RISK state (returned in the violations.complianceState
        field of the getListingViolations call) can be suppressed. Note: At this time,
        the suppressViolation call only supports the suppressing of ASPECTS_ADOPTION
        listing violations in the AT_RISK state. In the future, it is possible that
        this method can be used to suppress other listing violation types. A successful
        call returns a http status code of 204 Success. There is no response payload.
        If the call is not successful, an error code will be returned stating the
        issue.'
      operationId: suppressViolation
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuppressViolationRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /suppress_listing_violation
      tags:
      - Compliance API/listing_violation
      x-apifox-folder: Compliance API/listing_violation
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495980-run
      x-contentType: application/json
      x-accepts: application/json
  /listing_violation:
    get:
      deprecated: false
      description: 'This call returns specific listing violations for the supported
        listing compliance types. Only one compliance type can be passed in per call,
        and the response will include all the listing violations for this compliance
        type, and listing violations are grouped together by eBay listing ID. See
        ComplianceTypeEnum for more information on the supported listing compliance
        types. This method also has pagination control. Note: A maximum of 2000 listing
        violations will be returned in a result set. If the seller has more than 2000
        listing violations, some/all of those listing violations must be corrected
        before additional listing violations will be retrieved. The user should pay
        attention to the total value in the response. If this value is ''2000'', it
        is possible that the seller has more than 2000 listing violations, but this
        field maxes out at 2000. Note: In a future release of this API, the seller
        will be able to pass in a specific eBay listing ID as a query parameter to
        see if this specific listing has any violations. Note: Only mocked non-compliant
        listing data will be returned for this call in the Sandbox environment, and
        not specific to the seller. However, the user can still use this mock data
        to experiment with the compliance type filters and pagination control.'
      operationId: getListingViolations
      parameters:
      - description: 'A seller uses this query parameter to retrieve listing violations
          of a specific compliance type. Only one compliance type value should be
          passed in here. See ComplianceTypeEnum for more information on the compliance
          types that can be passed in here. If the listing_id query parameter is used,
          the compliance_type query parameter {if passed in) will be ignored. This
          is because all of a listing''s policy violations {each compliance type)
          will be returned if a listing_id is provided. Either the listing_id or a
          compliance_type query parameter must be used, and if the seller only wants
          to view listing violations of a specific compliance type, both of these
          parameters can be used. Note: The listing_id query parameter is not yet
          available for use, so the seller does not have the ability to retrieve listing
          violations for one or more specific listings. Until the listing_id query
          parameter becomes available, the compliance_type query parameter is required
          with each getListingViolations call.'
        explode: true
        in: query
        name: compliance_type
        required: false
        schema:
          type: string
        style: form
      - description: 'The integer value input into this field controls the first listing
          violation in the result set that will be displayed at the top of the response.
          The offset and limit query parameters are used to control the pagination
          of the output. For example, if offset is set to 10 and limit is set to 10,
          the call retrieves listing violations 11 thru 20 from the resulting set
          of violations. Note: This feature employs a zero-based index, where the
          first item in the list has an offset of 0. If the listing_id parameter is
          included in the request, this parameter will be ignored. Default: 0 {zero)'
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: 'Note: This query parameter is not yet supported for the Compliance
          API. Please note that until this query parameter becomes available, the
          compliance_type query parameter is required with each getListingViolations
          call. This query parameter is used if the user wants to view all listing
          violations for one or more eBay listings. The string value passed into this
          field is the unique identifier of the listing, sometimes referred to as
          the Item ID. Either the listing_id or a compliance_type query parameter
          must be used, and if the seller only wants to view listing violations of
          a specific compliance type, both of these parameters can be used. Up to
          50 listing IDs can be specified with this query parameter, and each unique
          listing ID is separated with a comma.'
        explode: true
        in: query
        name: listing_id
        required: false
        schema:
          type: string
        style: form
      - description: 'This query parameter is used if the user wants to set a limit
          on the number of listing violations that are returned on one page of the
          result set. This parameter is used in conjunction with the offset parameter
          to control the pagination of the output. For example, if offset is set to
          10 and limit is set to 10, the call retrieves listing violations 11 thru
          20 from the collection of listing violations that match the value set in
          the compliance_type parameter. Note: This feature employs a zero-based index,
          where the first item in the list has an offset of 0. If the listing_id parameter
          is included in the request, this parameter will be ignored. Default: 100
          Maximum: 200'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: This filter allows a user to retrieve only listings that are
          currently out of compliance, or only listings that are at risk of becoming
          out of compliance. Although other filters may be added in the future, complianceState
          is the only supported filter type at this time. The two compliance 'states'
          are OUT_OF_COMPLIANCE and AT_RISK. Below is an example of how to set up
          this compliance state filter. Notice that the filter type and filter value
          are separated with a colon (:) character, and the filter value is wrapped
          with curly brackets. filter=complianceState:{OUT_OF_COMPLIANCE}
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: This header is required and is used to specify the eBay marketplace
          identifier. Supported values for this header can be found in the MarketplaceIdEnum
          type definition. Note that Version 1.4.0 of the Compliance API is only supported
          on the US, UK, Australia, Canada {English), and Germany sites.
        explode: false
        in: header
        name: X-EBAY-C-MARKETPLACE-ID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /listing_violation
      tags:
      - Compliance API/listing_violation
      x-apifox-folder: Compliance API/listing_violation
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38495981-run
      x-accepts: application/json
  /schedule_template:
    get:
      deprecated: false
      description: This method retrieves an array containing the details and status
        of all schedule templates based on the specified <strong>feed_type</strong>.
        Use this method to find a schedule template if you do not know the <strong>schedule_template_id</strong>.
      operationId: getScheduleTemplates
      parameters:
      - description: The feed type of the schedule templates to retrieve.
        explode: true
        in: query
        name: feed_type
        required: true
        schema:
          type: string
        style: form
      - description: 'The maximum number of schedule templates that can be returned
          on each page of the paginated response. Use this parameter in conjunction
          with the <strong>offset</strong> parameter to control the pagination of
          the output. <p> <span class="tablenote"><strong>Note:</strong> This feature
          employs a zero-based list, where the first item in the list has an offset
          of <code>0</code>.</span></p><p>For example, if <strong>offset</strong>
          is set to 10 and <strong>limit</strong> is set to 10, the call retrieves
          schedule templates 11 thru 20 from the result set.</p><p>If this parameter
          is omitted, the default value is used. <br /><br /><b>Default: </b> 10 <br
          /><br /><b>Maximum: </b>500'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of schedule templates to skip in the result set before
          returning the first template in the paginated response. <p>Combine <strong>offset</strong>
          with the <strong>limit</strong> query parameter to control the items returned
          in the response. For example, if you supply an <strong>offset</strong> of
          <code>0</code> and a <strong>limit</strong> of <code>10</code>, the first
          page of the response contains the first 10 items from the complete list
          of items retrieved by the call. If <strong>offset</strong> is <code>10</code>
          and <strong>limit</strong> is <code>20</code>, the first page of the response
          contains items 11-30 from the complete result set. If this query parameter
          is not set, the default value is used and the first page of records is returned.<br
          /><br /><b>Default: </b>0'
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleTemplateCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /schedule_template
      tags:
      - Feed API/schedule
      x-apifox-folder: Feed API/schedule
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496309-run
      x-accepts: application/json
  /order_task:
    get:
      deprecated: false
      description: This method returns the details and status for an array of order
        tasks based on a specified <strong>feed_type</strong> or <strong>schedule_id</strong>.
        Specifying both <strong>feed_type</strong> and <strong>schedule_id</strong>
        results in an error. Since schedules are based on feed types, you can specify
        a schedule (<strong>schedule_id</strong>) that returns the needed <strong>feed_type</strong>.<br
        /><br />If specifying the <strong>feed_type</strong>, limit which order tasks
        are returned by specifying filters such as the creation date range or period
        of time using <strong>look_back_days</strong>. <br /><br />If specifying a
        <strong>schedule_id</strong>, the schedule template (that the <strong>schedule_id</strong>
        is based on) determines which order tasks are returned (see <strong>schedule_id</strong>
        for additional information). Each <strong>schedule_id</strong> applies to
        one <strong>feed_type</strong>.
      operationId: getOrderTasks
      parameters:
      - description: 'The order tasks creation date range. This range is used to filter
          the results. The filtered results are filtered to include only tasks with
          a creation date that is equal to this date or is within specified range.
          Only orders less than 90 days old can be retrieved. Do not use with the
          <strong>look_back_days</strong> parameter. <br /><br /><b>Format: </b>UTC   <br
          /><br /> <b> For example: </b> <br /><br />Tasks within a range  <br />
          <code>yyyy-MM-ddThh:mm:ss.SSSZ..yyyy-MM-ddThh:mm:ss.SSSZ </code> <br /><br
          /> Tasks created on September 8, 2019<br /> <code>2019-09-08T00:00:00.000Z..2019-09-09T00:00:00.000Z</code><br
          />'
        explode: true
        in: query
        name: date_range
        required: false
        schema:
          type: string
        style: form
      - description: The feed type associated with the task. The only presently supported
          value is <code>LMS_ORDER_REPORT</code>. Do not use with the <strong>schedule_id</strong>
          parameter. Since schedules are based on feed types, you can specify a schedule
          (<strong>schedule_id</strong>) that returns the needed <strong>feed_type</strong>.
        explode: true
        in: query
        name: feed_type
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of order tasks that can be returned on each
          page of the paginated response. Use this parameter in conjunction with the
          <strong>offset</strong> parameter to control the pagination of the output.
          <p> <span class="tablenote"><strong>Note:</strong> This feature employs
          a zero-based list, where the first item in the list has an offset of <code>0</code>.</span></p><p>For
          example, if <strong>offset</strong> is set to 10 and <strong>limit</strong>
          is set to 10, the call retrieves order tasks 11 thru 20 from the result
          set.</p><p>If this parameter is omitted, the default value is used.</p><p><b>Default:</b>
          10 <p><b>Maximum:</b> 500</p>
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of previous days in which to search for tasks. Do
          not use with the <strong>date_range</strong> parameter. If both <strong>date_range</strong>
          and <strong>look_back_days</strong> are omitted, this parameter''s default
          value is used.  <br /><br /><b>Default: </b> 7 <br /><br /><b>Range: </b>
          1-90 (inclusive)  '
        explode: true
        in: query
        name: look_back_days
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of order tasks to skip in the result set before returning
          the first order in the paginated response. <p>Combine <strong>offset</strong>
          with the <strong>limit</strong> query parameter to control the items returned
          in the response. For example, if you supply an <strong>offset</strong> of
          <code>0</code> and a <strong>limit</strong> of <code>10</code>, the first
          page of the response contains the first 10 items from the complete list
          of items retrieved by the call. If <strong>offset</strong> is <code>10</code>
          and <strong>limit</strong> is <code>20</code>, the first page of the response
          contains items 11-30 from the complete result set. If this query parameter
          is not set, the default value is used and the first page of records is returned.<br
          /><br /><b>Default: </b>0'
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: The schedule ID associated with the order task. A schedule periodically
          generates a report for the feed type specified by the schedule template
          (see <strong>scheduleTemplateId</strong> in <strong>createSchedule</strong>).
          Do not use with the <strong>feed_type</strong> parameter. Since schedules
          are based on feed types, you can specify a schedule (<strong>schedule_id</strong>)
          that returns the needed <strong>feed_type</strong>.
        explode: true
        in: query
        name: schedule_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTaskCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /order_task
      tags:
      - Feed API/order_task
      x-apifox-folder: Feed API/order_task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496310-run
      x-accepts: application/json
    post:
      deprecated: false
      description: 'This method creates an order download task with filter criteria
        for the order report. When using this method, specify the <b> feedType</b>,
        <b> schemaVersion</b>, and <b> filterCriteria</b> for the report. The method
        returns the <b> location</b> response header containing the getOrderTask call
        URI to retrieve the order task you just created. The URL includes the eBay-assigned
        task ID, which you can use to reference the order task. <br /><br />To retrieve
        the status of the task, use the <b> getOrderTask</b> method to retrieve a
        single task ID or the <b>getOrderTasks</b> method to retrieve multiple order
        task IDs.<p> <span class="tablenote"><strong>Note:</strong> The scope depends
        on the feed type. An error message results when an unsupported scope or feed
        type is specified.</span></p><p>The following list contains this method''s
        authorization scope and its corresponding feed type:<ul><li>https://api.ebay.com/oauth/api_scope/sell.fulfillment:
        LMS_ORDER_REPORT</li></ul> </p><p>For details about how this method is used,
        see <a href="/api-docs/sell/static/feed/general-feed-tasks.html">General feed
        types</a> in the Selling Integration Guide. <p> <span class="tablenote"><strong>Note:</strong>
        At this time, the <strong>createOrderTask</strong> method only supports order
        creation date filters and not modified order date filters. Do not include
        the <strong>modifiedDateRange</strong> filter in your request payload.</span></p>'
      operationId: createOrderTask
      parameters:
      - description: The ID of the eBay marketplace where the item is hosted. <p>
          <span class="tablenote"><strong>Note:</strong> This value is case sensitive.</span></p><p>For
          example:</p><p><code>X-EBAY-C-MARKETPLACE-ID:EBAY_US</code></p><p>This identifies
          the eBay marketplace that applies to this task. See <a href="/api-docs/sell/feed/types/bas:MarketplaceIdEnum">MarketplaceIdEnum</a>.</p>
        explode: false
        in: header
        name: X-EBAY-C-MARKETPLACE-ID
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderTaskRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /order_task
      tags:
      - Feed API/order_task
      x-apifox-folder: Feed API/order_task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496328-run
      x-contentType: application/json
      x-accepts: application/json
  /inventory_task:
    get:
      deprecated: false
      description: This method searches for multiple tasks of a specific feed type,
        and includes date filters and pagination.
      operationId: getInventoryTasks
      parameters:
      - description: The feed type associated with the inventory task. Either <strong>feed_type</strong>
          or <strong>schedule_id</strong> is required. Do not use with the <strong>schedule_id</strong>
          parameter. Presently, only one feed type is available:<ul><li><code>LMS_ACTIVE_INVENTORY_REPORT</code></li></ul>
        explode: true
        in: query
        name: feed_type
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the schedule for which to retrieve the latest result
          file. This ID is generated when the schedule was created by the <strong>createSchedule</strong>
          method. Schedules apply to downloaded reports (<code>LMS_ACTIVE_INVENTORY_REPORT</code>).
          Either <strong>schedule_id</strong> or <strong>feed_type</strong> is  required.
          Do not use with the <strong>feed_type</strong> parameter.
        explode: true
        in: query
        name: schedule_id
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of previous days in which to search for tasks. Do
          not use with the <code>date_range</code> parameter. If both <code>date_range</code>
          and <code>look_back_days</code> are omitted, this parameter''s default value
          is used.  <br /><br /><b>Default: </b> 7 <br /><br /><b>Range: </b> 1-90
          (inclusive)'
        explode: true
        in: query
        name: look_back_days
        required: false
        schema:
          type: string
        style: form
      - description: 'Specifies the range of task creation dates used to filter the
          results. The results are filtered to include only tasks with a creation
          date that is equal to this date or is within specified range. <p> <span
          class="tablenote"><strong>Note:</strong> Maximum date range window size
          is 90 days.</span></p><br /><b>Valid Format (UTC): </b><code>yyyy-MM-ddThh:mm:ss.SSSZ..yyyy-MM-ddThh:mm:ss.SSSZ</code><br
          /><br />For example: Tasks created on March 31, 2021<br /> <code>2021-03-31T00:00:00.000Z..2021-03-31T00:00:00.000Z</code><br
          /><br />'
        explode: true
        in: query
        name: date_range
        required: false
        schema:
          type: string
        style: form
      - description: 'The maximum number of tasks that can be returned on each page
          of the paginated response. Use this parameter in conjunction with the <strong>offset</strong>
          parameter to control the pagination of the output. <p> <span class="tablenote"><strong>Note:</strong>
          This feature employs a zero-based list, where the first item in the list
          has an offset of <code>0</code>.</span></p><p>For example, if <strong>offset</strong>
          is set to 10 and <strong>limit</strong> is set to 10, the call retrieves
          tasks 11 thru 20 from the result set.</p><p>If this parameter is omitted,
          the default value is used. <br /><br /><b>Default: </b> 10 <br /><br /><b>Maximum:
          </b>500'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of tasks to skip in the result set before returning
          the first task in the paginated response. <p>Combine <strong>offset</strong>
          with the <strong>limit</strong> query parameter to control the items returned
          in the response. For example, if you supply an <strong>offset</strong> of
          <code>0</code> and a <strong>limit</strong> of <code>10</code>, the first
          page of the response contains the first 10 items from the complete list
          of items retrieved by the call. If <strong>offset</strong> is <code>10</code>
          and <strong>limit</strong> is <code>20</code>, the first page of the response
          contains items 11-30 from the complete result set. If this query parameter
          is not set, the default value is used and the first page of records is returned.
          <br /><br /><b>Default: </b>0'
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryTaskCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /inventory_task
      tags:
      - Feed API/inventory_task
      x-apifox-folder: Feed API/inventory_task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496311-run
      x-accepts: application/json
    post:
      deprecated: false
      description: This method creates an inventory-related download task for a specified
        feed type with optional filter criteria. When using this method, specify the
        <strong>feedType</strong>. <br/><br/>This method returns the location response
        header containing the <strong>getInventoryTask</strong> call URI to retrieve
        the inventory task you just created. The URL includes the eBay-assigned task
        ID, which you can use to reference the inventory task.<br/><br/>To retrieve
        the status of the task, use the <strong>getInventoryTask</strong> method to
        retrieve a single task ID or the <strong>getInventoryTasks</strong> method
        to retrieve multiple task IDs.<p> <span class="tablenote"><strong>Note:</strong>
        The scope depends on the feed type. An error message results when an unsupported
        scope or feed type is specified.</span></p>Presently, this method supports
        Active Inventory Report. The <strong>ActiveInventoryReport</strong> returns
        a report that contains price and quantity information for all of the active
        listings for a specific seller. A seller can use this information to maintain
        their inventory on eBay.
      operationId: createInventoryTask
      parameters:
      - description: The ID of the eBay marketplace where the item is hosted. <p>
          <span class="tablenote"><strong>Note:</strong> This value is case sensitive.</span></p><p>For
          example:</p><p><code>X-EBAY-C-MARKETPLACE-ID:EBAY_US</code></p><p>This identifies
          the eBay marketplace that applies to this task. See <a href="/api-docs/sell/feed/types/bas:MarketplaceIdEnum">MarketplaceIdEnum</a>.</p>
        explode: false
        in: header
        name: X-EBAY-C-MARKETPLACE-ID
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInventoryTaskRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /inventory_task
      tags:
      - Feed API/inventory_task
      x-apifox-folder: Feed API/inventory_task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496325-run
      x-contentType: application/json
      x-accepts: application/json
  /schedule/{schedule_id}:
    delete:
      deprecated: false
      description: This method deletes an existing schedule. Specify the schedule
        to delete using the <strong>schedule_id</strong> path parameter.
      operationId: deleteSchedule
      parameters:
      - description: The <strong>schedule_id</strong> of the schedule to delete. This
          ID was generated when the task was created. If you do not know the schedule_id,
          use the <strong>getSchedules</strong> method to return all schedules based
          on a specified feed_type and find the schedule_id of the schedule to delete.
        explode: false
        in: path
        name: schedule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /schedule/{schedule_id}
      tags:
      - Feed API/schedule
      x-apifox-folder: Feed API/schedule
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496312-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This method retrieves schedule details and status of the specified
        schedule. Specify the schedule to retrieve using the <strong>schedule_id</strong>.
        Use the <strong>getSchedules</strong> method to find a schedule if you do
        not know the <strong>schedule_id</strong>.
      operationId: getSchedule
      parameters:
      - description: The ID of the schedule for which to retrieve the details. This
          ID is generated when the schedule was created by the <strong>createSchedule</strong>
          method.
        explode: false
        in: path
        name: schedule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserScheduleResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /schedule/{schedule_id}
      tags:
      - Feed API/schedule
      x-apifox-folder: Feed API/schedule
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496313-run
      x-accepts: application/json
    put:
      deprecated: false
      description: This method updates an existing schedule. Specify the schedule
        to update using the <strong>schedule_id</strong> path parameter. If the schedule
        template has changed after the schedule was created or updated, the input
        will be validated using the changed template.<p> <span class="tablenote"><strong>Note:</strong>
        Make sure to include all fields required by the schedule template (<strong>scheduleTemplateId</strong>).
        Call the <strong>getScheduleTemplate</strong> method (or the <strong>getScheduleTemplates</strong>
        method), to find out which fields are required or optional. If you do not
        know the <strong>scheduleTemplateId</strong>, call the <strong>getSchedule</strong>
        method to find out.</span></p>
      operationId: updateSchedule
      parameters:
      - description: The ID of the schedule to update. This ID is generated when the
          schedule was created by the <strong>createSchedule</strong> method.
        explode: false
        in: path
        name: schedule_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserScheduleRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /schedule/{schedule_id}
      tags:
      - Feed API/schedule
      x-apifox-folder: Feed API/schedule
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496326-run
      x-contentType: application/json
      x-accepts: application/json
  /inventory_task/{task_id}:
    get:
      deprecated: false
      description: This method retrieves the task details and status of the specified
        inventory-related task. The input is <strong>task_id</strong>.
      operationId: getInventoryTask
      parameters:
      - description: The ID of the task. This ID was generated when the task was created
          by the <strong>createInventoryTask</strong> method
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryTask'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /inventory_task/{task_id}
      tags:
      - Feed API/inventory_task
      x-apifox-folder: Feed API/inventory_task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496314-run
      x-accepts: application/json
  /task/{task_id}/download_input_file:
    get:
      deprecated: false
      description: This method downloads the file previously uploaded using <strong>uploadFile</strong>.
        Specify the task_id from the <strong>uploadFile</strong> call. <p><span class="tablenote"><strong>Note:</strong>
        With respect to LMS, this method applies to all feed types except <code>LMS_ORDER_REPORT</code>
        and <code>LMS_ACTIVE_INVENTORY_REPORT</code>. See <a href="/api-docs/sell/static/feed/lms-feeds.html">LMS
        API Feeds</a> in the Selling Integration Guide.</span></p>
      operationId: getInputFile
      parameters:
      - description: The task ID associated with the file to be downloaded.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /task/{task_id}/download_input_file
      tags:
      - Feed API/task
      x-apifox-folder: Feed API/task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496315-run
      x-accepts: application/json
  /task/{task_id}/upload_file:
    post:
      deprecated: false
      description: This method associates the specified file with the specified task
        ID and uploads the input file. After the file has been uploaded, the processing
        of the file begins. <br /><br />Reports often take time to generate and it's
        common for this method to return an HTTP status of 202, which indicates the
        report is being generated. Use the <b> getTask</b> with the task ID or <b>
        getTasks</b> to determine the status of a report. <br /><br />The status flow
        is <code>QUEUED</code> &gt; <code>IN_PROCESS</code> &gt; <code>COMPLETED</code>
        or <code>COMPLETED_WITH_ERROR</code>. When the status is <code>COMPLETED</code>
        or <code>COMPLETED_WITH_ERROR</code>, this indicates the file has been processed
        and the order report can be downloaded. If there are errors, they will be
        indicated in the report file. <br /><br />For details of how this method is
        used in the upload flow, see <a href="/api-docs/sell/static/orders/generating-and-retrieving-order-reports.html">Working
        with Order Feeds</a> in the Selling Integration Guide. <p><span class="tablenote"><strong>Note:</strong>
        This method applies to all Seller Hub feed types and LMS feed types except
        <code>LMS_ORDER_REPORT</code> and <code>LMS_ACTIVE_INVENTORY_REPORT</code>.
        See <a href="/api-docs/sell/static/feed/lms-feeds-quick-reference.html#Availabl"
        target="_blank">LMS feed types</a> and <a href="/api-docs/sell/static/feed/fx-feeds-quick-reference.html#availabl"
        target="_blank">Seller Hub feed types</a>.</span></p><p> <span class="tablenote"><b>Note:</b>
        You must use a <strong>Content-Type</strong> header with its value set to
        "<strong>multipart/form-data</strong>". See <a href="/api-docs/sell/feed/resources/task/methods/uploadFile#h2-samples">Samples</a>
        for information.</span></p>
      operationId: uploadFile
      parameters:
      - description: The task_id associated with the file that will be uploaded. This
          ID was generated when the specified task was created.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          multipart/form-data:
            schema:
              properties:
                creationDate:
                  description: 'The file creation date. <br /><br /><b> Format: </b>
                    UTC <code>yyyy-MM-ddThh:mm:ss.SSSZ</code><p><b>For example:</b><p>Created
                    on September 8, 2019</p><p><code>2019-09-08T00:00:00.000Z</code></p>'
                  type: string
                fileName:
                  description: The name of the file including its extension (for example,
                    xml or csv) to be uploaded.
                  type: string
                modificationDate:
                  description: 'The file modified date. <br /><br /><b> Format: </b>
                    UTC <code>yyyy-MM-ddThh:mm:ss.SSSZ</code><p><b>For example:</b><p>Created
                    on September 9, 2019</p><p><code>2019-09-09T00:00:00.000Z</code></p>'
                  type: string
                name:
                  description: A content identifier. The only presently supported
                    name is <code>file</code>.
                  type: string
                parameters:
                  description: The parameters you want associated with the file.
                  type: string
                readDate:
                  description: 'The date you read the file. <br /><br /><b> Format:
                    </b> UTC <code>yyyy-MM-ddThh:mm:ss.SSSZ</code><p><b>For example:</b><p>Created
                    on September 10, 2019</p><p><code>2019-09-10T00:00:00.000Z</code></p>'
                  type: string
                size:
                  description: The size of the file.
                  type: integer
                type:
                  description: The file type. The only presently supported type is
                    <code>form-data</code>.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /task/{task_id}/upload_file
      tags:
      - Feed API/task
      x-apifox-folder: Feed API/task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496316-run
      x-contentType: multipart/form-data
      x-accepts: application/json
  /schedule:
    get:
      deprecated: false
      description: This method retrieves an array containing the details and status
        of all schedules based on the specified <strong>feed_type</strong>. Use this
        method to find a schedule if you do not know the <strong>schedule_id</strong>.
      operationId: getSchedules
      parameters:
      - description: The <strong>feedType</strong> associated with the schedule.
        explode: true
        in: query
        name: feed_type
        required: true
        schema:
          type: string
        style: form
      - description: 'The maximum number of schedules that can be returned on each
          page of the paginated response. Use this parameter in conjunction with the
          <strong>offset</strong> parameter to control the pagination of the output.
          <p> <span class="tablenote"><strong>Note:</strong> This feature employs
          a zero-based list, where the first item in the list has an offset of <code>0</code>.</span></p><p>For
          example, if <strong>offset</strong> is set to 10 and <strong>limit</strong>
          is set to 10, the call retrieves schedules 11 thru 20 from the result set.</p><p>If
          this parameter is omitted, the default value is used. <br /><br /><b>Default:
          </b> 10 <br /><br /><b>Maximum: </b>500'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of schedules to skip in the result set before returning
          the first schedule in the paginated response. <p>Combine <strong>offset</strong>
          with the <strong>limit</strong> query parameter to control the items returned
          in the response. For example, if you supply an <strong>offset</strong> of
          <code>0</code> and a <strong>limit</strong> of <code>10</code>, the first
          page of the response contains the first 10 items from the complete list
          of items retrieved by the call. If <strong>offset</strong> is <code>10</code>
          and <strong>limit</strong> is <code>20</code>, the first page of the response
          contains items 11-30 from the complete result set. If this query parameter
          is not set, the default value is used and the first page of records is returned.<br
          /><br /><b>Default: </b>0'
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserScheduleCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /schedule
      tags:
      - Feed API/schedule
      x-apifox-folder: Feed API/schedule
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496317-run
      x-accepts: application/json
    post:
      deprecated: false
      description: This method creates a schedule, which is a subscription to the
        specified schedule template. A schedule periodically generates a report for
        the <strong>feedType</strong> specified by the template. Specify the same
        <strong>feedType</strong> as the <strong>feedType</strong> of the associated
        schedule template. When creating the schedule, if available from the template,
        you can specify a preferred trigger hour, day of the week, or day of the month.
        These and other fields are conditionally available as specified by the template.<p>
        <span class="tablenote"><strong>Note:</strong> Make sure to include all fields
        required by the schedule template (<strong>scheduleTemplateId</strong>). Call
        the <strong>getScheduleTemplate</strong> method (or the <strong>getScheduleTemplates</strong>
        method), to find out which fields are required or optional. If a field is
        optional and a default value is provided by the template, the default value
        will be used if omitted from the payload.</span></p>A successful call returns
        the location response header containing the <strong>getSchedule</strong> call
        URI to retrieve the schedule you just created. The URL includes the eBay-assigned
        schedule ID, which you can use to reference the schedule task. <br /><br />To
        retrieve the details of the create schedule task, use the <strong>getSchedule</strong>
        method for a single schedule ID or the <strong>getSchedules</strong> method
        to retrieve all schedule details for the specified <strong>feed_type</strong>.
        The number of schedules for each feedType is limited. Error code 160031 is
        returned when you have reached this maximum.<p> <span class="tablenote"><strong>Note:</strong>
        Except for schedules with a HALF-HOUR frequency, all schedules will ideally
        run at the start of each hour ('00' minutes). Actual start time may vary time
        may vary due to load and other factors.</span></p>
      operationId: createSchedule
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserScheduleRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /schedule
      tags:
      - Feed API/schedule
      x-apifox-folder: Feed API/schedule
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496320-run
      x-contentType: application/json
      x-accepts: application/json
  /task/{task_id}:
    get:
      deprecated: false
      description: 'This method retrieves the details and status of the specified
        task. The input is <strong>task_id</strong>. <br /><br />For details of how
        this method is used, see <a href="/api-docs/sell/static/orders/generating-and-retrieving-order-reports.html">Working
        with Order Feeds</a> in the Selling Integration Guide. '
      operationId: getTask
      parameters:
      - description: The ID of the task. This ID was generated when the task was created.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /task/{task_id}
      tags:
      - Feed API/task
      x-apifox-folder: Feed API/task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496318-run
      x-accepts: application/json
  /order_task/{task_id}:
    get:
      deprecated: false
      description: This method retrieves the task details and status of the specified
        task. The input is <strong>task_id</strong>. <p>For details about how this
        method is used, see <a href="/api-docs/sell/static/orders/generating-and-retrieving-order-reports.html">Working
        with Order Feeds</a> in the Selling Integration Guide.  </p>
      operationId: getOrderTask
      parameters:
      - description: The ID of the task. This ID is generated when the task was created
          by the <b> createOrderTask</b> method.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTask'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /order_task/{task_id}
      tags:
      - Feed API/order_task
      x-apifox-folder: Feed API/order_task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496319-run
      x-accepts: application/json
  /task:
    get:
      deprecated: false
      description: 'This method returns the details and status for an array of tasks
        based on a specified <strong>feed_type</strong> or <strong>scheduledId</strong>.
        Specifying both <strong>feed_type</strong> and <strong>scheduledId</strong>
        results in an error. Since schedules are based on feed types, you can specify
        a schedule (<strong>schedule_id</strong>) that returns the needed <strong>feed_type</strong>.<br
        /><br />If specifying the <strong>feed_type</strong>, limit which tasks are
        returned by specifying filters, such as the creation date range or period
        of time using <strong>look_back_days</strong>. Also, by specifying the <strong>feed_type</strong>,
        both on-demand and scheduled reports are returned.<br /><br />If specifying
        a <strong>scheduledId</strong>, the schedule template (that the schedule ID
        is based on) determines which tasks are returned (see <strong>schedule_id</strong>
        for additional information). Each <strong>scheduledId</strong> applies to
        one <strong>feed_type</strong>. '
      operationId: getTasks
      parameters:
      - description: 'Specifies the range of task creation dates used to filter the
          results. The results are filtered to include only tasks with a creation
          date that is equal to this date or is within specified range. Only tasks
          that are less than 90 days can be retrieved. <p> <span class="tablenote"><strong>Note:</strong>
          Maximum date range window size is 90 days.</span></p> <br /><b>Valid Format
          (UTC):</b><code>yyyy-MM-ddThh:mm:ss.SSSZ..yyyy-MM-ddThh:mm:ss.SSSZ </code><br
          /><br />For example: Tasks created on September 8, 2019<br /> <code>2019-09-08T00:00:00.000Z..2019-09-09T00:00:00.000Z</code>'
        explode: true
        in: query
        name: date_range
        required: false
        schema:
          type: string
        style: form
      - description: 'The feed type associated with the tasks to be returned. Only
          use a <strong>feedType</strong> that is available for your API: <ul><li>Order
          Feeds: <code>LMS_ORDER_ACK, LMS_ORDER_REPORT</code></li><li>Large Merchant
          Services (LMS) Feeds: See <a href="/api-docs/sell/static/lms-migration/lms-to-feed-feedtype.html"
          target="_blank">Available FeedTypes</a></li></ul><br/>Do not use with the
          <strong>schedule_id</strong> parameter. Since schedules are based on feed
          types, you can specify a schedule (<strong>schedule_id</strong>) that returns
          the needed <strong>feed_type</strong>.'
        explode: true
        in: query
        name: feed_type
        required: false
        schema:
          type: string
        style: form
      - description: 'The maximum number of tasks that can be returned on each page
          of the paginated response. Use this parameter in conjunction with the <strong>offset</strong>
          parameter to control the pagination of the output. <p> <span class="tablenote"><strong>Note:</strong>
          This feature employs a zero-based list, where the first item in the list
          has an offset of <code>0</code>.</span></p><p>For example, if <strong>offset</strong>
          is set to 10 and <strong>limit</strong> is set to 10, the call retrieves
          tasks 11 thru 20 from the result set.</p><p>If this parameter is omitted,
          the default value is used. <br /><br /><b>Default: </b> 10 <br /><br /><b>Maximum:
          </b>500'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of previous days in which to search for tasks. Do
          not use with the <code>date_range</code> parameter. If both <code>date_range</code>
          and <code>look_back_days</code> are omitted, this parameter''s default value
          is used.  <br /><br /><b>Default: </b> 7 <br /><br /><b>Range: </b> 1-90
          (inclusive)'
        explode: true
        in: query
        name: look_back_days
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of tasks to skip in the result set before returning
          the first task in the paginated response. <p>Combine <strong>offset</strong>
          with the <strong>limit</strong> query parameter to control the items returned
          in the response. For example, if you supply an <strong>offset</strong> of
          <code>0</code> and a <strong>limit</strong> of <code>10</code>, the first
          page of the response contains the first 10 items from the complete list
          of items retrieved by the call. If <strong>offset</strong> is <code>10</code>
          and <strong>limit</strong> is <code>20</code>, the first page of the response
          contains items 11-30 from the complete result set. If this query parameter
          is not set, the default value is used and the first page of records is returned.
          <br /><br /><b>Default: </b>0'
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: The schedule ID associated with the task. A schedule periodically
          generates a report for the feed type specified by the schedule template
          (see <strong>scheduleTemplateId</strong> in <strong>createSchedule</strong>).
          Do not use with the <strong>feed_type</strong> parameter. Since schedules
          are based on feed types, you can specify a schedule (<strong>schedule_id</strong>)
          that returns the needed <strong>feed_type</strong>.
        explode: true
        in: query
        name: schedule_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /task
      tags:
      - Feed API/task
      x-apifox-folder: Feed API/task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496321-run
      x-accepts: application/json
    post:
      deprecated: false
      description: 'This method creates an upload task or a download task without
        filter criteria. When using this method, specify the <b> feedType</b> and
        the feed file <b> schemaVersion</b>. The feed type specified sets the task
        as a download or an upload task.  <p>For details about the upload and download
        flows, see <a href="/api-docs/sell/static/orders/generating-and-retrieving-order-reports.html">Working
        with Order Feeds</a> in the Selling Integration Guide.</p><p> <span class="tablenote"><strong>Note:</strong>
        The scope depends on the feed type. An error message results when an unsupported
        scope or feed type is specified.</span></p><p>The following list contains
        this method''s authorization scopes and their corresponding feed types:</p><ul><li>https://api.ebay.com/oauth/api_scope/sell.inventory:
        See <a href="/api-docs/sell/static/lms-migration/lms-to-feed-feedtype.html"
        target="_blank">LMS FeedTypes</a></li><li>https://api.ebay.com/oauth/api_scope/sell.fulfillment:
        LMS_ORDER_ACK (specify for upload tasks). Also see <a href="/api-docs/sell/static/lms-migration/lms-to-feed-feedtype.html"
        target="_blank">LMS FeedTypes</a></li><li>https://api.ebay.com/oauth/api_scope/sell.marketing:
        None*</li><li>https://api.ebay.com/oauth/api_scope/commerce.catalog.readonly:
        None*</li></ul><p>* Reserved for future release</p>'
      operationId: createTask
      parameters:
      - description: The ID of the eBay marketplace where the item is hosted. <p>
          <span class="tablenote"><strong>Note:</strong> This value is case sensitive.</span></p><p>For
          example:</p><p><code>X-EBAY-C-MARKETPLACE-ID:EBAY_US</code></p><p>This identifies
          the eBay marketplace that applies to this task. See <a href="/api-docs/sell/feed/types/bas:MarketplaceIdEnum">MarketplaceIdEnum</a>.</p>
        explode: false
        in: header
        name: X-EBAY-C-MARKETPLACE-ID
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /task
      tags:
      - Feed API/task
      x-apifox-folder: Feed API/task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496324-run
      x-contentType: application/json
      x-accepts: application/json
  /schedule_template/{schedule_template_id}:
    get:
      deprecated: false
      description: This method retrieves the details of the specified template. Specify
        the template to retrieve using the <strong>schedule_template_id</strong> path
        parameter. Use the <strong>getScheduleTemplates</strong> method to find a
        schedule template if you do not know the <strong>schedule_template_id</strong>.
      operationId: getScheduleTemplate
      parameters:
      - description: The ID of the template to retrieve. If you do not know the <strong>schedule_template_id</strong>,
          refer to the documentation or use the <strong>getScheduleTemplates</strong>
          method to find the available schedule templates.
        explode: false
        in: path
        name: schedule_template_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleTemplateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /schedule_template/{schedule_template_id}
      tags:
      - Feed API/schedule
      x-apifox-folder: Feed API/schedule
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496322-run
      x-accepts: application/json
  /schedule/{schedule_id}/download_result_file:
    get:
      deprecated: false
      description: 'This method downloads the latest result file generated by the
        schedule. The response of this call is a compressed or uncompressed CSV, XML,
        or JSON file, with the applicable file extension (for example: csv.gz). Specify
        the <strong>schedule_id</strong> path parameter to download its last generated
        file.'
      operationId: getLatestResultFile
      parameters:
      - description: The ID of the schedule for which to retrieve the latest result
          file. This ID is generated when the schedule was created by the <strong>createSchedule</strong>
          method.
        explode: false
        in: path
        name: schedule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /schedule/{schedule_id}/download_result_file
      tags:
      - Feed API/schedule
      x-apifox-folder: Feed API/schedule
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496323-run
      x-accepts: application/json
  /task/{task_id}/download_result_file:
    get:
      deprecated: false
      description: 'This method retrieves the generated file that is associated with
        the specified task ID. The response of this call is a compressed or uncompressed
        CSV, XML, or JSON file, with the applicable file extension (for example: csv.gz).
        <p>For details about how this method is used, see <a href="/api-docs/sell/static/orders/generating-and-retrieving-order-reports.html">Working
        with Order Feeds</a> in the Selling Integration Guide. </p><p><span class="tablenote"><strong>Note:</strong>
        The status of the task to retrieve must be in the COMPLETED or COMPLETED_WITH_ERROR
        state before this method can retrieve the file. You can use the getTask or
        getTasks method to retrieve the status of the task.</span></p>'
      operationId: getResultFile
      parameters:
      - description: The ID of the task associated with the file you want to download.
          This ID was generated when the task was created.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /task/{task_id}/download_result_file
      tags:
      - Feed API/task
      x-apifox-folder: Feed API/task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496327-run
      x-accepts: application/json
  /customer_service_metric_task:
    get:
      deprecated: false
      description: Use this method to return an array of customer service metric tasks.
        You can limit the tasks returned by specifying a date range. </p> <p> <span
        class="tablenote"><strong>Note:</strong> You can pass in either the <code>look_back_days
        </code>or<code> date_range</code>, but not both.</span></p>
      operationId: getCustomerServiceMetricTasks
      parameters:
      - description: 'The task creation date range. The results are filtered to include
          only tasks with a creation date that is equal to the dates specified or
          is within the specified range. Do not use with the <code>look_back_days</code>
          parameter.<p><strong>Format: </strong>UTC</p><p>For example, tasks within
          a range: </p><p><code>yyyy-MM-ddThh:mm:ss.SSSZ..yyyy-MM-ddThh:mm:ss.SSSZ
          </code></p><p>Tasks created on March 8, 2020</p><p><code>2020-03-08T00:00.00.000Z..2020-03-09T00:00:00.000Z</code></p><p><b>Maximum:
          </b>90 days</p>'
        explode: true
        in: query
        name: date_range
        required: false
        schema:
          type: string
        style: form
      - description: The feed type associated with the task. The only presently supported
          value is <code>CUSTOMER_SERVICE_METRICS_REPORT</code>.
        explode: true
        in: query
        name: feed_type
        required: false
        schema:
          type: string
        style: form
      - description: The number of customer service metric tasks to return per page
          of the result set. Use this parameter in conjunction with the offset parameter
          to control the pagination of the output. <p>For example, if <strong>offset</strong>
          is set to 10 and <strong>limit</strong> is set to 10, the call retrieves
          tasks 11 thru 20 from the result set.</p><p>If this parameter is omitted,
          the default value is used.</p><p> <span class="tablenote"><strong>Note:</strong>This
          feature employs a zero-based list, where the first item in the list has
          an offset of <code>0</code>.</span></p><p><b>Default:</b> 10 <p><b>Maximum:</b>
          500</p>
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: The number of previous days in which to search for tasks. Do
          not use with the <code>date_range</code> parameter. If both <code>date_range</code>
          and <code>look_back_days</code> are omitted, this parameter's default value
          is used. <p><b>Default value:</b> 7</p><p><b>Range:</b> 1-90 (inclusive)</p>
        explode: true
        in: query
        name: look_back_days
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of customer service metric tasks to skip in the result
          set before returning the first task in the paginated response. <p>Combine
          <strong>offset</strong> with the <strong>limit</strong> query parameter
          to control the items returned in the response. For example, if you supply
          an <strong>offset</strong> of <code>0</code> and a <strong>limit</strong>
          of <code>10</code>, the first page of the response contains the first 10
          items from the complete list of items retrieved by the call. If <strong>offset</strong>
          is <code>10</code> and <strong>limit</strong> is <code>20</code>, the first
          page of the response contains items 11-30 from the complete result set.
          <br /><br /><b>Default: </b>0'
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerServiceMetricTaskCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /customer_service_metric_task
      tags:
      - Feed API/customer_service_metric_task
      x-apifox-folder: Feed API/customer_service_metric_task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496329-run
      x-accepts: application/json
    post:
      deprecated: false
      description: <p>Use this method to create a customer service metrics download
        task with filter criteria for the customer service metrics report. When using
        this method, specify the <strong>feedType</strong> and <strong>filterCriteria</strong>
        including both <strong>evaluationMarketplaceId</strong> and <strong>customerServiceMetricType</strong>
        for the report. The method returns the location response header containing
        the call URI to use with <strong>getCustomerServiceMetricTask</strong> to
        retrieve status and details on the task.</p><p>Only CURRENT Customer Service
        Metrics reports can be generated with the Sell Feed API. PROJECTED reports
        are not supported at this time. See the <a href="/api-docs/sell/analytics/resources/customer_service_metric/methods/getCustomerServiceMetric">getCustomerServiceMetric</a>
        method document in the Analytics API for more information about these two
        types of reports.</p><p><span class="tablenote"><strong>Note:</strong> Before
        calling this API, retrieve the summary of the seller's performance and rating
        for the customer service metric by calling <strong>getCustomerServiceMetric</strong>
        (part of the <a href="/api-docs/sell/analytics/resources/methods">Analytics
        API</a>). You can then populate the create task request fields with the values
        from the response. This technique eliminates failed tasks that request a report
        for a <strong>customerServiceMetricType</strong> and <strong>evaluationMarketplaceId</strong>
        that are without evaluation.</span></p>
      operationId: createCustomerServiceMetricTask
      parameters:
      - description: Use this header to specify the natural language in which the
          authenticated user desires the response.
        explode: false
        in: header
        name: accept-language
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceMetricsTaskRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /customer_service_metric_task
      tags:
      - Feed API/customer_service_metric_task
      x-apifox-folder: Feed API/customer_service_metric_task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496330-run
      x-contentType: application/json
      x-accepts: application/json
  /customer_service_metric_task/{task_id}:
    get:
      deprecated: false
      description: <p>Use this method to retrieve customer service metric task details
        for the specified task. The input is <strong>task_id</strong>.</p>
      operationId: getCustomerServiceMetricTask
      parameters:
      - description: Use this path parameter to specify the task ID value for the
          customer service metric task to retrieve.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceMetricsTask'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /customer_service_metric_task/{task_id}
      tags:
      - Feed API/customer_service_metric_task
      x-apifox-folder: Feed API/customer_service_metric_task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38496331-run
      x-accepts: application/json
  /payout/{payout_Id}:
    get:
      deprecated: false
      description: This method retrieves details on a specific seller payout. The
        unique identfier of the payout is passed in as a path parameter at the end
        of the call URI. <br/><br/>The <b>getPayouts</b> method can be used to retrieve
        the unique identifier of a payout, or the user can check Seller Hub.
      operationId: getPayout
      parameters:
      - description: The unique identfier of the payout is passed in as a path parameter
          at the end of the call URI. <br/><br/>The <b>getPayouts</b> method can be
          used to retrieve the unique identifier of a payout, or the user can check
          Seller Hub to get the payout ID.
        explode: false
        in: path
        name: payout_Id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payout'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /payout/{payout_Id}
      tags:
      - Finances API/payout
      x-apifox-folder: Finances API/payout
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497542-run
      x-accepts: application/json
  /transaction:
    get:
      deprecated: false
      description: This method allows a seller to retrieve one or monetary transactions.
        In this case, 'monetary transactions' include sales orders, buyer refunds,
        seller credits, buyer-initiated payment disputes, eBay shipping label purchases,
        and transfers. There are numerous input filters available for use, including
        filters to retrieve specific types of monetary transactions, to retrieve monetary
        transactions processed within a specific date range, or to retrieve monetary
        transactions in a specific state. See the <b>filter</b> field for more information
        on each filter, and how each one is used. <br/><br/>There are also pagination
        and sort query parameters that allow users to further control the monetary
        transactions that are returned in the response.<br/><br/>If no monetary transactions
        match the input criteria, an http status code of <em>204 No Content</em> is
        returned with no response payload.
      operationId: getTransactions
      parameters:
      - description: 'Numerous filters are available for the <strong>getTransactions</strong>
          method, and these filters are discussed below. One or more of these filter
          types can be used. If none of these filters are used, all monetary transactions
          from the last 90 days are returned:<ul><li><b>transactionDate</b>: search
          for monetary transactions that occurred within a specific range of dates.<br
          /><br /><span class="tablenote"><strong>Note:</strong> All dates must be
          input using UTC format (<code>YYYY-MM-DDTHH:MM:SS.SSSZ</code>) and should
          be adjusted accordingly for the local timezone of the user.</span><br /><br
          />Below is the proper syntax to use if filtering by a date range: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction?filter=transactionDate:[2018-10-23T00:00:01.000Z..2018-11-09T00:00:01.000Z]</code><br/><br/>Alternatively,
          the user could omit the ending date, and the date range would include the
          starting date and up to 90 days past that date, or the current date if the
          starting date is less than 90 days in the past.</li>  <li><b>transactionType</b>:
          search for a specific type of monetary transaction. The supported <b>transactionType</b>
          values are as follows:<ul><li><code>SALE</code>: a sales order.</li><li>
          <code>REFUND</code>: a refund to the buyer after an order cancellation or
          return.</li><li><code>CREDIT</code>: a credit issued by eBay to the seller''s
          account.</li><li><code>DISPUTE</code>: a monetary transaction associated
          with a payment dispute between buyer and seller.</li><li><code>NON_SALE_CHARGE</code>:
          a monetary transaction involving a seller transferring money to eBay for
          the balance of a charge for NON_SALE_CHARGE transactions (transactions that
          contain non-transactional seller fees). These can include a one-time payment,
          monthly/yearly subscription fees charged monthly, NRC charges, and fee credits.</li><li><code>SHIPPING_LABEL</code>:
          a monetary transaction where eBay is billing the seller for an eBay shipping
          label. Note that the shipping label functionality will initially only be
          available to a select number of sellers.</li><li><code>TRANSFER</code>:
          A transfer is a monetary transaction where eBay is billing the seller for
          reimbursement of a charge. An example of a transfer is a seller reimbursing
          eBay for a buyer refund.</li><li><code>ADJUSTMENT</code>: An adjustment
          is a monetary transaction where eBay is crediting or debiting the seller''s
          account.</li><li><code>WITHDRAWAL</code>: A withdrawal is a monetary transaction
          where the seller requests an on-demand payout from eBay.</li></ul>Below
          is the proper syntax to use if filtering by a monetary transaction type:
          <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction?filter=transactionType:{SALE}</code></li><li><b>transactionStatus</b>:
          this filter type is only applicable for sales orders, and allows the user
          to filter seller payouts in a particular state.  The supported <b>transactionStatus</b>
          values are as follows:<ul><li><code>PAYOUT</code>: this indicates that the
          proceeds from the corresponding sales order has been paid out to the seller''s
          account.</li><li><code>FUNDS_PROCESSING</code>: this indicates that the
          funds for the corresponding monetary transaction are currently being processed.</li><li><code>FUNDS_AVAILABLE_FOR_PAYOUT</code>:
          this indicates that the proceeds from the corresponding sales order are
          available for a seller payout, but processing has not yet begun.</li><li><code>FUNDS_ON_HOLD</code>:
          this indicates that the proceeds from the corresponding sales order are
          currently being held by eBay, and are not yet available for a seller payout.</li><li><code>COMPLETED</code>:
          this indicates that the funds for the corresponding <code>TRANSFER</code>
          monetary transaction have transferred and the transaction has completed.</li><li><code>FAILED</code>:
          this indicates the process has failed for the corresponding <code>TRANSFER</code>
          monetary transaction. </li></ul>Below is the proper syntax to use if filtering
          by transaction status: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction?filter=transactionStatus:{PAYOUT}</code></li><li><b>buyerUsername</b>:
          the eBay user ID of the buyer involved in the monetary transaction. Only
          monetary transactions involving this buyer are returned. Below is the proper
          syntax to use if filtering by a specific eBay buyer: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction?filter=buyerUsername:{buyer1234}</code>
          </li><li><b>salesRecordReference</b>: the unique Selling Manager identifier
          of the order involved in the monetary transaction. Only monetary transactions
          involving this Selling Manager Sales Record ID are returned. Below is the
          proper syntax to use if filtering by a specific Selling Manager Sales Record
          ID: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction?filter=salesRecordReference:{123}</code><br/><br/><span
          class="tablenote"><strong>Note:</strong> For all orders originating after
          February 1, 2020, a value of <code>0</code> will be returned in the <b>salesRecordReference</b>
          field. So, this filter will only be useful to retrieve orders than occurred
          before this date. </span></li><li><b>payoutId</b>: the unique identifier
          of a seller payout. This value is auto-generated by eBay once the seller
          payout is set to be processed. Only monetary transactions involving this
          Payout ID are returned. Below is the proper syntax to use if filtering by
          a specific Payout ID: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction?filter=payoutId:{5********8}</code>  </li><li><b>transactionId</b>:
          the unique identifier of a monetary transaction. For a sales order, the
          <b>orderId</b> filter should be used instead. Only the monetary transaction
          defined by the identifier is returned.<br /><br /><span class="tablenote"><strong>Note:</strong>
          This filter cannot be used alone; the <b>transactionType</b> must also be
          specified when filtering by transaction ID.</span><br /><br />Below is the
          proper syntax to use if filtering by a specific transaction ID: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction?filter=transactionId:{0*-0***0-3***3}&filter=transactionType:{SALE}</code>
          </li><li><b>orderId</b>: the unique identifier of a sales order. For any
          other monetary transaction, the <b>transactionId</b> filter should be used
          instead. Only the sales order defined by the identifier is returned. Below
          is the proper syntax to use if filtering by a specific order ID: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction?filter=orderId:{0*-0***0-3***3}</code>
          </li></ul> For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/sell/finances/types/cos:FilterField'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The number of monetary transactions to return per page of the
          result set. Use this parameter in conjunction with the <b>offset</b> parameter
          to control the pagination of the output. <br /><br /> For example, if <b>offset</b>
          is set to <code>10</code> and <b>limit</b> is set to <code>10</code>, the
          method retrieves monetary transactions 11 thru 20 from the result set. <br
          /><br /> <span class="tablenote"><strong>Note:</strong> This feature employs
          a zero-based list, where the first item in the list has an offset of <code>0</code>.
          If an <b>orderId</b>, <b>transactionId</b>, or <b>payoutId</b> filter is
          included in the request, any <b>limit</b> value will be ignored.</span>
          <br /><br /> <b>Maximum:</b><code> 1000</code> <br /> <b>Default:</b><code>
          20</code>
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: This integer value indicates the actual position that the first
          monetary transaction returned on the current page has in the results set.
          So, if you wanted to view the 11th monetary transaction of the result set,
          you would set the <strong>offset</strong> value in the request to <code>10</code>.
          <br><br>In the request, you can use the <b>offset</b> parameter in conjunction
          with the <b>limit</b> parameter to control the pagination of the output.
          For example, if <b>offset</b> is set to <code>30</code> and <b>limit</b>
          is set to <code>10</code>, the method retrieves transactions 31 thru 40
          from the resulting collection of transactions. <br /><br /> <span class="tablenote"><strong>Note:</strong>
          This feature employs a zero-based list, where the first item in the list
          has an offset of <code>0</code>.</span><br/><b>Default:</b> <code>0</code>
          (zero)
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: Sorting is not yet available for the <b>getTransactions</b> method.
          By default, monetary transactions that match the input criteria are sorted
          in descending order according to the transaction date. For implementation
          help, refer to eBay API documentation at https://developer.ebay.com/api-docs/sell/finances/types/cos:SortField
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /transaction
      tags:
      - Finances API/transaction
      x-apifox-folder: Finances API/transaction
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497543-run
      x-accepts: application/json
  /payout:
    get:
      deprecated: false
      description: This method is used to retrieve the details of one or more seller
        payouts. By using the <b>filter</b> query parameter, users can retrieve payouts
        processed within a specific date range, and/or they can retrieve payouts in
        a specific state.<br/><br/>There are also pagination and sort query parameters
        that allow users to control the payouts that are returned in the response.<br/><br/>If
        no payouts match the input criteria, an empty payload is returned.
      operationId: getPayouts
      parameters:
      - description: 'The three filter types that can be used here are discussed below.
          If none of these filters are used, all recent payouts in all states are
          returned:<ul><li><b>payoutDate</b>: search for payouts within a specific
          range of dates. The date format to use is <code>YYYY-MM-DDTHH:MM:SS.SSSZ</code>.
          Below is the proper syntax to use if filtering by a date range: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/payout?filter=payoutDate:[2018-12-17T00:00:01.000Z..2018-12-24T00:00:01.000Z]</code><br/><br/>Alternatively,
          the user could omit the ending date, and the date range would include the
          starting date and up to 90 days past that date, or the current date if the
          starting date is less than 90 days in the past.</li><li><b>lastAttemptedPayoutDate</b>:
          search for attempted payouts that failed within a specific range of dates.
          In order to use this filter, the <b>payoutStatus</b> filter must also be
          used and its value must be set to <code>RETRYABLE_FAILED</code>. The date
          format to use is <code>YYYY-MM-DDTHH:MM:SS.SSSZ</code>. The same syntax
          used for the <b>payoutDate</b> filter is also used for the <b>lastAttemptedPayoutDate</b>
          filter. <br><br>This filter is only applicable (and will return results)
          if one or more seller payouts have failed, but are retryable.</li> <li><b>payoutStatus</b>:
          search for payouts in a particular state. Only one payout state can be specified
          with this filter. The supported <b>payoutStatus</b> values are as follows:<ul><li><code>INITIATED</code>:
          search for payouts that have been initiated but not processed.</li><li><code>SUCCEEDED</code>:
          search for successful payouts.</li><li><code>RETRYABLE_FAILED</code>: search
          for payouts that failed, but ones which will be tried again. This value
          must be used if filtering by <b>lastAttemptedPayoutDate</b>. </li><li><code>TERMINAL_FAILED</code>:
          search for payouts that failed, and ones that will not be tried again.</li><li>
          <code>REVERSED</code>: search for payouts that were reversed. </li></ul>Below
          is the proper syntax to use if filtering by payout status: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/payout?filter=payoutStatus:{SUCCEEDED}</code></ul><br/>If
          both the <b>payoutDate</b> and <b>payoutStatus</b> filters are used, payouts
          must satisfy both criteria to be returned. For implementation help, refer
          to eBay API documentation at https://developer.ebay.com/api-docs/sell/finances/types/cos:FilterField'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The number of payouts to return per page of the result set. Use
          this parameter in conjunction with the <b>offset</b> parameter to control
          the pagination of the output. <br /><br /> For example, if <b>offset</b>
          is set to <code>10</code> and <b>limit</b> is set to <code>10</code>, the
          method retrieves payouts 11 thru 20 from the result set. <br /><br /> <span
          class="tablenote"><strong>Note:</strong> This feature employs a zero-based
          list, where the first payout in the results set has an offset value of <code>0</code>.
          </span> <br /><br /> <b>Maximum:</b> <code>200</code> <br /> <b>Default:</b>
          <code>20</code>
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: This integer value indicates the actual position that the first
          payout returned on the current page has in the results set. So, if you wanted
          to view the 11th payout of the result set, you would set the <strong>offset</strong>
          value in the request to <code>10</code>. <br><br>In the request, you can
          use the <b>offset</b> parameter in conjunction with the <b>limit</b> parameter
          to control the pagination of the output. For example, if <b>offset</b> is
          set to <code>30</code> and <b>limit</b> is set to <code>10</code>, the method
          retrieves payouts 31 thru 40 from the resulting collection of payouts. <br
          /><br /> <span class="tablenote"><strong>Note:</strong> This feature employs
          a zero-based list, where the first payout in the results set has an offset
          value of <code>0</code>.</span><br /><br /><b>Default:</b> <code>0</code>
          (zero)
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: 'By default, payouts or failed payouts that match the input criteria
          are sorted in ascending order according to the payout date/last attempted
          payout date (oldest payouts returned first). <br><br>To view payouts in
          descending order instead (most recent payouts/attempted payouts first),
          you would include the <b>sort</b> query parameter, and then set the value
          of its <b>field</b> parameter to <code>payoutDate</code> or <code>lastAttemptedPayoutDate</code>
          (if searching for failed, retrybable payouts). Below is the proper syntax
          to use if filtering by a payout date range in descending order: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/payout?filter=payoutDate:[2018-12-17T00:00:01.000Z..2018-12-24T00:00:01.000Z]&sort=payoutDate</code><br/><br/>Payouts
          can only be sorted according to payout date, and can not be sorted by payout
          status. For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/sell/finances/types/cos:SortField'
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payouts'
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /payout
      tags:
      - Finances API/payout
      x-apifox-folder: Finances API/payout
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497544-run
      x-accepts: application/json
  /transfer/{transfer_Id}:
    get:
      deprecated: false
      description: This method retrieves detailed information regarding a <code>TRANSFER</code>
        transaction type. A <code>TRANSFER</code> is a  monetary transaction type
        that involves a seller transferring money to eBay for reimbursement of one
        or more charges. For example, when a seller reimburses eBay for a buyer refund.<br><br>If
        an ID is passed into the URI that is an identifier for another transaction
        type, this call will return an http status code of <code>404 Not found</code>.
      operationId: getTransfer
      parameters:
      - description: The unique identifier of the <code>TRANSFER</code> transaction
          type you wish to retrieve.
        explode: false
        in: path
        name: transfer_Id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error.
      summary: /transfer/{transfer_Id}
      tags:
      - Finances API/transfer
      x-apifox-folder: Finances API/transfer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497545-run
      x-accepts: application/json
  /transaction_summary:
    get:
      deprecated: false
      description: This method is used to retrieve cumulative values for five types
        of monetary transactions (order sales, seller credits, buyer refunds, buyer-initiated
        payment disputes, eBay shipping label purchases, and transfers). If applicable,
        the number of payment holds and the amount of the holds are also returned.
        <br/><br/>See the description for the <b>filter</b> query parameter for more
        information on the available filters.<br/><br/><span class="tablenote"><strong>Note:</strong>
        Unless the <b>transactionType</b> filter is used to retrieve a specific type
        of monetary transaction (such as sale, buyer refund, seller credit, payment
        dispute, shipping label, transfer, etc.), the <b>creditCount</b> and <b>creditAmount</b>
        response fields account for both order sales and seller credits (the count
        and value is not distinguished between the two monetary transaction types).</span>
      operationId: getTransactionSummary
      parameters:
      - description: 'Numerous filters are available for the <strong>getTransactionSummary</strong>
          method, and these filters are discussed below. One or more of these filter
          types can be used. The <b>transactionStatus</b> filter must be used. All
          other filters are optional. <ul><li><b>transactionStatus</b>: the data returned
          in the response pertains to the sales, payouts, and transfer status set.
          The supported <b>transactionStatus</b> values are as follows:<ul><li><code>PAYOUT</code>:
          only consider monetary transactions where the proceeds from the sales order(s)
          have been paid out to the seller''s bank account.</li><li><code>FUNDS_PROCESSING</code>:
          only consider monetary transactions where the proceeds from the sales order(s)
          are currently being processed.</li><li><code>FUNDS_AVAILABLE_FOR_PAYOUT</code>:
          only consider monetary transactions where the proceeds from the sales order(s)
          are available for a seller payout, but processing has not yet begun.</li><li><code>FUNDS_ON_HOLD</code>:
          only consider monetary transactions where the proceeds from the sales order(s)
          are currently being held by eBay, and are not yet available for a seller
          payout.</li><li><code>COMPLETED</code>: this indicates that the funds for
          the corresponding <code>TRANSFER</code> monetary transaction have transferred
          and the transaction has completed.</li><li><code>FAILED</code>: this indicates
          the process has failed for the corresponding <code>TRANSFER</code> monetary
          transaction. </li></ul>Below is the proper syntax to use when setting up
          the <b>transactionStatus</b> filter: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction_summary?filter=transactionStatus:&#123;PAYOUT&#125;</code></li><li><b>transactionDate</b>:
          only consider monetary transactions that occurred within a specific range
          of dates.<br /><br /><span class="tablenote"><strong>Note:</strong> All
          dates must be input using UTC format (<code>YYYY-MM-DDTHH:MM:SS.SSSZ</code>)
          and should be adjusted accordingly for the local timezone of the user.</span><br
          /><br />Below is the proper syntax to use if filtering by a date range:
          <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction_summary?filter=transactionDate:&#91;2018-10-23T00:00:01.000Z..2018-11-09T00:00:01.000Z&#93;</code><br/><br/>Alternatively,
          the user could omit the ending date, and the date range would include the
          starting date and up to 90 days past that date, or the current date if the
          starting date is less than 90 days in the past.</li>  <li><b>transactionType</b>:
          only consider a specific type of monetary transaction. The supported <b>transactionType</b>
          values are as follows:<ul><li><code>SALE</code>: a sales order.</li><li>
          <code>REFUND</code>: a refund to the buyer after an order cancellation or
          return.</li><li><code>CREDIT</code>: a credit issued by eBay to the seller''s
          account.</li><li><code>DISPUTE</code>: a monetary transaction associated
          with a payment dispute between buyer and seller.</li><li><code>NON_SALE_CHARGE</code>:
          a monetary transaction involving a seller transferring money to eBay for
          the balance of a charge for NON_SALE_CHARGE transactions (transactions that
          contain non-transactional seller fees). These can include a one-time payment,
          monthly/yearly subscription fees charged monthly, NRC charges, and fee credits.</li><li><code>SHIPPING_LABEL</code>:
          a monetary transaction where eBay is billing the seller for an eBay shipping
          label. Note that the shipping label functionality will initially only be
          available to a select number of sellers.</li><li><code>TRANSFER</code>:
          A transfer is a monetary transaction where eBay is billing the seller for
          reimbursement of a charge. An example of a transfer is a seller reimbursing
          eBay for a buyer refund.</li><li><code>ADJUSTMENT</code>: An adjustment
          is a monetary transaction where eBay is crediting or debiting the seller''s
          account.</li><li><code>WITHDRAWAL</code>: A withdrawal is a monetary transaction
          where the seller requests an on-demand payout from eBay.</li></ul>Below
          is the proper syntax to use if filtering by a monetary transaction type:
          <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction_summary?filter=transactionType:{SALE}</code></li><li><b>buyerUsername</b>:
          only consider monetary transactions involving a specific buyer (specified
          with the buyer''s eBay user ID). Below is the proper syntax to use if filtering
          by a specific eBay buyer: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction_summary?filter=buyerUsername:&#123;buyer1234&#125;</code>
          </li><li><b>salesRecordReference</b>: only consider monetary transactions
          corresponding to a specific order (identified with a Selling Manager order
          identifier). Below is the proper syntax to use if filtering by a specific
          Selling Manager Sales Record ID: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction_summary?filter=salesRecordReference:&#123;123&#125;</code><br/><br/><span
          class="tablenote"><strong>Note:</strong> For all orders originating after
          February 1, 2020, a value of <code>0</code> will be returned in the <b>salesRecordReference</b>
          field. So, this filter will only be useful to retrieve orders than occurred
          before this date.</span> </li><li><b>payoutId</b>: only consider monetary
          transactions related to a specific seller payout (identified with a Payout
          ID). This value is auto-generated by eBay once the seller payout is set
          to be processed. Below is the proper syntax to use if filtering by a specific
          Payout ID: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction_summary?filter=payoutId:&#123;5********8&#125;</code>  </li><li><b>transactionId</b>:
          the unique identifier of a monetary transaction. For a sales order, the
          <b>orderId</b> filter should be used instead. Only the monetary transaction(s)
          associated with this <b>transactionId</b> value are returned.<br /><br /><span
          class="tablenote"><strong>Note:</strong> This filter cannot be used alone;
          the <b>transactionType</b> must also be specified when filtering by transaction
          ID.</span><br /><br />Below is the proper syntax to use if filtering by
          a specific transaction ID: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction_summary?filter=transactionId:{0*-0***0-3***3}&filter=transactionType:{SALE}</code>
          </li><li><b>orderId</b>: the unique identifier of a sales order. For any
          other monetary transaction, the <b>transactionId</b> filter should be used
          instead. Only the monetary transaction(s) associated with this <b>orderId</b>
          value are returned. Below is the proper syntax to use if filtering by a
          specific order ID: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/transaction_summary?filter=orderId:{0*-0***0-3***3}</code>
          </li></ul> For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/sell/finances/types/cos:FilterField'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSummaryResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /transaction_summary
      tags:
      - Finances API/transaction
      x-apifox-folder: Finances API/transaction
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497546-run
      x-accepts: application/json
  /payout_summary:
    get:
      deprecated: false
      description: This method is used to retrieve cumulative values for payouts in
        a particular state, or all states. The metadata in the response includes total
        payouts, the total number of monetary transactions (sales, refunds, credits)
        associated with those payouts, and the total dollar value of all payouts.<br/><br/>If
        the <b>filter</b> query parameter is used to filter by payout status, only
        one payout status value may be used. If the <b>filter</b> query parameter
        is not used to filter by a specific payout status, cumulative values for payouts
        in all states are returned.<br/><br/>The user can also use the <b>filter</b>
        query parameter to specify a date range, and then only payouts that were processed
        within that date range are considered.
      operationId: getPayoutSummary
      parameters:
      - description: 'The two filter types that can be used here are discussed below.
          One or both of these filter types can be used. If none of these filters
          are used, the data returned in the response will reflect payouts, in all
          states, processed within the last 90 days. <ul><li><b>payoutDate</b>: consider
          payouts processed within a specific range of dates. The date format to use
          is <code>YYYY-MM-DDTHH:MM:SS.SSSZ</code>. Below is the proper syntax to
          use if filtering by a date range: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/payout_summary?filter=payoutDate:[2018-12-17T00:00:01.000Z..2018-12-24T00:00:01.000Z]</code><br/><br/>Alternatively,
          the user could omit the ending date, and the date range would include the
          starting date and up to 90 days past that date, or the current date if the
          starting date is less than 90 days in the past.</li> <li><b>payoutStatus</b>:
          consider only the payouts in a particular state. Only one payout state can
          be specified with this filter. The supported <b>payoutStatus</b> values
          are as follows:<ul><li><code>INITIATED</code>: search for payouts that have
          been initiated but not processed.</li><li><code>SUCCEEDED</code>: consider
          only successful payouts.</li><li><code>RETRYABLE_FAILED</code>: consider
          only payouts that failed, but ones which will be tried again.</li><li><code>TERMINAL_FAILED</code>:
          consider only payouts that failed, and ones that will not be tried again.</li><li>
          <code>REVERSED</code>: consider only payouts that were reversed. </li></ul>Below
          is the proper syntax to use if filtering by payout status: <br/><br/><code>https://apiz.ebay.com/sell/finances/v1/payout_summary?filter=payoutStatus:{SUCCEEDED}</code></ul><br/>If
          both the <b>payoutDate</b> and <b>payoutStatus</b> filters are used, only
          the payouts that satisfy both criteria are considered in the results. For
          implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/sell/finances/types/cos:FilterField'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutSummaryResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /payout_summary
      tags:
      - Finances API/payout
      x-apifox-folder: Finances API/payout
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497547-run
      x-accepts: application/json
  /seller_funds_summary:
    get:
      deprecated: false
      description: This method retrieves all pending funds that have not yet been
        distibuted through a seller payout.<br><br>There are no input parameters for
        this method. The response payload includes available funds, funds being processed,
        funds on hold, and also an aggregate count of all three of these categories.<br><br>If
        there are no funds that are pending, on hold, or being processed for the seller's
        account, no response payload is returned, and an http status code of <code>204
        - No Content</code> is returned instead.
      operationId: getSellerFundsSummary
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerFundsSummaryResponse'
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /seller_funds_summary
      tags:
      - Finances API/seller_funds_summary
      x-apifox-folder: Finances API/seller_funds_summary
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497548-run
      x-accepts: application/json
  /order/{orderId}/shipping_fulfillment:
    get:
      deprecated: false
      description: Use this call to retrieve the contents of all fulfillments currently
        defined for a specified order based on the order's unique identifier, <b>orderId</b>.
        This value is returned in the <b>getOrders</b> call's <b>members.orderId</b>
        field when you search for orders by creation date or shipment status.
      operationId: getShippingFulfillments
      parameters:
      - description: The unique identifier of the order. Order ID values are shown
          in My eBay/Seller Hub, and are also returned by the <b>getOrders</b> method
          in the <b>orders.orderId</b> field. <br/><br/><span class="tablenote"><strong>Note:</strong>
          A new order ID format was introduced to all eBay APIs (legacy and REST)
          in June 2019. In REST APIs that return Order IDs, including the Fulfillment
          API, all order IDs are returned in the new format, but the <strong>getShippingFulfillments</strong>
          method will accept both the legacy and new format order ID. The new format
          is a non-parsable string, globally unique across all eBay marketplaces,
          and consistent for both single line item and multiple line item orders.
          These order identifiers will be automatically generated after buyer payment,
          and unlike in the past, instead of just being known and exposed to the seller,
          these unique order identifiers will also be known and used/referenced by
          the buyer and eBay customer support. </span>
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingFulfillmentPagedCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /order/{orderId}/shipping_fulfillment
      tags:
      - Fulfillment API/shipping_fulfillment
      x-apifox-folder: Fulfillment API/shipping_fulfillment
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497631-run
      x-accepts: application/json
    post:
      deprecated: false
      description: When you group an order's line items into one or more packages,
        each package requires a corresponding plan for handling, addressing, and shipping;
        this is a <i>shipping fulfillment</i>. For each package, execute this call
        once to generate a shipping fulfillment associated with that package. <br
        /><br /> <span class="tablenote"><strong>Note:</strong> A single line item
        in an order can consist of multiple units of a purchased item, and one unit
        can consist of multiple parts or components. Although these components might
        be provided by the manufacturer in separate packaging, the seller must include
        all components of a given line item in the same package.</span> <br /><br
        />Before using this call for a given package, you must determine which line
        items are in the package. If the package has been shipped, you should provide
        the date of shipment in the request. If not provided, it will default to the
        current date and time.
      operationId: createShippingFulfillment
      parameters:
      - description: The unique identifier of the order. Order ID values are shown
          in My eBay/Seller Hub, and are also returned by the <b>getOrders</b> method
          in the <b>orders.orderId</b> field. <br/><br/><span class="tablenote"><strong>Note:</strong>
          A new order ID format was introduced to all eBay APIs (legacy and REST)
          in June 2019. In REST APIs that return Order IDs, including the Fulfillment
          API, all order IDs are returned in the new format, but the <strong>createShippingFulfillment</strong>
          method will accept both the legacy and new format order ID. The new format
          is a non-parsable string, globally unique across all eBay marketplaces,
          and consistent for both single line item and multiple line item orders.
          These order identifiers will be automatically generated after buyer payment,
          and unlike in the past, instead of just being known and exposed to the seller,
          these unique order identifiers will also be known and used/referenced by
          the buyer and eBay customer support. </span>
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingFulfillmentDetails'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: 'Created. The call also returns the following location code:
            <br /><br /><code>{ENV}/sell/fulfillment/v1/order/{ORDERID}/shipping_fulfillment/{FULFILLMENTID}</code>
            <br /><br />The <code>ENV</code> string is the HTTPS path to the same
            eBay supported enviro'
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /order/{orderId}/shipping_fulfillment
      tags:
      - Fulfillment API/shipping_fulfillment
      x-apifox-folder: Fulfillment API/shipping_fulfillment
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497634-run
      x-contentType: application/json
      x-accepts: application/json
  /order:
    get:
      deprecated: false
      description: 'Use this call to search for and retrieve one or more orders based
        on their creation date, last modification date, or fulfillment status using
        the <b>filter</b> parameter. You can alternatively specify a list of orders
        using the <b>orderIds</b> parameter. Include the optional <b>fieldGroups</b>
        query parameter set to <code>TAX_BREAKDOWN</code> to return a breakdown of
        the taxes and fees. <br /><br /> The returned <b>Order</b> objects contain
        information you can use to create and process fulfillments, including: <ul>
        <li>Information about the buyer and seller</li> <li>Information about the
        order''s line items</li> <li>The plans for packaging, addressing and shipping
        the order</li> <li>The status of payment, packaging, addressing, and shipping
        the order</li> <li>A summary of monetary amounts specific to the order such
        as pricing, payments, and shipping costs</li> <li>A summary of applied taxes
        and fees, and optionally a breakdown of each </li></ul> <br /><br /> <span
        class="tablenote"><strong>Important:</strong> In this call, the <b>cancelStatus.cancelRequests</b>
        array is returned but is always empty. Use the <b>getOrder</b> call instead,
        which returns this array fully populated with information about any cancellation
        requests.</span>'
      operationId: getOrders
      parameters:
      - description: The response type associated with the order. The only presently
          supported value is <code>TAX_BREAKDOWN</code>. This type returns a breakdown
          of tax and fee values associated with the order.
        explode: true
        in: query
        name: fieldGroups
        required: false
        schema:
          type: string
        style: form
      - description: 'One or more comma-separated criteria for narrowing down the
          collection of orders returned by this call. These criteria correspond to
          specific fields in the response payload. Multiple filter criteria combine
          to further restrict the results. <br /><br /> <span class="tablenote"><strong>Note:</strong>
          Currently, <b>filter</b> returns data from only the last 90 days. If the
          <b>orderIds</b> parameter is included in the request, the <b>filter</b>
          parameter will be ignored.</span> <br /><br /> The available criteria are
          as follows: <dl> <dt><code><b>creationdate</b></code></dt> <dd>The time
          period during which qualifying orders were created (the <b>orders.creationDate</b>
          field). In the URI, this is expressed as a starting timestamp, with or without
          an ending timestamp (in brackets). The timestamps are in ISO 8601 format,
          which uses the 24-hour Universal Coordinated Time (UTC) clock.For example:
          <ul> <li><code>creationdate:[2016-02-21T08:25:43.511Z..]</code> identifies
          orders created on or after the given timestamp.</li> <li><code>creationdate:[2016-02-21T08:25:43.511Z..2016-04-21T08:25:43.511Z]</code>
          identifies orders created between the given timestamps, inclusive.</li>
          </ul> </dd> <dt><code><b>lastmodifieddate</b></code></dt> <dd>The time period
          during which qualifying orders were last modified (the <b>orders.modifiedDate</b>
          field).  In the URI, this is expressed as a starting timestamp, with or
          without an ending timestamp (in brackets). The timestamps are in ISO 8601
          format, which uses the 24-hour Universal Coordinated Time (UTC) clock.For
          example: <ul> <li><code>lastmodifieddate:[2016-05-15T08:25:43.511Z..]</code>
          identifies orders modified on or after the given timestamp.</li> <li><code>lastmodifieddate:[2016-05-15T08:25:43.511Z..2016-05-31T08:25:43.511Z]</code>
          identifies orders modified between the given timestamps, inclusive.</li>
          </ul> <span class="tablenote"><strong>Note:</strong> If <b>creationdate</b>
          and <b>lastmodifieddate</b> are both included, only <b>creationdate</b>
          is used.</span> <br /><br /></dd> <dt><code><b>orderfulfillmentstatus</b></code></dt>
          <dd>The degree to which qualifying orders have been shipped (the <b>orders.orderFulfillmentStatus</b>
          field). In the URI, this is expressed as one of the following value combinations:
          <ul> <li><code>orderfulfillmentstatus:{NOT_STARTED|IN_PROGRESS}</code> specifies
          orders for which no shipping fulfillments have been started, plus orders
          for which at least one shipping fulfillment has been started but not completed.</li>
          <li><code>orderfulfillmentstatus:{FULFILLED|IN_PROGRESS}</code> specifies
          orders for which all shipping fulfillments have been completed, plus orders
          for which at least one shipping fulfillment has been started but not completed.</li>
          </ul> <span class="tablenote"><strong>Note:</strong> The values <code>NOT_STARTED</code>,
          <code>IN_PROGRESS</code>, and <code>FULFILLED</code> can be used in various
          combinations, but only the combinations shown here are currently supported.</span>
          </dd> </dl> Here is an example of a <b>getOrders</b> call using all of these
          filters: <br /><br /> <code>GET https://api.ebay.com/sell/v1/order?<br />filter=<b>creationdate</b>:%5B2016-03-21T08:25:43.511Z..2016-04-21T08:25:43.511Z%5D,<br
          /><b>lastmodifieddate</b>:%5B2016-05-15T08:25:43.511Z..%5D,<br /><b>orderfulfillmentstatus</b>:%7BNOT_STARTED%7CIN_PROGRESS%7D</code>
          <br /><br /> <span class="tablenote"><strong>Note:</strong> This call requires
          that certain special characters in the URI query string be percent-encoded:
          <br /> &nbsp;&nbsp;&nbsp;&nbsp;<code>[</code> = <code>%5B</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>]</code>
          = <code>%5D</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>{</code> =
          <code>%7B</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>|</code> = <code>%7C</code>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>}</code> = <code>%7D</code> <br
          /> This query filter example uses these codes.</span> For implementation
          help, refer to eBay API documentation at https://developer.ebay.com/api-docs/sell/fulfillment/types/api:FilterField'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The number of orders to return per page of the result set. Use
          this parameter in conjunction with the <b>offset</b> parameter to control
          the pagination of the output. <br /><br />For example, if <b>offset</b>
          is set to <code>10</code> and <b>limit</b> is set to <code>10</code>, the
          call retrieves orders 11 thru 20 from the result set. <br /><br /> If a
          limit is not set, the <b>limit</b> defaults to 50 and returns up to 50 orders.
          If a requested limit is more than 200, the call fails and returns an error.<br
          ><br> <span class="tablenote"><strong>Note:</strong> This feature employs
          a zero-based list, where the first item in the list has an offset of <code>0</code>.
          If the <b>orderIds</b> parameter is included in the request, this parameter
          will be ignored.</span> <br /><br /> <b>Maximum:</b> <code>200</code> <br
          /> <b>Default:</b> <code>50</code>
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of orders to skip in the result set before
          returning the first order in the paginated response.  <p>Combine <b>offset</b>
          with the <b>limit</b> query parameter to control the items returned in the
          response. For example, if you supply an <b>offset</b> of <code>0</code>
          and a <b>limit</b> of <code>10</code>, the first page of the response contains
          the first 10 items from the complete list of items retrieved by the call.
          If <b>offset</b> is <code>10</code> and <b>limit</b> is <code>20</code>,
          the first page of the response contains items 11-30 from the complete result
          set.</p> <p><b>Default:</b> 0</p>
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: A comma-separated list of the unique identifiers of the orders
          to retrieve (maximum 50). If one or more order ID values are specified through
          the <b>orderIds</b> query parameter, all other query parameters will be
          ignored. <br/><br/><span class="tablenote"><strong>Note:</strong> A new
          order ID format was introduced to all eBay APIs (legacy and REST) in June
          2019. In REST APIs that return Order IDs, including the Fulfillment API,
          all order IDs are returned in the new format, but the <strong>getOrders</strong>
          method will accept both the legacy and new format order ID. The new format
          is a non-parsable string, globally unique across all eBay marketplaces,
          and consistent for both single line item and multiple line item orders.
          These order identifiers will be automatically generated after buyer payment,
          and unlike in the past, instead of just being known and exposed to the seller,
          these unique order identifiers will also be known and used/referenced by
          the buyer and eBay customer support. </span>
        explode: true
        in: query
        name: orderIds
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSearchPagedCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /order
      tags:
      - Fulfillment API/order
      x-apifox-folder: Fulfillment API/order
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497632-run
      x-accepts: application/json
  /payment_dispute_summary:
    get:
      deprecated: false
      description: This method is used retrieve one or more payment disputes filed
        against the seller. These payment disputes can be open or recently closed.
        The following filter types are available in the request payload to control
        the payment disputes that are returned:<ul><li>Dispute filed against a specific
        order (<b>order_id</b> parameter is used)</li><li>Dispute(s) filed by a specific
        buyer (<b>buyer_username</b> parameter is used)</li><li>Dispute(s) filed within
        a specific date range (<b>open_date_from</b> and/or <b>open_date_to</b> parameters
        are used)</li><li>Disputes in a specific state (<b>payment_dispute_status</b>
        parameter is used)</li></ul>More than one of these filter types can be used
        together. See the request payload request fields for more information about
        how each filter is used.<br/><br/>If none of the filters are used, all open
        and recently closed payment disputes are returned.<br/><br/>Pagination is
        also available. See the <b>limit</b> and <b>offset</b> fields for more information
        on how pagination is used for this method.
      operationId: getPaymentDisputeSummaries
      parameters:
      - description: This filter is used if the seller wishes to retrieve one or more
          payment disputes filed against a specific order. It is possible that there
          can be more than one dispute filed against an order if the order has multiple
          line items. If this filter is used, any other filters are ignored.<br/><br/><span
          class="tablenote"><strong>Note:</strong> The order identifier passed into
          this field must be an Order ID in the new format. The legacy APIs still
          support the old and new order ID format to identify orders, but only the
          new order ID format is supported in REST-based APIs. eBay rolled out a new
          Order ID format in June 2019.</span>
        explode: true
        in: query
        name: order_id
        required: false
        schema:
          type: string
        style: form
      - description: This filter is used if the seller wishes to retrieve one or more
          payment disputes opened by a specific seller. The string that is passed
          in to this query parameter is the eBay user ID of the buyer.
        explode: true
        in: query
        name: buyer_username
        required: false
        schema:
          type: string
        style: form
      - description: 'The <b>open_date_from</b> and/or <b>open_date_to</b> date filters
          are used if the seller wishes to retrieve payment disputes opened within
          a specific date range. A maximum date range that may be set with the <b>open_date_from</b>
          and/or <b>open_date_to</b> filters is 90 days. These date filters use the
          ISO-8601 24-hour date and time format, and time zone used is Universal Coordinated
          Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu.<br><br>The
          <b>open_date_from</b> field sets the beginning date of the date range, and
          can be set as far back as 18 months from the present time. If a <b>open_date_from</b>
          field is used, but a <b>open_date_to</b> field is not used, the <b>open_date_to</b>
          value will default to 90 days after the date specified in the <b>open_date_from</b>
          field, or to the present time if less than 90 days in the past.<br/><br/>The
          ISO-8601 format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>. An example
          would be <code>2019-08-04T19:09:02.768Z</code>.'
        explode: true
        in: query
        name: open_date_from
        required: false
        schema:
          type: string
        style: form
      - description: 'The <b>open_date_from</b> and/or <b>open_date_to</b> date filters
          are used if the seller wishes to retrieve payment disputes opened within
          a specific date range. A maximum date range that may be set with the <b>open_date_from</b>
          and/or <b>open_date_to</b> filters is 90 days. These date filters use the
          ISO-8601 24-hour date and time format, and the time zone used is Universal
          Coordinated Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu.<br><br>The
          <b>open_date_to</b> field sets the ending date of the date range, and can
          be set up to 90 days from the date set in the <b>open_date_from</b> field.
          <br/><br/>The ISO-8601 format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>.
          An example would be <code>2019-08-04T19:09:02.768Z</code>.'
        explode: true
        in: query
        name: open_date_to
        required: false
        schema:
          type: string
        style: form
      - description: This filter is used if the seller wishes to only retrieve payment
          disputes in a specific state. More than one value can be specified. If no
          <b>payment_dispute_status</b> filter is used, payment disputes in all states
          are returned in the response. See <strong>DisputeStateEnum</strong> type
          for supported values.
        explode: true
        in: query
        name: payment_dispute_status
        required: false
        schema:
          type: string
        style: form
      - description: 'The value passed in this query parameter sets the maximum number
          of payment disputes to return per page of data. The value passed in this
          field should be an integer from 1 to 200. If this query parameter is not
          set, up to 200 records will be returned on each page of results.<br><br><b>Min</b>:
          1; <b>Max</b>: 200; <b>Default</b>: 200'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: 'This field is used to specify the number of records to skip
          in the result set before returning the first payment dispute in the paginated
          response. A zero-based index is used, so if you set the <b>offset</b> value
          to <code>0</code> (default value), the first payment dispute in the result
          set appears at the top of the response. <br/><br/>Combine <b>offset</b>
          with the <b>limit</b> parameter to control the payment disputes returned
          in the response. For example, if you supply an <b>offset</b> value of <code>0</code>
          and a <b>limit</b> value of <code>10</code>, the response will contain the
          first 10 payment disputes from the result set that matches the input criteria.
          If you supply an <b>offset</b> value of <code>10</code> and a <b>limit</b>
          value of <code>20</code>, the response will contain payment disputes 11-30
          from the result set that matches the input criteria.<br><br><b>Min</b>:
          0; <b>Max</b>: total number of payment disputes - 1; <b>Default</b>: 0'
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisputeSummaryResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: Search Payment Dispute by Filters
      tags:
      - Fulfillment API/payment_dispute
      x-apifox-folder: Fulfillment API/payment_dispute
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497633-run
      x-accepts: application/json
  /payment_dispute/{payment_dispute_id}/activity:
    get:
      deprecated: false
      description: This method retrieve a log of activity for a payment dispute. The
        identifier of the payment dispute is passed in as a path parameter. The output
        includes a timestamp for each action of the payment dispute, from creation
        to resolution, and all steps in between.
      operationId: getActivities
      parameters:
      - description: This is the unique identifier of the payment dispute. This path
          parameter must be passed in at the end of the call URI to identify the payment
          dispute for which the user wishes to see all activity. This identifier is
          automatically created by eBay once the payment dispute comes into the eBay
          system. The unique identifier for payment disputes is returned in the <strong>paymentDisputeId</strong>
          field in the <strong>getPaymentDisputeSummaries</strong> response.<br><br>This
          path parameter is required, and the actual identifier value is passed in
          right after the <strong>payment_dispute</strong> resource. See the Resource
          URI above.
        explode: false
        in: path
        name: payment_dispute_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDisputeActivityHistory'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Invalid Payment Dispute Id
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: Get Payment Dispute Activity
      tags:
      - Fulfillment API/payment_dispute
      x-apifox-folder: Fulfillment API/payment_dispute
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497635-run
      x-accepts: application/json
  /order/{orderId}:
    get:
      deprecated: false
      description: 'Use this call to retrieve the contents of an order based on its
        unique identifier, <i>orderId</i>. This value was returned in the <b> getOrders</b>
        call''s <b>orders.orderId</b> field when you searched for orders by creation
        date, modification date, or fulfillment status. Include the optional <b>fieldGroups</b>
        query parameter set to <code>TAX_BREAKDOWN</code> to return a breakdown of
        the taxes and fees. <br /><br /> The returned <b>Order</b> object contains
        information you can use to create and process fulfillments, including: <ul>
        <li>Information about the buyer and seller</li> <li>Information about the
        order''s line items</li> <li> The plans for packaging, addressing and shipping
        the order</li> <li>The status of payment, packaging, addressing, and shipping
        the order</li> <li>A summary of monetary amounts specific to the order such
        as pricing, payments, and shipping costs</li> <li>A summary of applied taxes
        and fees, and optionally a breakdown of each </li></ul>'
      operationId: getOrder
      parameters:
      - description: The unique identifier of the order. Order ID values are shown
          in My eBay/Seller Hub, and are also returned by the <b>getOrders</b> method
          in the <b>orders.orderId</b> field. <br/><br/><span class="tablenote"><strong>Note:</strong>
          A new order ID format was introduced to all eBay APIs (legacy and REST)
          in June 2019. In REST APIs that return Order IDs, including the Fulfillment
          API, all order IDs are returned in the new format, but the <strong>getOrder</strong>
          method will accept both the legacy and new format order ID. The new format
          is a non-parsable string, globally unique across all eBay marketplaces,
          and consistent for both single line item and multiple line item orders.
          These order identifiers will be automatically generated after buyer payment,
          and unlike in the past, instead of just being known and exposed to the seller,
          these unique order identifiers will also be known and used/referenced by
          the buyer and eBay customer support. </span>
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      - description: The response type associated with the order. The only presently
          supported value is <code>TAX_BREAKDOWN</code>. This type returns a breakdown
          of tax and fee values associated with the order.
        explode: true
        in: query
        name: fieldGroups
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /order/{orderId}
      tags:
      - Fulfillment API/order
      x-apifox-folder: Fulfillment API/order
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497636-run
      x-accepts: application/json
  /order/{orderId}/shipping_fulfillment/{fulfillmentId}:
    get:
      deprecated: false
      description: Use this call to retrieve the contents of a fulfillment based on
        its unique identifier, <b>fulfillmentId</b> (combined with the associated
        order's <b>orderId</b>). The <b>fulfillmentId</b> value was originally generated
        by the <b>createShippingFulfillment</b> call, and is returned by the <b>getShippingFulfillments</b>
        call in the <b>members.fulfillmentId</b> field.
      operationId: getShippingFulfillment
      parameters:
      - description: The unique identifier of the fulfillment. This eBay-generated
          value was created by the <b>Create Shipping Fulfillment</b> call, and returned
          by the <b>getShippingFulfillments</b> call in the <b>fulfillments.fulfillmentId</b>
          field; for example, <code>9405509699937003457459</code>.
        explode: false
        in: path
        name: fulfillmentId
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier of the order. Order ID values are shown
          in My eBay/Seller Hub, and are also returned by the <b>getOrders</b> method
          in the <b>orders.orderId</b> field. <br/><br/><span class="tablenote"><strong>Note:</strong>
          A new order ID format was introduced to all eBay APIs (legacy and REST)
          in June 2019. In REST APIs that return Order IDs, including the Fulfillment
          API, all order IDs are returned in the new format, but the <strong>getShippingFulfillment</strong>
          method will accept both the legacy and new format order ID. The new format
          is a non-parsable string, globally unique across all eBay marketplaces,
          and consistent for both single line item and multiple line item orders.
          These order identifiers will be automatically generated after buyer payment,
          and unlike in the past, instead of just being known and exposed to the seller,
          these unique order identifiers will also be known and used/referenced by
          the buyer and eBay customer support. </span>
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingFulfillment'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /order/{orderId}/shipping_fulfillment/{fulfillmentId}
      tags:
      - Fulfillment API/shipping_fulfillment
      x-apifox-folder: Fulfillment API/shipping_fulfillment
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497637-run
      x-accepts: application/json
  /payment_dispute/{payment_dispute_id}:
    get:
      deprecated: false
      description: This method retrieves detailed information on a specific payment
        dispute. The payment dispute identifier is passed in as path parameter at
        the end of the call URI.<br/><br/>Below is a summary of the information that
        is retrieved:<ul><li>Current status of payment dispute</li><li>Amount of the
        payment dispute</li><li>Reason the payment dispute was opened</li><li>Order
        and line items associated with the payment dispute</li><li>Seller response
        options if an action is currently required on the payment dispute</li><li>Details
        on the results of the payment dispute if it has been closed</li><li>Details
        on any evidence that was provided by the seller to fight the payment dispute</li></ul>
      operationId: getPaymentDispute
      parameters:
      - description: This is the unique identifier of the payment dispute. This path
          parameter must be passed in at the end of the call URI to identify the payment
          dispute to retrieve. This identifier is automatically created by eBay once
          the payment dispute comes into the eBay system. The unique identifier for
          payment disputes is returned in the <strong>paymentDisputeId</strong> field
          in the <strong>getPaymentDisputeSummaries</strong> response.
        explode: false
        in: path
        name: payment_dispute_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDispute'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Invalid Payment Dispute Id
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: Get Payment Dispute Details
      tags:
      - Fulfillment API/payment_dispute
      x-apifox-folder: Fulfillment API/payment_dispute
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497638-run
      x-accepts: application/json
  /payment_dispute/{payment_dispute_id}/upload_evidence_file:
    post:
      deprecated: false
      description: This method is used to upload an evidence file for a contested
        payment dispute. The unique identifier of the payment dispute is passed in
        as a path parameter, and unique identifiers for payment disputes can be retrieved
        with the <strong>getPaymentDisputeSummaries</strong> method.<br><br><span
        class="tablenote"><strong>Note:</strong> The <strong>uploadEvidenceFile</strong>
        only uploads an encrypted, binary image file (using <strong>multipart/form-data</strong>
        HTTP request header), and does not have a JSON-based request payload.<br><br>Use
        'file' as the name of the key that you use to upload the image file. The upload
        will not be successful if a different key name is used.<br><br>The three image
        formats supported at this time are <strong>.JPEG</strong>, <strong>.JPG</strong>,
        and <strong>.PNG</strong>.</span><br><br>After the file is successfully uploaded,
        the seller will need to grab the <strong>fileId</strong> value in the response
        payload to add this file to a new evidence set using the <strong>addEvidence</strong>
        method, or to add this file to an existing evidence set using the <strong>updateEvidence</strong>
        method.
      operationId: uploadEvidenceFile
      parameters:
      - description: This is the unique identifier of the payment dispute. This path
          parameter must be passed into the call URI to identify the payment dispute
          for which the user plans to upload an evidence file. This identifier is
          automatically created by eBay after the payment dispute comes into the eBay
          system. The unique identifier for payment disputes is returned in the <strong>paymentDisputeId</strong>
          field in the <strong>getPaymentDisputeSummaries</strong> response.<br><br>This
          path parameter is required, and the actual identifier value is passed in
          right after the <strong>payment_dispute</strong> resource. See the Resource
          URI above.
        explode: false
        in: path
        name: payment_dispute_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileEvidence'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: Upload an Evidence File
      tags:
      - Fulfillment API/payment_dispute
      x-apifox-folder: Fulfillment API/payment_dispute
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497639-run
      x-accepts: application/json
  /order/{order_id}/issue_refund:
    post:
      deprecated: false
      description: This method allows a seller to issue a full or partial refund to
        a buyer for an order. Full or partial refunds can be issued at the order level
        or line item level.<br/><br/>The refunds issued through this method are processed
        asynchronously, so the refund will not show as 'Refunded' right away. A seller
        will have to make a subsequent <a href="https://developer.ebay.com/api-docs/sell/fulfillment/resources/order/methods/getOrder"
        target="_blank">getOrder</a> call to check the status of the refund.  The
        status of an order refund can be found in the <a href="https://developer.ebay.com/api-docs/sell/fulfillment/resources/order/methods/getOrder#response.paymentSummary.refunds.refundStatus"
        target="_blank">paymentSummary.refunds.refundStatus</a> field of the <a href="https://developer.ebay.com/api-docs/sell/fulfillment/resources/order/methods/getOrder"
        target="_blank">getOrder</a> response.
      operationId: issueRefund
      parameters:
      - description: The unique identifier of the order. Order IDs are returned in
          the <b>getOrders</b> method (and <b>GetOrders</b> call of Trading API).
          The <b>issueRefund</b> method supports the legacy API Order IDs and REST
          API order IDs.<br/><br/><span class="tablenote"><strong>Note:</strong> In
          the Trading API (and other legacy APIs), Order IDs are transitioning to
          a new format. The new format is a non-parsable string, globally unique across
          all eBay marketplaces, and consistent for both single line item and multiple
          line item orders. These order identifiers will be automatically generated
          after buyer payment, and unlike in the past, instead of just being known
          and exposed to the seller, these unique order identifiers will also be known
          and used/referenced by the buyer and eBay customer support.<br/><br/>For
          developers and sellers who are already integrated with the Trading API's
          order management calls, this change shouldn't impact your integration unless
          you parse the existing order identifiers (e.g., <b>OrderID</b> or <b>OrderLineItemID</b>),
          or otherwise infer meaning from the format (e.g., differentiating between
          a single line item order versus a multiple line item order). Because we
          realize that some integrations may have logic that is dependent upon the
          identifier format, eBay is rolling out the Trading API change with version
          control to support a transition period of approximately 9 months before
          applications must switch to the new format completely. See the <a href="https://developer.ebay.com/devzone/XML/docs/Reference/eBay/GetOrders.html#Request.OrderIDArray.OrderID"
          target="_blank">OrderID field description</a> in the <b>GetOrders</b> call
          for more details and requirements on transitioning to the new Order ID format.</span>
        explode: false
        in: path
        name: order_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueRefundRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
          description: OK
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Access Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Resource Not found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: Issue Refund
      tags:
      - Fulfillment API/order
      x-apifox-folder: Fulfillment API/order
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497640-run
      x-contentType: application/json
      x-accepts: application/json
  /payment_dispute/{payment_dispute_id}/add_evidence:
    post:
      deprecated: false
      description: This method is used by the seller to add one or more evidence files
        to address a payment dispute initiated by the buyer. The unique identifier
        of the payment dispute is passed in as a path parameter, and unique identifiers
        for payment disputes can be retrieved with the <strong>getPaymentDisputeSummaries</strong>
        method.<br/><br/><span class="tablenote"><strong>Note:</strong> All evidence
        files should be uploaded using <strong>addEvidence</strong> and <strong>updateEvidence</strong>  before
        the seller decides to contest the payment dispute. Once the seller has officially
        contested the dispute (using <strong>contestPaymentDispute</strong> or through
        My eBay), the <strong>addEvidence</strong> and <strong>updateEvidence</strong>
        methods can no longer be used. In the <strong>evidenceRequests</strong> array
        of the <strong>getPaymentDispute</strong> response, eBay prompts the seller
        with the type of evidence file(s) that will be needed to contest the payment
        dispute.</span><br><br>The file(s) to add are identified through the <strong>files</strong>
        array in the request payload.  Adding one or more new evidence files for a
        payment dispute triggers the creation of an evidence file, and the unique
        identifier for the new evidence file is automatically generated and returned
        in the <strong>evidenceId</strong> field of the <strong>addEvidence</strong>
        response payload upon a successful call.<br><br>The type of evidence being
        added should be specified in the <strong>evidenceType</strong> field. All
        files being added (if more than one) should correspond to this evidence type.<br><br>Upon
        a successful call, an <strong>evidenceId</strong> value is returned in the
        response. This indicates that a new evidence set has been created for the
        payment dispute, and this evidence set includes the evidence file(s) that
        were passed in to the <strong>fileId</strong> array. The <strong>evidenceId</strong>
        value will be needed if the seller wishes to add to the evidence set by using
        the <strong>updateEvidence</strong> method, or if they want to retrieve a
        specific evidence file within the evidence set by using the <strong>fetchEvidenceContent</strong>
        method.
      operationId: addEvidence
      parameters:
      - description: This is the unique identifier of the payment dispute. This path
          parameter must be passed into the call URI to identify the payment dispute
          for which the user plans to add evidence for a contested payment dispute.
          This identifier is automatically created by eBay once the payment dispute
          comes into the eBay system. The unique identifier for payment disputes is
          returned in the <strong>paymentDisputeId</strong> field in the <strong>getPaymentDisputeSummaries</strong>
          response.<br><br>This path parameter is required, and the actual identifier
          value is passed in right after the <strong>payment_dispute</strong> resource.
          See the Resource URI above.
        explode: false
        in: path
        name: payment_dispute_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEvidencePaymentDisputeRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEvidencePaymentDisputeResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: Add an Evidence File
      tags:
      - Fulfillment API/payment_dispute
      x-apifox-folder: Fulfillment API/payment_dispute
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497641-run
      x-contentType: application/json
      x-accepts: application/json
  /payment_dispute/{payment_dispute_id}/accept:
    post:
      deprecated: false
      description: This method is used if the seller wishes to accept a payment dispute.
        The unique identifier of the payment dispute is passed in as a path parameter,
        and unique identifiers for payment disputes can be retrieved with the <strong>getPaymentDisputeSummaries</strong>
        method.<br><br>The <strong>revision</strong> field in the request payload
        is required, and the <strong>returnAddress</strong> field should be supplied
        if the seller is expecting the buyer to return the item. See the Request Payload
        section for more information on theste fields.
      operationId: acceptPaymentDispute
      parameters:
      - description: This is the unique identifier of the payment dispute. This path
          parameter must be passed into the call URI to identify the payment dispute
          for which the user plans to accept. This identifier is automatically created
          by eBay once the payment dispute comes into the eBay system. The unique
          identifier for payment disputes is returned in the <strong>paymentDisputeId</strong>
          field in the <strong>getPaymentDisputeSummaries</strong> response.<br><br>This
          path parameter is required, and the actual identifier value is passed in
          right after the <strong>payment_dispute</strong> resource. See the Resource
          URI above.
        explode: false
        in: path
        name: payment_dispute_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptPaymentDisputeRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: Accept Payment Dispute
      tags:
      - Fulfillment API/payment_dispute
      x-apifox-folder: Fulfillment API/payment_dispute
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497642-run
      x-contentType: application/json
      x-accepts: application/json
  /payment_dispute/{payment_dispute_id}/contest:
    post:
      deprecated: false
      description: This method is used if the seller wishes to contest a payment dispute
        initiated by the buyer. The unique identifier of the payment dispute is passed
        in as a path parameter, and unique identifiers for payment disputes can be
        retrieved with the <strong>getPaymentDisputeSummaries</strong> method.<br/><br/><span
        class="tablenote"><strong>Note:</strong> Before contesting a payment dispute,
        the seller must upload all evidence files using the <strong>addEvidence</strong>
        and <strong>updateEvidence</strong> methods. Once the seller has officially
        contested the dispute (using <strong>contestPaymentDispute</strong>), the
        <strong>addEvidence</strong> and <strong>updateEvidence</strong> methods can
        no longer be used. In the <strong>evidenceRequests</strong> array of the <strong>getPaymentDispute</strong>
        response, eBay prompts the seller with the type of evidence file(s) that will
        be needed to contest the payment dispute.</span><br><br>If a seller decides
        to contest a payment dispute, that seller should be prepared to provide evidential
        documents such as proof of delivery, proof of authentication, or other documents.
        The type of evidential documents that the seller will provide will depend
        on why the buyer initiated the payment dispute.<br><br>The <strong>revision</strong>
        field in the request payload is required, and the <strong>returnAddress</strong>
        field should be supplied if the seller is expecting the buyer to return the
        item. See the Request Payload section for more information on theste fields.
      operationId: contestPaymentDispute
      parameters:
      - description: This is the unique identifier of the payment dispute. This path
          parameter must be passed into the call URI to identify the payment dispute
          for which the user plans to contest. This identifier is automatically created
          by eBay once the payment dispute comes into the eBay system. The unique
          identifier for payment disputes is returned in the <strong>paymentDisputeId</strong>
          field in the <strong>getPaymentDisputeSummaries</strong> response.<br><br>This
          path parameter is required, and the actual identifier value is passed in
          right after the <strong>payment_dispute</strong> resource. See the Resource
          URI above.
        explode: false
        in: path
        name: payment_dispute_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContestPaymentDisputeRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: Contest Payment Dispute
      tags:
      - Fulfillment API/payment_dispute
      x-apifox-folder: Fulfillment API/payment_dispute
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497643-run
      x-contentType: application/json
      x-accepts: application/json
  /payment_dispute/{payment_dispute_id}/update_evidence:
    post:
      deprecated: false
      description: This method is used by the seller to update an existing evidence
        set for a payment dispute with one or more evidence files. The unique identifier
        of the payment dispute is passed in as a path parameter, and unique identifiers
        for payment disputes can be retrieved with the <strong>getPaymentDisputeSummaries</strong>
        method.<br/><br/><span class="tablenote"><strong>Note:</strong> All evidence
        files should be uploaded using <strong>addEvidence</strong> and <strong>updateEvidence</strong>  before
        the seller decides to contest the payment dispute. Once the seller has officially
        contested the dispute (using <strong>contestPaymentDispute</strong> or through
        My eBay), the <strong>addEvidence</strong> and <strong>updateEvidence</strong>
        methods can no longer be used. In the <strong>evidenceRequests</strong> array
        of the <strong>getPaymentDispute</strong> response, eBay prompts the seller
        with the type of evidence file(s) that will be needed to contest the payment
        dispute.</span><br><br>The unique identifier of the evidence set to update
        is specified through the <strong>evidenceId</strong> field, and the file(s)
        to add are identified through the <strong>files</strong> array in the request
        payload. The unique identifier for an evidence file is automatically generated
        and returned in the <strong>fileId</strong> field of the <strong>uploadEvidence</strong>
        response payload upon a successful call. Sellers must make sure to capture
        the <strong>fileId</strong> value for each evidence file that is uploaded
        with the <strong>uploadEvidence</strong> method.<br><br>The type of evidence
        being added should be specified in the <strong>evidenceType</strong> field.  All
        files being added (if more than one) should correspond to this evidence type.<br><br>Upon
        a successful call, an http status code of <code>204 Success</code> is returned.
        There is no response payload unless an error occurs. To verify that a new
        file is a part of the evidence set, the seller can use the <strong>fetchEvidenceContent</strong>
        method, passing in the proper <strong>evidenceId</strong> and <strong>fileId</strong>
        values.
      operationId: updateEvidence
      parameters:
      - description: This is the unique identifier of the payment dispute. This path
          parameter must be passed into the call URI to identify the payment dispute
          for which the user plans to update the evidence set for a contested payment
          dispute. This identifier is automatically created by eBay once the payment
          dispute comes into the eBay system. The unique identifier for payment disputes
          is returned in the <strong>paymentDisputeId</strong> field in the <strong>getPaymentDisputeSummaries</strong>
          response.<br><br>This path parameter is required, and the actual identifier
          value is passed in right after the <strong>payment_dispute</strong> resource.
          See the Resource URI above.
        explode: false
        in: path
        name: payment_dispute_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEvidencePaymentDisputeRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: Update evidence
      tags:
      - Fulfillment API/payment_dispute
      x-apifox-folder: Fulfillment API/payment_dispute
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497644-run
      x-contentType: application/json
      x-accepts: application/json
  /payment_dispute/{payment_dispute_id}/fetch_evidence_content:
    get:
      deprecated: false
      description: 'This call retrieves a specific evidence file for a payment dispute.
        The following three identifying parameters are needed in the call URI:<ul><li><strong>payment_dispute_id</strong>:
        the identifier of the payment dispute. The identifier of each payment dispute
        is returned in the <strong>getPaymentDisputeSummaries</strong> response.</li><li><strong>evidence_id</strong>:
        the identifier of the evidential file set. The identifier of an evidential
        file set for a payment dispute is returned under the <strong>evidence</strong>
        array in the <strong>getPaymentDispute</strong> response.</li><li><strong>file_id</strong>:
        the identifier of an evidential file. This file must belong to the evidential
        file set identified through the <strong>evidence_id</strong> query parameter.
        The identifier of each evidential file is returned under the <strong>evidence.files</strong>
        array in the <strong>getPaymentDispute</strong> response.</li></ul><p>An actual
        binary file is returned if the call is successful. An error will occur if
        any of three identifiers are invalid.</p>'
      operationId: fetchEvidenceContent
      parameters:
      - description: The identifier of the payment dispute. The identifier of each
          payment dispute is returned in the <strong>getPaymentDisputeSummaries</strong>
          response. This identifier is passed in as a path parameter at the end of
          the call URI.
        explode: false
        in: path
        name: payment_dispute_id
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the evidential file set. The identifier of
          an evidential file set for a payment dispute is returned under the <strong>evidence</strong>
          array in the <strong>getPaymentDispute</strong> response.<br><br>Below is
          an example of the syntax to use for this query parameter:<br/><br/><code>evidence_id=12345678</code>
        explode: true
        in: query
        name: evidence_id
        required: true
        schema:
          type: string
        style: form
      - description: 'The identifier of an evidential file. This file must belong
          to the evidential file set identified through the <strong>evidence_id</strong>
          query parameter. The identifier of each evidential file is returned under
          the <strong>evidence.files</strong> array in the <strong>getPaymentDispute</strong>
          response. <br><br>Below is an example of the syntax to use for this query
          parameter:<br/><br/><code>file_id=12345678</code> '
        explode: true
        in: query
        name: file_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Invalid Payment Dispute Id
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: Get Payment Dispute Evidence File
      tags:
      - Fulfillment API/payment_dispute
      x-apifox-folder: Fulfillment API/payment_dispute
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497645-run
      x-accepts: application/json
  /offer:
    get:
      deprecated: false
      description: This call retrieves all existing offers for the specified SKU value.
        The seller has the option of limiting the offers that are retrieved to a specific
        eBay marketplace, or to a listing format.<br /><br /><span class="tablenote"><strong>Note:</strong>
        At this time, the same SKU value can not be offered across multiple eBay marketplaces,
        and the only supported listing format is fixed-price, so the <strong>marketplace_id</strong>
        and <strong>format</strong> query parameters currently do not have any practical
        use for this call.</span><br/><br/><p>The <code>authorization</code> header
        is the only required HTTP header for this call. See the <strong>HTTP request
        headers</strong> section for more information.</p>
      operationId: getOffers
      parameters:
      - description: This enumeration value sets the listing format for the offer.
          This query parameter will be passed in if the seller only wants to see offers
          in this specified listing format.
        explode: true
        in: query
        name: format
        required: false
        schema:
          type: string
        style: form
      - description: The value passed in this query parameter sets the maximum number
          of records to return per page of data. Although this field is a string,
          the value passed in this field should be a positive integer value. If this
          query parameter is not set, up to 100 records will be returned on each page
          of results.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier of the eBay marketplace. This query parameter
          will be passed in if the seller only wants to see the product's offers on
          a specific eBay marketplace.<br /><br /><span class="tablenote"><strong>Note:</strong>
          At this time, the same SKU value can not be offered across multiple eBay
          marketplaces, so the <strong>marketplace_id</strong> query parameter currently
          does not have any practical use for this call.</span>
        explode: true
        in: query
        name: marketplace_id
        required: false
        schema:
          type: string
        style: form
      - description: The value passed in this query parameter sets the page number
          to retrieve. Although this field is a string, the value passed in this field
          should be a integer value equal to or greater than <code>0</code>. The first
          page of records has a value of <code>0</code>, the second page of records
          has a value of <code>1</code>, and so on. If this query parameter is not
          set, its value defaults to <code>0</code>, and the first page of records
          is returned.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: 'The seller-defined SKU value is passed in as a query parameter.
          All offers associated with this product are returned in the response.<br/><br/>
          <strong>Max length</strong>: 50.'
        explode: true
        in: query
        name: sku
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offers'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /offer
      tags:
      - Inventory API/offer
      x-apifox-folder: Inventory API/offer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497689-run
      x-accepts: application/json
    post:
      deprecated: false
      description: 'This call creates an offer for a specific inventory item on a
        specific eBay marketplace. It is up to the sellers whether they want to create
        a complete offer (with all necessary details) right from the start, or sellers
        can provide only some information with the initial <strong>createOffer</strong>
        call, and then make one or more subsequent <strong>updateOffer</strong> calls
        to complete the offer and prepare to publish the offer. Upon first creating
        an offer, the following fields are required in the request payload:  <strong>sku</strong>,
        <strong>marketplaceId</strong>, and (listing) <strong>format</strong>. <br><br>Other
        information that will be required before an offer can be published are highlighted
        below. These settings are either set with <strong>createOffer</strong>, or
        they can be set with a subsequent <strong>updateOffer</strong> call: <ul><li>Inventory
        location</li> <li>Offer price</li> <li>Available quantity</li> <li>eBay listing
        category</li> <li>Referenced listing policy profiles to set payment, return,
        and fulfillment values/settings</li> </ul> <p><span class="tablenote"><strong>Note:</strong>
        Though the <strong>includeCatalogProductDetails</strong> parameter is not
        required to be submitted in the request, the parameter defaults to <code>true</code>
        if omitted.</span></p><p>If the call is successful, a unique <strong>offerId</strong>
        value is returned in the response. This value will be required for many other
        offer-related calls. Note that this call only stages an offer for publishing.
        The seller must run the <strong>publishOffer</strong> call to convert the
        offer to an active eBay listing.</p> <p>In addition to the <code>authorization</code>
        header, which is required for all eBay REST API calls, the <strong>createOffer</strong>
        call also requires the <code>Content-Language</code> header, that sets the
        natural language that will be used in the field values of the request payload.
        For US English, the code value passed in this header should be <code>en-US</code>.
        To view other supported <code>Content-Language</code> values, and to read
        more about all supported HTTP headers for eBay REST API calls, see the <a
        href="/api-docs/static/rest-request-components.html#HTTP">HTTP request headers</a>
        topic in the <strong>Using eBay RESTful APIs</strong> document.</p><p>For
        those who prefer to create multiple offers (up to 25 at a time) with one call,
        the <strong>bulkCreateOffer</strong> method can be used.</p>'
      operationId: createOffer
      parameters:
      - description: This request header sets the natural language that will be provided
          in the field values of the request payload.
        explode: false
        in: header
        name: Content-Language
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EbayOfferDetailsWithKeys'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /offer
      tags:
      - Inventory API/offer
      x-apifox-folder: Inventory API/offer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497684-run
      x-contentType: application/json
      x-accepts: application/json
  /inventory_item/{sku}/product_compatibility:
    delete:
      deprecated: false
      description: This call is used by the seller to delete the list of products
        that are compatible with the inventory item that is associated with the compatible
        product list. The inventory item is identified with a SKU value in the URI.
        Product compatibility is currently only applicable to motor vehicle parts
        and accessory categories, but more categories may be supported in the future.
      operationId: deleteProductCompatibility
      parameters:
      - description: A SKU (stock keeping unit) is an unique identifier defined by
          a seller for a product
        explode: false
        in: path
        name: sku
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /inventory_item/{sku}/product_compatibility
      tags:
      - Inventory API/product_compatibility
      x-apifox-folder: Inventory API/product_compatibility
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497685-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This call is used by the seller to retrieve the list of products
        that are compatible with the inventory item. The SKU value for the inventory
        item is passed into the call URI, and a successful call with return the compatible
        vehicle list associated with this inventory item. Product compatibility is
        currently only applicable to motor vehicle parts and accessory categories,
        but more categories may be supported in the future.
      operationId: getProductCompatibility
      parameters:
      - description: A SKU (stock keeping unit) is an unique identifier defined by
          a seller for a product
        explode: false
        in: path
        name: sku
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Compatibility'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /inventory_item/{sku}/product_compatibility
      tags:
      - Inventory API/product_compatibility
      x-apifox-folder: Inventory API/product_compatibility
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497699-run
      x-accepts: application/json
    put:
      deprecated: false
      description: This call is used by the seller to create or replace a list of
        products that are compatible with the inventory item. The inventory item is
        identified with a SKU value in the URI. Product compatibility is currently
        only applicable to motor vehicle parts and accessory categories, but more
        categories may be supported in the future.<br /><br /><p>In addition to the
        <code>authorization</code> header, which is required for all eBay REST API
        calls, the <strong>createOrReplaceProductCompatibility</strong> call also
        requires the <code>Content-Language</code> header, that sets the natural language
        that will be used in the field values of the request payload. For US English,
        the code value passed in this header should be <code>en-US</code>. To view
        other supported <code>Content-Language</code> values, and to read more about
        all supported HTTP headers for eBay REST API calls, see the <a href="/api-docs/static/rest-request-components.html#HTTP">HTTP
        request headers</a> topic in the <strong>Using eBay RESTful APIs</strong>
        document.</p>
      operationId: createOrReplaceProductCompatibility
      parameters:
      - description: A SKU (stock keeping unit) is an unique identifier defined by
          a seller for a product
        explode: false
        in: path
        name: sku
        required: true
        schema:
          type: string
        style: simple
      - description: This request header sets the natural language that will be provided
          in the field values of the request payload.
        explode: false
        in: header
        name: Content-Language
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Compatibility'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Success
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Created
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /inventory_item/{sku}/product_compatibility
      tags:
      - Inventory API/product_compatibility
      x-apifox-folder: Inventory API/product_compatibility
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497697-run
      x-contentType: application/json
      x-accepts: application/json
  /inventory_item_group/{inventoryItemGroupKey}:
    delete:
      deprecated: false
      description: This call deletes the inventory item group for a given <strong>inventoryItemGroupKey</strong>
        value.
      operationId: deleteInventoryItemGroup
      parameters:
      - description: The unique identifier of an inventory item group. This value
          is assigned by the seller when an inventory item group is created. The <strong>inventoryItemGroupKey</strong>
          value for the inventory item group to delete is passed in at the end of
          the call URI.
        explode: false
        in: path
        name: inventoryItemGroupKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /inventory_item_group/{inventoryItemGroupKey}
      tags:
      - Inventory API/inventory_item_group
      x-apifox-folder: Inventory API/inventory_item_group
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497692-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This call retrieves the inventory item group for a given <strong>inventoryItemGroupKey</strong>
        value. The <strong>inventoryItemGroupKey</strong> value is passed in at the
        end of the call URI.
      operationId: getInventoryItemGroup
      parameters:
      - description: The unique identifier of an inventory item group. This value
          is assigned by the seller when an inventory item group is created. The <strong>inventoryItemGroupKey</strong>
          value for the inventory item group to retrieve is passed in at the end of
          the call URI.
        explode: false
        in: path
        name: inventoryItemGroupKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItemGroup'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /inventory_item_group/{inventoryItemGroupKey}
      tags:
      - Inventory API/inventory_item_group
      x-apifox-folder: Inventory API/inventory_item_group
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497696-run
      x-accepts: application/json
    put:
      deprecated: false
      description: '<span class="tablenote"><strong>Note:</strong> Each listing can
        be revised up to 250 times in one calendar day. If this revision threshold
        is reached, the seller will be blocked from revising the item until the next
        calendar day.</span><br /><br />This call creates a new inventory item group
        or updates an existing inventory item group. It is up to sellers whether they
        want to create a complete inventory item group record right from the start,
        or sellers can provide only some information with the initial <strong>createOrReplaceInventoryItemGroup</strong>
        call, and then make one or more additional <strong>createOrReplaceInventoryItemGroup</strong>
        calls to complete the inventory item group record. Upon first creating an
        inventory item group record, the only required elements are  the <strong>inventoryItemGroupKey</strong>
        identifier in the call URI, and the members of the inventory item group specified
        through the <strong>variantSKUs</strong> array in the request payload. <br><br>In
        the case of updating/replacing an existing inventory item group, this call
        does a complete replacement of the existing inventory item group record, so
        all fields (including the member SKUs) that make up the inventory item group
        are required, regardless of whether their values changed. So, when replacing/updating
        an inventory item group record, it is advised that the seller run a <strong>getInventoryItemGroup</strong>
        call for that inventory item group to see all of its current values/settings/members
        before attempting to update the record. And if changes are made to an inventory
        item group that is part of a live, multiple-variation eBay listing, these
        changes automatically update the eBay listing. For example, if a SKU value
        is removed from the inventory item group, the corresponding product variation
        will be removed from the eBay listing as well.<br/><br/> In addition to the
        required inventory item group identifier and member SKUs, other key information
        that is set with this call include: <ul> <li>Title and description of the
        inventory item group. The string values provided in these fields will actually
        become the listing title and listing description of the listing once the first
        SKU of the inventory item group is published successfully</li> <li>Common
        aspects that inventory items in the qroup share</li> <li>Product aspects that
        vary within each product variation</li> <li>Links to images demonstrating
        the variations of the product, and these images should correspond to the product
        aspect that is set with the <strong>variesBy.aspectsImageVariesBy</strong>
        field</li> </ul> <p>In addition to the <code>authorization</code> header,
        which is required for all eBay REST API calls, the <strong>createOrReplaceInventoryItemGroup</strong>
        call also requires the <code>Content-Language</code> header, that sets the
        natural language that will be used in the field values of the request payload.
        For US English, the code value passed in this header should be <code>en-US</code>.
        To view other supported <code>Content-Language</code> values, and to read
        more about all supported HTTP headers for eBay REST API calls, see the <a
        href="/api-docs/static/rest-request-components.html#HTTP">HTTP request headers</a>
        topic in the <strong>Using eBay RESTful APIs</strong> document.</p>'
      operationId: createOrReplaceInventoryItemGroup
      parameters:
      - description: Unique identifier of the inventory item group. This identifier
          is supplied by the seller. The <strong>inventoryItemGroupKey</strong> value
          for the inventory item group to create/update is passed in at the end of
          the call URI. This value cannot be changed once it is set.
        explode: false
        in: path
        name: inventoryItemGroupKey
        required: true
        schema:
          type: string
        style: simple
      - description: This request header sets the natural language that will be provided
          in the field values of the request payload.
        explode: false
        in: header
        name: Content-Language
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItemGroup'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Success
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Created
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /inventory_item_group/{inventoryItemGroupKey}
      tags:
      - Inventory API/inventory_item_group
      x-apifox-folder: Inventory API/inventory_item_group
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497686-run
      x-contentType: application/json
      x-accepts: application/json
  /offer/{offerId}:
    delete:
      deprecated: false
      description: If used against an unpublished offer, this call will permanently
        delete that offer. In the case of a published offer (or live eBay listing),
        a successful call will either end the single-variation listing associated
        with the offer, or it will remove that product variation from the eBay listing
        and also automatically remove that product variation from the inventory item
        group. In the case of a multiple-variation listing, the <strong>deleteOffer</strong>
        will not remove the product variation from the listing if that variation has
        one or more sales. If that product variation has one or more sales, the seller
        can alternately just set the available quantity of that product variation
        to <code>0</code>, so it is not available in the eBay search or View Item
        page, and then the seller can remove that product variation from the inventory
        item group at a later time.
      operationId: deleteOffer
      parameters:
      - description: The unique identifier of the offer to delete. The unique identifier
          of the offer (<strong>offerId</strong>) is passed in at the end of the call
          URI.
        explode: false
        in: path
        name: offerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /offer/{offerId}
      tags:
      - Inventory API/offer
      x-apifox-folder: Inventory API/offer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497704-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This call retrieves a specific published or unpublished offer.
        The unique identifier of the offer (<strong>offerId</strong>) is passed in
        at the end of the call URI.<p>The <code>authorization</code> header is the
        only required HTTP header for this call. See the <strong>HTTP request headers</strong>
        section for more information.</p>
      operationId: getOffer
      parameters:
      - description: The unique identifier of the offer that is to be retrieved.
        explode: false
        in: path
        name: offerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EbayOfferDetailsWithAll'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /offer/{offerId}
      tags:
      - Inventory API/offer
      x-apifox-folder: Inventory API/offer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497690-run
      x-accepts: application/json
    put:
      deprecated: false
      description: 'This call updates an existing offer. An existing offer may be
        in published state (active eBay listing), or in an unpublished state and yet
        to be published with the <strong>publishOffer</strong> call. The unique identifier
        (<strong>offerId</strong>) for the offer to update is passed in at the end
        of the call URI. <br/><br/> The <strong>updateOffer</strong> call does a complete
        replacement of the existing offer object, so all fields that make up the current
        offer object are required, regardless of whether their values changed. <br/><br/>
        Other information that is required before an unpublished offer can be published
        or before a published offer can be revised include: <ul><li>Inventory location</li>
        <li>Offer price</li> <li>Available quantity</li> <li>eBay listing category</li>  <li>Referenced
        listing policy profiles to set payment, return, and fulfillment values/settings</li>
        </ul> <p><span class="tablenote"><strong>Note:</strong> Though the <strong>includeCatalogProductDetails</strong>
        parameter is not required to be submitted in the request, the parameter defaults
        to <code>true</code> if omitted from both the <strong>updateOffer</strong>
        and the <strong>createOffer</strong> calls. If a value is specified in the
        <strong>updateOffer</strong> call, this value will be used.</span><br /><br
        /><span class="tablenote"><strong>Note:</strong> Each listing can be revised
        up to 250 times in one calendar day. If this revision threshold is reached,
        the seller will be blocked from revising the item until the next calendar
        day.</span></p> <p>For published offers, the <strong>listingDescription</strong>
        field is also required to update the offer/eBay listing. For unpublished offers,
        this field is not necessarily required unless it is already set for the unpublished
        offer.</p> <p>In addition to the <code>authorization</code> header, which
        is required for all eBay REST API calls, the <strong>updateOffer</strong>
        call also requires the <code>Content-Language</code> header, that sets the
        natural language that will be used in the field values of the request payload.
        For US English, the code value passed in this header should be <code>en-US</code>.
        To view other supported <code>Content-Language</code> values, and to read
        more about all supported HTTP headers for eBay REST API calls, see the <a
        href="/api-docs/static/rest-request-components.html#HTTP">HTTP request headers</a>
        topic in the <strong>Using eBay RESTful APIs</strong> document.</p>'
      operationId: updateOffer
      parameters:
      - description: The unique identifier of the offer that is being updated. This
          identifier is passed in at the end of the call URI.
        explode: false
        in: path
        name: offerId
        required: true
        schema:
          type: string
        style: simple
      - description: This request header sets the natural language that will be provided
          in the field values of the request payload.
        explode: false
        in: header
        name: Content-Language
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EbayOfferDetailsWithId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferResponse'
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /offer/{offerId}
      tags:
      - Inventory API/offer
      x-apifox-folder: Inventory API/offer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497687-run
      x-contentType: application/json
      x-accepts: application/json
  /bulk_create_offer:
    post:
      deprecated: false
      description: 'This call creates multiple offers (up to 25) for specific inventory
        items on a specific eBay marketplace. Although it is not a requirement for
        the seller to create complete offers (with all necessary details) right from
        the start, eBay recommends that the seller provide all necessary details with
        this call since there is currently no bulk operation available to update multiple
        offers with one call. The following fields are always required in the request
        payload:  <strong>sku</strong>, <strong>marketplaceId</strong>, and (listing)
        <strong>format</strong>. <br><br>Other information that will be required before
        a offer can be published are highlighted below: <ul><li>Inventory location</li>
        <li>Offer price</li> <li>Available quantity</li> <li>eBay listing category</li>
        <li>Referenced listing policy profiles to set payment, return, and fulfillment
        values/settings</li> </ul><p><span class="tablenote"><strong>Note:</strong>
        Though the <strong>includeCatalogProductDetails</strong> parameter is not
        required to be submitted in the request, the parameter defaults to <code>true</code>
        if omitted.</span></p> <p>If the call is successful, unique <strong>offerId</strong>
        values are returned in the response for each successfully created offer. The
        <strong>offerId</strong> value will be required for many other offer-related
        calls. Note that this call only stages an offer for publishing. The seller
        must run either the <strong>publishOffer</strong>, <strong>bulkPublishOffer</strong>,
        or <strong>publishOfferByInventoryItemGroup</strong> call to convert offer(s)
        into an active single- or multiple-variation listing.</p> <p>In addition to
        the <code>authorization</code> header, which is required for all eBay REST
        API calls, the <strong>bulkCreateOffer</strong> call also requires the <code>Content-Language</code>
        header, that sets the natural language that will be used in the field values
        of the request payload. For US English, the code value passed in this header
        should be <code>en-US</code>. To view other supported <code>Content-Language</code>
        values, and to read more about all supported HTTP headers for eBay REST API
        calls, see the <a href="/api-docs/static/rest-request-components.html#HTTP">HTTP
        request headers</a> topic in the <strong>Using eBay RESTful APIs</strong>
        document.</p><p>For those who prefer to create a single offer per call, the
        <strong>createOffer</strong> method can be used instead.</p>'
      operationId: bulkCreateOffer
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkEbayOfferDetailsWithKeys'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOfferResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi-Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /bulk_create_offer
      tags:
      - Inventory API/offer
      x-apifox-folder: Inventory API/offer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497688-run
      x-contentType: application/json
      x-accepts: application/json
  /bulk_update_price_quantity:
    post:
      deprecated: false
      description: This call is used by the seller to update the total ship-to-home
        quantity of one inventory item, and/or to update the price and/or quantity
        of one or more offers associated with one inventory item. Up to 25 offers
        associated with an inventory item may be updated with one <strong>bulkUpdatePriceQuantity</strong>
        call. Only one SKU (one product) can be updated per call.<br /><br /><span
        class="tablenote"><strong>Note:</strong> Each listing can be revised up to
        250 times in one calendar day. If this revision threshold is reached, the
        seller will be blocked from revising the item until the next calendar day.</span><br
        /><br />The <strong>getOffers</strong> call can be used to retrieve all offers
        associated with a SKU. The seller will just pass in the correct SKU value
        through the <strong>sku</strong> query parameter. To update an offer, the
        <strong>offerId</strong> value is required, and this value is returned in
        the <strong>getOffers</strong> call response. It is also useful to know which
        offers are unpublished and which ones are published. To get this status, look
        for the <strong>status</strong> value in the <strong>getOffers</strong> call
        response. Offers in the published state are live eBay listings, and these
        listings will be revised with a successful <strong>bulkUpdatePriceQuantity</strong>
        call.<br /><br />An issue will occur if duplicate <strong>offerId</strong>
        values are passed through the same <strong>offers</strong> container, or if
        one or more of the specified offers are associated with different products/SKUs.<br
        /><br /><span class="tablenote"><strong>Note:</strong> For multiple-variation
        listings, it is recommended that the <strong>bulkUpdatePriceQuantity</strong>
        call be used to update price and quantity information for each SKU within
        that multiple-variation listing instead of using <strong>createOrReplaceInventoryItem</strong>
        calls to update the price and quantity for each SKU. Just remember that only
        one SKU (one product variation) can be updated per call.</span><p>The <code>authorization</code>
        header is the only required HTTP header for this call. See the <strong>HTTP
        request headers</strong> section for more information.</p>
      operationId: bulkUpdatePriceQuantity
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkPriceQuantity'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkPriceQuantityResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi-Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /bulk_update_price_quantity
      tags:
      - Inventory API/inventory_item
      x-apifox-folder: Inventory API/inventory_item
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497691-run
      x-contentType: application/json
      x-accepts: application/json
  /bulk_migrate_listing:
    post:
      deprecated: false
      description: This call is used to convert existing eBay Listings to the corresponding
        Inventory API objects. If an eBay listing is successfully migrated to the
        Inventory API model, new Inventory Location, Inventory Item, and Offer objects
        are created. For a multiple-variation listing that is successfully migrated,
        in addition to the three new Inventory API objects just mentioned, an Inventory
        Item Group object will also be created. If the eBay listing is a motor vehicle
        part or accessory listing with a compatible vehicle list (<strong>ItemCompatibilityList</strong>
        container in Trading API's Add/Revise/Relist/Verify calls), a Product Compatibility
        object will be created.<br/><br/><h3>Migration Requirements</h3><br/>To be
        eligible for migration, the active eBay listings must meet the following requirements:<ul><li>Listing
        type is Fixed-Price<p><span class="tablenote"><strong>Note:</strong> Auction
        listings are supported by the Inventory API, but the <b>bulkMigrateListing</b>
        method cannot be used to migrate auction listings.</span></p></li><li>The
        item(s) in the listings must have seller-defined SKU values associated with
        them, and in the case of a multiple-variation listing, each product variation
        must also have its own SKU value</li><li>Business Polices (Payment, Return
        Policy, and Shipping) must be used on the listing, as legacy payment, return
        policy, and shipping fields will not be accepted. With the Payment Policy
        associated with a listing, the immediate payment requirement must be enabled.</li><li>The
        postal/zip code (<strong>PostalCode</strong> field in Trading's <strong>ItemType</strong>)
        or city (<strong>Location</strong> field in Trading's <strong>ItemType</strong>)
        must be set in the listing; the country is also needed, but this value is
        required in Trading API, so it will always be set for every listing</li></ul><br
        /><h3>Unsupported Listing Features</h3><br/>The following features are not
        yet available to be set or modified through the Inventory API, but they will
        remain on the active eBay listing, even after a successful migration to the
        Inventory model. The downside to this is that the seller will be completely
        blocked (in APIs or My eBay) from revising these features/settings once the
        migration takes place:<ul><li>Any listing-level Buyer Requirements</li><li>Listing
        enhancements like a bold listing title or Gallery Plus</li></ul><br /><h3>Making
        the Call</h3><br/>In the request payload of the <strong>bulkMigrateListings</strong>
        call, the seller will pass in an array of one to five eBay listing IDs (aka
        Item IDs). To save time and hassle, that seller should do a pre-check on each
        listing to make sure those listings meet the requirements to be migrated to
        the new Inventory model. There are no path or query parameters for this call.<br/><br/><h3>Call
        Response</h3><br/>If an eBay listing is migrated successfully to the new Inventory
        model, the following will occur:<ul><li>An Inventory Item object will be created
        for the item(s) in the listing, and this object will be accessible through
        the Inventory API</li><li>An Offer object will be created for the listing,
        and this object will be accessible through the Inventory API</li><li>An Inventory
        Location object will be created and associated with the Offer object, as an
        Inventory Location must be associated with a published Offer</li></ul>The
        response payload of the Bulk Migrate Listings call will show the results of
        each listing migration. These results include an HTTP status code to indicate
        the success or failure of each listing migration, the SKU value associated
        with each item, and if the migration is successful, an Offer ID value. The
        SKU value will be used in the Inventory API to manage the Inventory Item object,
        and the Offer ID value will be used in the Inventory API to manage the Offer
        object. Errors and/or warnings containers will be returned for each listing
        where an error and/or warning occurred with the attempted migration.<br/><br/>If
        a multiple-variation listing is successfully migrated, along with the Offer
        and Inventory Location objects, an Inventory Item object will be created for
        each product variation within the listing, and an Inventory Item Group object
        will also be created, grouping those variations together in the Inventory
        API platform. For a motor vehicle part or accessory listing that has a specified
        list of compatible vehicles, in addition to the Inventory Item, Inventory
        Location, and Offer objects that are created, a Product Compatibility object
        will also be created in the Inventory API platform.
      operationId: bulkMigrateListing
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkMigrateListing'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkMigrateListingResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi-Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /bulk_migrate_listing
      tags:
      - Inventory API/listing
      x-apifox-folder: Inventory API/listing
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497693-run
      x-contentType: application/json
      x-accepts: application/json
  /inventory_item/{sku}:
    delete:
      deprecated: false
      description: This call is used to delete an inventory item record associated
        with a specified SKU. A successful call will not only delete that inventory
        item record, but will also have the following effects:<ul><li>Delete any and
        all unpublished offers associated with that SKU;</li><li>Delete any and all
        single-variation eBay listings associated with that SKU;</li><li>Automatically
        remove that SKU from a multiple-variation listing and remove that SKU from
        any and all inventory item groups in which that SKU was a member.</li></ul><p>The
        <code>authorization</code> header is the only required HTTP header for this
        call. See the <strong>HTTP request headers</strong> section for more information.</p>
      operationId: deleteInventoryItem
      parameters:
      - description: 'This is the seller-defined SKU value of the product whose inventory
          item record you wish to delete.<br/><br/><strong>Max length</strong>: 50.'
        explode: false
        in: path
        name: sku
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /inventory_item/{sku}
      tags:
      - Inventory API/inventory_item
      x-apifox-folder: Inventory API/inventory_item
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497703-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This call retrieves the inventory item record for a given SKU.
        The SKU value is passed in at the end of the call URI. There is no request
        payload for this call.<br/><br/>The <code>authorization</code> header is the
        only required HTTP header for this call, and it is required for all Inventory
        API calls. See the <strong>HTTP request headers</strong> section for more
        information.<br/><br/>For those who prefer to retrieve numerous inventory
        item records by SKU value with one call (up to 25 at a time), the <strong>bulkGetInventoryItem</strong>
        method can be used. To retrieve all inventory item records defined on the
        seller's account, the <strong>getInventoryItems</strong> method can be used
        (with pagination control if desired).
      operationId: getInventoryItem
      parameters:
      - description: 'This is the seller-defined SKU value of the product whose inventory
          item record you wish to retrieve.<br/><br/><strong>Max length</strong>:
          50.'
        explode: false
        in: path
        name: sku
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItemWithSkuLocaleGroupid'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /inventory_item/{sku}
      tags:
      - Inventory API/inventory_item
      x-apifox-folder: Inventory API/inventory_item
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497701-run
      x-accepts: application/json
    put:
      deprecated: false
      description: '<span class="tablenote"><strong>Note:</strong> Please note that
        any eBay listing created using the Inventory API cannot be revised or relisted
        using the Trading API calls.</span><br /><br /><span class="tablenote"><strong>Note:</strong>
        Each listing can be revised up to 250 times in one calendar day. If this revision
        threshold is reached, the seller will be blocked from revising the item until
        the next calendar day.</span><br/><br/>This call creates a new inventory item
        record or replaces an existing inventory item record. It is up to sellers
        whether they want to create a complete inventory item record right from the
        start, or sellers can provide only some information with the initial <strong>createOrReplaceInventoryItem</strong>
        call, and then make one or more additional <strong>createOrReplaceInventoryItem</strong>
        calls to complete all required fields for  the inventory item record and prepare
        it for publishing. Upon first creating an inventory item record, only the
        SKU value in the call path is required. <br/><br/> In the case of replacing
        an existing inventory item record, the <strong>createOrReplaceInventoryItem</strong>
        call will do a complete replacement of the existing inventory item record,
        so all fields that are currently defined for the inventory item record are
        required in that update action, regardless of whether their values changed.
        So, when replacing/updating an inventory item record, it is advised that the
        seller run a <strong>getInventoryItem</strong> call to retrieve the full inventory
        item record and see all of its current values/settings before attempting to
        update the record. And if changes are made to an inventory item that is part
        of one or more active eBay listings, a successful call will automatically
        update these eBay listings. <br/><br/> The key information that is set with
        the <strong>createOrReplaceInventoryItem</strong> call include: <ul> <li>Seller-defined
        SKU value for the product. Each seller product, including products within
        an item inventory group, must have their own SKU value. This SKU value is
        passed in at the end of the call URI</li> <li>Condition of the item</li> <li>Product
        details, including any product identifier(s), such as a UPC, ISBN, EAN, or
        Brand/Manufacturer Part Number pair, a product description, a product title,
        product/item aspects, and links to images. eBay will use any supplied eBay
        Product ID (ePID) or a GTIN (UPC, ISBN, or EAN) and attempt to match those
        identifiers to a product in the eBay Catalog, and if a product match is found,
        the product details for the inventory item will automatically be populated.</li>
        <li>Quantity of the inventory item that is available for purchase</li> <li>Package
        weight and dimensions, which is required if the seller will be offering calculated
        shipping options. The package weight will also be required if the seller will
        be providing flat-rate shipping services, but charging a weight surcharge.</li>
        </ul> <p>In addition to the <code>authorization</code> header, which is required
        for all eBay REST API calls, the <strong>createOrReplaceInventoryItem</strong>
        call also requires the <code>Content-Language</code> header, that sets the
        natural language that will be used in the field values of the request payload.
        For US English, the code value passed in this header should be <code>en-US</code>.
        To view other supported <code>Content-Language</code> values, and to read
        more about all supported HTTP headers for eBay REST API calls, see the <a
        href="/api-docs/static/rest-request-components.html#HTTP">HTTP request headers</a>
        topic in the <strong>Using eBay RESTful APIs</strong> document.</p><p>For
        those who prefer to create or update numerous inventory item records with
        one call (up to 25 at a time), the <strong>bulkCreateOrReplaceInventoryItem</strong>
        method can be used.</p>'
      operationId: createOrReplaceInventoryItem
      parameters:
      - description: 'The seller-defined SKU value for the inventory item is required
          whether the seller is creating a new inventory item, or updating an existing
          inventory item. This SKU value is passed in at the end of the call URI.
          SKU values must be unique across the seller''s inventory. <br/><br/> <strong>Max
          length</strong>: 50.'
        explode: false
        in: path
        name: sku
        required: true
        schema:
          type: string
        style: simple
      - description: This request header sets the natural language that will be provided
          in the field values of the request payload.
        explode: false
        in: header
        name: Content-Language
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Success
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Created
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /inventory_item/{sku}
      tags:
      - Inventory API/inventory_item
      x-apifox-folder: Inventory API/inventory_item
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497694-run
      x-contentType: application/json
      x-accepts: application/json
  /bulk_get_inventory_item:
    post:
      deprecated: false
      description: This call retrieves up to 25 inventory item records. The SKU value
        of each inventory item record to retrieve is specified in the request payload.
        <br/><br/>The <code>authorization</code> header is the only required HTTP
        header for this call, and it is required for all Inventory API calls. See
        the <strong>HTTP request headers</strong> section for more information.<br/><br/>For
        those who prefer to retrieve only one inventory item record by SKU value,
        , the <strong>getInventoryItem</strong> method can be used. To retrieve all
        inventory item records defined on the seller's account, the <strong>getInventoryItems</strong>
        method can be used (with pagination control if desired).
      operationId: bulkGetInventoryItem
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkGetInventoryItem'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkGetInventoryItemResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi-Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /bulk_get_inventory_item
      tags:
      - Inventory API/inventory_item
      x-apifox-folder: Inventory API/inventory_item
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497695-run
      x-contentType: application/json
      x-accepts: application/json
  /bulk_publish_offer:
    post:
      deprecated: false
      description: <span class="tablenote"><strong>Note:</strong> Each listing can
        be revised up to 250 times in one calendar day. If this revision threshold
        is reached, the seller will be blocked from revising the item until the next
        calendar day.</span><br /><br />This call is used to convert unpublished offers
        (up to 25) into  published offers, or live eBay listings. The unique identifier
        (<strong>offerId</strong>) of each offer to publlish is passed into the request
        payload. It is possible that some unpublished offers will be successfully
        created into eBay listings, but others may fail. The response payload will
        show the results for each <strong>offerId</strong> value that is passed into
        the request payload. The <strong>errors</strong> and <strong>warnings</strong>
        containers will be returned for an offer that had one or more issues being
        published. <br/><br/>For those who prefer to publish one offer per call, the
        <strong>publishOffer</strong> method can be used instead. In the case of a
        multiple-variation listing, the <strong>publishOfferByInventoryItemGroup</strong>
        call should be used instead, as this call will convert all unpublished offers
        associated with an inventory item group into a multiple-variation listing.
      operationId: bulkPublishOffer
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkOffer'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkPublishResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi-Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /bulk_publish_offer
      tags:
      - Inventory API/offer
      x-apifox-folder: Inventory API/offer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497698-run
      x-contentType: application/json
      x-accepts: application/json
  /bulk_create_or_replace_inventory_item:
    post:
      deprecated: false
      description: '<span class="tablenote"><strong>Note:</strong> Please note that
        any eBay listing created using the Inventory API cannot be revised or relisted
        using the Trading API calls.</span><br /><br /><span class="tablenote"><strong>Note:</strong>
        Each listing can be revised up to 250 times in one calendar day. If this revision
        threshold is reached, the seller will be blocked from revising the item until
        the next calendar day.</span><br/><br/>This call can be used to create and/or
        update up to 25 new inventory item records. It is up to sellers whether they
        want to create a complete inventory item records right from the start, or
        sellers can provide only some information with the initial <strong>bulkCreateOrReplaceInventoryItem</strong>
        call, and then make one or more additional <strong>bulkCreateOrReplaceInventoryItem</strong>
        calls to complete all required fields for the inventory item records and prepare
        for publishing. Upon first creating inventory item records, only the SKU values
        are required. <br/><br/> In the case of updating existing inventory item records,
        the <strong>bulkCreateOrReplaceInventoryItem</strong> call will do a complete
        replacement of the existing inventory item records, so all fields that are
        currently defined for the inventory item record are required in that update
        action, regardless of whether their values changed. So, when replacing/updating
        an inventory item record, it is advised that the seller run a ''Get'' call
        to retrieve the full details of the inventory item records and see all of
        its current values/settings before attempting to update the records. Any changes
        that are made to inventory item records that are part of one or more active
        eBay listings, a successful call will automatically update these active listings.
        <br/><br/> The key information that is set with the <strong>bulkCreateOrReplaceInventoryItem</strong>
        call include: <ul> <li>Seller-defined SKU value for the product. Each seller
        product, including products within an item inventory group, must have their
        own SKU value. </li> <li>Condition of the item</li> <li>Product details, including
        any product identifier(s), such as a UPC, ISBN, EAN, or Brand/Manufacturer
        Part Number pair, a product description, a product title, product/item aspects,
        and links to images. eBay will use any supplied eBay Product ID (ePID) or
        a GTIN (UPC, ISBN, or EAN) and attempt to match those identifiers to a product
        in the eBay Catalog, and if a product match is found, the product details
        for the inventory item will automatically be populated.</li> <li>Quantity
        of the inventory item that is available for purchase</li> <li>Package weight
        and dimensions, which is required if the seller will be offering calculated
        shipping options. The package weight will also be required if the seller will
        be providing flat-rate shipping services, but charging a weight surcharge.</li>
        </ul> <p>In addition to the <code>authorization</code> header, which is required
        for all eBay REST API calls, the <strong>bulkCreateOrReplaceInventoryItem</strong>
        call also requires the <code>Content-Language</code> header, that sets the
        natural language that will be used in the field values of the request payload.
        For US English, the code value passed in this header should be <code>en-US</code>.
        To view other supported <code>Content-Language</code> values, and to read
        more about all supported HTTP headers for eBay REST API calls, see the <a
        href="/api-docs/static/rest-request-components.html#HTTP">HTTP request headers</a>
        topic in the <strong>Using eBay RESTful APIs</strong> document.</p><p>For
        those who prefer to create or update a single inventory item record, the <strong>createOrReplaceInventoryItem</strong>
        method can be used.</p>'
      operationId: bulkCreateOrReplaceInventoryItem
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkInventoryItem'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkInventoryItemResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi-Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /bulk_create_or_replace_inventory_item
      tags:
      - Inventory API/inventory_item
      x-apifox-folder: Inventory API/inventory_item
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497700-run
      x-contentType: application/json
      x-accepts: application/json
  /inventory_item:
    get:
      deprecated: false
      description: This call retrieves all inventory item records defined for the
        seller's account. The <strong>limit</strong> query parameter allows the seller
        to control how many records are returned per page, and the <strong>offset</strong>
        query parameter is used to retrieve a specific page of records. The seller
        can make multiple calls to scan through multiple pages of records. There is
        no request payload for this call.<br/><br/>The <code>authorization</code>
        header is the only required HTTP header for this call, and it is required
        for all Inventory API calls. See the <strong>HTTP request headers</strong>
        section for more information.<br/><br/>For those who prefer to retrieve numerous
        inventory item records by SKU value with one call (up to 25 at a time), the
        <strong>bulkGetInventoryItem</strong> method can be used.
      operationId: getInventoryItems
      parameters:
      - description: 'The value passed in this query parameter sets the maximum number
          of records to return per page of data. Although this field is a string,
          the value passed in this field should be an integer  from <code>1</code>
          to <code>100</code>. If this query parameter is not set, up to 100 records
          will be returned on each page of results.<br/><br/><strong>Min</strong>:
          1, <strong>Max</strong>: 100 '
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: 'The value passed in this query parameter sets the page number
          to retrieve. The first page of records has a value of <code>0</code>, the
          second page of records has a value of <code>1</code>, and so on. If this
          query parameter is not set, its value defaults to <code>0</code>, and the
          first page of records is returned. '
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItems'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /inventory_item
      tags:
      - Inventory API/inventory_item
      x-apifox-folder: Inventory API/inventory_item
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497702-run
      x-accepts: application/json
  /offer/get_listing_fees:
    post:
      deprecated: false
      description: This call is used to retrieve the expected listing fees for up
        to 250 unpublished offers. An array of one or more <strong>offerId</strong>
        values are passed in under the <strong>offers</strong> container.<br/><br/>
        In the response payload, all listing fees are grouped by eBay marketplace,
        and listing fees per offer are not shown. A <strong>fees</strong> container
        will be returned for each eBay marketplace where the seller is selling the
        products associated with the specified offers. <br/><br/> Errors will occur
        if the seller passes in <strong>offerIds</strong> that represent published
        offers, so this call should be made before the seller publishes offers with
        the <strong>publishOffer</strong>.
      operationId: getListingFees
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferKeysWithId'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeesSummaryResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /offer/get_listing_fees
      tags:
      - Inventory API/offer
      x-apifox-folder: Inventory API/offer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497705-run
      x-contentType: application/json
      x-accepts: application/json
  /offer/publish_by_inventory_item_group/:
    post:
      deprecated: false
      description: <span class="tablenote"><strong>Note:</strong> Please note that
        any eBay listing created using the Inventory API cannot be revised or relisted
        using the Trading API calls.</span><br/><br/><span class="tablenote"><strong>Note:</strong>
        Each listing can be revised up to 250 times in one calendar day. If this revision
        threshold is reached, the seller will be blocked from revising the item until
        the next calendar day.</span><br /><br />This call is used to convert all
        unpublished offers associated with an inventory item group into an active,
        multiple-variation listing.<br/><br/> The unique identifier of the inventory
        item group (<strong>inventoryItemGroupKey</strong>) is passed in the request
        payload. All inventory items and their corresponding offers in the inventory
        item group must be valid (meet all requirements) for the <strong>publishOfferByInventoryItemGroup</strong>
        call to be completely successful. For any inventory items in the group that
        are missing required data or have no corresponding offers, the <strong>publishOfferByInventoryItemGroup</strong>
        will create a new multiple-variation listing, but any inventory items with
        missing required data/offers will not be in the newly-created listing. If
        any inventory items in the group to be published have invalid data, or one
        or more of the inventory items have conflicting data with one another, the
        <strong>publishOfferByInventoryItemGroup</strong> call will fail. Be sure
        to check for any error or warning messages in the call response for any applicable
        information about one or more inventory items/offers having issues.
      operationId: publishOfferByInventoryItemGroup
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishByInventoryItemGroupRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /offer/publish_by_inventory_item_group/
      tags:
      - Inventory API/offer
      x-apifox-folder: Inventory API/offer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497706-run
      x-contentType: application/json
      x-accepts: application/json
  /offer/{offerId}/publish/:
    post:
      deprecated: false
      description: <span class="tablenote"><strong>Note:</strong> Each listing can
        be revised up to 250 times in one calendar day. If this revision threshold
        is reached, the seller will be blocked from revising the item until the next
        calendar day.</span><br /><br />This call is used to convert an unpublished
        offer into a published offer, or live eBay listing. The unique identifier
        of the offer (<strong>offerId</strong>) is passed in at the end of the call
        URI.<br/><br/>For those who prefer to publish multiple offers (up to 25 at
        a time) with one call, the <strong>bulkPublishOffer</strong> method can be
        used. In the case of a multiple-variation listing, the <strong>publishOfferByInventoryItemGroup</strong>
        call should be used instead, as this call will convert all unpublished offers
        associated with an inventory item group into a multiple-variation listing.
      operationId: publishOffer
      parameters:
      - description: The unique identifier of the offer that is to be published.
        explode: false
        in: path
        name: offerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /offer/{offerId}/publish/
      tags:
      - Inventory API/offer
      x-apifox-folder: Inventory API/offer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497707-run
      x-accepts: application/json
  /offer/withdraw_by_inventory_item_group:
    post:
      deprecated: false
      description: This call is used to end a multiple-variation eBay listing that
        is associated with the specified inventory item group. This call only ends
        multiple-variation eBay listing associated with the inventory item group but
        does not delete the inventory item group object. Similarly, this call also
        does not delete any of the offers associated with the inventory item group,
        but instead all of these offers go into the unpublished state. If the seller
        wanted to relist the multiple-variation eBay listing, they could use the <strong>publishOfferByInventoryItemGroup</strong>
        method.
      operationId: withdrawOfferByInventoryItemGroup
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawByInventoryItemGroupRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /offer/withdraw_by_inventory_item_group
      tags:
      - Inventory API/offer
      x-apifox-folder: Inventory API/offer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497708-run
      x-contentType: application/json
      x-accepts: application/json
  /location/{merchantLocationKey}:
    delete:
      deprecated: false
      description: <p>This call deletes the inventory location that is specified in
        the <code>merchantLocationKey</code> path parameter. Note that deleting a
        location will not affect any active eBay listings associated with the deleted
        location, but the seller will not be able modify the offers associated with
        the inventory location once it is deleted.</p><p>The <code>authorization</code>
        HTTP header is the only required request header for this call. </p><p>Unless
        one or more errors and/or warnings occur with the call, there is no response
        payload for this call. A successful call will return an HTTP status value
        of <i>200 OK</i>.</p>
      operationId: deleteInventoryLocation
      parameters:
      - description: 'A unique merchant-defined key (ID) for an inventory location.
          This value is passed in at the end of the call URI to indicate the inventory
          location to be deleted. <br><br><b>Max length</b>: 36'
        explode: false
        in: path
        name: merchantLocationKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /location/{merchantLocationKey}
      tags:
      - Inventory API/location
      x-apifox-folder: Inventory API/location
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497712-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This call retrieves all defined details of the inventory location
        that is specified by the <b>merchantLocationKey</b> path parameter. <p>The
        <code>authorization</code> HTTP header is the only required request header
        for this call. </p><p>A successful call will return an HTTP status value of
        <i>200 OK</i>.</p>
      operationId: getInventoryLocation
      parameters:
      - description: 'A unique merchant-defined key (ID) for an inventory location.
          This value is passed in at the end of the call URI to specify the inventory
          location to retrieve. <br><br><b>Max length</b>: 36'
        explode: false
        in: path
        name: merchantLocationKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryLocationResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /location/{merchantLocationKey}
      tags:
      - Inventory API/location
      x-apifox-folder: Inventory API/location
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497709-run
      x-accepts: application/json
    post:
      deprecated: false
      description: <p>Use this call to create a new inventory location. In order to
        create and publish an offer (and create an eBay listing), a seller must have
        at least one inventory location, as every offer must be associated with a
        location.</p><p>Upon first creating an inventory location, only a seller-defined
        location identifier and a physical location is required, and once set, these
        values can not be changed. The unique identifier value (<i>merchantLocationKey</i>)
        is passed in at the end of the call URI. This <i>merchantLocationKey</i> value
        will be used in other Inventory Location calls to identify the inventory location
        to perform an action against.</p><p>At this time, location types are either
        warehouse or store. Warehouse locations are used for traditional shipping,
        and store locations are generally used by US merchants selling products through
        the In-Store Pickup program, or used by UK, Australian, and German merchants
        selling products through the Click and Collect program. A full address is
        required for store inventory locations. However, for warehouse inventory locations,
        a full street address is not needed, but the city, state/province, and country
        of the location must be provided. </p><p>Note that all inventory locations
        are "enabled" by default when they are created, and you must specifically
        disable them (by passing in a value of <code>DISABLED</code> in the <strong>merchantLocationStatus</strong>
        field) if you want them to be set to the disabled state. The seller's inventory
        cannot be loaded to inventory locations in the disabled state.</p> <p>In addition
        to the <code>authorization</code> header, which is required for all eBay REST
        API calls, the following table includes another request header that is mandatory
        for the <strong>createInventoryLocation</strong> call, and two other request
        headers that are optional:</p><br> <table> <tr> <th>Header</th> <th>Description</th>
        <th>Required?</th> <th>Applicable Values</th> </tr> <tr> <td><code>Accept</code></td>
        <td>Describes the response encoding, as required by the caller. Currently,
        the interfaces require payloads formatted in JSON, and JSON is the default.</td>
        <td>No</td> <td><code>application/json</code></td> </tr> <tr> <td><code>Content-Language</code></td>
        <td>Use this header to control the language that is used for any returned
        errors or warnings in the call response.</td> <td>No</td> <td><code>en-US</code></td>
        </tr> <tr> <td><code>Content-Type</code></td> <td>The MIME type of the body
        of the request. Must be JSON.</td> <td>Yes</td> <td><code>application/json</code></td>
        </tr> </table></p><br/><p>Unless one or more errors and/or warnings occur
        with the call, there is no response payload for this call. A successful call
        will return an HTTP status value of <i>204 No Content</i>.</p>
      operationId: createInventoryLocation
      parameters:
      - description: 'A unique, merchant-defined key (ID) for an inventory location.
          This unique identifier, or key, is used in other Inventory API calls to
          identify an inventory location. <br><br><b>Max length</b>: 36'
        explode: false
        in: path
        name: merchantLocationKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryLocationFull'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Location Already Exists
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /location/{merchantLocationKey}
      tags:
      - Inventory API/location
      x-apifox-folder: Inventory API/location
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497711-run
      x-contentType: application/json
      x-accepts: application/json
  /offer/{offerId}/withdraw:
    post:
      deprecated: false
      description: This call is used to end a single-variation listing that is associated
        with the specified offer. This call is used in place of the <strong>deleteOffer</strong>
        call if the seller only wants to end the listing associated with the offer
        but does not want to delete the offer object. With this call, the offer object
        remains, but it goes into the unpublished state, and will require a <strong>publishOffer</strong>
        call to relist the offer.<br><br>To end a multiple-variation listing that
        is associated with an inventory item group, the <strong>withdrawOfferByInventoryItemGroup</strong>
        method can be used. This call only ends the multiple-variation listing associated
        with an inventory item group but does not delete the inventory item group
        object, nor does it delete any of the offers associated with the inventory
        item group, but instead all of these offers go into the unpublished state.
      operationId: withdrawOffer
      parameters:
      - description: The unique identifier of the offer that is to be withdrawn. This
          value is passed into the path of the call URI.
        explode: false
        in: path
        name: offerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /offer/{offerId}/withdraw
      tags:
      - Inventory API/offer
      x-apifox-folder: Inventory API/offer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497710-run
      x-accepts: application/json
  /location:
    get:
      deprecated: false
      description: This call retrieves all defined details for every inventory location
        associated with the seller's account. There are no required parameters for
        this call and no request payload. However, there are two optional query parameters,
        <strong>limit</strong> and <strong>offset</strong>. The <strong>limit</strong>
        query parameter sets the maximum number of inventory locations returned on
        one page of data, and the <strong>offset</strong> query parameter specifies
        the page of data to return. These query parameters are discussed more in the
        <strong>URI parameters</strong> table below. <p>The <code>authorization</code>
        HTTP header is the only required request header for this call. </p><p>A successful
        call will return an HTTP status value of <i>200 OK</i>.</p>
      operationId: getInventoryLocations
      parameters:
      - description: 'The value passed in this query parameter sets the maximum number
          of records to return per page of data. Although this field is a string,
          the value passed in this field should be a positive integer value. If this
          query parameter is not set, up to 100 records will be returned on each page
          of results. <br><br> <strong>Min</strong>: 1'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of locations to skip in the result set before
          returning the first location in the paginated response.  <p>Combine <b>offset</b>
          with the <b>limit</b> query parameter to control the items returned in the
          response. For example, if you supply an <b>offset</b> of <code>0</code>
          and a <b>limit</b> of <code>10</code>, the first page of the response contains
          the first 10 items from the complete list of items retrieved by the call.
          If <b>offset</b> is <code>10</code> and <b>limit</b> is <code>20</code>,
          the first page of the response contains items 11-30 from the complete result
          set.</p> <p><b>Default:</b> 0</p>
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /location
      tags:
      - Inventory API/location
      x-apifox-folder: Inventory API/location
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497713-run
      x-accepts: application/json
  /location/{merchantLocationKey}/update_location_details:
    post:
      deprecated: false
      description: '<p>Use this call to update non-physical location details for an
        existing inventory location. Specify the inventory location you want to update
        using the <b>merchantLocationKey</b> path parameter. <br><br>You can update
        the following text-based fields: <strong>name</strong>, <strong>phone</strong>,
        <strong>locationWebUrl</strong>, <strong>locationInstructions</strong> and
        <strong>locationAdditionalInformation</strong>. Whatever text is passed in
        for these fields in an <strong>updateInventoryLocation</strong> call will
        replace the current text strings defined for these fields. For store inventory
        locations, the operating hours and/or the special hours can also be updated.
        <br><br> The merchant location key, the physical location of the store, and
        its geo-location coordinates can not be updated with an <strong>updateInventoryLocation</strong>
        call </p><p>In addition to the <code>authorization</code> header, which is
        required for all eBay REST API calls, the following table includes another
        request header that is mandatory for the <strong>updateInventoryLocation</strong>
        call, and two other request headers that are optional:</p><br> <table> <tr>
        <th>Header</th> <th>Description</th> <th>Required?</th> <th>Applicable Values</th>
        </tr> <tr> <td><code>Accept</code></td> <td>Describes the response encoding,
        as required by the caller. Currently, the interfaces require payloads formatted
        in JSON, and JSON is the default.</td> <td>No</td> <td><code>application/json</code></td>
        </tr> <tr> <td><code>Content-Language</code></td> <td>Use this header to control
        the language that is used for any returned errors or warnings in the call
        response.</td> <td>No</td> <td><code>en-US</code></td> </tr> <tr> <td><code>Content-Type</code></td>
        <td>The MIME type of the body of the request. Must be JSON.</td> <td>Yes</td>
        <td><code>application/json</code></td> </tr> </table><br/><p>Unless one or
        more errors and/or warnings occurs with the call, there is no response payload
        for this call. A successful call will return an HTTP status value of <i>204
        No Content</i>.</p>'
      operationId: updateInventoryLocation
      parameters:
      - description: 'A unique merchant-defined key (ID) for an inventory location.
          This value is passed in the call URI to indicate the inventory location
          to be updated. <br><br><b>Max length</b>: 36'
        explode: false
        in: path
        name: merchantLocationKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryLocation'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /location/{merchantLocationKey}/update_location_details
      tags:
      - Inventory API/location
      x-apifox-folder: Inventory API/location
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497714-run
      x-contentType: application/json
      x-accepts: application/json
  /location/{merchantLocationKey}/enable:
    post:
      deprecated: false
      description: <p>This call enables a disabled inventory location that is specified
        in the <code>merchantLocationKey</code> path parameter. Once a disabled inventory
        location is enabled, sellers can start loading/modifying inventory to that
        inventory location. </p><p>The <code>authorization</code> HTTP header is the
        only required request header for this call.</p><p>A successful call will return
        an HTTP status value of <i>200 OK</i>.</p>
      operationId: enableInventoryLocation
      parameters:
      - description: 'A unique merchant-defined key (ID) for an inventory location.
          This value is passed in through the call URI to specify the disabled inventory
          location to enable. <br><br><b>Max length</b>: 36'
        explode: false
        in: path
        name: merchantLocationKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /location/{merchantLocationKey}/enable
      tags:
      - Inventory API/location
      x-apifox-folder: Inventory API/location
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497715-run
      x-accepts: application/json
  /location/{merchantLocationKey}/disable:
    post:
      deprecated: false
      description: <p>This call disables the inventory location that is specified
        in the <code>merchantLocationKey</code> path parameter. Sellers can not load/modify
        inventory to disabled inventory locations. Note that disabling an inventory
        location will not affect any active eBay listings associated with the disabled
        location, but the seller will not be able modify the offers associated with
        a disabled inventory location.</p><p>The <code>authorization</code> HTTP header
        is the only required request header for this call.</p><p>A successful call
        will return an HTTP status value of <i>200 OK</i>.</p>
      operationId: disableInventoryLocation
      parameters:
      - description: 'A unique merchant-defined key (ID) for an inventory location.
          This value is passed in through the call URI to disable the specified inventory
          location. <br><br><b>Max length</b>: 36'
        explode: false
        in: path
        name: merchantLocationKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /location/{merchantLocationKey}/disable
      tags:
      - Inventory API/location
      x-apifox-folder: Inventory API/location
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497716-run
      x-accepts: application/json
  /ad_campaign/{campaign_id}/ad:
    get:
      deprecated: false
      description: This method retrieves Promoted Listings ads that are associated
        with listings created with either the <a href="/Devzone/XML/docs/Reference/eBay/index.html"
        title="Trading API Reference">Trading API</a> or the <a href="/api-docs/sell/inventory/resources/methods"
        title="Inventory API Reference">Inventory API</a>. <p>The method retrieves
        ads related to the specified campaign. Specify the Promoted Listings campaign
        to target with the <b>campaign_id</b> path parameter.</p>  <p>Because of the
        large number of possible results, you can use query parameters to paginate
        the result set by specifying a <b>limit</b>, which dictates how many ads to
        return on each page of the response. You can also specify how many ads to
        skip in the result set before returning the first result using the <b>offset</b>
        path parameter.</p>  <p>Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to retrieve the current campaign IDs for the seller.</p>
      operationId: getAds
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      - description: A comma-separated list of ad group IDs. The results will be filtered
          to only include active ads for these ad groups. Call <a href="/api-docs/sell/marketing/resources/adgroup/methods/getAdGroups">getAdGroups</a>
          to retrieve the ad group ID for the ad group.<br /><br /><span class="tablenote"><b>Note:</b>
          This field only applies to the Cost Per Click (CPC) funding model; it does
          not apply to the Cost Per Sale (CPS) funding model.</span>
        explode: true
        in: query
        name: ad_group_ids
        required: false
        schema:
          type: string
        style: form
      - description: A comma-separated list of ad statuses. The results will be filtered
          to only include the given statuses of the ad. If none are provided, all
          ads are returned.
        explode: true
        in: query
        name: ad_status
        required: false
        schema:
          type: string
        style: form
      - description: 'Specifies the maximum number of ads to return on a page in the
          paginated response. <p><b>Default: </b>10 <br><b>Maximum:</b> 500</p>'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: A comma-separated list of listing IDs. The response includes
          only active ads (ads associated with a RUNNING campaign). The results do
          not include listing IDs that are excluded by other conditions.
        explode: true
        in: query
        name: listing_ids
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of ads to skip in the result set before
          returning the first ad in the paginated response.  <p>Combine <b>offset</b>
          with the <b>limit</b> query parameter to control the items returned in the
          response. For example, if you supply an <b>offset</b> of <code>0</code>
          and a <b>limit</b> of <code>10</code>, the first page of the response contains
          the first 10 items from the complete list of items retrieved by the call.
          If <b>offset</b> is <code>10</code> and <b>limit</b> is <code>20</code>,
          the first page of the response contains items 11-30 from the complete result
          set.</p> <p><b>Default:</b> 0</p>
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdPagedCollectionResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/ad
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497781-run
      x-accepts: application/json
    post:
      deprecated: false
      description: This method adds a listing to an existing Promoted Listings campaign
        using a <b>listingId</b> value generated by the <a href="/Devzone/XML/docs/Reference/eBay/index.html"
        title="Trading API Reference">Trading API</a> or <a href="/api-docs/sell/inventory/resources/methods"
        title="Inventory API Reference">Inventory API</a>, or using a value generated
        by an ad group ID. <p>For Promoted Listings Standard (PLS) campaigns using
        the Cost Per Sale (CPS) funding model, an ad may be directly created for the
        listing.</p><p>For the listing ID specified in the request, this method:</p>  <ul><li>Creates
        an ad for the listing.</li> <li>Sets the bid percentage (also known as the
        <i>ad rate</i>) for the ad.</li> <li>Associates the ad with the specified
        campaign.</li></ul>  <p>To create an ad for a listing, specify its <b>listingId</b>,
        plus the <b>bidPercentage</b> for the ad in the payload of the request. Specify
        the campaign to associate the ad with using the <b>campaign_id</b> path parameter.
        Listing IDs are generated by eBay when a seller creates listings with the
        Trading API.</p><p>For Promoted Listings Advanced (PLA) campaigns using the
        Cost Per Click (CPC) funding model, an ad group must be created first. If
        no ad group has been created for the campaign, an ad cannot be created.</p><p>For
        the ad group specified in the request, this method associates the ad with
        the specified ad group.</p><p>To create an ad for an ad group, specify the
        name of the ad group in the payload of the request. Specify the campaign to
        associate the ads with using the <b>campaign_id</b> path parameter. Ad groups
        are generated using the <a href="/api-docs/sell/marketing/resources/adgroup/methods/createAdGroup">createAdGroup</a>
        method.</p> <p>You can specify one or more ad groups per campaign.</p><p>Use
        <a href="/api-docs/sell/marketing/resources/campaign/methods/createCampaign">createCampaign</a>
        to create a new campaign and use <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to get a list of existing campaigns.</p><p>This call has no response payload.
        If the ad is successfully created, a <code>201 Created</code> HTTP status
        code and the <a href="/api-docs/sell/marketing/resources/ad/methods/getAd">getAd</a>
        URI of the ad are returned in the location header.</p>
      operationId: createAdByListingId
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/ad
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497783-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/ad/{ad_id}:
    delete:
      deprecated: false
      description: This method removes the specified ad from the specified campaign.<br
        /><br />Pass the ID of the ad to delete with the ID of the campaign associated
        with the ad as path parameters to the call.<br /><br />Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to get the current list of the seller's campaign IDs.<br /><br /><span class="tablenote"><b>Note:</b>
        This method only applies to the Cost Per Sale (CPS) funding model; it does
        not apply to the Cost Per Click (CPC) funding model. See <a href="/api-docs/sell/static/marketing/pl-overview.html#funding-model">Funding
        Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span><br
        /><br />When using the CPC funding model, use the <b>bulkUpdateAdsStatusByListingId</b>
        method to change the status of ads to ARCHIVED.
      operationId: deleteAd
      parameters:
      - description: Identifier of an ad. This ID was generated when the ad was created.
        explode: false
        in: path
        name: ad_id
        required: true
        schema:
          type: string
        style: simple
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/ad/{ad_id}
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497787-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This method retrieves the specified ad from the specified campaign.  <p>In
        the request, supply the <b>campaign_id</b> and <b>ad_id</b> as path parameters.</p>
        <p>Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to retrieve a list of the seller's current campaign IDs and call <a href="/api-docs/sell/marketing/resources/ad/methods/getAds">getAds</a>
        to retrieve their current ad IDs.</p>
      operationId: getAd
      parameters:
      - description: A unique identifier for an ad. This ID is generated when the
          ad is created.
        explode: false
        in: path
        name: ad_id
        required: true
        schema:
          type: string
        style: simple
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/ad/{ad_id}
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497782-run
      x-accepts: application/json
  /ad_campaign/{campaign_id}/ad_group:
    get:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method retrieves ad groups for the specified campaigns.<br /><br />Each
        campaign can only have <b>one</b> ad group.<br /><br />In the request, supply
        the <b>campaign_ids</b> as path parameters.<br /><br />Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to retrieve a list of the current campaign IDs for a seller.
      operationId: getAdGroups
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      - description: A comma-separated list of ad group statuses. The results will
          be filtered to only include the given statuses of the ad group.<br /><br
          />The results might not include these ad groups if other search conditions
          exclude them.
        explode: true
        in: query
        name: ad_group_status
        required: false
        schema:
          type: string
        style: form
      - description: The number of results, from the current result set, to be returned
          in a single page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: 'The number of results that will be skipped in the result set.
          This is used with the <b>limit</b> field to control the pagination of the
          output.<br /><br />For example, if the <b>offset</b> is set to <code>0</code>
          and the <b>limit</b> is set to <code>10</code>, the method will retrieve
          items 1 through 10 from the list of items returned. If the <b>offset</b>
          is set to <code>10</code> and the <b>limit</b> is set to <code>10</code>,
          the method will retrieve items 11 through 20 from the list of items returned.<br><br><b>Default</b>:
          <code>0</code>'
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdGroupPagedCollectionResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/ad_group
      tags:
      - Marketing API/ad_group
      x-apifox-folder: Marketing API/ad_group
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497784-run
      x-accepts: application/json
    post:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method adds an ad group to an existing PLA campaign that uses the Cost
        Per Click (CPC) funding model.<br /><br />To create an ad group for a campaign,
        specify the <b>defaultBid</b> for the ad group in the payload of the request.
        Then specify the campaign to which the ad group should be associated using
        the <b>campaign_id</b> path parameter.<br /><br />Each campaign can have one
        or more associated ad groups.
      operationId: createAdGroup
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdGroupRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/ad_group
      tags:
      - Marketing API/ad_group
      x-apifox-folder: Marketing API/ad_group
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497790-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/get_ads_by_inventory_reference:
    get:
      deprecated: false
      description: This method retrieves Promoted Listings ads associated with listings
        that are managed with the <a href="/api-docs/sell/inventory/resources/methods"
        title="Inventory API Reference">Inventory API</a> from the specified campaign.<br
        /><br />Supply the <b>campaign_id</b> as a path parameter and use query parameters
        to specify the <b>inventory_reference_id</b> and <b>inventory_reference_type</b>
        pairs.<br /><br />In the Inventory API, an <i>inventory reference ID</i> is
        either a seller-defined <b>SKU</b> value or an <b>inventoryItemGroupKey</b>
        (a seller-defined ID for an inventory item group, which is an entity that's
        used in the Inventory API to create a multiple-variation listing). To indicate
        a listing managed by the Inventory API, you must always specify both an <b>inventory_reference_id</b>
        and the associated <b>inventory_reference_type</b>.<br /><br />Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to retrieve all of the seller's the current campaign IDs.<br /><br /><span
        class="tablenote"><b>Note:</b> This method only applies to the Cost Per Sale
        (CPS) funding model; it does not apply to the Cost Per Click (CPC) funding
        model. See <a href="/api-docs/sell/static/marketing/pl-overview.html#funding-model">Funding
        Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span>
      operationId: getAdsByInventoryReference
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      - description: The inventory reference ID associated with the ad you want returned.
          A seller's inventory reference ID is the ID of either a listing or the ID
          of an inventory item group (the parent of a multi-variation listing, such
          as a shirt that is available in multiple sizes and colors). You must always
          supply in both an <b>inventory_reference_id</b> and an <b>inventory_reference_type</b>.
        explode: true
        in: query
        name: inventory_reference_id
        required: true
        schema:
          type: string
        style: form
      - description: 'The type of the inventory reference ID. Set this value to either
          <code>INVENTORY_ITEM</CODE> (a single listing) or <code>INVENTORY_ITEM_GROUP</CODE>
          (a multi-variation listing). You must always pass in both an <b>inventory_reference_id</b>
          and an <b>inventory_reference_type</b>. '
        explode: true
        in: query
        name: inventory_reference_type
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ads'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/get_ads_by_inventory_reference
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497785-run
      x-accepts: application/json
  /ad_campaign/{campaign_id}/ad_group/{ad_group_id}:
    get:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method retrieves the details of a specified ad group, such as the ad
        group’s default bid and status.<br /><br />In the request, specify the <b>campaign_id</b>
        and <b>ad_group_id</b> as path parameters.<br /><br />Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to retrieve a list of the current campaign IDs for a seller and call <a href="/api-docs/sell/marketing/resources/adgroup/methods/getAdGroups">getAdGroups</a>
        for the ad group ID of the ad group you wish to retrieve.
      operationId: getAdGroup
      parameters:
      - description: The ID of the ad group that shall be retrieved.
        explode: false
        in: path
        name: ad_group_id
        required: true
        schema:
          type: string
        style: simple
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdGroup'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/ad_group/{ad_group_id}
      tags:
      - Marketing API/ad_group
      x-apifox-folder: Marketing API/ad_group
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497786-run
      x-accepts: application/json
    put:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method updates the ad group associated with a campaign.<br /><br />With
        this method, you can modify the <b>default bid</b> for the ad group, change
        the state of the ad group, or change the name of the ad group. Pass the <b>ad_group_id</b>
        you want to update as a URI parameter, and configure the <b>adGroupStatus</b>
        and <b>defaultBid</b> in the request payload.<br /><br />Call <a href="/api-docs/sell/marketing/resources/adgroup/methods/getAdGroup">getAdGroup</a>
        to retrieve the current default bid and status of the ad group that you would
        like to update.
      operationId: updateAdGroup
      parameters:
      - description: The ID of the ad group that shall be updated.
        explode: false
        in: path
        name: ad_group_id
        required: true
        schema:
          type: string
        style: simple
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdGroupRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/ad_group/{ad_group_id}
      tags:
      - Marketing API/ad_group
      x-apifox-folder: Marketing API/ad_group
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497789-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/delete_ads_by_inventory_reference:
    post:
      deprecated: false
      description: This method works with listings that are managed with the <a href="/api-docs/sell/inventory/resources/methods"
        title="Inventory API Reference">Inventory API</a>.  <p>The method deletes
        ads using a list of seller-defined inventory reference IDs, used with the
        Inventory API, that are associated with the specified campaign ID.</p> <p>Specify
        the campaign ID (as a path parameter) and a list of <b>inventoryReferenceId</b>
        and <b>inventoryReferenceType</b> pairs to be deleted.</p>  <p>Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to get a list of the seller's current campaign IDs.</p><span class="tablenote"><b>Note:</b>
        This method only applies to the Cost Per Sale (CPS) funding model; it does
        not apply to the Cost Per Click (CPC) funding model. See <a href="/api-docs/sell/static/marketing/pl-overview.html#funding-model">Funding
        Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span><br
        /><br />When using the CPC funding model, use the bulkUpdateAdsStatusByInventoryReference
        method to change the status of ads to ARCHIVED.
      operationId: deleteAdsByInventoryReference
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAdsByInventoryReferenceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdIds'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/delete_ads_by_inventory_reference
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497788-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/bulk_create_ads_by_inventory_reference:
    post:
      deprecated: false
      description: This method adds multiple listings that are managed with the <a
        href="/api-docs/sell/inventory/resources/methods" title="Inventory API Reference">Inventory
        API</a> to an existing Promoted Listings campaign.<br /><br />For Promoted
        Listings Standard (PLS) campaigns using the Cost Per Sale (CPS) model, bulk
        ads may be directly created for the listing.<br /><br />For each listing specified
        in the request, this method:<br /><ul><li>Creates an ad for the listing.</li>
        <li>Sets the bid percentage (also known as the <i>ad rate</i>) for the ads
        created.</li> <li>Associates the ads created with the specified campaign.</li></ul><br
        />To create ads for a listing, specify their <b>inventoryReferenceId</b> and
        <b>inventoryReferenceType</b>, plus the <b>bidPercentage</b> for the ad in
        the payload of the request. Specify the campaign to which you want to associate
        the ads using the <b>campaign_id</b> path parameter.<br /><br /><span class="tablenote"><b>Note:</b>
        This method only applies to the Cost Per Sale (CPS) funding model; it does
        not apply to the Cost Per Click (CPC) funding model. See <a href="/api-docs/sell/static/marketing/pl-overview.html#funding-model">Funding
        Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span><br
        /><br />Use <a href="/api-docs/sell/marketing/resources/campaign/methods/createCampaign">createCampaign</a>
        to create a new campaign and use <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to get a list of existing campaigns.
      operationId: bulkCreateAdsByInventoryReference
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created. Get a seller's campaign IDs by calling <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>.
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCreateAdsByInventoryReferenceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkCreateAdsByInventoryReferenceResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/bulk_create_ads_by_inventory_reference
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497791-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/ad/{ad_id}/update_bid:
    post:
      deprecated: false
      description: This method updates the bid percentage (also known as the "ad rate")
        for the specified ad in the specified campaign. <p>In the request, supply
        the <b>campaign_id</b> and <b>ad_id</b> as path parameters, and supply the
        new <b>bidPercentage</b> value in the payload of the call.</p>  <p>Call <a
        href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to retrieve a seller's current campaign IDs and call <a href="/api-docs/sell/marketing/resources/ad/methods/getAds">getAds</a>
        to get their ad IDs.</p><span class="tablenote"><b>Note:</b> This method only
        applies to the Cost Per Sale (CPS) funding model; it does not apply to the
        Cost Per Click (CPC) funding model. See <a href="/api-docs/sell/static/marketing/pl-overview.html#funding-model">Funding
        Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span>
      operationId: updateBid
      parameters:
      - description: A unique eBay-assigned ID for an ad that's generated when an
          ad is created.
        explode: false
        in: path
        name: ad_id
        required: true
        schema:
          type: string
        style: simple
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBidPercentageRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/ad/{ad_id}/update_bid
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497792-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/bulk_create_ads_by_listing_id:
    post:
      deprecated: false
      description: This method adds multiple listings to an existing Promoted Listings
        campaign using <b>listingId</b> values generated by the <a href="/Devzone/XML/docs/Reference/eBay/index.html"
        title="Trading API Reference">Trading API</a> or <a href="/api-docs/sell/inventory/resources/methods"
        title="Inventory API Reference">Inventory API</a>, or using values generated
        by an ad group ID.<p>For Promoted Listings Standard (PLS) campaigns using
        the Cost Per Sale (CPS) funding model, bulk ads may be directly created for
        the listing.</p><p>For each listing ID specified in the request, this method:</p>  <ul><li>Creates
        an ad for the listing.</li> <li>Sets the bid percentage (also known as the
        <i>ad rate</i>) for the ad.</li> <li>Associates the ad with the specified
        campaign.</li></ul><p>To create an ad for a listing, specify its <b>listingId</b>,
        plus the <b>bidPercentage</b> for the ad in the payload of the request. Specify
        the campaign to associate the ads with using the <b>campaign_id</b> path parameter.
        Listing IDs are generated by eBay when a seller creates listings with the
        Trading API.</p><p>You can specify a maximum of <b>500 listings per call</b>
        and each campaign can have ads for a maximum of 50,000 items. Be aware when
        using this call that each variation in a multiple-variation listing creates
        an individual ad.</p><p>For Promoted Listings Advanced (PLA) campaigns using
        the Cost Per Click (CPC) funding model, an ad group must be created first.
        If no ad group has been created for the campaign, ads cannot be created.</p><p>For
        the ad group specified in the request, this method associates the ad with
        the specified ad group.</p><p>To create an ad for an ad group, specify the
        name of the ad group plus the <b>defaultBid</b> for the ad in the payload
        of the request. Specify the campaign to associate the ads with using the <b>campaign_id</b>
        path parameter. Ad groups are generated using the <a href="/api-docs/sell/marketing/resources/adgroup/methods/createAdGroup">createAdGroup</a>  method.</p>
        <p>You can specify one or more ad groups per campaign.</p><p>Use <a href="/api-docs/sell/marketing/resources/campaign/methods/createCampaign">createCampaign</a>
        to create a new campaign and use <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to get a list of existing campaigns.</p>
      operationId: bulkCreateAdsByListingId
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that's generated
          when a campaign is created. Get a seller's campaign IDs by calling <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>.
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCreateAdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkAdResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/bulk_create_ads_by_listing_id
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497793-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/bulk_delete_ads_by_listing_id:
    post:
      deprecated: false
      description: This method works with listing IDs created with either the <a href="/Devzone/XML/docs/Reference/eBay/index.html"
        title="Trading API Reference">Trading API</a> or the <a href="/api-docs/sell/inventory/resources/methods"
        title="Inventory API Reference">Inventory API</a>.<br /><br />The method deletes
        a set of ads, as specified by a list of <b>listingID</b> values from a Promoted
        Listings campaign. A listing ID value is generated by eBay when a seller creates
        a listing with either the Trading API and Inventory API.<br /><br />Pass the
        <b>campaign_id</b> as a path parameter and populate the payload with the set
        of listing IDs that you want to delete.<br /><br />Get the campaign IDs for
        a seller by calling <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        and call <a href="/api-docs/sell/marketing/resources/ad/methods/getAds">getAds</a>
        to get a list of the seller's inventory reference IDs.<br /><br /><span class="tablenote"><b>Note:</b>
        This method only applies to the Cost Per Sale (CPS) funding model; it does
        not apply to the Cost Per Click (CPC) funding model. See <a href="/api-docs/sell/static/marketing/pl-overview.html#funding-model">Funding
        Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span><br
        /><br />When using the CPC funding model, use the <a href="/api-docs/sell/marketing/resources/ad/methods/bulkUpdateAdsStatusByListingId">bulkUpdateAdsStatusByListingId</a>
        method to change the status of ads to ARCHIVED.
      operationId: bulkDeleteAdsByListingId
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that's generated
          when a campaign is created. Get a seller's campaign IDs by calling <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>.
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeleteAdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkDeleteAdResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/bulk_delete_ads_by_listing_id
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497794-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/create_ads_by_inventory_reference:
    post:
      deprecated: false
      description: This method adds a listing that is managed with the <a href="/api-docs/sell/inventory/resources/methods"
        title="Inventory API Reference">Inventory API</a> to an existing Promoted
        Listings campaign.<br /><br />For Promoted Listings Standard (PLS) campaigns
        using the Cost Per Sale (CPS) funding model, an ad may be directly created
        for the listing.<br /><br />For each listing specified in the request, this
        method:<br /><ul><li>Creates an ad for the listing.</li> <li>Sets the bid
        percentage (also known as the <i>ad rate</i>) for the ads created.</li> <li>Associates
        the created ad with the specified campaign.</li></ul><br />To create an ad
        for a listing, specify its <b>inventoryReferenceId</b> and <b>inventoryReferenceType</b>,
        plus the <b>bidPercentage</b> for the ad in the payload of the request. Specify
        the campaign to associate the ad with using the <b>campaign_id</b> path parameter.<br
        /><br /><span class="tablenote"><b>Note:</b> This method only applies to the
        Cost Per Sale (CPS) funding model; it does not apply to the Cost Per Click
        (CPC) funding model. See <a href="/api-docs/sell/static/marketing/pl-overview.html#funding-model">Funding
        Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span><br
        /><br />Use <a href="/api-docs/sell/marketing/resources/campaign/methods/createCampaign">createCampaign</a>
        to create a new campaign and use <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to get a list of existing campaigns.
      operationId: createAdsByInventoryReference
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdsByInventoryReferenceRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdReferences'
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/create_ads_by_inventory_reference
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497795-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/bulk_update_ads_bid_by_listing_id:
    post:
      deprecated: false
      description: This method works with listings created with either the <a href="/Devzone/XML/docs/Reference/eBay/index.html"
        title="Trading API Reference">Trading API</a> or the <a href="/api-docs/sell/inventory/resources/methods"
        title="Inventory API Reference">Inventory API</a>.  <p>The method updates
        the <b>bidPercentage</b> values for a set of ads associated with the specified
        campaign.</p>  <p>Specify the <b>campaign_id</b> as a path parameter and supply
        a set of listing IDs with their associated updated <b>bidPercentage</b> values
        in the request body. An eBay listing ID is generated when a listing is created
        with the Trading API.</p>  <p>Get the campaign IDs for a seller by calling
        <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        and call <a href="/api-docs/sell/marketing/resources/ad/methods/getAds">getAds</a>
        to get a list of the seller's inventory reference IDs.</p><span class="tablenote"><b>Note:</b>
        This method only applies to the Cost Per Sale (CPS) funding model; it does
        not apply to the Cost Per Click (CPC) funding model. See <a href="/api-docs/sell/static/marketing/pl-overview.html#funding-model">Funding
        Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span>
      operationId: bulkUpdateAdsBidByListingId
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that's generated
          when a campaign is created. Get a seller's campaign IDs by calling <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>.
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCreateAdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkAdUpdateResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/bulk_update_ads_bid_by_listing_id
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497796-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/bulk_update_ads_status_by_listing_id:
    post:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"> <img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method works with listings created with either the <a href="/Devzone/XML/docs/Reference/eBay/index.html">Trading
        API</a> or the <a href="/api-docs/sell/inventory/resources/methods">Inventory
        API</a>.<br /><br />The method updates the status of ads in bulk, based on
        listing ID values.<br /><br />Specify the <b>campaign_id</b> as a path parameter
        and supply a set of listing IDs with their updated <b>adStatus</b> values
        in the request body. An eBay listing ID is generated when a listing is created
        with the Trading API.<br /><br />Get the campaign IDs for a seller by calling
        <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        and call <a href="/api-docs/sell/marketing/resources/ad/methods/getAds">getAds</a>
        to retrieve a list of seller inventory reference IDs.
      operationId: bulkUpdateAdsStatusByListingId
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateAdStatusByListingIdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkAdUpdateStatusByListingIdResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/bulk_update_ads_status_by_listing_id
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497797-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/bulk_delete_ads_by_inventory_reference:
    post:
      deprecated: false
      description: This method works with listings created with the <a href="/api-docs/sell/inventory/resources/methods"
        title="Inventory API Reference">Inventory API</a>.<br /><br />The method deletes
        a set of ads, as specified by a list of inventory reference IDs, from the
        specified campaign. <i>Inventory reference IDs</i> are seller-defined IDs
        that are used with the Inventory API</a>.<br /><br />Pass the <b>campaign_id</b>
        as a path parameter and populate the payload with a list of <b>inventoryReferenceId</b>
        and <b>inventoryReferenceType</b> pairs that you want to delete.<br /><br
        />Get the campaign IDs for a seller by calling <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        and call <a href="/api-docs/sell/marketing/resources/ad/methods/getAds">getAds</a>
        to get a list of the seller's inventory reference IDs.<br /><br /><span class="tablenote"><b>Note:</b>
        This method only applies to the Cost Per Sale (CPS) funding model; it does
        not apply to the Cost Per Click (CPC) funding model. See <a href="/api-docs/sell/static/marketing/pl-overview.html#funding-model">Funding
        Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span>
      operationId: bulkDeleteAdsByInventoryReference
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that's generated
          when a campaign is created. Get a seller's campaign IDs by calling <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>.
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeleteAdsByInventoryReferenceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkDeleteAdsByInventoryReferenceResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/bulk_delete_ads_by_inventory_reference
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497798-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/bulk_update_ads_status:
    post:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"> <img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method works with listings created with either the <a href="/Devzone/XML/docs/Reference/eBay/index.html">Trading
        API</a> or the <a href="/api-docs/sell/inventory/resources/methods">Inventory
        API</a>.<br /><br />This method updates the status of ads in bulk.<br /><br
        />Specify the <b>campaign_id</b> you want to update as a URI parameter, and
        configure the <b>adGroupStatus</b> in the request payload.
      operationId: bulkUpdateAdsStatus
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateAdStatusRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkAdUpdateStatusResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/bulk_update_ads_status
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497799-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/bulk_update_ads_bid_by_inventory_reference:
    post:
      deprecated: false
      description: This method works with listings created with either the <a href="/Devzone/XML/docs/Reference/eBay/index.html"
        title="Trading API Reference">Trading API</a> or the <a href="/api-docs/sell/inventory/resources/methods"
        title="Inventory API Reference">Inventory API</a>.  <p>The method updates
        the <b>bidPercentage</b> values for a set of ads associated with the specified
        campaign.</p>  <p>Specify the <b>campaign_id</b> as a path parameter and supply
        a set of listing IDs with their associated updated <b>bidPercentage</b> values
        in the request body. An eBay listing ID is generated when a listing is created
        with the Trading API.</p>  <p>Get the campaign IDs for a seller by calling
        <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        and call <a href="/api-docs/sell/marketing/resources/ad/methods/getAds">getAds</a>
        to get a list of the seller's inventory reference IDs.</p><span class="tablenote"><b>Note:</b>
        This method only applies to the Cost Per Sale (CPS) funding model; it does
        not apply to the Cost Per Click (CPC) funding model. See <a href="/api-docs/sell/static/marketing/pl-overview.html#funding-model">Funding
        Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span>
      operationId: bulkUpdateAdsBidByInventoryReference
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that's generated
          when a campaign is created. Get a seller's campaign IDs by calling <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>.
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCreateAdsByInventoryReferenceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUpdateAdsByInventoryReferenceResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/bulk_update_ads_bid_by_inventory_reference
      tags:
      - Marketing API/ad
      x-apifox-folder: Marketing API/ad
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497800-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign:
    get:
      deprecated: false
      description: This method retrieves the details for all of the seller's defined
        campaigns. Request parameters can be used to retrieve a specific campaign,
        such as the campaign's name, the start and end date, the status, and the funding
        model (Cost Per Sale (CPS) or Cost Per Click (CPC). <p>You can filter the
        result set by a campaign name, end date range, start date range, or campaign
        status. You can also paginate the records returned from the result set using
        the <b>limit</b> query parameter, and control which records to return using
        the  <b>offset</b> parameter.</p>
      operationId: getCampaigns
      parameters:
      - description: 'Specifies the campaign name. The results are filtered to include
          only the campaign by the specified name.<br /><br /><b>Note: </b>The results
          might be null if other filters exclude the campaign with this name. <br
          /><br /><b>Maximum: </b> 1 campaign name'
        explode: true
        in: query
        name: campaign_name
        required: false
        schema:
          type: string
        style: form
      - description: 'Include this filter and input a specific campaign status to
          retrieve campaigns currently in that state. <br /><br /><b>Note: </b>The
          results might not include all the campaigns with this status if other filters
          exclude them. <br /><br /><b>Valid values:</b> See <a href="/api-docs/sell/marketing/types/pls:CampaignStatusEnum">CampaignStatusEnum</a>
          <br /><br /><b>Maximum: </b> 1 status'
        explode: true
        in: query
        name: campaign_status
        required: false
        schema:
          type: string
        style: form
      - description: 'Specifies the range of a campaign''s end date. The results are
          filtered to include only campaigns with an end date that is within specified
          range. <br><br><b>Valid format (UTC)</b>: <ul><li><code> yyyy-MM-ddThh:mm:ssZ..yyyy-MM-ddThh:mm:ssZ
          </code>  (campaign ends within this range)</li><li><code>yyyy-MM-ddThh:mm:ssZ..</code>
          (campaign ends on or after this date)</li><li><code>..yyyy-MM-ddThh:mm:ssZ
          </code> (campaign ends on or before this date)</li><li><code>2016-09-08T00:00.00.000Z..2016-09-09T00:00:00Z</code>
          (campaign ends on September 08, 2016)</li></ul> <br /><br /><b>Note: </b>The
          results might not include all the campaigns ending on this date if other
          filters exclude them.'
        explode: true
        in: query
        name: end_date_range
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the funding strategy for the campaign.<br /><br />The
          results will be filtered to only include campaigns with the specified funding
          model. If not specified, all campaigns matching the other filter parameters
          will be returned. The results might not include these campaigns if other
          search conditions exclude them.<br /><br /><b>Valid Values:</b><ul><li><code>COST_PER_SALE</code></li><li><code>COST_PER_CLICK</code></li></ul>
        explode: true
        in: query
        name: funding_strategy
        required: false
        schema:
          type: string
        style: form
      - description: '<p>Specifies the maximum number of campaigns to return on a
          page in the paginated response.</p>  <b>Default: </b>10 <br><b>Maximum:
          </b> 500'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of campaigns to skip in the result set before
          returning the first report in the paginated response.  <p>Combine <b>offset</b>
          with the <b>limit</b> query parameter to control the items returned in the
          response. For example, if you supply an <b>offset</b> of <code>0</code>
          and a <b>limit</b> of <code>10</code>, the first page of the response contains
          the first 10 items from the complete list of items retrieved by the call.
          If <b>offset</b> is <code>10</code> and <b>limit</b> is <code>20</code>,
          the first page of the response contains items 11-30 from the complete result
          set.</p> <p><b>Default:</b> 0</p>
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: 'Specifies the range of a campaign''s start date in which to
          filter the results. The results are filtered to include only campaigns with
          a start date that is equal to this date or is within specified range.<br><br><b>Valid
          format (UTC): </b> <ul><li><code>yyyy-MM-ddThh:mm:ssZ..yyyy-MM-ddThh:mm:ssZ</code>
          (starts within this range)</li><li><code>yyyy-MM-ddThh:mm:ssZ</code> (campaign
          starts on or after this date)</li><li><code>..yyyy-MM-ddThh:mm:ssZ </code>(campaign
          starts on or before this date)</li><li><code>2016-09-08T00:00.00.000Z..2016-09-09T00:00:00Z</code>
          (campaign starts on September 08, 2016)</li></ul><br /><br /><b>Note: </b>The
          results might not include all the campaigns with this start date if other
          filters exclude them.'
        explode: true
        in: query
        name: start_date_range
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignPagedCollectionResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign
      tags:
      - Marketing API/campaign
      x-apifox-folder: Marketing API/campaign
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497802-run
      x-accepts: application/json
    post:
      deprecated: false
      description: 'This method creates a Promoted Listings ad campaign. <p>A Promoted
        Listings <i>campaign</i> is the structure into which you place the ads or
        ad group for the listings you want to promote.</p>  <p>Identify the items
        you want to place into a campaign either by "key" or by "rule" as follows:</p>
        <ul><li><b>Rules-based campaigns</b> &ndash; A rules-based campaign adds items
        to the campaign according to the <i>criteria</i> you specify in your call
        to <b>createCampaign</b>. You can set the <b>autoSelectFutureInventory</b>
        request field to <code>true</code> so that after your campaign launches, eBay
        will regularly assess your new, revised, or newly-eligible listings to determine
        whether any should be added or removed from your campaign according to the
        rules you set. If there are, eBay will add or remove them automatically on
        a daily basis.</li> <li><b>Key-based campaigns</b> &ndash; Add items to an
        existing campaign using either listing ID values or Inventory Reference values:
        <ul><li>Add <b>listingId</b> values to an existing campaign by calling either
        <b>createAdByListingID</b> or <b>bulkCreateAdsByListingId</b>.</li>  <li>Add
        <b>inventoryReference</b> values to an existing campaign by calling either
        <b>createAdByInventoryReference</b> or <b>bulkCreateAdsByInventoryReference</b>.</li><li>Add
        an <b>ad group</b> to an existing campaign by calling <b>createAdGroup</b>.</li></ul><p
        class="tablenote"><b>Note:</b> No matter how you add items to a Promoted Listings
        campaign, each campaign can contain ads for a maximum of 50,000 items. <br><br>If
        a rules-based campaign identifies more than 50,000 items, ads are created
        for only the first 50,000 items identified by the specified criteria, and
        ads are not created for the remaining items.</p>  <p><b>Creating a campaign</b></p>
        <p>To create a basic campaign, supply:</p>  <ul><li>The user-defined campaign
        name</li> <li>The start date (and optionally the end date) of the campaign</li>
        <li>The eBay marketplace on which the campaign is hosted</li> <li>Details
        on the campaign funding model</li></ul>  <p>The campaign funding model specifies
        how the Promoted Listings fee is calculated. Currently, the supported funding
        models are <code>COST_PER_SALE</code> and <code>COST_PER_CLICK</code>. For
        complete information on how the fee is calculated and when it applies, see
        <a href="/api-docs/sell/static/marketing/pl-overview.html#pl-fees">Promoted
        Listings fees</a>.</p>   <p>If you populate the <b>campaignCriterion</b> object
        in your <b>createCampaign</b> request, campaign "ads" are created by "rule"
        for the listings that meet the criteria you specify, and these ads are associated
        with the newly created campaign.</p>  <p>For details on creating Promoted
        Listings campaigns and how to select the items to be included in your campaigns,
        see <a href="/api-docs/sell/static/marketing/pl-create-campaign.html">Promoted
        Listings campaign creation</a>.</p>  <p>For recommendations on which listings
        are prime for a Promoted Listings ad campaign and to get guidance on how to
        set the <b>bidPercentage</b> field, see <a href="/api-docs/sell/static/marketing/pl-reco-api.html">Using
        the Recommendation API to help configure campaigns</a>.</p>  <p class="tablenote"><b>Tip:</b>
        See <a href="/api-docs/sell/marketing/static/overview.html#PL-requirements">Promoted
        Listings requirements and restrictions</a> for the details on the marketplaces
        that support Promoted Listings via the API. See <a href="/api-docs/sell/static/marketing/pl-restrictions">Promoted
        Listings restrictions</a> for details about campaign limitations and restrictions.</p>'
      operationId: createCampaign
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCampaignRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign
      tags:
      - Marketing API/campaign
      x-apifox-folder: Marketing API/campaign
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497801-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/ad_group/{ad_group_id}/suggest_keywords:
    post:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method allows sellers to retrieve a list of keyword ideas to be targeted
        for Promoted Listings campaigns.
      operationId: suggestKeywords
      parameters:
      - description: The ID of the ad group for which the keyword suggestions will
          be provided.
        explode: false
        in: path
        name: ad_group_id
        required: true
        schema:
          type: string
        style: simple
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetedKeywordRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetedKeywordsPagedCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/ad_group/{ad_group_id}/suggest_keywords
      tags:
      - Marketing API/ad_group
      x-apifox-folder: Marketing API/ad_group
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497803-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/ad_group/{ad_group_id}/suggest_bids:
    post:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method allows sellers to retrieve the suggested bids for input keywords
        and match type.
      operationId: suggestBids
      parameters:
      - description: The ID of the ad group containing the keywords for which the
          bid suggestions will be provided.
        explode: false
        in: path
        name: ad_group_id
        required: true
        schema:
          type: string
        style: simple
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetedBidRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetedBidsPagedCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/ad_group/{ad_group_id}/suggest_bids
      tags:
      - Marketing API/ad_group
      x-apifox-folder: Marketing API/ad_group
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497804-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/clone:
    post:
      deprecated: false
      description: 'This method clones (makes a copy of) the specified campaign''s
        <b>campaign criterion</b>. The <b>campaign criterion</b> is a container for
        the fields that define the criteria for a rule-based campaign.<p>To clone
        a campaign, supply the <b>campaign_id</b> as a path parameter in your call.
        There is no request payload.</p>  <p>The ID of the newly-cloned campaign is
        returned in the <b>Location</b> response header.</p><p>Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to retrieve a seller''s current campaign IDs.</p>  <p><b>Requirement: </b>In
        order to clone a campaign, the <b>campaignStatus</b> must be <code>ENDED</code>
        and the campaign must define a set of selection rules (it must be a rules-based
        campaign).</p><span class="tablenote"><b>Note:</b> This method only applies
        to the Cost Per Sale (CPS) funding model; it does not apply to the Cost Per
        Click (CPC) funding model. See <a href="/api-docs/sell/static/marketing/pl-overview.html#funding-model">Funding
        Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span>'
      operationId: cloneCampaign
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created. This ID is the campaign ID of the campaign being
          cloned.<br /><br /><span class="tablenote"><b>Note:</b> You can retrieve
          the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneCampaignRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/clone
      tags:
      - Marketing API/campaign
      x-apifox-folder: Marketing API/campaign
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497805-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}:
    delete:
      deprecated: false
      description: 'This method deletes the campaign specified by the <code>campaign_id</code>
        query parameter.<br /><br /><span class="tablenote"><b>Note: </b> You can
        only delete campaigns that have ended.</span><br /><br />Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to retrieve the <b>campaign_id</b> and the campaign status (<code>RUNNING</code>,
        <code>PAUSED</code>, <code>ENDED</code>, and so on) for all the seller''s
        campaigns.'
      operationId: deleteCampaign
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}
      tags:
      - Marketing API/campaign
      x-apifox-folder: Marketing API/campaign
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497807-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This method retrieves the details of a single campaign, as specified
        with the <b>campaign_id</b> query parameter.  <p>This method returns all the
        details of a campaign (including the campaign's the selection rules), except
        the for the listing IDs or inventory reference IDs included in the campaign.
        These IDs are returned by <a href="/api-docs/sell/marketing/resources/ad/methods/getAds">getAds</a>.</p>  <p>Call
        <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to retrieve a list of the seller's campaign IDs.</p>
      operationId: getCampaign
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}
      tags:
      - Marketing API/campaign
      x-apifox-folder: Marketing API/campaign
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497806-run
      x-accepts: application/json
  /ad_campaign/{campaign_id}/end:
    post:
      deprecated: false
      description: This method ends an active (<code>RUNNING</code>) or paused campaign.
        Specify the campaign you want to end by supplying its campaign ID in a query
        parameter.  <p>Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to retrieve the <b>campaign_id</b> and the campaign status (<code>RUNNING</code>,
        <code>PAUSED</code>, <code>ENDED</code>, and so on) for all the seller's campaigns.</p>
      operationId: endCampaign
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/end
      tags:
      - Marketing API/campaign
      x-apifox-folder: Marketing API/campaign
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497808-run
      x-accepts: application/json
  /ad_campaign/find_campaign_by_ad_reference:
    get:
      deprecated: false
      description: This method retrieves the campaigns containing the listing that
        is specified using either a listing ID, or an inventory reference ID and inventory
        reference type pair. The request accepts either a <b>listing_id</b>, <i>or</i>
        an <b>inventory_reference_id</b> and <b>inventory_reference_type</b> pair,
        as used in the Inventory API.<br /><br />eBay <i>listing IDs</i> are generated
        by either the <a href="/Devzone/XML/docs/Reference/eBay/index.html" title="Trading
        API Reference">Trading API</a> or the <a href="/api-docs/sell/inventory/resources/methods">Inventory
        API</a> when you create a listing.<br /><br />An <i>inventory reference ID</i>
        can be either a seller-defined <b>SKU</b> or <b>inventoryItemGroupKey</b>,
        as specified in the Inventory API.<br /><br /><span class="tablenote"><b>Note:</b>
        This method only applies to the Cost Per Sale (CPS) funding model; it does
        not apply to the Cost Per Click (CPC) funding model. See <a href="/api-docs/sell/static/marketing/pl-overview.html#funding-model">Funding
        Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span>
      operationId: findCampaignByAdReference
      parameters:
      - description: The seller's inventory reference ID of the listing to be used
          to find the campaign in which it is associated.  This will either be a seller-defined
          <b>SKU</b> value or inventory item group ID, depending on the reference
          type specified. You must always pass in both  <b>inventory_reference_id</b>
          and <b>inventory_reference_type</b>.
        explode: true
        in: query
        name: inventory_reference_id
        required: false
        schema:
          type: string
        style: form
      - description: The type of the seller's inventory reference ID, which is a listing
          or group of items. You must always pass in both <b>inventory_reference_id</b>
          and <b>inventory_reference_type</b>.
        explode: true
        in: query
        name: inventory_reference_type
        required: false
        schema:
          type: string
        style: form
      - description: Identifier of the eBay listing associated with the ad.
        explode: true
        in: query
        name: listing_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaigns'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/find_campaign_by_ad_reference
      tags:
      - Marketing API/campaign
      x-apifox-folder: Marketing API/campaign
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497809-run
      x-accepts: application/json
  /ad_campaign/get_campaign_by_name:
    get:
      deprecated: false
      description: This method retrieves the details of a single campaign, as specified
        with the <b>campaign_name</b> query parameter. Note that the campaign name
        you specify must be an exact, case-sensitive match of the name of the campaign
        you want to retrieve.</p><p>Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to retrieve a list of the seller's campaign names.</p>
      operationId: getCampaignByName
      parameters:
      - description: The name of the campaign.
        explode: true
        in: query
        name: campaign_name
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/get_campaign_by_name
      tags:
      - Marketing API/campaign
      x-apifox-folder: Marketing API/campaign
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497810-run
      x-accepts: application/json
  /ad_campaign/{campaign_id}/pause:
    post:
      deprecated: false
      description: 'This method pauses an active (RUNNING) campaign.  <p>You can restart
        the campaign by calling <a href="/api-docs/sell/marketing/resources/campaign/methods/resumeCampaign">resumeCampaign</a>,
        as long as the campaign''s end date is in the future.</p>  <p><b>Note: </b>
        The listings associated with a paused campaign cannot be added into another
        campaign.</p>  <p>Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to retrieve the <b>campaign_id</b> and the campaign status (<code>RUNNING</code>,
        <code>PAUSED</code>, <code>ENDED</code>, and so on) for all the seller''s
        campaigns.</p>'
      operationId: pauseCampaign
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/pause
      tags:
      - Marketing API/campaign
      x-apifox-folder: Marketing API/campaign
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497811-run
      x-accepts: application/json
  /ad_campaign/{campaign_id}/resume:
    post:
      deprecated: false
      description: This method resumes a paused campaign, as long as its end date
        is in the future. Supply the <b>campaign_id</b> for the campaign you want
        to restart as a query parameter in the request.  <p>Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to retrieve the <b>campaign_id</b> and the campaign status (<code>RUNNING</code>,
        <code>PAUSED</code>, <code>ENDED</code>, and so on) for all the seller's campaigns.</p>
      operationId: resumeCampaign
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/resume
      tags:
      - Marketing API/campaign
      x-apifox-folder: Marketing API/campaign
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497812-run
      x-accepts: application/json
  /ad_campaign/{campaign_id}/suggest_items:
    get:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method allows sellers to obtain ideas for listings, which can be targeted
        for Promoted Listings campaigns.
      operationId: suggestItems
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      - description: 'Specifies the category ID that is used to limit the results.
          This refers to an exact leaf category (the lowest level in that category
          and has no children). This field can have one category ID, or a comma-separated
          list of IDs. To return all category IDs, set to <code>null</code>. <br /><br
          /><b>Maximum: </b> 10 '
        explode: true
        in: query
        name: category_ids
        required: false
        schema:
          type: string
        style: form
      - description: 'Specifies the maximum number of campaigns to return on a page
          in the paginated response. If no value is specified, the default value is
          used. <br /><br /><b>Default: </b>10 <br /><br /><b>Minimum: </b> 1<br /><br
          /><b>Maximum: </b> 1000'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of campaigns to skip in the result set before
          returning the first report in the paginated response.  <p>Combine <b>offset</b>
          with the <b>limit</b> query parameter to control the items returned in the
          response. For example, if you supply an <b>offset</b> of <code>0</code>
          and a <b>limit</b> of <code>10</code>, the first page of the response contains
          the first 10 items from the complete list of items retrieved by the call.
          If <b>offset</b> is <code>10</code> and <b>limit</b> is <code>20</code>,
          the first page of the response contains items 11-30 from the complete result
          set.</p> <p><b>Default:</b> 0</p>
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetedAdsPagedCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/suggest_items
      tags:
      - Marketing API/campaign
      x-apifox-folder: Marketing API/campaign
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497813-run
      x-accepts: application/json
  /ad_campaign/{campaign_id}/update_ad_rate_strategy:
    post:
      deprecated: false
      description: This method updates the ad rate strategy for an existing Promoted
        Listings Standard (PLS) rules-based ad campaign that uses the Cost Per Sale
        (CPS) funding model.<br /><br />Specify the <b>campaign_id</b> as a path parameter.
        You can retrieve the campaign IDs for a seller by calling the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        method.<br /><br /><span class="tablenote"><b>Note:</b> This method only applies
        to the CPS funding model; it does not apply to the Cost Per Click (CPC) funding
        model. See <a href="/api-docs/sell/static/marketing/pl-overview.html#funding-model">Funding
        Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span>
      operationId: updateAdRateStrategy
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdrateStrategyRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/update_ad_rate_strategy
      tags:
      - Marketing API/campaign
      x-apifox-folder: Marketing API/campaign
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497814-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/update_campaign_budget:
    post:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method updates the daily budget for a PLA campaign that uses the Cost
        Per Click (CPC) funding model.<br /><br />A click occurs when an eBay user
        finds and clicks on the seller’s listing (within the search results) after
        using a keyword that the seller has created for the campaign. For each ad
        in an ad group in the campaign, each click triggers a cost, which gets subtracted
        from the campaign’s daily budget. If the cost of the clicks exceeds the daily
        budget, the Promoted Listings campaign will be paused until the next day.<br
        /><br />Specify the <b>campaign_id</b> as a path parameter. You can retrieve
        the campaign IDs for a seller by calling the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        method.
      operationId: updateCampaignBudget
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaignBudgetRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/update_campaign_budget
      tags:
      - Marketing API/campaign
      x-apifox-folder: Marketing API/campaign
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497815-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/keyword:
    get:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method can be used to retrieve all of the keywords for ad groups in
        PLA campaigns that use the Cost Per Click (CPC) funding model.<br /><br />In
        the request, specify the <b>campaign_id</b> as a path parameter. If one or
        more <b>ad_group_ids</b> are passed in the request body, the keywords for
        those ad groups will be returned. If <b>ad_group_ids</b> are not passed in
        the response body, the call will return all the keywords in the campaign.<br
        /><br />Call the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        method to retrieve a list of current campaign IDs for a seller.
      operationId: getKeywords
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      - description: A comma-separated list of ad group IDs. This query parameter
          is used if the seller wants to retrieve keywords from one or more specific
          ad groups. If this query parameter is not used, all keywords that are part
          of the CPC campaign are returned.<span class="tablenote"><b>Note:</b>You
          can call the <a href="/api-docs/sell/marketing/resources/adgroup/methods/getAdGroups">getAdGroups</a>  method
          to retrieve the ad group IDs for a seller.</span>
        explode: true
        in: query
        name: ad_group_ids
        required: false
        schema:
          type: string
        style: form
      - description: A comma-separated list of keyword statuses. The results will
          be filtered to only include the given statuses of the keyword. If none are
          provided, all keywords are returned.
        explode: true
        in: query
        name: keyword_status
        required: false
        schema:
          type: string
        style: form
      - description: '<p>Specifies the maximum number of results to return on a page
          in the paginated response.</p>  <b>Default: </b>10 <br><b>Maximum: </b>
          500'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results to skip in the result set before
          returning the first report in the paginated response.  <p>Combine <b>offset</b>
          with the <b>limit</b> query parameter to control the items returned in the
          response. For example, if you supply an <b>offset</b> of <code>0</code>
          and a <b>limit</b> of <code>10</code>, the first page of the response contains
          the first 10 items from the complete list of items retrieved by the call.
          If <b>offset</b> is <code>10</code> and <b>limit</b> is <code>20</code>,
          the first page of the response contains items 11-30 from the complete result
          set.</p> <p><b>Default:</b> 0</p>
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeywordPagedCollectionResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/keyword
      tags:
      - Marketing API/keyword
      x-apifox-folder: Marketing API/keyword
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497816-run
      x-accepts: application/json
    post:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method creates keywords using a specified campaign ID for an existing
        PLA campaign.<br /><br />In the request, supply the <b>campaign_id</b> as
        a path parameter.<br /><br />Call the <a href="/api-docs/sell/marketing/resources/campaign/methods/suggestKeywords">suggestKeywords</a>
        method to retrieve a list of keyword ideas to be targeted for PLA campaigns,
        and call the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        method to retrieve a list of current campaign IDs for a seller.
      operationId: createKeyword
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeywordRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/keyword
      tags:
      - Marketing API/keyword
      x-apifox-folder: Marketing API/keyword
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497820-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/update_campaign_identification:
    post:
      deprecated: false
      description: This method can be used to change the name of a campaign, as well
        as modify the start or end dates. <p>Specify the <b>campaign_id</b> you want
        to update as a URI parameter, and configure the <b>campaignName</b> and <b>startDate</b>
        in the request payload.  <p>If you want to change only the end date of the
        campaign, specify the current campaign name and set <b>startDate</b> to the
        current date (you cannot use a start date that is in the past), and set the
        <b>endDate</b> as desired. Note that if you do not set a new end date in this
        call, any current <b>endDate</b> value will be set to <code>null</code>. To
        preserve the currently-set end date, you must specify the value again in your
        request.</p>  <p>Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        to retrieve a seller's campaign details, including the campaign ID, campaign
        name, and the start and end dates of the campaign.
      operationId: updateCampaignIdentification
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaignIdentificationRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/update_campaign_identification
      tags:
      - Marketing API/campaign
      x-apifox-folder: Marketing API/campaign
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497817-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/bulk_create_keyword:
    post:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method adds keywords, in bulk, to an existing PLA ad group in a campaign
        that uses the Cost Per Click (CPC) funding model.<br /><br />This method also
        sets the CPC rate for each keyword.<br /><br />In the request, supply the
        <b>campaign_id</b> as a path parameter.<br /><br />Call the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        method to retrieve a list of current campaign IDs for a specified seller.
      operationId: bulkCreateKeyword
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCreateKeywordRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkCreateKeywordResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/bulk_create_keyword
      tags:
      - Marketing API/keyword
      x-apifox-folder: Marketing API/keyword
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497818-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/bulk_update_keyword:
    post:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method updates the bids and statuses of keywords, in bulk, for an existing
        PLA campaign.<br /><br />In the request, supply the <b>campaign_id</b> as
        a path parameter.<br /><br />Call the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        method to retrieve a list of current campaign IDs for a specified seller.
      operationId: bulkUpdateKeyword
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateKeywordRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUpdateKeywordResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/bulk_update_keyword
      tags:
      - Marketing API/keyword
      x-apifox-folder: Marketing API/keyword
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497819-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_campaign/{campaign_id}/keyword/{keyword_id}:
    get:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method retrieves details on a specific keyword from an ad group within
        a PLA campaign that uses the Cost Per Click (CPC) funding model.<br /><br
        />In the request, specify the <b>campaign_id</b> and <b>keyword_id</b> as
        path parameters.<br /><br />Call the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        method to retrieve a list of current campaign IDs for a seller and call the
        <a href="/api-docs/sell/marketing/resources/keyword/methods/getKeywords">getKeywords</a>
        method to retrieve their keyword IDs.
      operationId: getKeyword
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      - description: This path parameter is used to identify the keyword to retrieve.
        explode: false
        in: path
        name: keyword_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keyword'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/keyword/{keyword_id}
      tags:
      - Marketing API/keyword
      x-apifox-folder: Marketing API/keyword
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497821-run
      x-accepts: application/json
    put:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method updates keywords using a campaign ID and keyword ID for an existing
        PLA campaign.<br /><br />In the request, specify the <b>campaign_id</b> and
        <b>keyword_id</b> as path parameters.<br /><br />Call the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        method to retrieve a list of current campaign IDs for a seller and call the
        <a href="/api-docs/sell/marketing/resources/keyword/methods/getKeywords">getKeywords</a>
        method to retrieve their keyword IDs.
      operationId: updateKeyword
      parameters:
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br /><span class="tablenote"><b>Note:</b>
          You can retrieve the campaign IDs for a specified seller using the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
          method.</span>
        explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      - description: A unique eBay-assigned ID that is generated when a keyword is
          created.
        explode: false
        in: path
        name: keyword_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKeywordRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_campaign/{campaign_id}/keyword/{keyword_id}
      tags:
      - Marketing API/keyword
      x-apifox-folder: Marketing API/keyword
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497822-run
      x-contentType: application/json
      x-accepts: application/json
  /bulk_create_negative_keyword:
    post:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method adds negative keywords, in bulk, to an existing ad group in
        a PLA campaign that uses the Cost Per Click (CPC) funding model.<br /><br
        />Specify the <b>campaignId</b> and <b>adGroupId</b> in the request body,
        along with the <b>negativeKeywordText</b> and <b>negativeKeywordMatchType</b>.<br
        /><br />Call the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        method to retrieve a list of current campaign IDs for a specified seller.
      operationId: bulkCreateNegativeKeyword
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCreateNegativeKeywordRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkCreateNegativeKeywordResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /bulk_create_negative_keyword
      tags:
      - Marketing API/negative_keyword
      x-apifox-folder: Marketing API/negative_keyword
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497823-run
      x-contentType: application/json
      x-accepts: application/json
  /bulk_update_negative_keyword:
    post:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method updates the statuses of existing negative keywords, in bulk.<br
        /><br />Specify the <b>negativeKeywordId</b> and <b>negativeKeywordStatus</b>
        in the request body.
      operationId: bulkUpdateNegativeKeyword
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateNegativeKeywordRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUpdateNegativeKeywordResponse'
          description: Success
        "207":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Multi Status
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /bulk_update_negative_keyword
      tags:
      - Marketing API/negative_keyword
      x-apifox-folder: Marketing API/negative_keyword
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497824-run
      x-contentType: application/json
      x-accepts: application/json
  /negative_keyword/{negative_keyword_id}:
    get:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method retrieves details on a specific negative keyword.<br /><br />In
        the request, specify the <b>negative_keyword_id</b> as a path parameter.
      operationId: getNegativeKeyword
      parameters:
      - description: The unique identifier for the negative keyword.<br /><br />This
          value is returned in the <b>Location</b> response header from the <a href="/api-docs/sell/marketing/resources/negative_keyword/methods/createNegativeKeyword">createNegativeKeyword</a>
          method.
        explode: false
        in: path
        name: negative_keyword_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NegativeKeyword'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /negative_keyword/{negative_keyword_id}
      tags:
      - Marketing API/negative_keyword
      x-apifox-folder: Marketing API/negative_keyword
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497828-run
      x-accepts: application/json
    put:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method updates the status of an existing negative keyword.<br /><br
        />Specify the <b>negative_keyword_id</b> as a path parameter, and specify
        the <b>negativeKeywordStatus</b> in the request body.
      operationId: updateNegativeKeyword
      parameters:
      - description: The unique identifier for the negative keyword.<br /><br />This
          value is returned in the <b>Location</b> response header from the <a href="/api-docs/sell/marketing/resources/negative_keyword/methods/createNegativeKeyword">createNegativeKeyword</a>
          method.
        explode: false
        in: path
        name: negative_keyword_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNegativeKeywordRequest'
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /negative_keyword/{negative_keyword_id}
      tags:
      - Marketing API/negative_keyword
      x-apifox-folder: Marketing API/negative_keyword
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497825-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_report/{report_id}:
    get:
      deprecated: false
      description: This call downloads the report as specified by the <b>report_id</b>
        path parameter.  <br><br>Call <a href="/api-docs/sell/marketing/resources/ad_report_task/methods/createReportTask"
        title="createReportTask API docs">createReportTask</a> to schedule and generate
        a Promoted Listings report. All date values are returned in UTC format (<code>yyyy-MM-ddThh:mm:ss.sssZ</code>).<br/><br/><span
        class="tablenote"><b>Note:</b> The reporting of some data related to sales
        and ad-fees may require a 72-hour (<b>maximum</b>) adjustment period which
        is often referred to as the <i>Reconciliation Period</i>. Such adjustment
        periods should, on average, be minimal. However, at any given time, the <b>payments</b>
        tab may be used to view those amounts that have actually been charged.</span>
      operationId: getReport
      parameters:
      - description: The unique ID of the Promoted Listings report you want to get.
          <p>This ID is generated by eBay when you run a report task with a call to
          <a href="/api-docs/sell/marketing/resources/ad_report_task/methods/createReportTask">createReportTask</a>.
          Get all the seller's report IDs by calling <a href="/api-docs/sell/marketing/resources/ad_report_task/methods/getReportTasks">getReportTasks</a>.</p>
        explode: false
        in: path
        name: report_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_report/{report_id}
      tags:
      - Marketing API/ad_report
      x-apifox-folder: Marketing API/ad_report
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497826-run
      x-accepts: application/json
  /negative_keyword:
    get:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method can be used to retrieve all of the negative keywords for ad
        groups in PLA campaigns that use the Cost Per Click (CPC) funding model.<br
        /><br />The results can be filtered using the <b>campaign_ids</b>, <b>ad_group_ids</b>,
        and <b>negative_keyword_status</b> query parameters.<br /><br />Call the <a
        href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        method to retrieve a list of current campaign IDs for a seller.
      operationId: getNegativeKeywords
      parameters:
      - description: A comma-separated list of ad group IDs.<br /><br />This query
          parameter is used if the seller wants to retrieve the negative keywords
          from one or more specific ad groups. The results might not include these
          ad group IDs if other search conditions exclude them.<br /><br /><span class="tablenote"><b>Note:</b>You
          can call the <a href="/api-docs/sell/marketing/resources/adgroup/methods/getAdGroups">getAdGroups</a>
          method to retrieve the ad group IDs for a seller.</span><br /><br /><i>Required
          if</i> the search results must be filtered to include negative keywords
          created at the ad group level.
        explode: true
        in: query
        name: ad_group_ids
        required: false
        schema:
          type: string
        style: form
      - description: A unique eBay-assigned ID for an ad campaign that is generated
          when a campaign is created.<br /><br />This query parameter is used if the
          seller wants to retrieve the negative keywords from a specific campaign.
          The results might not include these campaign IDs if other search conditions
          exclude them.<br /><br /><span class="tablenote"><b>Note:</b> Currently,
          only one campaign ID value is supported for each request.</span>
        explode: true
        in: query
        name: campaign_ids
        required: false
        schema:
          type: string
        style: form
      - description: The number of results, from the current result set, to be returned
          in a single page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: A comma-separated list of negative keyword statuses.<br /><br
          />This query parameter is used if the seller wants to filter the search
          results based on one or more negative keyword statuses.
        explode: true
        in: query
        name: negative_keyword_status
        required: false
        schema:
          type: string
        style: form
      - description: The number of results that will be skipped in the result set.
          This is used with the <b>limit</b> field to control the pagination of the
          output.<br /><br />For example, if the <b>offset</b> is set to <code>0</code>
          and the <b>limit</b> is set to <code>10</code>, the method will retrieve
          items 1 through 10 from the list of items returned. If the <b>offset</b>
          is set to <code>10</code> and the <b>limit</b> is set to <code>10</code>,
          the method will retrieve items 11 through 20 from the list of items returned.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NegativeKeywordPagedCollectionResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /negative_keyword
      tags:
      - Marketing API/negative_keyword
      x-apifox-folder: Marketing API/negative_keyword
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497827-run
      x-accepts: application/json
    post:
      deprecated: false
      description: <span class="tablenote"><b>Note:</b> This is a <a href="/api-docs/static/versioning.html#limited
        " target="_blank"><img src="/cms/img/docs/partners-api.svg" class="legend-icon
        partners-icon" title="Limited Release"  alt="Limited Release" />Limited Release</a>
        API service that is available only to select partners who have been approved
        for the eBay Promoted Listings Advanced (PLA) program. For details about how
        to request access to this program, see <a href="/api-docs/sell/static/marketing/pl-verify-eligibility.html#access-requests">Promoted
        Listings Advanced Access Requests</a> in the Promoted Listings Playbook.</span><br
        />This method adds a negative keyword to an existing ad group in a PLA campaign
        that uses the Cost Per Click (CPC) funding model.<br /><br />Specify the <b>campaignId</b>
        and <b>adGroupId</b> in the request body, along with the <b>negativeKeywordText</b>
        and <b>negativeKeywordMatchType</b>.<br /><br />Call the <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
        method to retrieve a list of current campaign IDs for a specified seller.
      operationId: createNegativeKeyword
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNegativeKeywordRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /negative_keyword
      tags:
      - Marketing API/negative_keyword
      x-apifox-folder: Marketing API/negative_keyword
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497829-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_report_metadata:
    get:
      deprecated: false
      description: This call retrieves information that details the fields used in
        each of the Promoted Listings reports. Use the returned information to configure
        the different types of Promoted Listings reports.</br></br>The request for
        this method does not use a payload or any URI parameters.<br/><br/><span class="tablenote"><b>Note:</b>
        The reporting of some data related to sales and ad-fees may require a 72-hour
        (<b>maximum</b>) adjustment period which is often referred to as the <i>Reconciliation
        Period</i>. Such adjustment periods should, on average, be minimal. However,
        at any given time, the <b>payments</b> tab may be used to view those amounts
        that have actually been charged.</span>
      operationId: getReportMetadata
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportMetadatas'
          description: Success
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_report_metadata
      tags:
      - Marketing API/ad_report_metadata
      x-apifox-folder: Marketing API/ad_report_metadata
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497830-run
      x-accepts: application/json
  /ad_report_metadata/{report_type}:
    get:
      deprecated: false
      description: This call retrieves metadata that details the fields used by a
        specific Promoted Listings report type. Use the <b>report_type</b> path parameter
        to indicate metadata to retrieve.<br/><br/>This method does not use a request
        payload.<br/><br/><span class="tablenote"><b>Note:</b> The reporting of some
        data related to sales and ad-fees may require a 72-hour (<b>maximum</b>) adjustment
        period which is often referred to as the <i>Reconciliation Period</i>. Such
        adjustment periods should, on average, be minimal. However, at any given time,
        the <b>payments</b> tab may be used to view those amounts that have actually
        been charged.</span>
      operationId: getReportMetadataForReportType
      parameters:
      - description: The name of the report type whose metadata you want to retrieve.<br
          /><br /><span class="tablenote"><b>Tip:</b> For details about available
          report types and their descriptions, refer to the <a href="/api-docs/sell/marketing/types/plr:ReportTypeEnum">ReportTypeEnum</a>.</span>
        explode: false
        in: path
        name: report_type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportMetadata'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_report_metadata/{report_type}
      tags:
      - Marketing API/ad_report_metadata
      x-apifox-folder: Marketing API/ad_report_metadata
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497831-run
      x-accepts: application/json
  /ad_report_task:
    get:
      deprecated: false
      description: This method returns information on all the existing report tasks
        related to a seller. <p>Use the <b>report_task_statuses</b> query parameter
        to control which reports to return. You can paginate the result set by specifying
        a <b>limit</b>, which dictates how many report tasks to return on each page
        of the response. Use the <b>offset</b> parameter to specify how many reports
        to skip in the result set before returning the first result.</p>
      operationId: getReportTasks
      parameters:
      - description: Specifies the maximum number of report tasks to return on a page
          in the paginated response.  <p><b>Default:</b> 10<br><b>Maximum:</b> 500</p>
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of report tasks to skip in the result set
          before returning the first report in the paginated response.  <p>Combine
          <b>offset</b> with the <b>limit</b> query parameter to control the reports
          returned in the response. For example, if you supply an <b>offset</b> of
          <code>0</code> and a <b>limit</b> of <code>10</code>, the response contains
          the first 10 reports from the complete list of report tasks retrieved by
          the call. If <b>offset</b> is <code>10</code> and <b>limit</b> is <code>10</code>,
          the first page of the response contains reports 11-20 from the complete
          result set.</p> <b>Default:</b> 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: 'This parameter filters the returned report tasks by their status.
          Supply a comma-separated list of the report statuses you want returned.
          The results are filtered to include only the report statuses you specify.<br
          /><br /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
          The results might not include some report tasks if other search conditions
          exclude them.</span><br /><br /><b>Valid values: </b> <br>&nbsp;&nbsp;&nbsp;<code>PENDING</code>
          <br>&nbsp;&nbsp;&nbsp;<code>SUCCESS</code> <br>&nbsp;&nbsp;&nbsp;<code>FAILED</code>'
        explode: true
        in: query
        name: report_task_statuses
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTaskPagedCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_report_task
      tags:
      - Marketing API/ad_report_task
      x-apifox-folder: Marketing API/ad_report_task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497832-run
      x-accepts: application/json
    post:
      deprecated: false
      description: This method creates a <i>report task</i>, which generates a Promoted
        Listings report based on the values specified in the call.<br /><br />The
        report is generated based on the criteria you specify, including the report
        type, the report's dimensions and metrics, the report's start and end dates,
        the listings to include in the report, and more. <i>Metrics </i>are the quantitative
        measurements in the report while <i>dimensions</i> specify the attributes
        of the data included in the reports.<br /><br />When creating a report task,
        you can specify the items you want included in the report. The items you specify,
        using either <b>listingId</b> or <b>inventoryReference</b> values, must be
        in a Promoted Listings campaign for them to be included in the report.<br
        /><br />For details on the required and optional fields for each report type,
        see <a href="/api-docs/sell/static/marketing/pl-reports.html">Promoted Listings
        reporting</a>.<br /><br />This call returns the URL to the report task in
        the <b>Location</b> response header, and the URL includes the report-task
        ID.<br /><br />Reports often take time to generate and it's common for this
        call to return an HTTP status of <code>202</code>, which indicates the report
        is being generated. Call <a href="/api-docs/sell/marketing/resources/ad_report_task/methods/getReportTasks">getReportTasks</a>
        (or <a href="/api-docs/sell/marketing/resources/ad_report_task/methods/getReportTask">getReportTask</a>
        with the report-task ID) to determine the status of a Promoted Listings report.
        When a report is complete, eBay sets its status to <b>SUCCESS</b> and you
        can download it using the URL returned in the <b>reportHref</b> field of the
        <b>getReportTask</b> call. Report files are tab-separated value gzip files
        with a file extension of <code>.tsv.gz</code>.<br/><br/><span class="tablenote"><b>Note:</b>
        The reporting of some data related to sales and ad-fees may require a 72-hour
        (<b>maximum</b>) adjustment period which is often referred to as the <i>Reconciliation
        Period</i>. Such adjustment periods should, on average, be minimal. However,
        at any given time, the <b>payments</b> tab may be used to view those amounts
        that have actually been charged.</span><br /><br /><span class="tablenote"><span
        style="color:#004680"><strong>Note:</strong></span> This call fails if you
        don't submit all the required fields for the specified report type. Fields
        not supported by the specified report type are ignored. Call <a href="/api-docs/sell/marketing/resources/ad_report_metadata/methods/getReportMetadata">getReportMetadata</a>
        to retrieve a list of the fields you need to configure for each Promoted Listings
        report type.</span>
      operationId: createReportTask
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReportTask'
      responses:
        "202":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_report_task
      tags:
      - Marketing API/ad_report_task
      x-apifox-folder: Marketing API/ad_report_task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497833-run
      x-contentType: application/json
      x-accepts: application/json
  /ad_report_task/{report_task_id}:
    delete:
      deprecated: false
      description: This call deletes the report task specified by the <b>report_task_id</b>
        path parameter. This method also deletes any reports generated by the report
        task.  <p>Report task IDs are generated by eBay when you call <a href="/api-docs/sell/marketing/resources/ad_report_task/methods/createReportTask">createReportTask</a>.
        Get a complete list of a seller's report-task IDs by calling <a href="/api-docs/sell/marketing/resources/ad_report_task/methods/getReportTasks">getReportTasks</a>.</p>
      operationId: deleteReportTask
      parameters:
      - description: A unique eBay-assigned ID for the report task that's generated
          when the report task is created by a call to <a href="/api-docs/sell/marketing/resources/ad_report_task/methods/createReportTask">createReportTask</a>.
        explode: false
        in: path
        name: report_task_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_report_task/{report_task_id}
      tags:
      - Marketing API/ad_report_task
      x-apifox-folder: Marketing API/ad_report_task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497835-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This call returns the details of a specific Promoted Listings report
        task, as specified by the <b>report_task_id</b> path parameter. <p>The report
        task includes the report criteria (such as the report dimensions, metrics,
        and included listing) and the report-generation rules (such as starting and
        ending dates for the specified report task).</p>  <p>Report-task IDs are generated
        by eBay when you call <a href="/api-docs/sell/marketing/resources/ad_report_task/methods/createReportTask">createReportTask</a>.
        Get a complete list of a seller's report-task IDs by calling <a href="/api-docs/sell/marketing/resources/ad_report_task/methods/getReportTasks">getReportTasks</a>.</p>
      operationId: getReportTask
      parameters:
      - description: A unique eBay-assigned ID for the report task that's generated
          when the report task is created by a call to <a href="/api-docs/sell/marketing/resources/ad_report_task/methods/createReportTask">createReportTask</a>.
        explode: false
        in: path
        name: report_task_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTask'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /ad_report_task/{report_task_id}
      tags:
      - Marketing API/ad_report_task
      x-apifox-folder: Marketing API/ad_report_task
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497834-run
      x-accepts: application/json
  /item_price_markdown/{promotion_id}:
    delete:
      deprecated: false
      description: This method deletes the item price markdown promotion specified
        by the <b>promotion_id</b> path parameter. Call <a href="/api-docs/sell/marketing/resources/promotion/methods/getPromotions">getPromotions</a>
        to retrieve the IDs of a seller's promotions.  <br><br>You can delete any
        promotion with the exception of those that are currently active (RUNNING).
        To end a running promotion, call <a href="/api-docs/sell/marketing/resources/item_price_markdown/methods/updateItemPriceMarkdownPromotion">updateItemPriceMarkdownPromotion</a>
        and adjust the <b>endDate</b> field as appropriate.
      operationId: deleteItemPriceMarkdownPromotion
      parameters:
      - description: This path parameter takes a concatenation of the ID of the promotion
          you want to delete plus the marketplace ID on which the promotion is hosted.
          Concatenate the two values by separating them with an "at sign" (<b>@</b>).  <br><br>The
          ID of the promotion (<b>promotionId</b>) is a unique eBay-assigned value
          that's generated when the promotion is created. The Marketplace ID is the
          ENUM value of eBay marketplace where the promotion is hosted. <br><br><b>Example:</b>
          <code>1********5@EBAY_US</code>
        explode: false
        in: path
        name: promotion_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /item_price_markdown/{promotion_id}
      tags:
      - Marketing API/item_price_markdown
      x-apifox-folder: Marketing API/item_price_markdown
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497839-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This method returns the complete details of the item price markdown
        promotion that's indicated by the <b>promotion_id</b> path parameter. <br><br>Call
        <a href="/api-docs/sell/marketing/resources/promotion/methods/getPromotions">getPromotions</a>
        to retrieve the IDs of a seller's promotions.
      operationId: getItemPriceMarkdownPromotion
      parameters:
      - description: This path parameter takes a concatenation of the ID of the promotion
          you want to get plus the marketplace ID on which the promotion is hosted.
          Concatenate the two values by separating them with an "at sign" (<b>@</b>).  <br><br>The
          ID of the promotion (<b>promotionId</b>) is a unique eBay-assigned value
          that's generated when the promotion is created. The Marketplace ID is the
          ENUM value of eBay marketplace where the promotion is hosted. <br><br><b>Example:</b>
          <code>1********5@EBAY_US</code>
        explode: false
        in: path
        name: promotion_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemPriceMarkdown'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /item_price_markdown/{promotion_id}
      tags:
      - Marketing API/item_price_markdown
      x-apifox-folder: Marketing API/item_price_markdown
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497836-run
      x-accepts: application/json
    put:
      deprecated: false
      description: 'This method updates the specified item price markdown promotion
        with the new configuration that you supply in the payload of the request.
        Specify the promotion you want to update using the <b>promotion_id</b> path
        parameter. Call <a href="/api-docs/sell/marketing/resources/promotion/methods/getPromotions">getPromotions</a>
        to retrieve the IDs of a seller''s promotions.  <br><br>When updating a promotion,
        supply all the fields that you used to configure the original promotion (and
        not just the fields you are updating). eBay replaces the specified promotion
        with the values you supply in the update request and if you don''t pass a
        field that currently has a value, the update request fails.  <br><br>The parameters
        you are allowed to update with this request depend on the status of the promotion
        you''re updating:  <ul><li>DRAFT or SCHEDULED promotions: You can update any
        of the parameters in these promotions that have not yet started to run, including
        the <b>discountRules</b>.</li> <li>RUNNING promotions: You can change the
        <b>endDate</b> and the item''s inventory but you cannot change the promotional
        discount or the promotion''s start date.</li> <li>ENDED promotions: Nothing
        can be changed.</li></ul>'
      operationId: updateItemPriceMarkdownPromotion
      parameters:
      - description: This path parameter takes a concatenation of the ID of the promotion
          you want to update plus the marketplace ID on which the promotion is hosted.
          Concatenate the two values by separating them with an "at sign" (<b>@</b>).  <br><br>The
          ID of the promotion (<b>promotionId</b>) is a unique eBay-assigned value
          that's generated when the promotion is created. The Marketplace ID is the
          ENUM value of eBay marketplace where the promotion is hosted. <br><br><b>Example:</b>
          <code>1********5@EBAY_US</code>
        explode: false
        in: path
        name: promotion_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemPriceMarkdown'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /item_price_markdown/{promotion_id}
      tags:
      - Marketing API/item_price_markdown
      x-apifox-folder: Marketing API/item_price_markdown
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497838-run
      x-contentType: application/json
      x-accepts: application/json
  /item_price_markdown:
    post:
      deprecated: false
      description: This method creates an <b>item price markdown promotion</b> (know
        simply as a "markdown promotion") where a discount amount is applied directly
        to the items included the promotion. Discounts can be specified as either
        a monetary amount or a percentage off the standard sales price. eBay highlights
        promoted items by placing teasers for the items throughout the online sales
        flows.  <p>Unlike an <a href="/api-docs/sell/marketing/resources/item_promotion/methods/createItemPromotion">item
        promotion</a>, a markdown promotion does not require the buyer meet a "threshold"
        before the offer takes effect. With markdown promotions, all the buyer needs
        to do is purchase the item to receive the promotion benefit.</p>  <p class="tablenote"><b>Important:</b>
        There are some restrictions for which listings are available for price markdown
        promotions. For details, see <a href="/api-docs/sell/marketing/static/overview.html#PM-requirements">Promotions
        Manager requirements and restrictions</a>. <br><br>In addition, we recommend
        you list items at competitive prices before including them in your markdown
        promotions. For an extensive list of pricing recommendations, see the <b>Growth</b>
        tab in Seller Hub.</p> <p>There are two ways to add items to markdown promotions:</p>
        <ul><li><b>Key-based promotions</b> select items using either the listing
        IDs or inventory reference IDs of the items you want to promote. Note that
        if you use inventory reference IDs, you must specify both the <b>inventoryReferenceId</b>
        and the associated <b>inventoryReferenceType</b> of the item(s) you want to
        include the promotion.</li>  <li><b>Rule-based promotions</b> select items
        using a list of eBay category IDs or seller Store category IDs. Rules can
        further constrain items in a promotion by minimum and maximum prices, brands,
        and item conditions.</li></ul>  <p>New promotions must be created in either
        a <code>DRAFT</code> or a <code>SCHEDULED</code> state. Use the DRAFT state
        when you are initially creating a promotion and you want to be sure it's correctly
        configured before scheduling it to run. When you create a promotion, the promotion
        ID is returned in the <b>Location</b> response header. Use this ID to reference
        the promotion in subsequent requests (such as to schedule a promotion that's
        in a DRAFT state).</p>  <p class="tablenote"><b>Tip:</b> Refer to <a href="/api-docs/sell/static/marketing/promotions-manager.html">Promotions
        Manager</a> in the <i>Selling Integration Guide</i> for details and examples
        showing how to create and manage seller promotions.</p>  <p>Markdown promotions
        are available on all eBay marketplaces. For more information, see <a href="/api-docs/sell/marketing/static/overview.html#PM-requirements">Promotions
        Manager requirements and restrictions</a>.</p>
      operationId: createItemPriceMarkdownPromotion
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemPriceMarkdown'
      responses:
        "201":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /item_price_markdown
      tags:
      - Marketing API/item_price_markdown
      x-apifox-folder: Marketing API/item_price_markdown
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497837-run
      x-contentType: application/json
      x-accepts: application/json
  /item_promotion:
    post:
      deprecated: false
      description: 'This method creates an <b>item promotion</b>, where the buyer
        receives a discount when they meet the buying criteria that''s set for the
        promotion. Known here as "threshold promotions", these promotions trigger
        when a threshold is met.  <p>eBay highlights promoted items by placing teasers
        for the promoted items throughout the online buyer flows.</p>  <p><i>Discounts</i>
        are specified as either a monetary amount or a percentage off the standard
        sales price of a listing, letting you offer deals such as "Buy 1 Get 1" and
        "Buy $50, get 20% off".</p> <p><i>Volume pricing</i> promotions increase the
        value of the discount as the buyer increases the quantity they purchase.</p>
        <p><i>Coded Coupons</i> provide unique codes that a buyer can use during checkout
        to receive a discount. The seller can specify the number of times a buyer
        can use the coupon and the maximum amount across all purchases that can be
        discounted using the coupon. The coupon code can also be made public (appearing
        on the seller''s Offer page, search pages, the item listing, and the checkout
        page) or private (only on the seller''s Offer page, but the seller can include
        the code in email and social media).</p> <p class="tablenote"><b>Note</b>:
        Coded Coupons are currently available in the US, UK, DE, FR, IT, ES, and AU
        marketplaces.</p><p>There are two ways to add items to a threshold promotion:</p>  <ul><li><b>Key-based
        promotions</b> select items using either the listing IDs or inventory reference
        IDs of the items you want to promote. Note that if you use inventory reference
        IDs, you must specify both the <b>inventoryReferenceId</b> and the associated
        <b>inventoryReferenceType</b> of the item(s) you want to include the promotion.</li>
        <li><b>Rule-based promotions</b> select items using a list of eBay category
        IDs or seller Store category IDs. Rules can further constrain items in a promotion
        by minimum and maximum prices, brands, and item conditions.</li></ul>  <p>You
        must create a new promotion in either a <code>DRAFT</code> or <code>SCHEDULED</code>
        state. Use the DRAFT state when you are initially creating a promotion and
        you want to be sure it''s correctly configured before scheduling it to run.
        When you create a promotion, the promotion ID is returned in the <b>Location</b>
        response header. Use this ID to reference the promotion in subsequent requests.</p>  <p
        class="tablenote"><b>Tip:</b> Refer to the <a href="/api-docs/sell/static/marketing/promotions-manager.html">Selling
        Integration Guide</a> for details and examples showing how to create and manage
        threshold promotions using the Promotions Manager.</p>  <p>For information
        on the eBay marketplaces that support item promotions, see <a href="/api-docs/sell/marketing/static/overview.html#PM-requirements">Promotions
        Manager requirements and restrictions</a>.</p>'
      operationId: createItemPromotion
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemPromotion'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /item_promotion
      tags:
      - Marketing API/item_promotion
      x-apifox-folder: Marketing API/item_promotion
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497840-run
      x-contentType: application/json
      x-accepts: application/json
  /item_promotion/{promotion_id}:
    delete:
      deprecated: false
      description: This method deletes the threshold promotion specified by the <b>promotion_id</b>
        path parameter. Call <a href="/api-docs/sell/marketing/resources/promotion/methods/getPromotions">getPromotions</a>
        to retrieve the IDs of a seller's promotions.  <br><br>You can delete any
        promotion with the exception of those that are currently active (RUNNING).
        To end a running threshold promotion, call <a href="/api-docs/sell/marketing/resources/item_promotion/methods/updateItemPromotion">updateItemPromotion</a>
        and adjust the <b>endDate</b> field as appropriate.
      operationId: deleteItemPromotion
      parameters:
      - description: This path parameter takes a concatenation of the ID of the promotion
          you want to delete plus the marketplace ID on which the promotion is hosted.
          Concatenate the two values by separating them with an "at sign" (<b>@</b>).  <br><br>The
          ID of the promotion (<b>promotionId</b>) is a unique eBay-assigned value
          that's generated when the promotion is created. The Marketplace ID is the
          ENUM value of eBay marketplace where the promotion is hosted. <br><br><b>Example:</b>
          <code>1********5@EBAY_US</code>
        explode: false
        in: path
        name: promotion_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /item_promotion/{promotion_id}
      tags:
      - Marketing API/item_promotion
      x-apifox-folder: Marketing API/item_promotion
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497844-run
      x-accepts: application/json
    get:
      deprecated: false
      description: This method returns the complete details of the threshold promotion
        specified by the <b>promotion_id</b> path parameter. Call <a href="/api-docs/sell/marketing/resources/promotion/methods/getPromotions">getPromotions</a>
        to retrieve the IDs of a seller's promotions.
      operationId: getItemPromotion
      parameters:
      - description: This path parameter takes a concatenation of the ID of the promotion
          you want to retrieve plus the marketplace ID on which the promotion is hosted.
          Concatenate the two values by separating them with an "at sign" (<b>@</b>).  <br><br>The
          ID of the promotion (<b>promotionId</b>) is a unique eBay-assigned value
          that's generated when the promotion is created. The Marketplace ID is the
          ENUM value of eBay marketplace where the promotion is hosted. <br><br><b>Example:</b>
          <code>1********5@EBAY_US</code>
        explode: false
        in: path
        name: promotion_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemPromotionResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /item_promotion/{promotion_id}
      tags:
      - Marketing API/item_promotion
      x-apifox-folder: Marketing API/item_promotion
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497841-run
      x-accepts: application/json
    put:
      deprecated: false
      description: 'This method updates the specified threshold promotion with the
        new configuration that you supply in the request. Indicate the promotion you
        want to update using the <b>promotion_id</b> path parameter.  <p>Call <a href="/api-docs/sell/marketing/resources/promotion/methods/getPromotions">getPromotions</a>
        to retrieve the IDs of a seller''s promotions.</p>  <p>When updating a promotion,
        supply all the fields that you used to configure the original promotion (and
        not just the fields you are updating). eBay replaces the specified promotion
        with the values you supply in the update request and if you don''t pass a
        field that currently has a value, the update request will fail.</p>  <p>The
        parameters you are allowed to update with this request depend on the status
        of the promotion you''re updating:  <ul><li>DRAFT or SCHEDULED promotions:
        You can update any of the parameters in these promotions that have not yet
        started to run, including the <b>discountRules</b>.</li> <li>RUNNING or PAUSED
        promotions: You can change the <b>endDate</b> and the item''s inventory but
        you cannot change the promotional discount or the promotion''s start date.</li>
        <li>ENDED promotions: Nothing can be changed.</li></ul> <p class="tablenote"><b>Tip:</b>
        When updating a <code>RUNNING</code> or <code>PAUSED</code> promotion, set
        the <b>status</b> field to <code>SCHEDULED</code> for the update request.
        When the promotion is updated, the previous status (either <code>RUNNING</code>
        or <code>PAUSED</code>) is retained.</p>'
      operationId: updateItemPromotion
      parameters:
      - description: This path parameter takes a concatenation of the ID of the promotion
          you want to update plus the marketplace ID on which the promotion is hosted.
          Concatenate the two values by separating them with an "at sign" (<b>@</b>).  <br><br>The
          ID of the promotion (<b>promotionId</b>) is a unique eBay-assigned value
          that's generated when the promotion is created. The Marketplace ID is the
          ENUM value of eBay marketplace where the promotion is hosted. <br><br><b>Example:</b>
          <code>1********5@EBAY_US</code>
        explode: false
        in: path
        name: promotion_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemPromotion'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Business Error
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /item_promotion/{promotion_id}
      tags:
      - Marketing API/item_promotion
      x-apifox-folder: Marketing API/item_promotion
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497842-run
      x-contentType: application/json
      x-accepts: application/json
  /promotion/{promotion_id}/get_listing_set:
    get:
      deprecated: false
      description: 'This method returns the set of listings associated with the <b>promotion_id</b>
        specified in the path parameter. Call <a href="/api-docs/sell/marketing/resources/promotion/methods/getPromotions">getPromotions</a>
        to retrieve the IDs of a seller''s promotions.  <p>The listing details are
        returned in a paginated set and you can control and results returned using
        the following query parameters: <b>limit</b>, <b>offset</b>, <b>q</b>, <b>sort</b>,
        and <b>status</b>.</p>  <ul><li><b>Maximum associated listings returned:</b>
        200</li>  <li><b>Default number of listings returned:</b> 200</li></ul>'
      operationId: getListingSet
      parameters:
      - description: This path parameter takes a concatenation of the ID of the promotion
          you want to get plus the marketplace ID on which the promotion is hosted.
          Concatenate the two values by separating them with an "at sign" (<b>@</b>).  <br><br>The
          ID of the promotion (<b>promotionId</b>) is a unique eBay-assigned value
          that's generated when the promotion is created. The Marketplace ID is the
          ENUM value of eBay marketplace where the promotion is hosted. <br><br><b>Example:</b>
          <code>1********5@EBAY_US</code>
        explode: false
        in: path
        name: promotion_id
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the maximum number of promotions returned on a page
          from the result set. <br><br><b>Default:</b> 200<br><b>Maximum:</b> 200
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of promotions to skip in the result set
          before returning the first promotion in the paginated response.  <p>Combine
          <b>offset</b> with the <b>limit</b> query parameter to control the items
          returned in the response. For example, if you supply an <b>offset</b> of
          <code>0</code> and a <b>limit</b> of <code>10</code>, the first page of
          the response contains the first 10 items from the complete list of items
          retrieved by the call. If <b>offset</b> is <code>10</code> and <b>limit</b>
          is <code>20</code>, the first page of the response contains items 11-30
          from the complete result set.</p> <p><b>Default:</b> 0</p>
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: Reserved for future use.
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the order in which to sort the associated listings
          in the response. If you precede the supplied value with a dash, the response
          is sorted in reverse order.  <br><br><b>Example:</b> <br>&nbsp;&nbsp;&nbsp;<code>sort=PRICE</code>
          - Sorts the associated listings by their current price in ascending order
          <br>&nbsp;&nbsp;&nbsp;<code>sort=-TITLE</code> - Sorts the associated listings
          by their title in descending alphabetical order (Z-Az-a)  <br><br><b>Valid
          values</b>:<ul class="compact"><li>AVAILABLE</li> <li>PRICE</li> <li>TITLE</li></ul>
          For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/sell/marketing/types/csb:SortField
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: This query parameter applies only to markdown promotions. It
          filters the response based on the indicated status of the promotion. Currently,
          the only supported value for this parameter is <code>MARKED_DOWN</code>,
          which indicates active markdown promotions. For implementation help, refer
          to eBay API documentation at https://developer.ebay.com/api-docs/sell/marketing/types/sme:ItemMarkdownStatusEnum
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsPagedCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /promotion/{promotion_id}/get_listing_set
      tags:
      - Marketing API/promotion
      x-apifox-folder: Marketing API/promotion
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497843-run
      x-accepts: application/json
  /promotion:
    get:
      deprecated: false
      description: This method returns a list of a seller's undeleted promotions.
        <p>The call returns up to 200 currently-available promotions on the specified
        marketplace. While the response body does not include the promotion's <b>discountRules</b>
        or <b>inventoryCriterion</b> containers, it does include the <b>promotionHref</b>
        (which you can use to retrieve the complete details of the promotion).</p>  <p>Use
        query parameters to sort and filter the results by the number of promotions
        to return, the promotion state or type, and the eBay marketplace. You can
        also supply keywords to limit the response to the promotions that contain
        that keywords in the title of the promotion.</p> <p><b>Maximum returned:</b>
        200</p>
      operationId: getPromotions
      parameters:
      - description: Specifies the maximum number of promotions returned on a page
          from the result set.  <br><br><b>Default:</b> 200 <br><b>Maximum:</b> 200
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: The eBay marketplace ID of the site where the promotion is hosted.  <p><b>Valid
          values:</b></p>  <ul><li><code>EBAY_AU</code> = Australia</li> <li><code>EBAY_DE</code>
          = Germany</li> <li><code>EBAY_ES</code> = Spain</li> <li><code>EBAY_FR</code>
          = France</li> <li><code>EBAY_GB</code> = Great Britain</li> <li><code>EBAY_IT</code>
          = Italy</li> <li><code>EBAY_US</code> = United States</li></ul>
        explode: true
        in: query
        name: marketplace_id
        required: true
        schema:
          type: string
        style: form
      - description: Specifies the number of promotions to skip in the result set
          before returning the first promotion in the paginated response.  <p>Combine
          <b>offset</b> with the <b>limit</b> query parameter to control the items
          returned in the response. For example, if you supply an <b>offset</b> of
          <code>0</code> and a <b>limit</b> of <code>10</code>, the first page of
          the response contains the first 10 items from the complete list of items
          retrieved by the call. If <b>offset</b> is <code>10</code> and <b>limit</b>
          is <code>20</code>, the first page of the response contains items 11-30
          from the complete result set.</p> <p><b>Default:</b> 0</p>
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the promotion state by which you want to filter the
          results. The response contains only those promotions that match the state
          you specify.  <br><br><b>Valid values:</b> <ul><li><code>DRAFT</code></li>
          <li><code>SCHEDULED</code></li> <li><code>RUNNING</code></li> <li><code>PAUSED</code></li>
          <li><code>ENDED</code></li></ul><b>Maximum number of input values:</b> 1
        explode: true
        in: query
        name: promotion_status
        required: false
        schema:
          type: string
        style: form
      - description: 'Filters the returned promotions based on their campaign promotion
          type. Specify one of the following values to indicate the promotion type
          you want returned: <ul><li><code>CODED_COUPON</code> &ndash; A coupon code
          promotion set with <b>createItemPromotion</b>.</li> <li><code>MARKDOWN_SALE</code>
          &ndash; A markdown promotion set with <b>createItemPriceMarkdownPromotion</b>.</li>
          <li><code>ORDER_DISCOUNT</code> &ndash; A threshold promotion set with <b>createItemPromotion</b>.</li>
          <li><code>VOLUME_DISCOUNT</code> &ndash; A volume pricing promotion set
          with <b>createItemPromotion</b>.</li></ul>'
        explode: true
        in: query
        name: promotion_type
        required: false
        schema:
          type: string
        style: form
      - description: A string consisting of one or more <i>keywords</i>. eBay filters
          the response by returning only the promotions that contain the supplied
          keywords in the promotion title.  <br><br><b>Example:</b> "iPhone" or "Harry
          Potter."  <br><br>Commas that separate keywords are ignored. For example,
          a keyword string of "iPhone, iPad" equals "iPhone iPad", and each results
          in a response that contains promotions with both "iPhone" and "iPad" in
          the title.
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the order for how to sort the response. If you precede
          the supplied value with a dash, the response is sorted in reverse order.  <br><br><b>Example:</b>
          <br>&nbsp;&nbsp;&nbsp;<code>sort=END_DATE</code> &nbsp; Sorts the promotions
          in the response by their end dates in ascending order <br>&nbsp;&nbsp;&nbsp;<code>sort=-PROMOTION_NAME</code>
          &nbsp; Sorts the promotions by their promotion name in descending alphabetical
          order (Z-Az-a)  <br><br><b>Valid values</b>:<ul><li><code>START_DATE</code></li>
          <li><code>END_DATE</code></li> <li><code>PROMOTION_NAME</code></li></ul>
          For implementation help, refer to eBay API documentation at https://developer.ebay.com/api-docs/sell/marketing/types/csb:SortField
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromotionsPagedCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /promotion
      tags:
      - Marketing API/promotion
      x-apifox-folder: Marketing API/promotion
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497845-run
      x-accepts: application/json
  /promotion/{promotion_id}/pause:
    post:
      deprecated: false
      description: This method pauses a currently-active (RUNNING) threshold promotion
        and changes the state of the promotion from <code>RUNNING</code> to <code>PAUSED</code>.
        Pausing a promotion makes the promotion temporarily unavailable to buyers
        and any currently-incomplete transactions will not receive the promotional
        offer until the promotion is resumed. Also, promotion teasers are not displayed
        when a promotion is paused.  <br><br>Pass the ID of the promotion you want
        to pause using the <b>promotion_id</b> path parameter. Call <a href="/api-docs/sell/marketing/resources/promotion/methods/getPromotions">getPromotions</a>
        to retrieve the IDs of the seller's promotions. <br><br><b>Note:</b> You can
        only pause threshold promotions (you cannot pause markdown promotions).
      operationId: pausePromotion
      parameters:
      - description: This path parameter takes a concatenation of the ID of the promotion
          you want to pause plus the marketplace ID on which the promotion is hosted.
          Concatenate the two values by separating them with an "at sign" (<b>@</b>).  <br><br>The
          ID of the promotion (<b>promotionId</b>) is a unique eBay-assigned value
          that's generated when the promotion is created. The Marketplace ID is the
          ENUM value of eBay marketplace where the promotion is hosted. <br><br><b>Example:</b>
          <code>1********5@EBAY_US</code>
        explode: false
        in: path
        name: promotion_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /promotion/{promotion_id}/pause
      tags:
      - Marketing API/promotion
      x-apifox-folder: Marketing API/promotion
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497846-run
      x-accepts: application/json
  /promotion/{promotion_id}/resume:
    post:
      deprecated: false
      description: This method restarts a threshold promotion that was previously
        paused and changes the state of the promotion from <code>PAUSED</code> to
        <code>RUNNING</code>. Only promotions that have been previously paused can
        be resumed. Resuming a promotion reinstates the promotional teasers and any
        transactions that were in motion before the promotion was paused will again
        be eligible for the promotion.  <br><br>Pass the ID of the promotion you want
        to resume using the <b>promotion_id</b> path parameter. Call <a href="/api-docs/sell/marketing/resources/promotion/methods/getPromotions">getPromotions</a>
        to retrieve the IDs of the seller's promotions.
      operationId: resumePromotion
      parameters:
      - description: This path parameter takes a concatenation of the ID of the promotion
          you want to resume plus the marketplace ID on which the promotion is hosted.
          Concatenate the two values by separating them with an "at sign" (<b>@</b>).  <br><br>The
          ID of the promotion (<b>promotionId</b>) is a unique eBay-assigned value
          that's generated when the promotion is created. The Marketplace ID is the
          ENUM value of eBay marketplace where the promotion is hosted. <br><br><b>Example:</b>
          <code>1********5@EBAY_US</code>
        explode: false
        in: path
        name: promotion_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /promotion/{promotion_id}/resume
      tags:
      - Marketing API/promotion
      x-apifox-folder: Marketing API/promotion
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497847-run
      x-accepts: application/json
  /promotion_report:
    get:
      deprecated: false
      description: This method generates a report that lists the seller's running,
        paused, and ended promotions for the specified eBay marketplace. The result
        set can be filtered by the promotion status and the number of results to return.
        You can also supply <i>keywords</i> to limit the report to promotions that
        contain the specified keywords. <br><br>Specify the eBay marketplace for which
        you want the report run using the <b>marketplace_id</b> query parameter. Supply
        additional query parameters to control the report as needed.
      operationId: getPromotionReports
      parameters:
      - description: Specifies the maximum number of promotions returned on a page
          from the result set.  <br><br><b>Default:</b> 200 <br><b>Maximum:</b> 200
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: The eBay marketplace ID of the site for which you want the promotions
          report.  <p><b>Valid values:</b>  </p><ul><li><code>EBAY_AU</code> = Australia</li>
          <li><code>EBAY_DE</code> = Germany</li> <li><code>EBAY_ES</code> = Spain</li>
          <li><code>EBAY_FR</code> = France</li> <li><code>EBAY_GB</code> = Great
          Britain</li> <li><code>EBAY_IT</code> = Italy</li> <li><code>EBAY_US</code>
          = United States</li></ul>
        explode: true
        in: query
        name: marketplace_id
        required: true
        schema:
          type: string
        style: form
      - description: Specifies the number of promotions to skip in the result set
          before returning the first promotion in the paginated response.  <p>Combine
          <b>offset</b> with the <b>limit</b> query parameter to control the items
          returned in the response. For example, if you supply an <b>offset</b> of
          <code>0</code> and a <b>limit</b> of <code>10</code>, the first page of
          the response contains the first 10 items from the complete list of items
          retrieved by the call. If <b>offset</b> is <code>10</code> and <b>limit</b>
          is <code>20</code>, the first page of the response contains items 11-30
          from the complete result set.</p> <p><b>Default:</b> 0</p>
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: Limits the results to the promotions that are in the state specified
          by this query parameter.  <br><br><b>Valid values:</b> <ul><li><code>DRAFT</code></li>
          <li><code>SCHEDULED</code></li> <li><code>RUNNING</code></li> <li><code>PAUSED</code></li>
          <li><code>ENDED</code></li></ul><b>Maximum number of values supported:</b>
          1
        explode: true
        in: query
        name: promotion_status
        required: false
        schema:
          type: string
        style: form
      - description: 'Filters the returned promotions in the report based on their
          campaign promotion type. Specify one of the following values to indicate
          the promotion type you want returned in the report: <ul><li><code>CODED_COUPON</code>
          &ndash; A coupon code promotion set with <b>createItemPromotion</b>.</li>
          <li><code>MARKDOWN_SALE</code> &ndash; A markdown promotion set with <b>createItemPriceMarkdownPromotion</b>.</li>
          <li><code>ORDER_DISCOUNT</code> &ndash; A threshold promotion set with <b>createItemPromotion</b>.</li>
          <li><code>VOLUME_DISCOUNT</code> &ndash; A volume pricing promotion set
          with <b>createItemPromotion</b>.</li></ul>'
        explode: true
        in: query
        name: promotion_type
        required: false
        schema:
          type: string
        style: form
      - description: A string consisting of one or more <i>keywords</i>. eBay filters
          the response by returning only the promotions that contain the supplied
          keywords in the promotion title.  <br><br><b>Example:</b> "iPhone" or "Harry
          Potter."  <br><br>Commas that separate keywords are ignored. For example,
          a keyword string of "iPhone, iPad" equals "iPhone iPad", and each results
          in a response that contains promotions with both "iPhone" and "iPad" in
          the title.
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromotionsReportPagedCollection'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /promotion_report
      tags:
      - Marketing API/promotion_report
      x-apifox-folder: Marketing API/promotion_report
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497848-run
      x-accepts: application/json
  /promotion_summary_report:
    get:
      deprecated: false
      description: This method generates a report that summarizes the seller's promotions
        for the specified eBay marketplace. The report returns information on <code>RUNNING</code>,
        <code>PAUSED</code>, and <code>ENDED</code> promotions (deleted reports are
        not returned) and summarizes the seller's campaign performance for all promotions
        on a given site.  <br><br>For information about summary reports, see <a href="/api-docs/sell/static/marketing/pm-summary-report.html">Reading
        the item promotion Summary report</a>.
      operationId: getPromotionSummaryReport
      parameters:
      - description: The eBay marketplace ID of the site you for which you want a
          promotion summary report.  <p><b>Valid values:</b></p>  <ul><li><code>EBAY_AU</code>
          = Australia</li> <li><code>EBAY_DE</code> = Germany</li> <li><code>EBAY_ES</code>
          = Spain</li> <li><code>EBAY_FR</code> = France</li> <li><code>EBAY_GB</code>
          = Great Britain</li> <li><code>EBAY_IT</code> = Italy</li> <li><code>EBAY_US</code>
          = United States</li></ul>
        explode: true
        in: query
        name: marketplace_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryReportResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /promotion_summary_report
      tags:
      - Marketing API/promotion_summary_report
      x-apifox-folder: Marketing API/promotion_summary_report
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38497849-run
      x-accepts: application/json
  /marketplace/{marketplace_id}/get_item_condition_policies:
    get:
      deprecated: false
      description: This method returns item condition metadata on one, multiple, or
        all eBay categories on an eBay marketplace. This metadata consists of the
        different item conditions (with IDs) that an eBay category supports, and a
        boolean to indicate if an eBay category requires an item condition. <br><br>The
        identifier of the eBay marketplace is passed in as a path parameter, and unless
        one or more eBay category IDs are passed in through the <b>filter</b> query
        parameter, this method will return metadata on every single category for the
        specified marketplace. If you only want to view item condition metadata for
        one eBay category or a select group of eBay categories, you can pass in up
        to 50 eBay category ID through the <b>filter</b> query parameter.<br /><br
        /><span class="tablenote"><span style="color:#FF0000"><strong>Important:</strong></span>
        <b>Certified - Refurbished</b>-eligible sellers, and sellers who are eligible
        to list with the new values (EXCELLENT_REFURBISHED, VERY_GOOD_REFURBISHED,
        and GOOD_REFURBISHED) must use an OAuth token created with the <a href="/api-docs/static/oauth-authorization-code-grant.html"
        target="_blank">authorization code grant flow</a> and <b>https://api.ebay.com/oauth/api_scope/sell.inventory</b>
        scope in order to retrieve the refurbished conditions for the relevant categories.<br/><br/>See
        the <a href="/api-docs/sell/static/metadata/condition-id-values.html#Category
        " target="_blank">eBay Refurbished Program - Category and marketplace support</a>
        topic for the categories and marketplaces that support these refurbished conditions<br/><br/>These
        restricted item conditions will not be returned if an OAuth token created
        with the <a href="/api-docs/static/oauth-client-credentials-grant.html" target="_blank">client
        credentials grant flow</a> and <b>https://api.ebay.com/oauth/api_scope</b>
        scope is used, or if any seller is not eligible to list with that item condition.
        <br/><br/> See the <a href="/api-docs/static/oauth-scopes.html" target="_blank">Specifying
        OAuth scopes</a> topic for more information about specifying scopes.</span><br
        /><br /><span class="tablenote"><span style="color:#478415"><strong>Tip:</strong></span>
        This method can potentially return a very large response payload. eBay recommends
        that the response payload be compressed by passing in the <b>Accept-Encoding</b>
        request header and setting the value to <code>application/gzip</code>.</span>
      operationId: getItemConditionPolicies
      parameters:
      - description: 'This path parameter specifies the eBay marketplace for which
          policy information is retrieved. See the following page for a list of valid
          eBay marketplace IDs: <a href="/api-docs/static/rest-request-components.html#marketpl"
          target="_blank">Request components</a>.'
        explode: false
        in: path
        name: marketplace_id
        required: true
        schema:
          type: string
        style: simple
      - description: 'This query parameter limits the response by returning policy
          information for only the selected sections of the category tree. Supply
          <b>categoryId</b> values for the sections of the tree you want returned.  <br><br>When
          you specify a <b>categoryId</b> value, the returned category tree includes
          the policies for that parent node, plus the policies for any leaf nodes
          below that parent node.  <br><br>The parameter takes a list of <b>categoryId</b>
          values and you can specify up to 50 separate category IDs. Separate multiple
          values with a pipe character (''|''). If you specify more than 50 <code>categoryId</code>
          values, eBay returns the policies for the first 50 IDs and a warning that
          not all categories were returned.  <br><br><b>Example:</b> <code>filter=categoryIds:{100|101|102}</code>  <br><br>Note
          that you must URL-encode the parameter list, which results in the following
          filter for the above example: <br><br> &nbsp;&nbsp;<code>filter=categoryIds%3A%7B100%7C101%7C102%7D</code>'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemConditionPolicyResponse'
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /marketplace/{marketplace_id}/get_item_condition_policies
      tags:
      - Marketing API/marketplace
      x-apifox-folder: Marketing API/marketplace
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38498253-run
      x-accepts: application/json
  /country/{countryCode}/sales_tax_jurisdiction:
    get:
      deprecated: false
      description: This method retrieves all the sales tax jurisdictions for the country
        that you specify in the <b>countryCode</b> path parameter. Countries with
        valid sales tax jurisdictions are Canada and the US.  <br/><br/>The response
        from this call tells you the jurisdictions for which a seller can configure
        tax tables. Although setting up tax tables is optional, you can use the <b>createOrReplaceSalesTax</b>
        in the <b>Account API</b> call to configure the tax tables for the jurisdictions
        you sell to.
      operationId: getSalesTaxJurisdictions
      parameters:
      - description: This path parameter specifies the two-letter <a href="https://www.iso.org/iso-3166-country-codes.html"
          title="https://www.iso.org" target="_blank">ISO 3166</a> country code for
          the country whose jurisdictions you want to retrieve. eBay provides sales
          tax jurisdiction information for Canada and the United States.Valid values
          for this path parameter are <code>CA</code> and <code>US</code>.
        explode: false
        in: path
        name: countryCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesTaxJurisdictions'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /country/{countryCode}/sales_tax_jurisdiction
      tags:
      - Marketing API/country
      x-apifox-folder: Marketing API/country
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38498254-run
      x-accepts: application/json
  /marketplace/{marketplace_id}/get_listing_structure_policies:
    get:
      deprecated: false
      description: This method returns the eBay policies that define the allowed listing
        structures for the categories of a specific marketplace. The listing-structure
        policies currently pertain to whether or not you can list items with variations.  <br><br>By
        default, this method returns the entire category tree for the specified marketplace.
        You can limit the size of the result set by using the <b>filter</b> query
        parameter to specify only the category IDs you want to review.<br /><br /><span
        class="tablenote"><span style="color:#478415"><strong>Tip:</strong></span>
        This method can potentially return a very large response payload. eBay recommends
        that the response payload be compressed by passing in the <b>Accept-Encoding</b>
        request header and setting the value to <code>application/gzip</code>.</span>
      operationId: getListingStructurePolicies
      parameters:
      - description: 'This path parameter specifies the eBay marketplace for which
          policy information is retrieved. See the following page for a list of valid
          eBay marketplace IDs: <a href="/api-docs/static/rest-request-components.html#marketpl"
          target="_blank">Request components</a>.'
        explode: false
        in: path
        name: marketplace_id
        required: true
        schema:
          type: string
        style: simple
      - description: 'This query parameter limits the response by returning policy
          information for only the selected sections of the category tree. Supply
          <b>categoryId</b> values for the sections of the tree you want returned.  <br><br>When
          you specify a <b>categoryId</b> value, the returned category tree includes
          the policies for that parent node, plus the policies for any leaf nodes
          below that parent node.  <br><br>The parameter takes a list of <b>categoryId</b>
          values and you can specify up to 50 separate category IDs. Separate multiple
          values with a pipe character (''|''). If you specify more than 50 <code>categoryId</code>
          values, eBay returns the policies for the first 50 IDs and a warning that
          not all categories were returned.  <br><br><b>Example:</b> <code>filter=categoryIds:{100|101|102}</code>  <br><br>Note
          that you must URL-encode the parameter list, which results in the following
          filter for the above example: <br><br> &nbsp;&nbsp;<code>filter=categoryIds%3A%7B100%7C101%7C102%7D</code>'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingStructurePolicyResponse'
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /marketplace/{marketplace_id}/get_listing_structure_policies
      tags:
      - Marketing API/marketplace
      x-apifox-folder: Marketing API/marketplace
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38498255-run
      x-accepts: application/json
  /marketplace/{marketplace_id}/get_negotiated_price_policies:
    get:
      deprecated: false
      description: This method returns the eBay policies that define the supported
        negotiated price features (like "best offer") for the categories of a specific
        marketplace.  <br><br>By default, this method returns the entire category
        tree for the specified marketplace. You can limit the size of the result set
        by using the <b>filter</b> query parameter to specify only the category IDs
        you want to review.<br /><br /><span class="tablenote"><span style="color:#478415"><strong>Tip:</strong></span>
        This method can potentially return a very large response payload. eBay recommends
        that the response payload be compressed by passing in the <b>Accept-Encoding</b>
        request header and setting the value to <code>application/gzip</code>.</span>
      operationId: getNegotiatedPricePolicies
      parameters:
      - description: 'This path parameter specifies the eBay marketplace for which
          policy information is retrieved. See the following page for a list of valid
          eBay marketplace IDs: <a href="/api-docs/static/rest-request-components.html#marketpl"
          target="_blank">Request components</a>.'
        explode: false
        in: path
        name: marketplace_id
        required: true
        schema:
          type: string
        style: simple
      - description: 'This query parameter limits the response by returning policy
          information for only the selected sections of the category tree. Supply
          <b>categoryId</b> values for the sections of the tree you want returned.  <br><br>When
          you specify a <b>categoryId</b> value, the returned category tree includes
          the policies for that parent node, plus the policies for any leaf nodes
          below that parent node.  <br><br>The parameter takes a list of <b>categoryId</b>
          values and you can specify up to 50 separate category IDs. Separate multiple
          values with a pipe character (''|''). If you specify more than 50 <code>categoryId</code>
          values, eBay returns the policies for the first 50 IDs and a warning that
          not all categories were returned.  <br><br><b>Example:</b> <code>filter=categoryIds:{100|101|102}</code>  <br><br>Note
          that you must URL-encode the parameter list, which results in the following
          filter for the above example: <br><br> &nbsp;&nbsp;<code>filter=categoryIds%3A%7B100%7C101%7C102%7D</code>'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NegotiatedPricePolicyResponse'
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /marketplace/{marketplace_id}/get_negotiated_price_policies
      tags:
      - Marketing API/marketplace
      x-apifox-folder: Marketing API/marketplace
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38498256-run
      x-accepts: application/json
  /marketplace/{marketplace_id}/get_extended_producer_responsibility_policies:
    get:
      deprecated: false
      description: This method returns the Extended Producer Responsibility policies
        for one, multiple, or all eBay categories in an eBay marketplace.<br /><br
        />The identifier of the eBay marketplace is passed in as a path parameter,
        and unless one or more eBay category IDs are passed in through the filter
        query parameter, this method will return metadata on every applicable category
        for the specified marketplace.<br /><br /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
        Currently, the Extended Producer Responsibility policies are only applicable
        to a limited number of categories, and only in the EBAY_FR marketplace.</span><br
        /><br /><span class="tablenote"><span style="color:#478415"><strong>Tip:</strong></span>
        This method can potentially return a very large response payload. eBay recommends
        that the response payload be compressed by passing in the <b>Accept-Encoding</b>
        request header and setting the value to <code>application/gzip</code>.</span>
      operationId: getExtendedProducerResponsibilityPolicies
      parameters:
      - description: A path parameter that specifies the eBay marketplace for which
          policy information shall be retrieved.<br /><br /><span class="tablenote"><span
          style="color:#478415"><strong>Tip:</strong></span> See <a href="/api-docs/static/rest-request-components.html#marketpl"
          target="_blank">Request components</a> for a list of valid eBay marketplace
          IDs.</span>
        explode: false
        in: path
        name: marketplace_id
        required: true
        schema:
          type: string
        style: simple
      - description: A query parameter that can be used to limit the response by returning
          policy information for only the selected sections of the category tree.
          Supply <b>categoryId</b> values for the sections of the tree that should
          be returned.<br /><br />When a <b>categoryId</b> value is specified, the
          returned category tree includes the policies for that parent node, as well
          as the policies for any child nodes below that parent node.<br /><br />Pass
          in the <b>categoryId</b> values using a URL-encoded, pipe-separated ('|')
          list. For example:<br /><br /><code>filter=categoryIds%3A%7B100%7C101%7C102%7D</code><br
          /><br /><b>Maximum:</b> 50
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedProducerResponsibilityPolicyResponse'
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /marketplace/{marketplace_id}/get_extended_producer_responsibility_policies
      tags:
      - Marketing API/marketplace
      x-apifox-folder: Marketing API/marketplace
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38498257-run
      x-accepts: application/json
  /marketplace/{marketplace_id}/get_automotive_parts_compatibility_policies:
    get:
      deprecated: false
      description: This method returns the eBay policies that define how to list automotive-parts-compatibility
        items in the categories of a specific marketplace.  <br><br>By default, this
        method returns the entire category tree for the specified marketplace. You
        can limit the size of the result set by using the <b>filter</b> query parameter
        to specify only the category IDs you want to review.<br /><br /><span class="tablenote"><span
        style="color:#478415"><strong>Tip:</strong></span> This method can potentially
        return a very large response payload. eBay recommends that the response payload
        be compressed by passing in the <b>Accept-Encoding</b> request header and
        setting the value to <code>application/gzip</code>.</span>
      operationId: getAutomotivePartsCompatibilityPolicies
      parameters:
      - description: 'This path parameter specifies the eBay marketplace for which
          policy information is retrieved.  <br><br><b>Note:</b> Only the following
          eBay marketplaces support automotive parts compatibility: <ul> <li>EBAY_US</li>
          <li>EBAY_AU</li> <li>EBAY_CA</li> <li>EBAY_DE</li> <li>EBAY_ES</li> <li>EBAY_FR</li>
          <li>EBAY_GB</li> <li>EBAY_IT</li><ul>'
        explode: false
        in: path
        name: marketplace_id
        required: true
        schema:
          type: string
        style: simple
      - description: 'This query parameter limits the response by returning policy
          information for only the selected sections of the category tree. Supply
          <b>categoryId</b> values for the sections of the tree you want returned.  <br><br>When
          you specify a <b>categoryId</b> value, the returned category tree includes
          the policies for that parent node, plus the policies for any leaf nodes
          below that parent node.  <br><br>The parameter takes a list of <b>categoryId</b>
          values and you can specify up to 50 separate category IDs. Separate multiple
          values with a pipe character (''|''). If you specify more than 50 <code>categoryId</code>
          values, eBay returns the policies for the first 50 IDs and a warning that
          not all categories were returned.  <br><br><b>Example:</b> <code>filter=categoryIds:{100|101|102}</code>  <br><br>Note
          that you must URL-encode the parameter list, which results in the following
          filter for the above example: <br><br> &nbsp;&nbsp;<code>filter=categoryIds%3A%7B100%7C101%7C102%7D</code>'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomotivePartsCompatibilityPolicyResponse'
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /marketplace/{marketplace_id}/get_automotive_parts_compatibility_policies
      tags:
      - Marketing API/marketplace
      x-apifox-folder: Marketing API/marketplace
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38498258-run
      x-accepts: application/json
  /marketplace/{marketplace_id}/get_return_policies:
    get:
      deprecated: false
      description: This method returns the eBay policies that define whether or not
        you must include a return policy for the items you list in the categories
        of a specific marketplace, plus the guidelines for creating domestic and international
        return policies in the different eBay categories.  <br><br>By default, this
        method returns the entire category tree for the specified marketplace. You
        can limit the size of the result set by using the <b>filter</b> query parameter
        to specify only the category IDs you want to review.<br /><br /><span class="tablenote"><span
        style="color:#478415"><strong>Tip:</strong></span> This method can potentially
        return a very large response payload. eBay recommends that the response payload
        be compressed by passing in the <b>Accept-Encoding</b> request header and
        setting the value to <code>application/gzip</code>.</span>
      operationId: getReturnPolicies
      parameters:
      - description: 'This path parameter specifies the eBay marketplace for which
          policy information is retrieved. See the following page for a list of valid
          eBay marketplace IDs: <a href="/api-docs/static/rest-request-components.html#marketpl"
          target="_blank">Request components</a>.'
        explode: false
        in: path
        name: marketplace_id
        required: true
        schema:
          type: string
        style: simple
      - description: 'This query parameter limits the response by returning policy
          information for only the selected sections of the category tree. Supply
          <b>categoryId</b> values for the sections of the tree you want returned.  <br><br>When
          you specify a <b>categoryId</b> value, the returned category tree includes
          the policies for that parent node, plus the policies for any leaf nodes
          below that parent node.  <br><br>The parameter takes a list of <b>categoryId</b>
          values and you can specify up to 50 separate category IDs. Separate multiple
          values with a pipe character (''|''). If you specify more than 50 <code>categoryId</code>
          values, eBay returns the policies for the first 50 IDs and a warning that
          not all categories were returned.  <br><br><b>Example:</b> <code>filter=categoryIds:{100|101|102}</code>  <br><br>Note
          that you must URL-encode the parameter list, which results in the following
          filter for the above example: <br><br> &nbsp;&nbsp;<code>filter=categoryIds%3A%7B100%7C101%7C102%7D</code>'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPolicyResponse'
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /marketplace/{marketplace_id}/get_return_policies
      tags:
      - Marketing API/marketplace
      x-apifox-folder: Marketing API/marketplace
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38498259-run
      x-accepts: application/json
  /find_eligible_items:
    get:
      deprecated: false
      description: This method evaluates a seller's current listings and returns the
        set of IDs that are eligible for a seller-initiated discount offer to a buyer.
        A listing ID is returned only when one or more buyers have shown an &quot;interest&quot;
        in the listing. If any buyers have shown interest in a listing, the seller
        can initiate a &quot;negotiation&quot; with them by calling sendOfferToInterestedBuyers,
        which sends all interested buyers a message that offers the listing at a discount.
        For details about how to create seller offers to buyers, see Sending offers
        to buyers.
      operationId: findEligibleItems
      parameters:
      - description: 'This query parameter specifies the maximum number of items to
          return from the result set on a page in the paginated response. Minimum:
          1 &nbsp; &nbsp;Maximum: 200 Default: 10'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: 'This query parameter specifies the number of results to skip
          in the result set before returning the first result in the paginated response.
          Combine offset with the limit query parameter to control the items returned
          in the response. For example, if you supply an offset of 0 and a limit of
          10, the first page of the response contains the first 10 results from the
          complete list of items retrieved by the call. If offset is 10 and limit
          is 20, the first page of the response contains items 11-30 from the complete
          result set. Default: 0'
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: The eBay marketplace on which you want to search for eligible
          listings. For a complete list of supported marketplaces, see Negotiation
          API requirements and restrictions.
        explode: false
        in: header
        name: X-EBAY-C-MARKETPLACE-ID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedEligibleItemCollection'
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /find_eligible_items
      tags:
      - Negotiation API/offer
      x-apifox-folder: Negotiation API/offer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38498960-run
      x-accepts: application/json
  /send_offer_to_interested_buyers:
    post:
      deprecated: false
      description: This method sends eligible buyers offers to purchase items in a
        listing at a discount. When a buyer has shown interest in a listing, they
        become &quot;eligible&quot; to receive a seller-initiated offer to purchase
        the item(s). Sellers use findEligibleItems to get the set of listings that
        have interested buyers. If a listing has interested buyers, sellers can use
        this method (sendOfferToInterestedBuyers) to send an offer to the buyers who
        are interested in the listing. The offer gives buyers the ability to purchase
        the associated listings at a discounted price. For details about how to create
        seller offers to buyers, see Sending offers to buyers.
      operationId: sendOfferToInterestedBuyers
      parameters:
      - description: The eBay marketplace on which your listings with &quot;eligible&quot;
          buyers appear. For a complete list of supported marketplaces, see Negotiation
          API requirements and restrictions.
        explode: false
        in: header
        name: X-EBAY-C-MARKETPLACE-ID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOffersRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendOfferToInterestedBuyersCollectionResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /send_offer_to_interested_buyers
      tags:
      - Negotiation API/offer
      x-apifox-folder: Negotiation API/offer
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38498961-run
      x-contentType: application/json
      x-accepts: application/json
  /find:
    post:
      deprecated: false
      description: 'The find method currently returns information for a single recommendation
        type (AD) which contains information that sellers can use to configure Promoted
        Listings ad campaigns. The response from this method includes an array of
        the seller''s listing IDs, where each element in the array contains recommendations
        related to the associated listing ID. For details on how to use this method,
        see Using the Recommendation API to help configure campaigns. The AD recommendation
        type The AD type contains two sets of information: The promoteWithAd indicator
        The promoteWithAd response field indicates whether or not eBay recommends
        you place the associated listing in a Promoted Listings ad campaign. The returned
        value is set to either RECOMMENDED or UNDETERMINED, where RECOMMENDED identifies
        the listings that will benefit the most from having them included in an ad
        campaign. The bid percentage Also known as the &quot;ad rate,&quot; the bidPercentage
        field provides the current trending bid percentage of similarly promoted items
        in the marketplace. The ad rate is a user-specified value that indicates the
        level of promotion that eBay applies to the campaign across the marketplace.
        The value is also used to calculate the Promotion Listings fee, which is assessed
        to the seller if a Promoted Listings action results in the sale of an item.
        Configuring the request You can configure a request to review all of a seller''s
        currently active listings, or just a subset of them. All active listings &ndash;
        If you leave the request body empty, the request targets all the items currently
        listed by the seller. Here, the response is filtered to contain only the items
        where promoteWithAd equals RECOMMENDED. In this case, eBay recommends that
        all the returned listings should be included in a Promoted Listings ad campaign.
        Selected listing IDs &ndash; If you populate the request body with a set of
        listingIds, the response contains data for all the specified listing IDs.
        In this scenario, the response provides you with information on listings where
        the promoteWithAd can be either RECOMMENDED or UNDETERMINED. The paginated
        response Because the response can contain many listing IDs, the findListingRecommendations
        method paginates the response set. You can control size of the returned pages,
        as well as an offset that dictates where to start the pagination, using query
        parameters in the request.'
      operationId: findListingRecommendations
      parameters:
      - description: 'Provide a list of key-value pairs to specify the criteria you
          want to use to filter the response. In the list, separate each filter key
          from its associated value with a colon (&quot;:&quot;). Currently, the only
          supported filter value is recommendationTypes and it supports only the (&quot;AD&quot;)
          type. Follow the recommendationTypes specifier with the filter type(s) enclosed
          in curly braces (&quot;{ }&quot;), and separate multiple types with commas.
          Example: filter=recommendationTypes:{AD} Default: recommendationTypes:{AD}'
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: 'Use this query parameter to set the maximum number of ads to
          return on a page from the paginated response. Default: 10 Maximum: 500'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: 'Specifies the number of ads to skip in the result set before
          returning the first ad in the paginated response. Combine offset with the
          limit query parameter to control the items returned in the response. For
          example, if you supply an offset of 0 and a limit of 10, the first page
          of the response contains the first 10 items from the complete list of items
          retrieved by the call. If offset is 10 and limit is 20, the first page of
          the response contains items 11-30 from the complete result set. Default:
          0'
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: Use this header to specify the eBay marketplace where you list
          the items for which you want to get recommendations.
        explode: false
        in: header
        name: X-EBAY-C-MARKETPLACE-ID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindListingRecommendationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "204":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: No Content
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /find
      tags:
      - Recommendation API/listing_recommendation
      x-apifox-folder: Recommendation API/listing_recommendation
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38498986-run
      x-contentType: application/json
      x-accepts: application/json
  /shipment/{shipmentId}/cancel:
    post:
      deprecated: false
      description: This method cancels the shipment associated with the specified
        shipment ID and the associated shipping label is deleted. When you cancel
        a shipment, the <b>totalShippingCost</b> of the canceled shipment is refunded
        to the account established by the user's billing agreement.  <br><br>Note
        that you cannot cancel a shipment if you have used the associated shipping
        label.
      operationId: cancelShipment
      parameters:
      - description: This path parameter specifies the unique eBay-assigned ID of
          the shipment to be canceled. The <b>shipmentId</b> value is generated and
          returned by a call to <b>createFromShippingQuote</b>.
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /shipment/{shipmentId}/cancel
      tags:
      - Logistics API/shipment
      x-apifox-folder: Logistics API/shipment
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38499099-run
      x-accepts: application/json
  /shipping_quote:
    post:
      deprecated: false
      description: 'The <b>createShippingQuote</b> method returns a <i>shipping quote
        </i> that contains a list of live "rates."  <br><br>Each rate represents an
        offer made by a shipping carrier for a specific service and each offer has
        a live quote for the base service cost. Rates have a time window in which
        they are "live," and rates expire when their purchase window ends. If offered
        by the carrier, rates can include shipping options (and their associated prices),
        and users can add any offered shipping option to the base service should they
        desire.  Also, depending on the services required, rates can also include
        pickup and delivery windows.  <br><br>Each rate is for a single package and
        is based on the following information: <ul><li>The shipping origin</li> <li>The
        shipping destination</li> <li>The package size (weight and dimensions)</li></ul>  Rates
        are identified by a unique eBay-assigned <b>rateId</b> and rates are based
        on price points, pickup and delivery time frames, and other user requirements.
        Because each rate offered must be compliant with the eBay shipping program,
        all rates reflect eBay-negotiated prices.  <br><br>The various rates returned
        in a shipping quote offer the user a choice from which they can choose a shipping
        service that best fits their needs. Select the rate for your shipment and
        using the associated <b>rateId</b>, call <b>createFromShippingQuote</b> to
        create a shipment and generate a shipping label that you can use to ship the
        package.'
      operationId: createShippingQuote
      parameters:
      - description: This header parameter specifies the eBay marketplace for the
          shipping quote that is being created. For a list of valid values, refer
          to the section <a href="/api-docs/static/rest-request-components.html#marketpl"
          target="_blank">Marketplace ID Values</a> in the <b>Using eBay RESTful APIs</b>
          guide.
        explode: false
        in: header
        name: X-EBAY-C-MARKETPLACE-ID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingQuoteRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingQuote'
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /shipping_quote
      tags:
      - Logistics API/shipping_quote
      x-apifox-folder: Logistics API/shipping_quote
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38499100-run
      x-contentType: application/json
      x-accepts: application/json
  /shipment/create_from_shipping_quote:
    post:
      deprecated: false
      description: 'This method creates a "shipment" based on the <b>shippingQuoteId</b>
        and <b>rateId</b> values supplied in the request. The rate identified by the
        <b>rateId</b> value specifies the carrier and service for the package shipment,
        and the rate ID must be contained in the shipping quote identified by the
        <b>shippingQuoteId</b> value. Call <b>createShippingQuote</b> to retrieve
        a set of live shipping rates.  <br><br>When you create a shipment, eBay generates
        a shipping label that you can download and use to ship your package.  <br><br>In
        a <b>createFromShippingQuote</b> request, sellers can include a list of shipping
        options they want to add to the base service quoted in the selected rate.
        The list of available shipping options is specific to each quoted rate and
        if available, the options are listed in the rate container of the of the shipping
        quote.  <br><br>In addition to a configurable return-to location and other
        details about the shipment, the response to this method includes:  <ul><li>The
        shipping carrier and service to be used for the package shipment</li> <li>A
        list of selected shipping options, if any</li> <li>The shipment tracking number</li>
        <li>The total shipping cost (the sum cost of the base shipping service and
        any added options)</li></ul> When you create a shipment, your billing agreement
        account is charged the sum of the <b>baseShippingCost</b> and the total cost
        of any additional shipping options you might have selected. Use the URL returned
        in <b>labelDownloadUrl</b> field, or call <b>downloadLabelFile</b> with the
        <b>shipmentId</b> value from the response, to download a shipping label for
        your package. <p class="tablenote"><b>Important!</b> Sellers must set up their
        payment method with eBay before they can use this method to create a shipment
        and the associated shipping label.</p>'
      operationId: createFromShippingQuote
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShipmentFromQuoteRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: Created
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "409":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /shipment/create_from_shipping_quote
      tags:
      - Logistics API/shipment
      x-apifox-folder: Logistics API/shipment
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38499101-run
      x-contentType: application/json
      x-accepts: application/json
  /shipment/{shipmentId}/download_label_file:
    get:
      deprecated: false
      description: This method returns the shipping label file that was generated
        for the <b>shipmentId</b> value specified in the request. Call <b>createFromShippingQuote</b>
        to generate a shipment ID.  <br><br>Use the <code>Accept</code> HTTP header
        to specify the format of the returned file. The default file format is a PDF
        file. <!-- Are other options available? -->
      operationId: downloadLabelFile
      parameters:
      - description: This path parameter specifies the unique eBay-assigned ID of
          the shipment associated with the shipping label you want to download. The
          <b>shipmentId</b> value is generated and returned by a call to <b>createFromShippingQuote</b>.
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /shipment/{shipmentId}/download_label_file
      tags:
      - Logistics API/shipment
      x-apifox-folder: Logistics API/shipment
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38499102-run
      x-accepts: application/json
  /shipping_quote/{shippingQuoteId}:
    get:
      deprecated: false
      description: This method retrieves the complete details of the shipping quote
        associated with the specified <b>shippingQuoteId</b> value.  <br><br>A "shipping
        quote" pertains to a single specific package and contains a set of shipping
        "rates" that quote the cost to ship the package by different shipping carriers
        and services. The quotes are based on the package's origin, destination, and
        size.  <br><br>Call <b>createShippingQuote</b> to create a <b>shippingQuoteId</b>.
      operationId: getShippingQuote
      parameters:
      - description: This path parameter specifies the unique eBay-assigned ID of
          the shipping quote you want to retrieve. The <b>shippingQuoteId</b> value
          is generated and returned by a call to <b>createShippingQuote</b>.
        explode: false
        in: path
        name: shippingQuoteId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingQuote'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /shipping_quote/{shippingQuoteId}
      tags:
      - Logistics API/shipping_quote
      x-apifox-folder: Logistics API/shipping_quote
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38499103-run
      x-accepts: application/json
  /shipment/{shipmentId}:
    get:
      deprecated: false
      description: This method retrieves the shipment details for the specified shipment
        ID. Call <b>createFromShippingQuote</b> to generate a shipment ID.
      operationId: getShipment
      parameters:
      - description: This path parameter specifies the unique eBay-assigned ID of
          the shipment you want to retrieve. The <b>shipmentId</b> value is generated
          and returned by a call to <b>createFromShippingQuote</b>.
        explode: false
        in: path
        name: shipmentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: Success
        "400":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                properties: {}
                type: object
                x-apifox-orders: []
                x-apifox-ignore-properties: []
          description: Internal Server Error
      summary: /shipment/{shipmentId}
      tags:
      - Logistics API/shipment
      x-apifox-folder: Logistics API/shipment
      x-apifox-status: developing
      x-run-in-apifox: https://www.apifox.cn/web/project/1572569/apis/api-38499104-run
      x-accepts: application/json
components:
  requestBodies:
    inline_object:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object'
  schemas:
    ListingRecommendation:
      description: A complex type that contains the ID of an actively listed item
        and a set of related listing recommendations. The recommendations contain
        information the seller can use to optimize their listing configurations.
      properties:
        listingId:
          description: An ID that identifies the active listing associated with the
            eBay recommendations.
          type: string
        marketing:
          $ref: '#/components/schemas/MarketingRecommendation'
      type: object
      x-apifox-orders:
      - listingId
      - marketing
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PagedListingRecommendationCollection:
      description: The high-level object used to return a set of Promoted Listings
        ad recommendations.
      properties:
        href:
          description: The URI of the current page of results from the result set.
          type: string
        limit:
          description: The number of items returned on a single page from the result
            set. This value can be set in the request with the limit query parameter.
          format: int32
          type: integer
        listingRecommendations:
          description: Returns a list of listingRecommendations, where each element
            in the list offers recommendations for the associated listingId. Which
            elements are returned depend on how you structure the request. For example,
            if you request recommendations for all of a sellers listings (by leaving
            the request payload empty), ad recommendations are returned only for those
            listings where promoteWithAd is set to RECOMMENDED.
          items:
            $ref: '#/components/schemas/ListingRecommendation'
          type: array
        next:
          description: 'The URI for the following page of results. This value is returned
            only if there is an additional page of results to display from the result
            set. Max length: 2048'
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            offset query parameter. Note: The items in a paginated result set use
            a zero-based list where the first item in the list has an offset of 0.'
          format: int32
          type: integer
        prev:
          description: 'The URI for the preceding page of results. This value is returned
            only if there is a previous page of results to display from the result
            set. Max length: 2048'
          type: string
        total:
          description: The total number of items retrieved in the result set. If no
            items are found, this field is returned with a value of 0.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - listingRecommendations
      - next
      - offset
      - prev
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BidPercentages:
      description: A complex type that returns data related to Promoted Listings bid
        percentages.
      properties:
        basis:
          description: 'The basis by which the ad rate is calculated. Valid Values:
            ITEM and TRENDING For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/recommendation/types/api:Basis''>eBay
            API documentation</a>'
          type: string
        value:
          description: 'The bid percentage data is a single precision value, as calculated
            by the associated basis. In Promoted listings ad campaigns, the bid percentage
            (also known as the ad rate) is a user-defined value that sets the level
            that eBay raises the visibility of the listing in the marketplace. It
            is also the rate that is used to calculate the Promoted Listings fee.
            Minimum value: 1.0 &nbsp; Maximum value: 100.0'
          type: string
      type: object
      x-apifox-orders:
      - basis
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    MarketingRecommendation:
      description: A complex type that contains information about how a seller can
        improve their listing configurations. The AD object contains Promoted Listings
        recommendations and information, which the seller can use to improve buyer
        conversions. The response can also contain an optional message about the returned
        data.
      properties:
        ad:
          $ref: '#/components/schemas/Ad'
        message:
          description: A message that can conditionally accompany the listing information.
          type: string
      type: object
      x-apifox-orders:
      - ad
      - message
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FindListingRecommendationRequest:
      description: An list of listing ID values for which you want Promoted Listings
        ad configuration information.
      example:
        listingIds:
        - listingIds
        - listingIds
      properties:
        listingIds:
          description: 'A comma-separated list of listing IDs for which you want Promoted
            Listings ad configuration information. Currently, this method accepts
            only listingId values from the Trading API. Max: 500 listing IDs'
          items:
            type: string
          type: array
      type: object
      x-apifox-orders:
      - listingIds
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PagedEligibleItemCollection:
      description: This complex type defines a collection of listings that are eligible
        for an offer to a buyer.
      example:
        next: next
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
        eligibleItems:
        - listingId: listingId
        - listingId: listingId
      properties:
        eligibleItems:
          description: A list of items that are eligible for a seller-initiated offer
            to a buyer. Each element in the list contains the listing ID of a listed
            item. These IDs represent the listings for which buyers have shown an
            interest.
          items:
            $ref: '#/components/schemas/EligibleItem'
          type: array
        href:
          description: The URI of the current page of results from the result set.
          type: string
        limit:
          description: The number of items returned on a single page from the result
            set. This value can be set in the request with the limit query parameter.
          format: int32
          type: integer
        next:
          description: 'The URI for the following page of results. This value is returned
            only if there is an additional page of results to display from the result
            set. Max length: 2048'
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            offset query parameter. Note: The items in a paginated result set use
            a zero-based list where the first item in the list has an offset of 0.'
          format: int32
          type: integer
        prev:
          description: 'The URI for the preceding page of results. This value is returned
            only if there is a previous page of results to display from the result
            set. Max length: 2048'
          type: string
        total:
          description: The total number of items retrieved in the result set. If no
            items match the search criteria, the server returns the HTTP status code
            204 No Content.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - eligibleItems
      - href
      - limit
      - next
      - offset
      - prev
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    User:
      description: This complex type identifies an eBay user.
      example:
        maskedUsername: maskedUsername
      properties:
        maskedUsername:
          description: The masked user name is a user name that has certain characters
            hidden for privacy of the user.
          type: string
      type: object
      x-apifox-orders:
      - maskedUsername
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    EligibleItem:
      description: 'A listing that is eligible for a seller-initiated offer to a buyer.
        Listings are identified by a listingId value that is generated and assigned
        by eBay when a seller lists an item using the Trading API. Note: The Negotiation
        API does not currently support listings that are managed with the Inventory
        API.'
      example:
        listingId: listingId
      properties:
        listingId:
          description: The unique eBay-assigned ID for an eBay listing. A listingId
            is assigned by eBay when a seller creates a listing with the Trading API.
          type: string
      type: object
      x-apifox-orders:
      - listingId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Offer:
      description: A complex type that defines an offer that a seller makes to eligible
        buyers.
      example:
        allowCounterOffer: true
        offerType: offerType
        lastModifiedDate: lastModifiedDate
        offeredItems:
        - discountPercentage: discountPercentage
          quantity: 0
          price:
            currency: currency
            value: value
          listingId: listingId
        - discountPercentage: discountPercentage
          quantity: 0
          price:
            currency: currency
            value: value
          listingId: listingId
        offerDuration:
          unit: unit
          value: 0
        offerId: offerId
        creationDate: creationDate
        message: message
        initiatedBy: initiatedBy
        offerStatus: offerStatus
        buyer:
          maskedUsername: maskedUsername
        revision: revision
      properties:
        allowCounterOffer:
          description: If set to true, the buyer is allowed to make a counter-offer
            to the seller's offer.
          type: boolean
        buyer:
          $ref: '#/components/schemas/User'
        creationDate:
          description: 'The date and time when the seller''s offer was created. The
            returned timestamp is formatted as an ISO 8601 string, which is based
            on the 24-hour Coordinated Universal Time (UTC) clock. Format: [YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z
            Example: 2018-08-20T07:09:00.000Z'
          type: string
        initiatedBy:
          description: The eBay UserName of the user (seller) who initiated the offer.
          type: string
        lastModifiedDate:
          description: The date and time when the offer was last modified. The returned
            timestamp is formatted as an ISO 8601 string.
          type: string
        message:
          description: A seller-defined message related to the offer being made. This
            message is sent to the list of &quot;interested&quot; buyers along with
            the offer message from eBay.
          type: string
        offerDuration:
          $ref: '#/components/schemas/TimeDuration'
        offeredItems:
          description: The list of items associated with the offer. Currently, the
            offer list is restricted to a single offer.
          items:
            $ref: '#/components/schemas/OfferedItem'
          type: array
        offerId:
          description: A unique eBay-assigned identifier for the offer.
          type: string
        offerStatus:
          description: The current state, or status, of an offer. Status states include
            PENDING, COUNTERED, ACCEPTED, and DECLINED. For implementation help, refer
            to <a href='https://developer.ebay.com/api-docs/sell/negotiation/types/api:OfferStatusEnum'>eBay
            API documentation</a>
          type: string
        offerType:
          description: The type of offer being made. For implementation help, refer
            to <a href='https://developer.ebay.com/api-docs/sell/negotiation/types/api:OfferTypeEnum'>eBay
            API documentation</a>
          type: string
        revision:
          description: A unique, eBay-assigned ID for the revision of the offer.
          type: string
      type: object
      x-apifox-orders:
      - allowCounterOffer
      - buyer
      - creationDate
      - initiatedBy
      - lastModifiedDate
      - message
      - offerDuration
      - offeredItems
      - offerId
      - offerStatus
      - offerType
      - revision
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OfferedItem:
      description: A complex type that defines the offer being made to an &quot;interested&quot;
        buyer.
      example:
        discountPercentage: discountPercentage
        quantity: 0
        price:
          currency: currency
          value: value
        listingId: listingId
      properties:
        discountPercentage:
          description: 'This value denotes the percentage that the listing in the
            offer will be discounted from its original listed price. The seller can
            specify either the exact price of the discounted items with the price
            field or they can use this field to specify the percentage that the listing
            will be discounted, but not both. Minimum: 5 Required if you do not specify
            a price value.'
          type: string
        listingId:
          description: This value is a unique eBay-assigned ID that identifies the
            listing to which the offer pertains. A listingId value is generated by
            eBay when you list an item with the Trading API.
          type: string
        price:
          $ref: '#/components/schemas/Amount'
        quantity:
          description: 'This integer value indicates the number of items in the eBay
            listing for which the offer is being made. The offer being made by the
            seller is an &quot;all or nothing&quot; offer, meaning the buyer must
            purchase the indicated quantity of items in order to receive the discount
            on the transaction. Default: 1'
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - discountPercentage
      - listingId
      - price
      - quantity
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SendOfferToInterestedBuyersCollectionResponse:
      description: The response object returned from a SendOfferToInterestedBuyers
        request.
      example:
        offers:
        - allowCounterOffer: true
          offerType: offerType
          lastModifiedDate: lastModifiedDate
          offeredItems:
          - discountPercentage: discountPercentage
            quantity: 0
            price:
              currency: currency
              value: value
            listingId: listingId
          - discountPercentage: discountPercentage
            quantity: 0
            price:
              currency: currency
              value: value
            listingId: listingId
          offerDuration:
            unit: unit
            value: 0
          offerId: offerId
          creationDate: creationDate
          message: message
          initiatedBy: initiatedBy
          offerStatus: offerStatus
          buyer:
            maskedUsername: maskedUsername
          revision: revision
        - allowCounterOffer: true
          offerType: offerType
          lastModifiedDate: lastModifiedDate
          offeredItems:
          - discountPercentage: discountPercentage
            quantity: 0
            price:
              currency: currency
              value: value
            listingId: listingId
          - discountPercentage: discountPercentage
            quantity: 0
            price:
              currency: currency
              value: value
            listingId: listingId
          offerDuration:
            unit: unit
            value: 0
          offerId: offerId
          creationDate: creationDate
          message: message
          initiatedBy: initiatedBy
          offerStatus: offerStatus
          buyer:
            maskedUsername: maskedUsername
          revision: revision
      properties:
        offers:
          description: The offers container returns a list of the offers sent to buyers
            who have shown an interest in listings included in the offer.
          items:
            $ref: '#/components/schemas/Offer'
          type: array
      type: object
      x-apifox-orders:
      - offers
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateOffersRequest:
      description: This complex type contains the fields needed to create an offer
        to a buyer that is initiated by the seller.
      example:
        allowCounterOffer: true
        offeredItems:
        - discountPercentage: discountPercentage
          quantity: 0
          price:
            currency: currency
            value: value
          listingId: listingId
        - discountPercentage: discountPercentage
          quantity: 0
          price:
            currency: currency
            value: value
          listingId: listingId
        offerDuration:
          unit: unit
          value: 0
        message: message
      properties:
        allowCounterOffer:
          description: 'If set to true, the buyer is allowed to make a counter-offer
            to the seller''s offer. Note: Currently, you must set this field to false;
            counter-offers are not supported in this release. Default: false'
          type: boolean
        message:
          description: 'A seller-defined message related to the offer being made.
            This message is sent to the list of &quot;interested&quot; buyers. To
            increase the conversion rate of the offers a seller makes to buyers, eBay
            recommends you always add a customized message to your offers. Maximum
            length: 2,000 characters'
          type: string
        offerDuration:
          $ref: '#/components/schemas/TimeDuration'
        offeredItems:
          description: An array of objects where each object contains the details
            of an offer and the ID of the listing on which the offer is being made.
            Note that the service does not currently support the creation of multiple
            offers with a single call to sendOfferToInterestedBuyer. With this, each
            request can target only one listing at a time and you must populate this
            array with a single element that contains the details of one offer.
          items:
            $ref: '#/components/schemas/OfferedItem'
          type: array
      type: object
      x-apifox-orders:
      - allowCounterOffer
      - message
      - offerDuration
      - offeredItems
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ItemCondition:
      description: '<span class="tablenote"><b>Note: </b>In all eBay marketplaces,
        Condition ID 2000 now maps to an item condition of ''Certified Refurbished'',
        and not ''Manufacturer Refurbished''. To list an item as ''Certified Refurbished'',
        a seller must be pre-qualified by eBay for this feature. Any seller who is
        not eligible for this feature will be blocked if they try to create a new
        listing or revise an existing listing with this item condition. Any active
        listings on any eBay marketplace that had ''Manufacturer Refurbished'' as
        the item condition should have been automatically updated by eBay to the ''Seller
        Refurbished'' item condition (Condition ID 2500). <br><br> Any seller that
        is interested in eligibility requirements to list with ''Certified Refurbished''
        should see the <a href="https://pages.ebay.com/seller-center/listing-and-marketing/certified-refurbished-program.html
        " target="_blank">Certified refurbished program</a> page in Seller Center.
        </span>'
      example:
        conditionId: conditionId
        usage: usage
        conditionDescription: conditionDescription
      properties:
        conditionDescription:
          description: 'The human-readable label for the condition (e.g., "New").
            This value is typically localized for each site.  <br><br>Note that the
            display name can vary by category. For example, the description for condition
            ID <code>1000</code> could be called "New: with Tags" in one category
            and "Brand New" in another. For details on condition IDs and descriptions,
            see <a href=''/api-docs/sell/static/metadata/condition-id-values.html''>Item
            condition ID and name values</a>.'
          type: string
        conditionId:
          description: The ID value of the selected item condition. For information
            on the supported condition ID values, see <a href='/api-docs/sell/static/metadata/condition-id-values.html'>Item
            condition ID and name values</a>.
          type: string
        usage:
          description: 'The value returned in this field indicates if there are any
            usage restrictions or requirements for the corresponding item condition
            in the corresponding category.<br /><br /><span class="tablenote"><b>Note:</b>
            Currently, the only supported value is ''RESTRICTED'', and this field
            will only be returned for the following conditions: 2000, 2010, 2020,
            2030. Sellers must be pre-approved to use any of these item conditions.</span>
            For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/metadata/types/sel:UsageEnum''>eBay
            API documentation</a>'
          type: string
      type: object
      x-apifox-orders:
      - conditionDescription
      - conditionId
      - usage
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SalesTaxJurisdictions:
      description: This complex type contains a list of sales tax jurisdictions.
      example:
        salesTaxJurisdictions:
        - salesTaxJurisdictionId: salesTaxJurisdictionId
        - salesTaxJurisdictionId: salesTaxJurisdictionId
      properties:
        salesTaxJurisdictions:
          description: A list of sales tax jurisdictions.
          items:
            $ref: '#/components/schemas/SalesTaxJurisdiction'
          type: array
      type: object
      x-apifox-orders:
      - salesTaxJurisdictions
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SalesTaxJurisdiction:
      description: A unique ID for a sales tax jurisdiction.
      example:
        salesTaxJurisdictionId: salesTaxJurisdictionId
      properties:
        salesTaxJurisdictionId:
          description: The unique ID for a sales tax jurisdiction.
          type: string
      type: object
      x-apifox-orders:
      - salesTaxJurisdictionId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReturnPolicyDetails:
      description: This container defines the category policies that relate to domestic
        and international return policies (the return shipping is made via a domestic
        or an international shipping service, respectively).
      properties:
        policyDescriptionEnabled:
          description: If set to <code>true</code>, this flag indicates you can supply
            a detailed return policy description within your return policy (for example,
            by populating the <b>returnInstructions</b> field in the Account API's
            <b>createReturnPolicy</b>). User-supplied return policy details are allowed
            only in the DE, ES, FR, and IT marketplaces.
          type: boolean
        refundMethods:
          description: A list of refund methods allowed for the associated category.
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/metadata/types/sel:RefundMethodEnum''>eBay
              API documentation</a>'
            type: string
          type: array
        returnMethods:
          description: A list of return methods allowed for the associated category.
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/metadata/types/sel:ReturnMethodEnum''>eBay
              API documentation</a>'
            type: string
          type: array
        returnPeriods:
          description: A list of return periods allowed for the associated category.  <br><br>Note
            that different APIs require you to enter the return period in different
            ways. For example, the Account API uses the complex <b>TimeDuration</b>
            type, which takes two values (a <b>unit</b> and a <b>value</b>), whereas
            the Trading API takes a single value (such as <code>Days_30</code>).
          items:
            $ref: '#/components/schemas/TimeDuration'
          type: array
        returnsAcceptanceEnabled:
          description: If set to <code>true</code>, this flag indicates the seller
            can configure how they handle domestic returns.
          type: boolean
        returnShippingCostPayers:
          description: A list of allowed values for who pays for the return shipping
            cost.  <br><br>Note that for SNAD returns, the seller is always responsible
            for the return shipping cost.
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/metadata/types/sel:ReturnShippingCostPayerEnum''>eBay
              API documentation</a>'
            type: string
          type: array
      type: object
      x-apifox-orders:
      - policyDescriptionEnabled
      - refundMethods
      - returnMethods
      - returnPeriods
      - returnsAcceptanceEnabled
      - returnShippingCostPayers
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ListingStructurePolicy:
      example:
        categoryTreeId: categoryTreeId
        variationsSupported: true
        categoryId: categoryId
      properties:
        categoryId:
          description: The category ID to which the listing-structure policy applies.
          type: string
        categoryTreeId:
          description: A value that indicates the root node of the category tree used
            for the response set. Each marketplace is based on a category tree whose
            root node is indicated by this unique category ID value. All category
            policy information returned by this call pertains to the categories included
            below this root node of the tree.    <br><br>A <i>category tree</i> is
            a hierarchical framework of eBay categories that begins at the root node
            of the tree and extends to include all the child nodes in the tree. Each
            child node in the tree is an eBay category that is represented by a unique
            <b>categoryId</b> value. Within a category tree, the root node has no
            parent node and <i>leaf nodes</i> are nodes that have no child nodes.
          type: string
        variationsSupported:
          description: This flag denotes whether or not the associated category supports
            listings with item variations. If set to <code>true</code>, the category
            does support item variations.
          type: boolean
      type: object
      x-apifox-orders:
      - categoryId
      - categoryTreeId
      - variationsSupported
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    NegotiatedPricePolicy:
      example:
        bestOfferAutoAcceptEnabled: true
        bestOfferAutoDeclineEnabled: true
        categoryTreeId: categoryTreeId
        bestOfferCounterEnabled: true
        categoryId: categoryId
      properties:
        bestOfferAutoAcceptEnabled:
          description: This flag denotes whether or not the category supports the
            setting of a price at which best offers are automatically accepted. If
            set to <code>true</code>, the category does support the setting of an
            automatic price for best-offers.
          type: boolean
        bestOfferAutoDeclineEnabled:
          description: This flag denotes whether or not the category supports the
            setting of an auto-decline price for best offers. If set to <code>true</code>,
            the category does support the setting of an automatic-decline price for
            best-offers.
          type: boolean
        bestOfferCounterEnabled:
          description: This flag denotes whether or not the category supports the
            setting for an automatic counter-offer on best offers. If set to <code>true</code>,
            the category does support the setting of an automatic counter-offer price
            for best-offers.
          type: boolean
        categoryId:
          description: The category ID to which the negotiated-price policies apply.
          type: string
        categoryTreeId:
          description: A value that indicates the root node of the category tree used
            for the response set. Each marketplace is based on a category tree whose
            root node is indicated by this unique category ID value. All category
            policy information returned by this call pertains to the categories included
            below this root node of the tree.    <br><br>A <i>category tree</i> is
            a hierarchical framework of eBay categories that begins at the root node
            of the tree and extends to include all the child nodes in the tree. Each
            child node in the tree is an eBay category that is represented by a unique
            <b>categoryId</b> value. Within a category tree, the root node has no
            parent node and <i>leaf nodes</i> are nodes that have no child nodes.
          type: string
      type: object
      x-apifox-orders:
      - bestOfferAutoAcceptEnabled
      - bestOfferAutoDeclineEnabled
      - bestOfferCounterEnabled
      - categoryId
      - categoryTreeId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ItemConditionPolicyResponse:
      example:
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        itemConditionPolicies:
        - categoryTreeId: categoryTreeId
          itemConditions:
          - conditionId: conditionId
            usage: usage
            conditionDescription: conditionDescription
          - conditionId: conditionId
            usage: usage
            conditionDescription: conditionDescription
          itemConditionRequired: true
          categoryId: categoryId
        - categoryTreeId: categoryTreeId
          itemConditions:
          - conditionId: conditionId
            usage: usage
            conditionDescription: conditionDescription
          - conditionId: conditionId
            usage: usage
            conditionDescription: conditionDescription
          itemConditionRequired: true
          categoryId: categoryId
      properties:
        itemConditionPolicies:
          description: A list of category IDs and the policies for how to indicate
            an item's condition in each of the listed categories.
          items:
            $ref: '#/components/schemas/ItemConditionPolicy'
          type: array
        warnings:
          description: A list of the warnings that were generated as a result of the
            request. This field is not returned if no warnings were generated by the
            request.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - itemConditionPolicies
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ExtendedProducerResponsibilityPolicy:
      description: A type that defines the Extended Producer Responsibility policy.
      example:
        categoryTreeId: categoryTreeId
        supportedAttributes:
        - productPackageId: productPackageId
          ecoParticipationFee:
            currency: currency
            value: value
          productDocumentationId: productDocumentationId
          producerProductId: producerProductId
          shipmentPackageId: shipmentPackageId
        - productPackageId: productPackageId
          ecoParticipationFee:
            currency: currency
            value: value
          productDocumentationId: productDocumentationId
          producerProductId: producerProductId
          shipmentPackageId: shipmentPackageId
        categoryId: categoryId
      properties:
        categoryId:
          description: The unique identifier for the category under which the policy
            applies.
          type: string
        categoryTreeId:
          description: The unique identifier for the category tree under which the
            policy applies.
          type: string
        supportedAttributes:
          description: The details regarding the attributes included in the policy,
            such as their usage guidelines and whether they can be specified at the
            listing variation level.
          items:
            $ref: '#/components/schemas/ExtendedProducerResponsibility'
          type: array
      type: object
      x-apifox-orders:
      - categoryId
      - categoryTreeId
      - supportedAttributes
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ListingStructurePolicyResponse:
      example:
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        listingStructurePolicies:
        - categoryTreeId: categoryTreeId
          variationsSupported: true
          categoryId: categoryId
        - categoryTreeId: categoryTreeId
          variationsSupported: true
          categoryId: categoryId
      properties:
        listingStructurePolicies:
          description: Returns a list of category IDs plus a flag indicating whether
            or not each listed category supports item variations.
          items:
            $ref: '#/components/schemas/ListingStructurePolicy'
          type: array
        warnings:
          description: A list of the warnings that were generated as a result of the
            request. This field is not returned if no warnings were generated by the
            request.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - listingStructurePolicies
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    NegotiatedPricePolicyResponse:
      example:
        negotiatedPricePolicies:
        - bestOfferAutoAcceptEnabled: true
          bestOfferAutoDeclineEnabled: true
          categoryTreeId: categoryTreeId
          bestOfferCounterEnabled: true
          categoryId: categoryId
        - bestOfferAutoAcceptEnabled: true
          bestOfferAutoDeclineEnabled: true
          categoryTreeId: categoryTreeId
          bestOfferCounterEnabled: true
          categoryId: categoryId
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        negotiatedPricePolicies:
          description: A list of category IDs and the policies related to negotiated-price
            items for each of the listed categories.
          items:
            $ref: '#/components/schemas/NegotiatedPricePolicy'
          type: array
        warnings:
          description: A list of the warnings that were generated as a result of the
            request. This field is not returned if no warnings were generated by the
            request.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - negotiatedPricePolicies
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ItemConditionPolicy:
      example:
        categoryTreeId: categoryTreeId
        itemConditions:
        - conditionId: conditionId
          usage: usage
          conditionDescription: conditionDescription
        - conditionId: conditionId
          usage: usage
          conditionDescription: conditionDescription
        itemConditionRequired: true
        categoryId: categoryId
      properties:
        categoryId:
          description: The category ID to which the item-condition policy applies.
          type: string
        categoryTreeId:
          description: A value that indicates the root node of the category tree used
            for the response set. Each marketplace is based on a category tree whose
            root node is indicated by this unique category ID value. All category
            policy information returned by this call pertains to the categories included
            below this root node of the tree.    <br><br>A <i>category tree</i> is
            a hierarchical framework of eBay categories that begins at the root node
            of the tree and extends to include all the child nodes in the tree. Each
            child node in the tree is an eBay category that is represented by a unique
            <b>categoryId</b> value. Within a category tree, the root node has no
            parent node and <i>leaf nodes</i> are nodes that have no child nodes.
          type: string
        itemConditionRequired:
          description: This flag denotes whether or not you must list the item condition
            in a listing for the specified category. If set to <code>true</code>,
            you must specify an item condition for the associated category.
          type: boolean
        itemConditions:
          description: The item-condition values allowed in the category.<br /><br
            /><span class="tablenote"><b>Note:</b> The ‘Seller Refurbished’ item condition
            (condition ID 2500) has been replaced by the 'Excellent - Refurbished',
            'Very Good - Refurbished', and 'Good - Refurbished' item conditions in
            a select number of eBay marketplaces and categories. See the <a href="/api-docs/sell/static/metadata/condition-id-values.html#Category
            " target="_blank "> eBay Refurbished Program - Category and marketplace
            support</a> topic for more details.<br/><br/>Similar to the ‘Certified
            Refurbished’ item condition (condition ID 2000), a seller’s OAuth user
            token will have to be used instead of an OAuth application token, since
            each seller must  go through an application and qualification process
            before using any of these new refurbished item conditions in supported
            categories. If a seller is not qualified to use the new refurbished item
            conditions, these item condition values will not be returned by <b>getItemConditionPolicies</b>.</span>
          items:
            $ref: '#/components/schemas/ItemCondition'
          type: array
      type: object
      x-apifox-orders:
      - categoryId
      - categoryTreeId
      - itemConditionRequired
      - itemConditions
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ExtendedProducerResponsibilityPolicyResponse:
      description: A type that defines the response fields for the <b>getExtendedProducerResponsibilityPolicies</b>
        method.
      example:
        extendedProducerResponsibilities:
        - categoryTreeId: categoryTreeId
          supportedAttributes:
          - productPackageId: productPackageId
            ecoParticipationFee:
              currency: currency
              value: value
            productDocumentationId: productDocumentationId
            producerProductId: producerProductId
            shipmentPackageId: shipmentPackageId
          - productPackageId: productPackageId
            ecoParticipationFee:
              currency: currency
              value: value
            productDocumentationId: productDocumentationId
            producerProductId: producerProductId
            shipmentPackageId: shipmentPackageId
          categoryId: categoryId
        - categoryTreeId: categoryTreeId
          supportedAttributes:
          - productPackageId: productPackageId
            ecoParticipationFee:
              currency: currency
              value: value
            productDocumentationId: productDocumentationId
            producerProductId: producerProductId
            shipmentPackageId: shipmentPackageId
          - productPackageId: productPackageId
            ecoParticipationFee:
              currency: currency
              value: value
            productDocumentationId: productDocumentationId
            producerProductId: producerProductId
            shipmentPackageId: shipmentPackageId
          categoryId: categoryId
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        extendedProducerResponsibilities:
          description: An array of response fields detailing the Extended Producer
            Responsibility policies supported for the specified marketplace.
          items:
            $ref: '#/components/schemas/ExtendedProducerResponsibilityPolicy'
          type: array
        warnings:
          description: A collection of warnings generated for the request.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - extendedProducerResponsibilities
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AutomotivePartsCompatibilityPolicyResponse:
      example:
        automotivePartsCompatibilityPolicies:
        - compatibilityBasedOn: compatibilityBasedOn
          categoryTreeId: categoryTreeId
          compatibleVehicleTypes:
          - compatibleVehicleTypes
          - compatibleVehicleTypes
          maxNumberOfCompatibleVehicles: 0
          categoryId: categoryId
        - compatibilityBasedOn: compatibilityBasedOn
          categoryTreeId: categoryTreeId
          compatibleVehicleTypes:
          - compatibleVehicleTypes
          - compatibleVehicleTypes
          maxNumberOfCompatibleVehicles: 0
          categoryId: categoryId
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        automotivePartsCompatibilityPolicies:
          description: A list of category IDs and the automotive-parts-compatibility
            policies for each of the listed categories.
          items:
            $ref: '#/components/schemas/AutomotivePartsCompatibilityPolicy'
          type: array
        warnings:
          description: A list of the warnings that were generated as a result of the
            request. This field is not returned if no warnings were generated by the
            request.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - automotivePartsCompatibilityPolicies
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AutomotivePartsCompatibilityPolicy:
      example:
        compatibilityBasedOn: compatibilityBasedOn
        categoryTreeId: categoryTreeId
        compatibleVehicleTypes:
        - compatibleVehicleTypes
        - compatibleVehicleTypes
        maxNumberOfCompatibleVehicles: 0
        categoryId: categoryId
      properties:
        categoryId:
          description: The category ID to which the automotive-parts-compatibility
            policies apply.
          type: string
        categoryTreeId:
          description: A value that indicates the root node of the category tree used
            for the response set. Each marketplace is based on a category tree whose
            root node is indicated by this unique category ID value. All category
            policy information returned by this call pertains to the categories included
            below this root node of the tree.    <br><br>A <i>category tree</i> is
            a hierarchical framework of eBay categories that begins at the root node
            of the tree and extends to include all the child nodes in the tree. Each
            child node in the tree is an eBay category that is represented by a unique
            <b>categoryId</b> value. Within a category tree, the root node has no
            parent node and <i>leaf nodes</i> are nodes that have no child nodes.
          type: string
        compatibilityBasedOn:
          description: Indicates whether the category supports parts compatibility
            by either <code>ASSEMBLY</code> or by <code>SPECIFICATION</code>. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:CompatibilityTypeEnum'>eBay
            API documentation</a>
          type: string
        compatibleVehicleTypes:
          description: Indicates the compatibility classification of the part based
            on high-level vehicle types.
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/metadata/types/sel:CompatibleVehicleTypeEnum''>eBay
              API documentation</a>'
            type: string
          type: array
        maxNumberOfCompatibleVehicles:
          description: Specifies the maximum number of compatible vehicle-applications
            allowed per item.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - categoryId
      - categoryTreeId
      - compatibilityBasedOn
      - compatibleVehicleTypes
      - maxNumberOfCompatibleVehicles
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateNegativeKeywordResponse:
      description: A type that contains the fields for the <b>UpdateNegativeKeyword</b>
        response.
      example:
        negativeKeywordId: negativeKeywordId
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        errors:
          description: A container that will be returned if there are one or more
            issues associated with modifying the corresponding negative keyword.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        negativeKeywordId:
          description: A unique eBay-assigned ID for a negative keyword. This keyword
            ID will be generated for each successfully created negative keyword.
          type: string
        statusCode:
          description: An HTTP status code that indicates the success or failure of
            updating that negative keyword.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - errors
      - negativeKeywordId
      - statusCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateNegativeKeywordIdRequest:
      description: A type that defines the fields used to update a negative keyword.
      example:
        negativeKeywordStatus: negativeKeywordStatus
        negativeKeywordId: negativeKeywordId
      properties:
        negativeKeywordId:
          description: A unique eBay-assigned ID for a negative keyword. This keyword
            ID will be generated for each successfully created negative keyword.
          type: string
        negativeKeywordStatus:
          description: A field that defines the status of the negative keyword. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:NegativeKeywordStatusEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - negativeKeywordId
      - negativeKeywordStatus
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateNegativeKeywordRequest:
      description: A type that contains the fields for the <b>UpdateNegativeKeyword</b>
        request.
      example:
        negativeKeywordStatus: negativeKeywordStatus
      properties:
        negativeKeywordStatus:
          description: A field that defines the status of the negative keyword. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:NegativeKeywordStatusEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - negativeKeywordStatus
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateKeywordByKeywordIdRequest:
      description: A type that contains the fields for the <b>UpdateKeywordByKeywordId</b>
        request.
      example:
        keywordId: keywordId
        keywordStatus: keywordStatus
        bid:
          currency: currency
          value: value
      properties:
        bid:
          $ref: '#/components/schemas/Amount'
        keywordId:
          description: This field is used to identify the keyword to be updated. The
            <a href="/api-docs/sell/marketing/resources/keyword/methods/getKeyword">getKeyword</a>
            method can be used to retrieve keywordId values.
          type: string
        keywordStatus:
          description: Include this field if you wish to change the status of the
            keyword. The status value specified here must be different than the keyword's
            current status. To confirm the current status of a keyword, you can use
            the <a href="/api-docs/sell/marketing/resources/keyword/methods/getKeyword">getKeyword</a>
            method.</p><p>If the status of the ad is currently <code>ACTIVE</code>,
            you can change status to <code>PAUSED</code> or <code>ARCHIVED</code>.
            If ad group is currently in <code>PAUSED</code> status, you can change
            the status back to <code>ACTIVE</code>. Ads that are currently in <code>ARCHIVED</code>
            status cannot be made <code>ACTIVE</code> again. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:KeywordStatusEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - bid
      - keywordId
      - keywordStatus
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateKeywordResponse:
      description: A type that contains the fields for the <b>UpdateKeyword</b> response.
      example:
        keywordId: keywordId
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        errors:
          description: This container will be returned if there are one or more issues
            associated with modifying the corresponding keyword.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        keywordId:
          description: This field identifies the keyword that the seller updated,
            or attempted to update.
          type: string
        statusCode:
          description: An HTTP status code is returned for each keyword to indicate
            the success or failure of updating that keyword.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - errors
      - keywordId
      - statusCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateKeywordRequest:
      description: A type that contains the fields for the <b>UpdateKeyword</b> request.
      example:
        keywordStatus: keywordStatus
        bid:
          currency: currency
          value: value
      properties:
        bid:
          $ref: '#/components/schemas/Amount'
        keywordStatus:
          description: Include this field if you wish to change the status of the
            keyword. The status value specified here must be different than the keyword's
            current status. To confirm the current status of a keyword, you can use
            the <a href="/api-docs/sell/marketing/resources/keyword/methods/getKeyword">getKeyword</a>
            method.</p><p>If the status of the ad is currently <code>ACTIVE</code>,
            you can change status to <code>PAUSED</code> or <code>ARCHIVED</code>.
            If ad group is currently in <code>PAUSED</code> status, you can change
            the status back to <code>ACTIVE</code>. Ads that are currently in <code>ARCHIVED</code>
            status cannot be made <code>ACTIVE</code> again. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:KeywordStatusEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - bid
      - keywordStatus
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateCampaignIdentificationRequest:
      description: This type specifies the updated name, and start and end dates for
        an update-campaign request.
      example:
        endDate: endDate
        campaignName: campaignName
        startDate: startDate
      properties:
        campaignName:
          description: 'The new seller-defined name for the campaign. This value must
            be unique for the seller. <p>If you don''t want to change the name of
            the campaign, specify the current campaign name in this field.<p>You can
            use any alphanumeric characters in the name, except the less than (&lt;)
            or greater than (&gt;) characters.</p><b>Max length: </b>80 characters.'
          type: string
        endDate:
          description: The date and time the campaign ends, in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            If this field is omitted, the campaign will have no defined end date,
            and will not end until the seller makes a decision to end the campaign
            with an <a href="/api-docs/sell/marketing/resources/campaign/methods/endCampaign">endCampaign</a>
            call, or if they update the campaign at a later time with an end date.<p>If
            you want to change only the end date of the campaign, specify the current
            campaign name and set <b>startDate</b> to the current date (you cannot
            use a start date that is in the past), and set the <b>endDate</b> as desired.
            Note that if you do not set a new end date in this call, any current endDate
            value will be set to null. To preserve the currently-set end date, you
            must specify the value again in your request.</p>
          type: string
        startDate:
          description: The new start date for the campaign, in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            <p>If the campaign is currently <code>RUNNING</code> or <code>PAUSED</code>,
            enter the current date in this field because you cannot submit past or
            future date for these campaigns.</p>  <p>On the date specified, the service
            derives the keywords for each listing in the campaign, creates an ad for
            each listing, and associates each new ad with the campaign. The campaign
            starts after this process is completed. The amount of time it takes the
            service to start the campaign depends on the number of listings in the
            campaign.</p>  <p>Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaigns">getCampaigns</a>
            to retrieve the <b>campaign_id</b> and the campaign status (<code>RUNNING</code>,
            <code>PAUSED</code>, <code>ENDED</code>, and so on) for all the seller's
            campaigns.</p>
          type: string
      type: object
      x-apifox-orders:
      - campaignName
      - endDate
      - startDate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateCampaignBudgetRequest:
      description: A type that contains the fields for the <b>UpdateCampaignBudget</b>
        request.
      example:
        daily:
          amount:
            currency: currency
            value: value
      properties:
        daily:
          $ref: '#/components/schemas/BudgetRequest'
      type: object
      x-apifox-orders:
      - daily
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateBidPercentageRequest:
      description: This type specifies the bid percentage for an ad campaign.
      example:
        bidPercentage: bidPercentage
      properties:
        bidPercentage:
          description: 'The user-defined <b>bid percentage</b> (also known as the
            <i>ad rate</i>) sets the level that eBay increases the visibility in search
            results for the associated listing. The higher the <b>bidPercentage</b>
            value, the more eBay promotes the listing.  <br><br>The value specified
            here is also used to calculate the Promoted Listings fee. This percentage
            value is multiplied by the final sales price to determine the fee. <br><br>The
            Promoted Listings fee is determined at the time the transaction completes
            and the seller is assessed the fee only when an item sells through a Promoted
            Listings ad campaign. <br><br>The <b>bidPercentage</b> is a single precision
            value that is guided by the following rules: <ul><li>These values are
            <b>valid</b>:<br>&nbsp;&nbsp;&nbsp;<code>4.1</code>, &nbsp;&nbsp;&nbsp;<code>5.0</code>,
            &nbsp;&nbsp;&nbsp;<code>5.5</code>, ...</li>  <li>These values are <b>not
            valid</b>:<br /> &nbsp;&nbsp;&nbsp;<code>0.01</code>, &nbsp;&nbsp;&nbsp;<code>10.75</code>,
            &nbsp;&nbsp;&nbsp;<code>99.99</code>,<br /> &nbsp;&nbsp;&nbsp;and so on.</li></ul>This
            is default bid percentage for the campaigns using the Cost Per Sale (CPS)
            funding model, and this value will be overridden by any ads in the campaign
            that have their own set bid percentages.<br /><br />If a bid percentage
            is not provided for an ad, eBay uses the default bid percentage of the
            associated campaign.<br /><br /><b>Minimum value:</b> 2.0 <br><b>Maximum
            value:</b> 100.0'
          type: string
      type: object
      x-apifox-orders:
      - bidPercentage
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateAdsByInventoryReferenceResponse:
      description: A type that contains the response fields used by the <b>UpdateAdsByInventoryReference</b>
        method.
      example:
        ads:
        - adId: adId
          href: href
        - adId: adId
          href: href
        inventoryReferenceId: inventoryReferenceId
        inventoryReferenceType: inventoryReferenceType
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        ads:
          description: A list of ad IDs and links to retrieve them.
          items:
            $ref: '#/components/schemas/AdReference'
          type: array
        errors:
          description: A container for all of the errors associated with the specified
            inventory reference ID.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        inventoryReferenceId:
          description: The reference ID associated with the ad. The reference ID could
            be a SKU number or Inventory Item Group, depending on value of <code>inventoryReferenceType</code>.
          type: string
        inventoryReferenceType:
          description: The inventory reference type associated with the ad. The inventory
            reference type could be a SKU number or Inventory Item Group. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:InventoryReferenceTypeEnum'>eBay
            API documentation</a>
          type: string
        statusCode:
          description: An HTTP status code that indicates whether or not the CPS ad
            was successfully updated.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - ads
      - errors
      - inventoryReferenceId
      - inventoryReferenceType
      - statusCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateAdrateStrategyRequest:
      description: A type that defines the request fields used to update the ad rate
        strategy for a Promoted Listings ad campaign.
      example:
        adRateStrategy: adRateStrategy
        dynamicAdRatePreferences:
        - adRateAdjustmentPercent: adRateAdjustmentPercent
          adRateCapPercent: adRateCapPercent
        - adRateAdjustmentPercent: adRateAdjustmentPercent
          adRateCapPercent: adRateCapPercent
        bidPercentage: bidPercentage
      properties:
        adRateStrategy:
          description: The ad rate strategy that shall be applied to the campaign.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AdRateStrategyEnum'>eBay
            API documentation</a>
          type: string
        bidPercentage:
          description: 'The user-defined <b>bid percentage</b> (also known as the
            <i>ad rate</i>) sets the level that eBay increases the visibility in search
            results for the associated listing. The higher the <b>bidPercentage</b>
            value, the more eBay promotes the listing.  <br><br>The value specified
            here is also used to calculate the Promoted Listings fee. This percentage
            value is multiplied by the final sales price to determine the fee. <br><br>The
            Promoted Listings fee is determined at the time the transaction completes
            and the seller is assessed the fee only when an item sells through a Promoted
            Listings ad campaign. <br><br>The <b>bidPercentage</b> is a single precision
            value that is guided by the following rules: <ul><li>These values are
            <b>valid</b>:<br>&nbsp;&nbsp;&nbsp;<code>4.1</code>, &nbsp;&nbsp;&nbsp;<code>5.0</code>,
            &nbsp;&nbsp;&nbsp;<code>5.5</code>, ...</li>  <li>These values are <b>not
            valid</b>:<br /> &nbsp;&nbsp;&nbsp;<code>0.01</code>, &nbsp;&nbsp;&nbsp;<code>10.75</code>,
            &nbsp;&nbsp;&nbsp;<code>99.99</code>,<br /> &nbsp;&nbsp;&nbsp;and so on.</li></ul>This
            is the default bid percentage for the campaigns using the Cost Per Sale
            (CPS) funding model, and this value will be overridden by any ads in the
            campaign that have their own set bid percentages.<br /><br />If a bid
            percentage is not provided for an ad, eBay uses the default bid percentage
            of the associated campaign.<br /><br /><b>Minimum value:</b> 2.0 <br><b>Maximum
            value:</b> 100.0'
          type: string
        dynamicAdRatePreferences:
          description: A field that indicates whether a single, user-defined bid percentage
            (also known as the <i>ad rate</i>) should be used, or whether eBay should
            automatically adjust listings to maintain the daily suggested bid percentage.<br
            /><br /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            Dynamic adjustment is only applicable when the <b>adRateStrategy</b> is
            set to <code>DYNAMIC</code>.</span><br /><b>Default:</b> <code>FIXED</code>
          items:
            $ref: '#/components/schemas/DynamicAdRatePreference'
          type: array
      type: object
      x-apifox-orders:
      - adRateStrategy
      - bidPercentage
      - dynamicAdRatePreferences
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateAdStatusRequest:
      description: A type that contains the fields for the <b>UpdateAdStatus</b> request.
      example:
        adId: adId
        adStatus: adStatus
      properties:
        adId:
          description: A unique eBay-assigned ID that is generated when the ad is
            created.
          type: string
        adStatus:
          description: An enumeration value representing the current status of the
            ad.<br /><br /><b>Valid Values:</b><ul><li><code>ACTIVE</code></li><li><code>PAUSED</code></li><li><code>ARCHIVED</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AdStatusEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - adId
      - adStatus
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateAdStatusByListingIdRequest:
      description: A type that contains the fields for the <b>UpdateAdStatusByListingId</b>
        request.
      example:
        adStatus: adStatus
        listingId: listingId
        adGroupId: adGroupId
      properties:
        adGroupId:
          description: A unique eBay-assigned ID for an ad group in a campaign that
            uses the Cost Per Click (CPC) funding model.<br /><br /><span class="tablenote"><b>Note:</b>
            You can call the  <a href="/api-docs/sell/marketing/resources/adgroup/methods/getAdGroups">getAdGroups</a>
            method to retrieve the ad group IDs for a seller.</span>
          type: string
        adStatus:
          description: An enumeration value representing the current status of the
            ad.<br /><br /><b>Valid Values:</b><ul><li><code>ACTIVE</code></li><li><code>PAUSED</code></li><li><code>ARCHIVED</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AdStatusEnum'>eBay
            API documentation</a>
          type: string
        listingId:
          description: A unique eBay-assigned ID for a listing that is generated when
            the listing is created.<br /><br /><span class="tablenote"><b>Note:</b>
            This field accepts both listing IDs (as generated by the Inventory API),
            and item IDs (as used in the eBay Traditional API set, such as the Trading
            and Finding APIs).</span>
          type: string
      type: object
      x-apifox-orders:
      - adGroupId
      - adStatus
      - listingId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateAdGroupRequest:
      description: A type that contains the fields used by the <b>UpdateAdGroup</b>
        request.
      example:
        adGroupStatus: adGroupStatus
        name: name
        defaultBid:
          currency: currency
          value: value
      properties:
        adGroupStatus:
          description: An enumeration value representing the current status of the
            ad group.<p>If the status of the ad is currently <code>ACTIVE</code>,
            you can change status to <code>PAUSED</code> or <code>ARCHIVED</code>.
            If ad group is currently in <code>PAUSED</code> status, you can change
            the status back to <code>ACTIVE</code>. Ads that are currently in <code>ARCHIVED</code>
            status cannot be made <code>ACTIVE</code> again.<br /><br /><b>Valid Values:</b><ul><li><code>ACTIVE</code></li><li><code>PAUSED</code></li><li><code>ARCHIVED</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AdGroupStatusEnum'>eBay
            API documentation</a>
          type: string
        defaultBid:
          $ref: '#/components/schemas/Amount'
        name:
          description: The updated name for the specified ad group.
          type: string
      type: object
      x-apifox-orders:
      - adGroupStatus
      - defaultBid
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TargetedKeywordsPagedCollection:
      description: A type that defines the keywords of the paged collection.
      example:
        suggestedKeywords:
        - matchType: matchType
          additionalInfo:
          - infoType: infoType
            metrics:
            - metricKey: metricKey
              value: value
            - metricKey: metricKey
              value: value
          - infoType: infoType
            metrics:
            - metricKey: metricKey
              value: value
            - metricKey: metricKey
              value: value
          keywordText: keywordText
        - matchType: matchType
          additionalInfo:
          - infoType: infoType
            metrics:
            - metricKey: metricKey
              value: value
            - metricKey: metricKey
              value: value
          - infoType: infoType
            metrics:
            - metricKey: metricKey
              value: value
            - metricKey: metricKey
              value: value
          keywordText: keywordText
      properties:
        suggestedKeywords:
          description: 'A list of suggested keywords in the paged collection. <p>
            <span class="tablenote"><strong>Note:</strong> A relevancy check with
            items already present in the ad-group is performed even if item IDs associated
            with the ad-group are not explicitly passed in the request.</span></p> '
          items:
            $ref: '#/components/schemas/SuggestedKeywords'
          type: array
      type: object
      x-apifox-orders:
      - suggestedKeywords
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TargetingItems:
      description: A type that defines the targeted items.
      example:
        bases:
        - estimatedValue: 1
          metric: metric
        - estimatedValue: 1
          metric: metric
        listingId: listingId
      properties:
        bases:
          description: The metrics and additional information for the items.
          items:
            $ref: '#/components/schemas/ItemBasis'
          type: array
        listingId:
          description: The listing ID of the targeted item.
          type: string
      type: object
      x-apifox-orders:
      - bases
      - listingId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TargetedKeywordRequest:
      description: A type that provides details for the targeted keywords.
      example:
        listingIds:
        - listingIds
        - listingIds
        matchType: matchType
        additionalInfo:
        - additionalInfo
        - additionalInfo
        exclusions:
        - exclusions
        - exclusions
      properties:
        additionalInfo:
          description: A field used to indicate whether additional information and
            insight data shall be provided for suggested keywords.<br /><br /><strong>Valid
            Value:</strong> <code>KEYWORD_INSIGHTS</code>
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/marketing/types/pls:AdditionalInfoEnum''>eBay
              API documentation</a>'
            type: string
          type: array
        exclusions:
          description: A field used to indicate that the keywords already selected
            by sellers for the specified listing IDs should be filtered out of the
            response, and only new and unique keyword recommendations shall be returned.<br
            /><br /><strong>Valid Value:</strong> <code>ADOPTED_KEYWORDS</code>
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/marketing/types/pls:ExclusionsEnum''>eBay
              API documentation</a>'
            type: string
          type: array
        listingIds:
          description: 'A set of comma-separated listing IDs in the paginated collection.
            <br /><br /><b>Maximum number of listings requested: </b>300'
          items:
            type: string
          type: array
        matchType:
          description: A field that defines the match type for the keyword.<br /><br
            /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            Broad matching of keywords is currently only supported in the AU marketplace.</span><br
            /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - additionalInfo
      - exclusions
      - listingIds
      - matchType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TargetedBidRequest:
      description: A type that defines the targeted bid.
      example:
        keywords:
        - matchType: matchType
          keywordText: keywordText
        - matchType: matchType
          keywordText: keywordText
      properties:
        keywords:
          description: 'A list of keywords in the paginated collection. <br /><br
            /><b>Maximum number of keywords: </b>500'
          items:
            $ref: '#/components/schemas/KeywordRequest'
          type: array
      type: object
      x-apifox-orders:
      - keywords
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TargetedBidsPagedCollection:
      description: A type that defines the keywords of the paged collection.
      example:
        suggestedBids:
        - matchType: matchType
          proposedBid:
            rangeStart: rangeStart
            currency: currency
            value: value
            rangeEnd: rangeEnd
          keywordText: keywordText
        - matchType: matchType
          proposedBid:
            rangeStart: rangeStart
            currency: currency
            value: value
            rangeEnd: rangeEnd
          keywordText: keywordText
      properties:
        suggestedBids:
          description: A list of bids in the paginated collection.
          items:
            $ref: '#/components/schemas/SuggestedBids'
          type: array
      type: object
      x-apifox-orders:
      - suggestedBids
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TargetedAdsPagedCollection:
      description: A type that defines the keywords of the paged collection.
      example:
        next: next
        total: 5
        offset: 6
        prev: prev
        limit: 0
        suggestedItems:
        - bases:
          - estimatedValue: 1
            metric: metric
          - estimatedValue: 1
            metric: metric
          listingId: listingId
        - bases:
          - estimatedValue: 1
            metric: metric
          - estimatedValue: 1
            metric: metric
          listingId: listingId
        href: href
      properties:
        href:
          description: The URI of the current page of results from the result set.
          type: string
        limit:
          description: The number of items returned on a single page from the result
            set. This value can be set in the request with the <b>limit</b> query
            parameter.
          format: int32
          type: integer
        next:
          description: The call URI that can be used to retrieve the next page in
            the result set. This value is returned only if there is an additional
            page of results to display from the result set.
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            <b>offset</b> query parameter. <p><b>Default:</b> 0</p><br><span class="tablenote"><b>Note:
            </b>The items in a paginated result set use a zero-based list, where the
            first item in the list has an offset of <code>0</code>.</span>'
          format: int32
          type: integer
        prev:
          description: The call URI that can be used to retrieve the previous page
            in the result set. Basically, all of the request parameters will remain
            the same except the offset value, which will be decreased to retrieve
            the previous page of results.
          type: string
        suggestedItems:
          description: A list of suggested items in the paginated collection.
          items:
            $ref: '#/components/schemas/TargetingItems'
          type: array
        total:
          description: 'The total number of items retrieved in the result set.<br
            /><br /><span class="tablenote"><b>Note: </b>If no items are found, this
            field is returned with a value of <code>0</code>.</span>'
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - prev
      - suggestedItems
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SummaryReportResponse:
      description: This type defines the fields in an Promotions Manager Summary report.
        Reports are formatted in JSON. For more details, see <a href="/api-docs/sell/static/marketing/pm-summary-reports.html">Reading
        item promotion Summary reports</a>.
      example:
        lastUpdated: lastUpdated
        promotionSale:
          currency: currency
          value: value
        percentageSalesLift: percentageSalesLift
        baseSale:
          currency: currency
          value: value
        totalSale:
          currency: currency
          value: value
      properties:
        baseSale:
          $ref: '#/components/schemas/Amount'
        lastUpdated:
          description: The date the report was generated.
          type: string
        percentageSalesLift:
          description: 'The percentage of the total dollar amount gained due to promotions.
            This value is calculated as follows:  <br><br><b>precentageSalesLift</b>
            = <b>promotionSale</b> / (<b>baseSale</b> + <b>promotionSale</b>)'
          type: string
        promotionSale:
          $ref: '#/components/schemas/Amount'
        totalSale:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - baseSale
      - lastUpdated
      - percentageSalesLift
      - promotionSale
      - totalSale
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SuggestedKeywords:
      description: The suggested keywords for the item.
      example:
        matchType: matchType
        additionalInfo:
        - infoType: infoType
          metrics:
          - metricKey: metricKey
            value: value
          - metricKey: metricKey
            value: value
        - infoType: infoType
          metrics:
          - metricKey: metricKey
            value: value
          - metricKey: metricKey
            value: value
        keywordText: keywordText
      properties:
        additionalInfo:
          description: 'A container for the additional information and compiled insight
            data for suggested keywords. '
          items:
            $ref: '#/components/schemas/AdditionalInfo'
          type: array
        keywordText:
          description: The text for the keyword.
          type: string
        matchType:
          description: A field that defines the match type for the keyword.<br /><br
            /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            Broad matching of keywords is currently only supported in the AU marketplace.</span><br
            /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - additionalInfo
      - keywordText
      - matchType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SuggestedBids:
      description: The suggested bid rate for the item.
      example:
        matchType: matchType
        proposedBid:
          rangeStart: rangeStart
          currency: currency
          value: value
          rangeEnd: rangeEnd
        keywordText: keywordText
      properties:
        keywordText:
          description: The text for the keyword.
          type: string
        matchType:
          description: A field that defines the match type for the keyword.<br /><br
            /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            Broad matching of keywords is currently only supported in the AU marketplace.</span><br
            /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay
            API documentation</a>
          type: string
        proposedBid:
          $ref: '#/components/schemas/ProposedBid'
      type: object
      x-apifox-orders:
      - keywordText
      - matchType
      - proposedBid
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SelectionRule:
      description: This type specifies the selection rules used to create a campaign.
      example:
        categoryIds:
        - categoryIds
        - categoryIds
        brands:
        - brands
        - brands
        categoryScope: categoryScope
        minPrice:
          currency: currency
          value: value
        maxPrice:
          currency: currency
          value: value
        listingConditionIds:
        - listingConditionIds
        - listingConditionIds
      properties:
        brands:
          description: An array of product brands used as an inclusion filter. A product's
            brand is defined in a listing's item specifics. This array will be returned
            if  one or more product brands were used as a filter.
          items:
            type: string
          type: array
        categoryIds:
          description: 'A list of category IDs associated with the listings to be
            included in the campaign. Ads are created for all the seller''s items
            listed in the specified categories, up to a maximum of 50,000 items. The
            IDs can be either a list of eBay category IDs (from the site where the
            item is hosted), or a list of category IDs defined and used by the seller''s
            store. <p><b>eBay Marketplace category IDs</b>  <br>To get a list of marketplace
            category IDs, do one of the following:</p> <ul><li>Get a list of category
            IDs for a marketplace by adding <code>/sch/allcategories/all-categories</code>
            to the marketplace URL when browsing the site. <br>For example: <code>
            http://www.ebay.com.au/sch/allcategories/all-categories</code> </li><li>Navigate
            to the desired category on the host site and copy the category ID from
            the URL.</li>  <li>These options are also available for the US marketplace:
            <ul><li>See <a href="http://pages.ebay.com/sellerinformation/news/categorychanges.html
            " target="_blank">Category Changes</a> for the latest list of category
            IDs.</li><li>Retrieve a list of category IDs using the <a href="/api-docs/commerce/taxonomy/resources/methods">Taxonomy
            API</a>.</li></ul></li></ul><p><b>Seller store category IDs</b> <br>Because
            store category IDs are uniquely defined and maintained by each seller,
            this service cannot provide a list of a seller''s IDs. However, sellers
            can retrieve their store category IDs as follows:</p><ol><li>Go to <b>Seller
            Hub</b> &gt; <b>Marketing</b>.</li> <li>Click <b>Manage store categories</b>.
            <br>  A list of your store categories displays.</li> <li>Click the <b>All
            categories</b> link displayed at the bottom of the list. <br>A complete
            list of your store categories and their associated store category IDs
            displays.</li></ol>'
          items:
            type: string
          type: array
        categoryScope:
          description: The enumeration values returned in this field indicate if the
            category IDs in the corresponding categoryIds array are identifiers for
            eBay categories or for a seller's eBay store categories. This field is
            always returned if one or more category IDs are used as a filter. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:CategoryScopeEnum'>eBay
            API documentation</a>
          type: string
        listingConditionIds:
          description: A comma-separated list of unique identifiers for the conditions
            of listings to be included in the campaign. Up to four IDs can be specified.<br
            /><br />This array is only returned if one or more item condition values
            are used as a filter.<br /><br /><span class="tablenote"><strong>Note:</strong>
            Multiple listing condition IDs are mapped to the four valid values listed
            below. Refer to <a href="/api-docs/sell/static/marketing/pl-campaign-flow-pls.html#add-by-rule"
            target="_blank">Promoted Listings Standard campaign flow</a> for more
            details.</span><br /><br /><strong>Valid Values:</strong><ul><li><code>1000</code>
            = New</li><li><code>2000</code> = Certified Refurbished</li><li><code>2500</code>
            = Seller Refurbished</li><li><code>3000</code> = Used</li></ul>
          items:
            type: string
          type: array
        maxPrice:
          $ref: '#/components/schemas/Amount'
        minPrice:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - brands
      - categoryIds
      - categoryScope
      - listingConditionIds
      - maxPrice
      - minPrice
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SelectedInventoryDiscount:
      description: This type defines the fields that describe the discounts applied
        to a set of inventory items and the order in which the selection rules are
        applied.
      example:
        inventoryCriterion:
          inventoryItems:
          - condition: condition
            product:
              ean:
              - ean
              - ean
              imageUrls:
              - imageUrls
              - imageUrls
              isbn:
              - isbn
              - isbn
              subtitle: subtitle
              aspects: aspects
              description: description
              epid: epid
              upc:
              - upc
              - upc
              mpn: mpn
              title: title
              brand: brand
              videoIds:
              - videoIds
              - videoIds
            packageWeightAndSize:
              weight:
                unit: unit
                value: value
              packageType: packageType
              dimensions:
                name: name
                dimensionKey: dimensionKey
                value: value
            availability:
              shipToLocationAvailability:
                quantity: 1
                availabilityDistributions:
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              pickupAtLocationAvailability:
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            conditionDescription: conditionDescription
          - condition: condition
            product:
              ean:
              - ean
              - ean
              imageUrls:
              - imageUrls
              - imageUrls
              isbn:
              - isbn
              - isbn
              subtitle: subtitle
              aspects: aspects
              description: description
              epid: epid
              upc:
              - upc
              - upc
              mpn: mpn
              title: title
              brand: brand
              videoIds:
              - videoIds
              - videoIds
            packageWeightAndSize:
              weight:
                unit: unit
                value: value
              packageType: packageType
              dimensions:
                name: name
                dimensionKey: dimensionKey
                value: value
            availability:
              shipToLocationAvailability:
                quantity: 1
                availabilityDistributions:
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              pickupAtLocationAvailability:
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            conditionDescription: conditionDescription
          listingIds:
          - listingIds
          - listingIds
          ruleCriteria:
            markupInventoryItems:
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            markupListingIds:
            - markupListingIds
            - markupListingIds
            excludeInventoryItems:
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            excludeListingIds:
            - excludeListingIds
            - excludeListingIds
            selectionRules:
            - categoryIds:
              - categoryIds
              - categoryIds
              brands:
              - brands
              - brands
              categoryScope: categoryScope
              minPrice:
                currency: currency
                value: value
              maxPrice:
                currency: currency
                value: value
              listingConditionIds:
              - listingConditionIds
              - listingConditionIds
            - categoryIds:
              - categoryIds
              - categoryIds
              brands:
              - brands
              - brands
              categoryScope: categoryScope
              minPrice:
                currency: currency
                value: value
              maxPrice:
                currency: currency
                value: value
              listingConditionIds:
              - listingConditionIds
              - listingConditionIds
          inventoryCriterionType: inventoryCriterionType
        ruleOrder: 0
        discountId: discountId
        discountBenefit:
          amountOffOrder:
            currency: currency
            value: value
          amountOffItem:
            currency: currency
            value: value
          percentageOffItem: percentageOffItem
          percentageOffOrder: percentageOffOrder
      properties:
        discountBenefit:
          $ref: '#/components/schemas/DiscountBenefit'
        discountId:
          description: A unique, eBay-generated ID that you can use to identify the
            discount. This field is ignored in POST and PUT operations.
          type: string
        inventoryCriterion:
          $ref: '#/components/schemas/InventoryCriterion'
        ruleOrder:
          description: For markdown promotions, this field is reserved for future
            use. <!--This field specifies the precedence of this set of inventory
            criteria, which is taken into account if an item is selected for multiple
            discounts by different sets of criteria. The criteria with the highest
            priority (lowest ruleOrder value) takes precedence over criteria with
            a lower precedence.-->
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - discountBenefit
      - discountId
      - inventoryCriterion
      - ruleOrder
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReportTaskPagedCollection:
      description: This type defines the fields that paginate the reports tasks returned
        by the request. The entire <i>result set</i> consists of 0 or more sequenced
        <i>response pages</i>, where each page consists of 0 or more items from the
        complete result set.
      example:
        next: next
        reportTasks:
        - reportId: reportId
          reportName: reportName
          reportTaskExpectedCompletionDate: reportTaskExpectedCompletionDate
          listingIds:
          - listingIds
          - listingIds
          reportHref: reportHref
          reportFormat: reportFormat
          dateFrom: dateFrom
          reportTaskCompletionDate: reportTaskCompletionDate
          marketplaceId: marketplaceId
          reportType: reportType
          metricKeys:
          - metricKeys
          - metricKeys
          reportTaskCreationDate: reportTaskCreationDate
          reportTaskId: reportTaskId
          reportTaskStatusMessage: reportTaskStatusMessage
          inventoryReferences:
          - inventoryReferenceId: inventoryReferenceId
            inventoryReferenceType: inventoryReferenceType
          - inventoryReferenceId: inventoryReferenceId
            inventoryReferenceType: inventoryReferenceType
          dateTo: dateTo
          fundingModels:
          - fundingModels
          - fundingModels
          campaignIds:
          - campaignIds
          - campaignIds
          reportTaskStatus: reportTaskStatus
          dimensions:
          - name: name
            dimensionKey: dimensionKey
            value: value
          - name: name
            dimensionKey: dimensionKey
            value: value
          reportExpirationDate: reportExpirationDate
        - reportId: reportId
          reportName: reportName
          reportTaskExpectedCompletionDate: reportTaskExpectedCompletionDate
          listingIds:
          - listingIds
          - listingIds
          reportHref: reportHref
          reportFormat: reportFormat
          dateFrom: dateFrom
          reportTaskCompletionDate: reportTaskCompletionDate
          marketplaceId: marketplaceId
          reportType: reportType
          metricKeys:
          - metricKeys
          - metricKeys
          reportTaskCreationDate: reportTaskCreationDate
          reportTaskId: reportTaskId
          reportTaskStatusMessage: reportTaskStatusMessage
          inventoryReferences:
          - inventoryReferenceId: inventoryReferenceId
            inventoryReferenceType: inventoryReferenceType
          - inventoryReferenceId: inventoryReferenceId
            inventoryReferenceType: inventoryReferenceType
          dateTo: dateTo
          fundingModels:
          - fundingModels
          - fundingModels
          campaignIds:
          - campaignIds
          - campaignIds
          reportTaskStatus: reportTaskStatus
          dimensions:
          - name: name
            dimensionKey: dimensionKey
            value: value
          - name: name
            dimensionKey: dimensionKey
            value: value
          reportExpirationDate: reportExpirationDate
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
      properties:
        href:
          description: The URI of the current page of results from the result set.
          type: string
        limit:
          description: The number of items returned on a single page from the result
            set. This value can be set in the request with the <b>limit</b> query
            parameter.
          format: int32
          type: integer
        next:
          description: 'The URI for the following page of results. This value is returned
            only if there is an additional page of results to display from the result
            set. <br><br><b>Max length</b>: 2048'
          type: string
        offset:
          description: The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            <b>offset</b> query parameter.<br /><br /><span class="tablenote"><span
            style="color:#004680"><strong>Note:</strong></span> The items in a paginated
            result set use a zero-based list where the first item in the list has
            an offset of <code>0</code>.</span>
          format: int32
          type: integer
        prev:
          description: 'The URI for the preceding page of results. This value is returned
            only if there is a previous page of results to display from the result
            set. <br><br><b>Max length</b>: 2048'
          type: string
        total:
          description: The total number of items retrieved in the result set.  <br><br>If
            no items are found, this field is returned with a value of <code>0</code>.
          format: int32
          type: integer
        reportTasks:
          description: A list of report tasks contained on this page from the paginated
            response.
          items:
            $ref: '#/components/schemas/ReportTask'
          type: array
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - prev
      - total
      - reportTasks
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RuleCriteria:
      description: This type defines the fields for a set of inventory selection rules.  <br><br><b>Required:</b>
        When <b>inventoryCriterionType</b> is set to <code>INVENTORY_BY_RULE</code>
        or <code>INVENTORY_ANY</code>.
      example:
        markupInventoryItems:
        - condition: condition
          product:
            ean:
            - ean
            - ean
            imageUrls:
            - imageUrls
            - imageUrls
            isbn:
            - isbn
            - isbn
            subtitle: subtitle
            aspects: aspects
            description: description
            epid: epid
            upc:
            - upc
            - upc
            mpn: mpn
            title: title
            brand: brand
            videoIds:
            - videoIds
            - videoIds
          packageWeightAndSize:
            weight:
              unit: unit
              value: value
            packageType: packageType
            dimensions:
              name: name
              dimensionKey: dimensionKey
              value: value
          availability:
            shipToLocationAvailability:
              quantity: 1
              availabilityDistributions:
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            pickupAtLocationAvailability:
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          conditionDescription: conditionDescription
        - condition: condition
          product:
            ean:
            - ean
            - ean
            imageUrls:
            - imageUrls
            - imageUrls
            isbn:
            - isbn
            - isbn
            subtitle: subtitle
            aspects: aspects
            description: description
            epid: epid
            upc:
            - upc
            - upc
            mpn: mpn
            title: title
            brand: brand
            videoIds:
            - videoIds
            - videoIds
          packageWeightAndSize:
            weight:
              unit: unit
              value: value
            packageType: packageType
            dimensions:
              name: name
              dimensionKey: dimensionKey
              value: value
          availability:
            shipToLocationAvailability:
              quantity: 1
              availabilityDistributions:
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            pickupAtLocationAvailability:
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          conditionDescription: conditionDescription
        markupListingIds:
        - markupListingIds
        - markupListingIds
        excludeInventoryItems:
        - condition: condition
          product:
            ean:
            - ean
            - ean
            imageUrls:
            - imageUrls
            - imageUrls
            isbn:
            - isbn
            - isbn
            subtitle: subtitle
            aspects: aspects
            description: description
            epid: epid
            upc:
            - upc
            - upc
            mpn: mpn
            title: title
            brand: brand
            videoIds:
            - videoIds
            - videoIds
          packageWeightAndSize:
            weight:
              unit: unit
              value: value
            packageType: packageType
            dimensions:
              name: name
              dimensionKey: dimensionKey
              value: value
          availability:
            shipToLocationAvailability:
              quantity: 1
              availabilityDistributions:
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            pickupAtLocationAvailability:
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          conditionDescription: conditionDescription
        - condition: condition
          product:
            ean:
            - ean
            - ean
            imageUrls:
            - imageUrls
            - imageUrls
            isbn:
            - isbn
            - isbn
            subtitle: subtitle
            aspects: aspects
            description: description
            epid: epid
            upc:
            - upc
            - upc
            mpn: mpn
            title: title
            brand: brand
            videoIds:
            - videoIds
            - videoIds
          packageWeightAndSize:
            weight:
              unit: unit
              value: value
            packageType: packageType
            dimensions:
              name: name
              dimensionKey: dimensionKey
              value: value
          availability:
            shipToLocationAvailability:
              quantity: 1
              availabilityDistributions:
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            pickupAtLocationAvailability:
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          conditionDescription: conditionDescription
        excludeListingIds:
        - excludeListingIds
        - excludeListingIds
        selectionRules:
        - categoryIds:
          - categoryIds
          - categoryIds
          brands:
          - brands
          - brands
          categoryScope: categoryScope
          minPrice:
            currency: currency
            value: value
          maxPrice:
            currency: currency
            value: value
          listingConditionIds:
          - listingConditionIds
          - listingConditionIds
        - categoryIds:
          - categoryIds
          - categoryIds
          brands:
          - brands
          - brands
          categoryScope: categoryScope
          minPrice:
            currency: currency
            value: value
          maxPrice:
            currency: currency
            value: value
          listingConditionIds:
          - listingConditionIds
          - listingConditionIds
      properties:
        excludeInventoryItems:
          description: A list of seller inventory reference IDs to exclude from the
            promotion.  <br><br><p class="tablenote"><b>Note:</b> The request can
            have either <b>excludeInventoryItems</b> or <b>excludeListingIds</b> but
            not both.</p> <b>Maximum:</b> 100 parent items <br><b>Maximum SKU or custom
            label length:</b> 50 characters
          items:
            $ref: '#/components/schemas/InventoryItem'
          type: array
        excludeListingIds:
          description: A list of eBay listing IDs to exclude from the promotion.  <br><br><p
            class="tablenote"><b>Note:</b> The request can have either <b>excludeInventoryItems</b>
            or <b>excludeListingIds</b> but not both.</p> <b>Maximum:</b> 100 parent
            items <br><b>Maximum SKU or custom label length:</b> 50 characters
          items:
            type: string
          type: array
        markupInventoryItems:
          description: A list of SKUs to remove from a markdown promotion. The listed
            SKUs are 'marked up' to their standard price after being part of the markdown
            promotion.
          items:
            $ref: '#/components/schemas/InventoryItem'
          type: array
        markupListingIds:
          description: A list of listing IDs to remove from a markdown promotion.
            The listed items are 'marked up' to their standard price after being part
            of the markdown promotion.
          items:
            type: string
          type: array
        selectionRules:
          description: The container for the rules that select the items to include
            in a promotion.  <br><br><i>Required if </i> <b>inventoryCriterionType</b>
            is set to <code>INVENTORY_BY_RULE</code>.
          items:
            $ref: '#/components/schemas/SelectionRule'
          type: array
      type: object
      x-apifox-orders:
      - excludeInventoryItems
      - excludeListingIds
      - markupInventoryItems
      - markupListingIds
      - selectionRules
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReportTask:
      description: This type defines the fields in a report task.
      example:
        reportId: reportId
        reportName: reportName
        reportTaskExpectedCompletionDate: reportTaskExpectedCompletionDate
        listingIds:
        - listingIds
        - listingIds
        reportHref: reportHref
        reportFormat: reportFormat
        dateFrom: dateFrom
        reportTaskCompletionDate: reportTaskCompletionDate
        marketplaceId: marketplaceId
        reportType: reportType
        metricKeys:
        - metricKeys
        - metricKeys
        reportTaskCreationDate: reportTaskCreationDate
        reportTaskId: reportTaskId
        reportTaskStatusMessage: reportTaskStatusMessage
        inventoryReferences:
        - inventoryReferenceId: inventoryReferenceId
          inventoryReferenceType: inventoryReferenceType
        - inventoryReferenceId: inventoryReferenceId
          inventoryReferenceType: inventoryReferenceType
        dateTo: dateTo
        fundingModels:
        - fundingModels
        - fundingModels
        campaignIds:
        - campaignIds
        - campaignIds
        reportTaskStatus: reportTaskStatus
        dimensions:
        - name: name
          dimensionKey: dimensionKey
          value: value
        - name: name
          dimensionKey: dimensionKey
          value: value
        reportExpirationDate: reportExpirationDate
      properties:
        campaignIds:
          description: A list of IDs for the campaigns that are included in the report.
            A campaign ID is a unique eBay-assigned identifier of the campaign that's
            generated when the campaign is created.<br /><br />Call <b>getCampaigns</b>
            to return the current campaign IDs for a seller.
          items:
            type: string
          type: array
        dateFrom:
          description: The date defining the start of the timespan covered by the
            report, formatted as an <a href="https://www.iso.org/iso-8601-date-and-time-format.html
            " title="https://www.iso.org " target="_blank">ISO 8601</a> timestamp.
          type: string
        dateTo:
          description: The date defining the end of the timespan covered by the report,
            formatted as an <a href="https://www.iso.org/iso-8601-date-and-time-format.html
            " title="https://www.iso.org " target="_blank">ISO 8601</a> timestamp.
          type: string
        dimensions:
          description: A list containing the dimension in the report.
          items:
            $ref: '#/components/schemas/Dimension'
          type: array
        fundingModels:
          description: The funding model for the campaign that shall be included in
            the report.<br /><br /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            The default funding model for Promoted Listings reports is <code>COST_PER_SALE</code>.</span><br
            /><br /><b>Valid Values:</b><ul><li><code>COST_PER_SALE</code></li><li><code>COST_PER_CLICK</code></li></ul>
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/marketing/types/pls:FundingModelEnum''>eBay
              API documentation</a>'
            type: string
          type: array
        inventoryReferences:
          description: If supplied in the request, this field returns a list of the
            seller's inventory reference IDs included in the report.  <p>Each item
            is referenced by a pair of <b>inventoryRefernceID</b> and <b>inventoryReferenceType</b>
            values, where an inventory reference ID can be either a seller-defined
            <b>SKU</b> value or an <b>inventoryItemGroupKey</b>. An <b>inventoryItemGroupKey</b>
            is seller-defined ID for an inventory item group (a multiple-variation
            listing), and is created and used by the <a href="/api-docs/sell/inventory/resources/methods">Inventory
            API</a>.</p>
          items:
            $ref: '#/components/schemas/InventoryReference'
          type: array
        listingIds:
          description: If supplied in the request, this field returns a list of the
            listing IDs included in the report. A listing ID is an eBay-assigned ID
            that's generated when a listing is created.
          items:
            type: string
          type: array
        marketplaceId:
          description: The ID of the eBay marketplace used by the report task. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        metricKeys:
          description: A list of metrics for the report task.
          items:
            type: string
          type: array
        reportExpirationDate:
          description: 'The date after which the report is no longer be available.
            Reports are available for 30 days and you cannot download a report after
            it has expired.  <br><br><b>Format (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ'
          type: string
        reportFormat:
          description: Indicates the format of the report. Currently, only <code>TSV_GZIP</code>
            is supported. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:ReportFormatEnum'>eBay
            API documentation</a>
          type: string
        reportHref:
          description: The URL of the generated report, which can be used to download
            the report once it has been generated.
          type: string
        reportId:
          description: A unique eBay-assigned ID for the report.
          type: string
        reportName:
          description: An eBay-assigned name for the report that's created by the
            <b>createReportTask</b> call. This name is unique for the seller.
          type: string
        reportTaskCompletionDate:
          description: 'The date the report task completed the report generation.  <br><br><b>Format
            (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ'
          type: string
        reportTaskCreationDate:
          description: 'The date the report task was created.  <br><br><b>Format (UTC):
            </b> yyyy-MM-ddThh:mm:ss.sssZ'
          type: string
        reportTaskExpectedCompletionDate:
          description: 'The date the report task is expected to complete the report
            generation.  <br><br><b>Format (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ'
          type: string
        reportTaskId:
          description: The unique eBay-assigned ID of the report task. This value
            is generated when the report task is created with a call to <b>createReportTask</b>.
          type: string
        reportTaskStatus:
          description: Indicates the current state of the report task. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:TaskStatusEnum'>eBay
            API documentation</a>
          type: string
        reportTaskStatusMessage:
          description: A status message with additional information about the report
            task.
          type: string
        reportType:
          description: Indicates type of report associated with the report task.<br/><br/><span
            class="tablenote"><b>Note:</b> INVENTORY_PERFORMANCE_REPORT is not currently
            available; availability date is pending.</span> For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:ReportTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - campaignIds
      - dateFrom
      - dateTo
      - dimensions
      - fundingModels
      - inventoryReferences
      - listingIds
      - marketplaceId
      - metricKeys
      - reportExpirationDate
      - reportFormat
      - reportHref
      - reportId
      - reportName
      - reportTaskCompletionDate
      - reportTaskCreationDate
      - reportTaskExpectedCompletionDate
      - reportTaskId
      - reportTaskStatus
      - reportTaskStatusMessage
      - reportType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReportMetadatas:
      description: This type defines the metadata used by the all report types.
      example:
        reportMetadata:
        - reportType: reportType
          maxNumberOfMetricsToRequest: 6
          maxNumberOfDimensionsToRequest: 0
          metricMetadata:
          - metricKey: metricKey
            dataType: dataType
          - metricKey: metricKey
            dataType: dataType
          dimensionMetadata:
          - dimensionKeyAnnotations:
            - dataType: dataType
              annotationKey: annotationKey
            - dataType: dataType
              annotationKey: annotationKey
            dataType: dataType
            dimensionKey: dimensionKey
          - dimensionKeyAnnotations:
            - dataType: dataType
              annotationKey: annotationKey
            - dataType: dataType
              annotationKey: annotationKey
            dataType: dataType
            dimensionKey: dimensionKey
        - reportType: reportType
          maxNumberOfMetricsToRequest: 6
          maxNumberOfDimensionsToRequest: 0
          metricMetadata:
          - metricKey: metricKey
            dataType: dataType
          - metricKey: metricKey
            dataType: dataType
          dimensionMetadata:
          - dimensionKeyAnnotations:
            - dataType: dataType
              annotationKey: annotationKey
            - dataType: dataType
              annotationKey: annotationKey
            dataType: dataType
            dimensionKey: dimensionKey
          - dimensionKeyAnnotations:
            - dataType: dataType
              annotationKey: annotationKey
            - dataType: dataType
              annotationKey: annotationKey
            dataType: dataType
            dimensionKey: dimensionKey
      properties:
        reportMetadata:
          description: A list of the metadata for the associated report type.
          items:
            $ref: '#/components/schemas/ReportMetadata'
          type: array
      type: object
      x-apifox-orders:
      - reportMetadata
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PromotionsReportPagedCollection:
      description: This type defines the fields in a paginated result set of promotion-level
        reports. The response consists of 0 or more sequenced pages that are returned
        from the complete <i>result set</i>, where each page consists of 0 or more
        items.
      example:
        next: next
        total: 5
        offset: 6
        prev: prev
        limit: 0
        promotionReports:
        - averageOrderDiscount:
            currency: currency
            value: value
          promotionType: promotionType
          itemsSoldQuantity: 1
          promotionReportId: promotionReportId
          promotionId: promotionId
          numberOfOrdersSold: 5
          averageItemDiscount:
            currency: currency
            value: value
          promotionHref: promotionHref
          averageOrderRevenue:
            currency: currency
            value: value
          promotionSale:
            currency: currency
            value: value
          percentageSalesLift: percentageSalesLift
          totalDiscount:
            currency: currency
            value: value
          averageOrderSize: averageOrderSize
          baseSale:
            currency: currency
            value: value
          averageItemRevenue:
            currency: currency
            value: value
          totalSale:
            currency: currency
            value: value
        - averageOrderDiscount:
            currency: currency
            value: value
          promotionType: promotionType
          itemsSoldQuantity: 1
          promotionReportId: promotionReportId
          promotionId: promotionId
          numberOfOrdersSold: 5
          averageItemDiscount:
            currency: currency
            value: value
          promotionHref: promotionHref
          averageOrderRevenue:
            currency: currency
            value: value
          promotionSale:
            currency: currency
            value: value
          percentageSalesLift: percentageSalesLift
          totalDiscount:
            currency: currency
            value: value
          averageOrderSize: averageOrderSize
          baseSale:
            currency: currency
            value: value
          averageItemRevenue:
            currency: currency
            value: value
          totalSale:
            currency: currency
            value: value
        href: href
      properties:
        href:
          description: The URI of the current page of results from the result set.
          type: string
        limit:
          description: The number of items returned on a single page from the result
            set. This value can be set in the request with the <b>limit</b> query
            parameter.
          format: int32
          type: integer
        next:
          description: 'The URI for the following page of results. This value is returned
            only if there is an additional page of results to display from the result
            set. <br><br><b>Max length</b>: 2048'
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            <b>offset</b> query parameter. <p class="tablenote"><strong>Note: </strong>The
            items in a paginated result set use a zero-based list where the first
            item in the list has an offset of <code>0</code>.</p>'
          format: int32
          type: integer
        prev:
          description: 'The URI for the preceding page of results. This value is returned
            only if there is a previous page of results to display from the result
            set. <br><br><b>Max length</b>: 2048'
          type: string
        promotionReports:
          description: A list of <b>promotionReports</b> contained in the paginated
            result set.
          items:
            $ref: '#/components/schemas/PromotionReportDetail'
          type: array
        total:
          description: The total number of items retrieved in the result set.  <br><br>If
            no items are found, this field is returned with a value of <code>0</code>.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - prev
      - promotionReports
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ProposedBid:
      description: A type that defines the data for a payment amount, such as the
        sale price.
      example:
        rangeStart: rangeStart
        currency: currency
        value: value
        rangeEnd: rangeEnd
      properties:
        currency:
          description: The base currency applied to the <b>value</b> field to establish
            a monetary amount.  <br><br>The currency is represented as a 3-letter
            <a href="https://www.iso.org/iso-4217-currency-codes.html " title="https://www.iso.org
            " target="_blank">ISO 4217</a> currency code. For example, the code for
            the Canadian Dollar is <code>CAD</code>.  <br><br><b>Default:</b> The
            default currency of the eBay marketplace that hosts the listing. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:CurrencyCodeEnum'>eBay
            API documentation</a>
          type: string
        rangeEnd:
          description: The end of the range specified for the bid.
          type: string
        rangeStart:
          description: The start of the range specified for the bid.
          type: string
        value:
          description: The value of the proposed bid.
          type: string
      type: object
      x-apifox-orders:
      - currency
      - rangeEnd
      - rangeStart
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PromotionsPagedCollection:
      description: This type defines the fields in a paginated result set of seller
        promotions. The response consists of 0 or more sequenced pages that are returned
        from the complete <i>result set</i>, where each page consists of 0 or more
        items.
      example:
        next: next
        promotions:
        - marketplaceId: marketplaceId
          promotionType: promotionType
          promotionHref: promotionHref
          endDate: endDate
          promotionImageUrl: promotionImageUrl
          name: name
          description: description
          priority: priority
          couponCode: couponCode
          promotionId: promotionId
          startDate: startDate
          promotionStatus: promotionStatus
        - marketplaceId: marketplaceId
          promotionType: promotionType
          promotionHref: promotionHref
          endDate: endDate
          promotionImageUrl: promotionImageUrl
          name: name
          description: description
          priority: priority
          couponCode: couponCode
          promotionId: promotionId
          startDate: startDate
          promotionStatus: promotionStatus
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
      properties:
        href:
          description: The URI of the current page of results from the result set.
          type: string
        limit:
          description: The number of items returned on a single page from the result
            set. This value can be set in the request with the <b>limit</b> query
            parameter.
          format: int32
          type: integer
        next:
          description: 'The URI for the following page of results. This value is returned
            only if there is an additional page of results to display from the result
            set. <br><br><b>Max length</b>: 2048'
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            <b>offset</b> query parameter. <p class="tablenote"><strong>Note: </strong>The
            items in a paginated result set use a zero-based list where the first
            item in the list has an offset of <code>0</code>.</p>'
          format: int32
          type: integer
        prev:
          description: 'The URI for the preceding page of results. This value is returned
            only if there is a previous page of results to display from the result
            set. <br><br><b>Max length</b>: 2048'
          type: string
        promotions:
          description: A list containing the details of each returned promotion. This
            includes all the information about the promotions except for the listings
            that are part of the promotions.
          items:
            $ref: '#/components/schemas/PromotionDetail'
          type: array
        total:
          description: The total number of items retrieved in the result set.  <br><br>If
            no items are found, this field is returned with a value of <code>0</code>.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - prev
      - promotions
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReportMetadata:
      description: This type defines the fields included in the report.
      example:
        reportType: reportType
        maxNumberOfMetricsToRequest: 6
        maxNumberOfDimensionsToRequest: 0
        metricMetadata:
        - metricKey: metricKey
          dataType: dataType
        - metricKey: metricKey
          dataType: dataType
        dimensionMetadata:
        - dimensionKeyAnnotations:
          - dataType: dataType
            annotationKey: annotationKey
          - dataType: dataType
            annotationKey: annotationKey
          dataType: dataType
          dimensionKey: dimensionKey
        - dimensionKeyAnnotations:
          - dataType: dataType
            annotationKey: annotationKey
          - dataType: dataType
            annotationKey: annotationKey
          dataType: dataType
          dimensionKey: dimensionKey
      properties:
        dimensionMetadata:
          description: A list containing the metadata for the dimension used in the
            report.
          items:
            $ref: '#/components/schemas/DimensionMetadata'
          type: array
        maxNumberOfDimensionsToRequest:
          description: The maximum number of dimensions that can be requested for
            the specified report type.
          format: int32
          type: integer
        maxNumberOfMetricsToRequest:
          description: The maximum number of metrics that can be requested for the
            specified report type.
          format: int32
          type: integer
        metricMetadata:
          description: A list containing the metadata for the metrics in the report.
          items:
            $ref: '#/components/schemas/MetricMetadata'
          type: array
        reportType:
          description: The <b>report_type</b>, as specified in the request to create
            the report task.<br/><br/><span class="tablenote"><b>Note:</b> INVENTORY_PERFORMANCE_REPORT
            is not currently available; availability date is pending.</span> For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:ReportTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - dimensionMetadata
      - maxNumberOfDimensionsToRequest
      - maxNumberOfMetricsToRequest
      - metricMetadata
      - reportType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PromotionReportDetail:
      description: This type defines the fields in a promotion-level report.
      example:
        averageOrderDiscount:
          currency: currency
          value: value
        promotionType: promotionType
        itemsSoldQuantity: 1
        promotionReportId: promotionReportId
        promotionId: promotionId
        numberOfOrdersSold: 5
        averageItemDiscount:
          currency: currency
          value: value
        promotionHref: promotionHref
        averageOrderRevenue:
          currency: currency
          value: value
        promotionSale:
          currency: currency
          value: value
        percentageSalesLift: percentageSalesLift
        totalDiscount:
          currency: currency
          value: value
        averageOrderSize: averageOrderSize
        baseSale:
          currency: currency
          value: value
        averageItemRevenue:
          currency: currency
          value: value
        totalSale:
          currency: currency
          value: value
      properties:
        averageItemDiscount:
          $ref: '#/components/schemas/Amount'
        averageItemRevenue:
          $ref: '#/components/schemas/Amount'
        averageOrderDiscount:
          $ref: '#/components/schemas/Amount'
        averageOrderRevenue:
          $ref: '#/components/schemas/Amount'
        averageOrderSize:
          description: 'The <i>average order size</i> is the average number of items
            that each order contained in a promotion. This value is calculated as
            follows:  <br><br><b>itemsSoldQuantity</b> / <b>numberOfOrdersSold</b>
            = <b>averageOrderSize</b> '
          type: string
        baseSale:
          $ref: '#/components/schemas/Amount'
        itemsSoldQuantity:
          description: This is the quantity of items purchased in a threshold promotion
            where the threshold <i>has been met</i> and the discount was applied.
            <br><br>For example, suppose you're running a "Buy 1, get 1 at 50%" promotion
            on $5 socks. One buyer purchases two pairs of socks, so they pay $7.50
            for both pairs (rather than the full price of $10). Your number of items
            sold (<b>itemsSoldQuantity</b>) would be 2 and you number of orders sold
            (<b>numberOfOrdersSold</b>) would be 1.
          format: int32
          type: integer
        numberOfOrdersSold:
          description: This is the number of orders sold in a threshold promotion
            where the threshold <i>has been met</i> and the discount was applied.
            <br><br>For example, suppose you're running a "Buy 1, get 1 at 50%" promotion
            on $5 socks. One buyer purchases two pairs of socks, so they pay $7.50
            for both pairs (rather than the full price of $10). Your <b>numberOfOrdersSold</b>
            would be 1 and your <b>itemsSoldQuantity</b> would be 2.
          format: int32
          type: integer
        percentageSalesLift:
          description: 'The <i>percentage sales lift</i> is the total dollar amount
            gained due to promotions. This value is calculated as follows:  <br><br>
            <b>promotionSale</b> / <b>totalSale</b> =  <b>percentageSalesLift</b> '
          type: string
        promotionHref:
          description: The URI of the promotion report.
          type: string
        promotionId:
          description: A unique eBay-assigned ID for the promotion that's generated
            when the promotion is created.
          type: string
        promotionReportId:
          description: The unique eBay-assigned ID of the promotion report that is
            generated when the report is created.
          type: string
        promotionSale:
          $ref: '#/components/schemas/Amount'
        promotionType:
          description: Indicates the type of the promotion, either <code>CODED_COUPON</code>,
            <code>MARKDOWN_SALE</code>, <code>ORDER_DISCOUNT</code>, or <code>VOLUME_DISCOUNT</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionTypeEnum'>eBay
            API documentation</a>
          type: string
        totalDiscount:
          $ref: '#/components/schemas/Amount'
        totalSale:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - averageItemDiscount
      - averageItemRevenue
      - averageOrderDiscount
      - averageOrderRevenue
      - averageOrderSize
      - baseSale
      - itemsSoldQuantity
      - numberOfOrdersSold
      - percentageSalesLift
      - promotionHref
      - promotionId
      - promotionReportId
      - promotionSale
      - promotionType
      - totalDiscount
      - totalSale
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PromotionDetail:
      description: This type defines the fields that describe a promotion. This includes
        all the information about a promotion except for the listings that are a part
        of the promotion.
      example:
        marketplaceId: marketplaceId
        promotionType: promotionType
        promotionHref: promotionHref
        endDate: endDate
        promotionImageUrl: promotionImageUrl
        name: name
        description: description
        priority: priority
        couponCode: couponCode
        promotionId: promotionId
        startDate: startDate
        promotionStatus: promotionStatus
      properties:
        couponCode:
          description: A unique code that buyers can use during checkout to receive
            a discount. The code must be unique across eBay.
          type: string
        description:
          description: This is the seller-defined "tag line" for the offer, such as
            "Save on designer shoes." Tag lines appear under the "offer-type text"
            that is generated for a promotion and displayed under the offer tile that
            is shown on the seller's <b>All Offers</b> page and on the promotion's
            event page.  <p class="tablenote"><b>Note:</b> Offer-type text is a teaser
            that's presented throughout the buyer's journey through the sales flow
            and is generated by eBay. This text is not editable by the seller&mdash;it's
            derived from the settings in the <b>discountRules</b> and <b>discountSpecification</b>
            fields&mdash;and can be, for example, "Extra 20% off when you buy 3+".</p>  <br><b>Maximum
            length:</b> 50 <br><br><i>Required if</i> you are configuring ORDER_DISCOUNT
            or MARKDOWN_SALE promotions (and not valid for VOLUME_DISCOUNT promotions).
          type: string
        endDate:
          description: The date and time the promotion ends in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            For display purposes, convert this time into the local time of the seller.
          type: string
        marketplaceId:
          description: The eBay marketplace ID of the site where the promotion is
            hosted. Threshold promotions are supported on a select set of marketplaces
            while markdown promotions are supported on all eBay marketplaces. <p><b>Valid
            values for threshold promotions are as follows:</b></p>  <ul class="compact"><li><code>EBAY_AU</code>
            = Australia</li> <li><code>EBAY_DE</code> = Germany</li> <li><code>EBAY_ES</code>
            = Spain</li> <li><code>EBAY_FR</code> = France</li> <li><code>EBAY_GB</code>
            = Great Britain</li> <li><code>EBAY_IT</code> = Italy</li> <li><code>EBAY_US</code>
            = United States</li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: The seller-defined name or "title" of the promotion, such as
            "Buy 1 Get 1", that the seller can use to identify a promotion. This label
            is not displayed in end-user flows.  <br><br><b>Maximum length:</b> 90
          type: string
        priority:
          description: Applicable for only <b>ORDER_DISCOUNT</b> promotions, this
            field indicates the precedence of the promotion, which is used to determine
            the position of a promotion on the seller's <b>All Offers</b> page. If
            an item is associated with multiple promotions, the promotion with the
            higher priority takes precedence. For implementation help, refer to <a
            href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionPriorityEnum'>eBay
            API documentation</a>
          type: string
        promotionHref:
          description: The URI of the promotion details.
          type: string
        promotionId:
          description: A unique eBay-assigned ID for the promotion that's generated
            when the promotion is created.
          type: string
        promotionImageUrl:
          description: Required for CODED_COUPON, MARKDOWN_SALE, and ORDER_DISCOUNT
            promotions, and not applicable for <b>VOLUME_DISCOUNT</b> promotions,
            this field is a URL that points to an image for the promotion. This image
            is displayed on the seller's <b>All Offers</b> page. The URL must point
            to either JPEG or PNG image and it must be a minimum of 500x500 pixels
            in dimension and cannot exceed 12Mb in size.
          type: string
        promotionStatus:
          description: The current status of the promotion. When creating a new promotion,
            you must set this value to either <code>DRAFT</code> or <code>SCHEDULED</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionStatusEnum'>eBay
            API documentation</a>
          type: string
        promotionType:
          description: Indicates type of the promotion, either <code>CODED_COUPON</code>,
            <code>MARKDOWN_SALE</code>, <code>ORDER_DISCOUNT</code>, or <code>VOLUME_DISCOUNT</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionTypeEnum'>eBay
            API documentation</a>
          type: string
        startDate:
          description: The date and time the promotion starts in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            For display purposes, convert this time into the local time of the seller.
          type: string
      type: object
      x-apifox-orders:
      - couponCode
      - description
      - endDate
      - marketplaceId
      - name
      - priority
      - promotionHref
      - promotionId
      - promotionImageUrl
      - promotionStatus
      - promotionType
      - startDate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    NegativeKeywordResponse:
      description: A type that defines the negative keyword response.
      example:
        negativeKeywordText: negativeKeywordText
        campaignId: campaignId
        negativeKeywordMatchType: negativeKeywordMatchType
        href: href
        negativeKeywordId: negativeKeywordId
        adGroupId: adGroupId
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        adGroupId:
          description: A unique identifier for an ad group that is generated when
            an ad group is first created and associated with a campaign.
          type: string
        campaignId:
          description: A unique eBay-assigned ID for a campaign. This ID is generated
            when a campaign is created.
          type: string
        errors:
          description: This container will be returned if there is an issue creating
            the corresponding negative keyword.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        href:
          description: The URI for the negative keyword, which is used to retrieve
            the negative keyword. This URI will be returned for each successfully
            created negative keyword.
          type: string
        negativeKeywordId:
          description: A unique eBay-assigned ID for a negative keyword. This negative
            keyword ID will be generated for each successfully created negative keyword.
          type: string
        negativeKeywordMatchType:
          description: The match type for the negative keyword.<br /><br /><span class="tablenote"><span
            style="color:#004680"><strong>Note:</strong></span> Broad matching of
            negative keywords is not currently supported.</span><br /><b>Valid Values:</b><ul><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:NegativeKeywordMatchTypeEnum'>eBay
            API documentation</a>
          type: string
        negativeKeywordText:
          description: The text for the negative keyword.
          type: string
        statusCode:
          description: The status of the request to create a negative keyword. This
            field indicates whether the process was successful or not.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - adGroupId
      - campaignId
      - errors
      - href
      - negativeKeywordId
      - negativeKeywordMatchType
      - negativeKeywordText
      - statusCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    NegativeKeyword:
      description: A type that defines the fields for a negative keyword.
      example:
        negativeKeywordText: negativeKeywordText
        campaignId: campaignId
        negativeKeywordMatchType: negativeKeywordMatchType
        negativeKeywordStatus: negativeKeywordStatus
        negativeKeywordId: negativeKeywordId
        adGroupId: adGroupId
      properties:
        adGroupId:
          description: An ad group ID that is generated when an ad group is first
            created and associated with a campaign.<br /><br /><span class="tablenote"><b>Note:</b>
            You can call the  <a href="/api-docs/sell/marketing/resources/adgroup/methods/getAdGroups">getAdGroups</a>
            method to retrieve the ad group IDs for a seller.</span>
          type: string
        campaignId:
          description: A unique eBay-assigned ID for a campaign. This ID is generated
            when a campaign is created.
          type: string
        negativeKeywordId:
          description: A unique eBay-assigned ID for a negative keyword. This keyword
            ID will be generated for each successfully created negative keyword.
          type: string
        negativeKeywordMatchType:
          description: A field that defines the match type for the negative keyword.<br
            /><br /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            Broad matching of negative keywords is not currently supported.</span><br
            /><b>Valid Values:</b><ul><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:NegativeKeywordMatchTypeEnum'>eBay
            API documentation</a>
          type: string
        negativeKeywordStatus:
          description: A field that defines the status of the negative keyword. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:NegativeKeywordStatusEnum'>eBay
            API documentation</a>
          type: string
        negativeKeywordText:
          description: The text for the negative keyword.
          type: string
      type: object
      x-apifox-orders:
      - adGroupId
      - campaignId
      - negativeKeywordId
      - negativeKeywordMatchType
      - negativeKeywordStatus
      - negativeKeywordText
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ListingDetail:
      description: This type defines the fields that describe a listing that is in
        a promotion.
      example:
        listingCategoryId: listingCategoryId
        quantity: 6
        freeShipping: true
        inventoryReferenceId: inventoryReferenceId
        listingCondition: listingCondition
        storeCategoryId: storeCategoryId
        listingConditionId: listingConditionId
        listingPromotionStatuses:
        - listingMarkdownStatus: listingMarkdownStatus
          statusChangedDate: statusChangedDate
          statusMessage: statusMessage
        - listingMarkdownStatus: listingMarkdownStatus
          statusChangedDate: statusChangedDate
          statusMessage: statusMessage
        currentPrice:
          currency: currency
          value: value
        inventoryReferenceType: inventoryReferenceType
        listingId: listingId
        title: title
      properties:
        currentPrice:
          $ref: '#/components/schemas/Amount'
        freeShipping:
          description: If set to <code>true</code>, the seller pays for the shipping
            (or that the item is marked for local pickup only) In this case, the listing
            does not have an associated shipping cost for the first listed domestic-shipping
            option (even if the first domestic-shipping option specifies a flat-rate
            or calculated shipping option). If <code>false</code>, the buyer is required
            to pay for a flat-rate or calculated cost shipping service.
          type: boolean
        inventoryReferenceId:
          description: The seller's inventory reference ID for a listing. Also known
            as the "SKU" or "custom label," an inventory reference ID is either the
            ID of the listing or, if the listing has variations (such as a shirt that's
            available in multiple sizes and colors), the ID of the parent listing.
          type: string
        inventoryReferenceType:
          description: Indicates the type of the <b>inventoryReferenceId</b>, which
            can be either an individual item or a multi-SKU item (<code>INVENTORY_ITEM</code>
            and <code>INVENTORY_ITEM_GROUP</code>, respectively).  <br><br><b>Note:</b>
            This value is not currently returned in the response.
          type: string
        listingCategoryId:
          description: The ID of the category that listing belongs to. The ID is a
            numeric and unique identifier for the category that is assigned by eBay.
          type: string
        listingCondition:
          description: An eBay-assigned value that indicates condition of the associated
            item. For more information, see <a href="/api-docs/sell/static/metadata/condition-id-values.html">Item
            condition ID and name values</a>.
          type: string
        listingConditionId:
          description: 'The ID of the condition associated with the item. For more
            information, see <a href="/api-docs/sell/static/metadata/condition-id-values.html">Item
            condition ID and name values</a>.<br /><br /><span class="tablenote"><b>Note:
            </b> This value is not currently returned in the response.</span>'
          type: string
        listingId:
          description: A unique eBay-assigned ID that is generated when the item is
            listed.
          type: string
        listingPromotionStatuses:
          description: A list of the status values assigned to the item and the date
            that each new status was assigned.
          items:
            $ref: '#/components/schemas/ItemMarkdownStatus'
          type: array
        quantity:
          description: The number of items being sold in the listing.
          format: int32
          type: integer
        storeCategoryId:
          description: Store CategoryId (if any) that to which the listing belongs.
            This field is blank if there is no seller Store category ID.
          type: string
        title:
          description: The seller-defined title of the listing that a seller can use
            to identify the item.  This label is not displayed in end-user flows.
          type: string
      type: object
      x-apifox-orders:
      - currentPrice
      - freeShipping
      - inventoryReferenceId
      - inventoryReferenceType
      - listingCategoryId
      - listingCondition
      - listingConditionId
      - listingId
      - listingPromotionStatuses
      - quantity
      - storeCategoryId
      - title
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    MetricMetadata:
      description: This type defines the name and data type of a metric.
      example:
        metricKey: metricKey
        dataType: dataType
      properties:
        dataType:
          description: The data type of the returned metric value. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:DataTypeEnum'>eBay
            API documentation</a>
          type: string
        metricKey:
          description: The name of the metric.
          type: string
      type: object
      x-apifox-orders:
      - dataType
      - metricKey
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    NegativeKeywordPagedCollectionResponse:
      description: A type that defines the negative keywords, returned in a paged
        collection.
      example:
        negativeKeywords:
        - negativeKeywordText: negativeKeywordText
          campaignId: campaignId
          negativeKeywordMatchType: negativeKeywordMatchType
          negativeKeywordStatus: negativeKeywordStatus
          negativeKeywordId: negativeKeywordId
          adGroupId: adGroupId
        - negativeKeywordText: negativeKeywordText
          campaignId: campaignId
          negativeKeywordMatchType: negativeKeywordMatchType
          negativeKeywordStatus: negativeKeywordStatus
          negativeKeywordId: negativeKeywordId
          adGroupId: adGroupId
        next: next
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
      properties:
        href:
          description: The URI of the current page of results from the result set.
          type: string
        limit:
          description: The number of items returned on a single page from the result
            set. This value can be set in the request with the <b>limit</b> query
            parameter.
          format: int32
          type: integer
        negativeKeywords:
          description: A list of negative keywords returned in the paginated collection.
          items:
            $ref: '#/components/schemas/NegativeKeyword'
          type: array
        next:
          description: The call URI that can be used to retrieve the next page in
            the result set. This value is returned only if there is an additional
            page of results to display from the result set.
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            <b>offset</b> query parameter.<br /><br /><b>Default:</b> <code>0</code><br
            /><br /><span class="tablenote"><b>Note: </b>The items in a paginated
            result set use a zero-based list, where the first item in the list has
            an offset of <code>0</code>.</span>'
          format: int32
          type: integer
        prev:
          description: The call URI that can be used to retrieve the previous page
            in the result set. Basically, all of the request parameters will remain
            the same except the offset value, which will be decreased to retrieve
            the previous page of results.
          type: string
        total:
          description: The total number of result sets in the paginated collection.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - negativeKeywords
      - next
      - offset
      - prev
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    KeywordResponse:
      description: A type that defines the response fields used by the <b>Keyword</b>
        method.
      example:
        keywordId: keywordId
        matchType: matchType
        href: href
        adGroupId: adGroupId
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        keywordText: keywordText
        statusCode: 0
      properties:
        adGroupId:
          description: The identifier of the ad group that the keyword was added to.
          type: string
        errors:
          description: This container will be returned if there is an issue creating
            the corresponding keyword and/or adding that keyword to the corresponding
            ad group.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        href:
          description: The getKeyword URI for the keyword, which is used to retrieve
            the keyword. This URI will be returned for each successfully created keyword.
          type: string
        keywordId:
          description: A unique eBay-assigned ID for a keyword that is generated for
            an ad group. This keyword ID will be generated for each successfully created
            keyword.
          type: string
        keywordText:
          description: The text of the keyword.
          type: string
        matchType:
          description: A field that defines the match type for the keyword.<br /><br
            /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            Broad matching of keywords is currently only supported in the AU marketplace.</span><br
            /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay
            API documentation</a>
          type: string
        statusCode:
          description: An HTTP status code is returned for each keyword to indicate
            the success or failure of adding that keyword to the ad group.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - adGroupId
      - errors
      - href
      - keywordId
      - keywordText
      - matchType
      - statusCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    KeywordRequest:
      description: A type that defines the fields used by the <b>Keyword</b> method.
      example:
        matchType: matchType
        keywordText: keywordText
      properties:
        keywordText:
          description: 'The text of the keyword. Keywords are not case sensitive and
            compound words can be used without additional encoding (for example, tennis
            ball).<br /><br /><b>Maximum number of characters: </b>100 <br /><br /><b>Maximum
            number of words: </b>10 '
          type: string
        matchType:
          description: A field that defines the match type for the keyword.<br /><br
            /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            Broad matching of keywords is currently only supported in the AU marketplace.</span><br
            /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - keywordText
      - matchType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    KeywordPagedCollectionResponse:
      description: A type that defines the keywords of the paged collection.
      example:
        next: next
        total: 1
        keywords:
        - keywordId: keywordId
          keywordStatus: keywordStatus
          matchType: matchType
          bid:
            currency: currency
            value: value
          adGroupId: adGroupId
          keywordText: keywordText
        - keywordId: keywordId
          keywordStatus: keywordStatus
          matchType: matchType
          bid:
            currency: currency
            value: value
          adGroupId: adGroupId
          keywordText: keywordText
        offset: 6
        prev: prev
        limit: 0
        href: href
      properties:
        href:
          description: The URI of the current page of results from the result set.
          type: string
        keywords:
          description: This array contains all of the keywords that match the request
            criteria. Keywords will be sorted by adGroupId, regardless of whether
            you searched for keywords across the entire campaign, or if you searched
            for keywords within one or specific ad groups.
          items:
            $ref: '#/components/schemas/Keyword'
          type: array
        limit:
          description: The number of keywords returned on a single page from the result
            set. This value can be set in the request with the <b>limit</b> query
            parameter.
          format: int32
          type: integer
        next:
          description: 'The call URI that can be used to retrieve the next page in
            the result set. This value is returned only if there is an additional
            page of results to display from the result set. <br><br><b>Max length</b>:
            2048'
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            <b>offset</b> query parameter. <p class="tablenote"><strong>Note: </strong>The
            items in a paginated result set use a zero-based list where the first
            item in the list has an offset of <code>0</code>.</p>'
          format: int32
          type: integer
        prev:
          description: 'The call URI that can be used to retrieve the previous page
            in the result set. Basically, all of the request parameters will remain
            the same except the offset value, which will be decreased to retrieve
            the previous page of results. <br><br><b>Max length</b>: 2048'
          type: string
        total:
          description: The total number of keywords retrieved in the result set.  <br><br>If
            no keywords are found, this field is returned with a value of <code>0</code>.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - keywords
      - limit
      - next
      - offset
      - prev
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Keyword:
      description: A type that contains the details for keywords that are associated
        with an ad group.<br /><br /><span class="tablenote"><b>Note:</b> This type
        only applies to the Cost Per Click (CPC) funding model; it does not apply
        to the Cost Per Sale (CPS) funding model.</span>
      example:
        keywordId: keywordId
        keywordStatus: keywordStatus
        matchType: matchType
        bid:
          currency: currency
          value: value
        adGroupId: adGroupId
        keywordText: keywordText
      properties:
        adGroupId:
          description: This field identifies the ad group that the keyword is associated
            with.
          type: string
        bid:
          $ref: '#/components/schemas/Amount'
        keywordId:
          description: The unique identifier of a keyword.
          type: string
        keywordStatus:
          description: The status of the keyword.<br /><br /><b>Valid Values:</b><ul><li><code>ACTIVE</code></li><li><code>PAUSED</code></li><li><code>ARCHIVED</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:KeywordStatusEnum'>eBay
            API documentation</a>
          type: string
        keywordText:
          description: The text of the keyword.
          type: string
        matchType:
          description: A field that defines the match type for the keyword.<br /><br
            /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            Broad matching of keywords is currently only supported in the AU marketplace.</span><br
            /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - adGroupId
      - bid
      - keywordId
      - keywordStatus
      - keywordText
      - matchType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ItemsPagedCollection:
      description: This type defines the fields for a paginated result set of promotions.
        The response consists of 0 or more sequenced pages that are returned from
        the complete <i>result set</i>, where each page consists of 0 or more items.
      example:
        next: next
        listings:
        - listingCategoryId: listingCategoryId
          quantity: 6
          freeShipping: true
          inventoryReferenceId: inventoryReferenceId
          listingCondition: listingCondition
          storeCategoryId: storeCategoryId
          listingConditionId: listingConditionId
          listingPromotionStatuses:
          - listingMarkdownStatus: listingMarkdownStatus
            statusChangedDate: statusChangedDate
            statusMessage: statusMessage
          - listingMarkdownStatus: listingMarkdownStatus
            statusChangedDate: statusChangedDate
            statusMessage: statusMessage
          currentPrice:
            currency: currency
            value: value
          inventoryReferenceType: inventoryReferenceType
          listingId: listingId
          title: title
        - listingCategoryId: listingCategoryId
          quantity: 6
          freeShipping: true
          inventoryReferenceId: inventoryReferenceId
          listingCondition: listingCondition
          storeCategoryId: storeCategoryId
          listingConditionId: listingConditionId
          listingPromotionStatuses:
          - listingMarkdownStatus: listingMarkdownStatus
            statusChangedDate: statusChangedDate
            statusMessage: statusMessage
          - listingMarkdownStatus: listingMarkdownStatus
            statusChangedDate: statusChangedDate
            statusMessage: statusMessage
          currentPrice:
            currency: currency
            value: value
          inventoryReferenceType: inventoryReferenceType
          listingId: listingId
          title: title
        total: 5
        offset: 1
        prev: prev
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        limit: 0
        href: href
      properties:
        href:
          description: The URI of the current page of results from the result set.
          type: string
        limit:
          description: The number of items returned on a single page from the result
            set. This value can be set in the request with the <b>limit</b> query
            parameter.
          format: int32
          type: integer
        listings:
          description: An array of the listings associated with a promotion.
          items:
            $ref: '#/components/schemas/ListingDetail'
          type: array
        next:
          description: 'The URI for the following page of results. This value is returned
            only if there is an additional page of results to display from the result
            set. <br><br><b>Max length</b>: 2048'
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            <b>offset</b> query parameter. <p class="tablenote"><strong>Note: </strong>The
            items in a paginated result set use a zero-based list where the first
            item in the list has an offset of <code>0</code>.</p>'
          format: int32
          type: integer
        prev:
          description: 'The URI for the preceding page of results. This value is returned
            only if there is a previous page of results to display from the result
            set. <br><br><b>Max length</b>: 2048'
          type: string
        total:
          description: The total number of items retrieved in the result set.  <br><br>If
            no items are found, this field is returned with a value of <code>0</code>.
          format: int32
          type: integer
        warnings:
          description: A list of warnings that were generated by the request. Warning
            do not stop processing, but should be checked to ensure that the response
            contains the correct information.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - href
      - limit
      - listings
      - next
      - offset
      - prev
      - total
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ItemPromotionResponse:
      description: This complex type defines the fields returned for an item (threshold)
        promotion.
      example:
        promotionType: promotionType
        endDate: endDate
        promotionImageUrl: promotionImageUrl
        discountRules:
        - discountSpecification:
            minAmount:
              currency: currency
              value: value
            minQuantity: 1
            numberOfDiscountedItems: 5
            forEachAmount:
              currency: currency
              value: value
            forEachQuantity: 6
          maxDiscountAmount:
            currency: currency
            value: value
          ruleOrder: 5
          discountBenefit:
            amountOffOrder:
              currency: currency
              value: value
            amountOffItem:
              currency: currency
              value: value
            percentageOffItem: percentageOffItem
            percentageOffOrder: percentageOffOrder
        - discountSpecification:
            minAmount:
              currency: currency
              value: value
            minQuantity: 1
            numberOfDiscountedItems: 5
            forEachAmount:
              currency: currency
              value: value
            forEachQuantity: 6
          maxDiscountAmount:
            currency: currency
            value: value
          ruleOrder: 5
          discountBenefit:
            amountOffOrder:
              currency: currency
              value: value
            amountOffItem:
              currency: currency
              value: value
            percentageOffItem: percentageOffItem
            percentageOffOrder: percentageOffOrder
        description: description
        couponConfiguration:
          maxCouponRedemptionPerUser: 0
          couponType: couponType
          couponCode: couponCode
        priority: priority
        promotionId: promotionId
        promotionStatus: promotionStatus
        marketplaceId: marketplaceId
        inventoryCriterion:
          inventoryItems:
          - condition: condition
            product:
              ean:
              - ean
              - ean
              imageUrls:
              - imageUrls
              - imageUrls
              isbn:
              - isbn
              - isbn
              subtitle: subtitle
              aspects: aspects
              description: description
              epid: epid
              upc:
              - upc
              - upc
              mpn: mpn
              title: title
              brand: brand
              videoIds:
              - videoIds
              - videoIds
            packageWeightAndSize:
              weight:
                unit: unit
                value: value
              packageType: packageType
              dimensions:
                name: name
                dimensionKey: dimensionKey
                value: value
            availability:
              shipToLocationAvailability:
                quantity: 1
                availabilityDistributions:
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              pickupAtLocationAvailability:
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            conditionDescription: conditionDescription
          - condition: condition
            product:
              ean:
              - ean
              - ean
              imageUrls:
              - imageUrls
              - imageUrls
              isbn:
              - isbn
              - isbn
              subtitle: subtitle
              aspects: aspects
              description: description
              epid: epid
              upc:
              - upc
              - upc
              mpn: mpn
              title: title
              brand: brand
              videoIds:
              - videoIds
              - videoIds
            packageWeightAndSize:
              weight:
                unit: unit
                value: value
              packageType: packageType
              dimensions:
                name: name
                dimensionKey: dimensionKey
                value: value
            availability:
              shipToLocationAvailability:
                quantity: 1
                availabilityDistributions:
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              pickupAtLocationAvailability:
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            conditionDescription: conditionDescription
          listingIds:
          - listingIds
          - listingIds
          ruleCriteria:
            markupInventoryItems:
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            markupListingIds:
            - markupListingIds
            - markupListingIds
            excludeInventoryItems:
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            excludeListingIds:
            - excludeListingIds
            - excludeListingIds
            selectionRules:
            - categoryIds:
              - categoryIds
              - categoryIds
              brands:
              - brands
              - brands
              categoryScope: categoryScope
              minPrice:
                currency: currency
                value: value
              maxPrice:
                currency: currency
                value: value
              listingConditionIds:
              - listingConditionIds
              - listingConditionIds
            - categoryIds:
              - categoryIds
              - categoryIds
              brands:
              - brands
              - brands
              categoryScope: categoryScope
              minPrice:
                currency: currency
                value: value
              maxPrice:
                currency: currency
                value: value
              listingConditionIds:
              - listingConditionIds
              - listingConditionIds
          inventoryCriterionType: inventoryCriterionType
        applyDiscountToSingleItemOnly: true
        name: name
        startDate: startDate
        budget:
          currency: currency
          value: value
      properties:
        applyDiscountToSingleItemOnly:
          description: If set to <code>true</code>, the discount is applied only when
            the buyer purchases multiple quantities of a single item in the promotion.
            Otherwise, the promotional discount applies to multiple quantities of
            any items in the promotion. Different variations of a multi-variation
            item are considered to be the same item. Note that this flag is not relevant
            if the <b>inventoryCriterion</b> container identifies a single listing
            ID for the promotion.
          type: boolean
        budget:
          $ref: '#/components/schemas/Amount'
        couponConfiguration:
          $ref: '#/components/schemas/CouponConfiguration'
        description:
          description: Required for CODED_COUPON promotions, this is the seller-defined
            "tag line" for the offer, such as "Save on designer shoes." The tag line
            appears under the "offer-type text" that is generated for the promotion
            and is displayed under the offer tile that is shown on the seller's <b>All
            Offers</b> page and on the event page for the promotion.  This tag line
            is not used with volume pricing promotions. <p class="tablenote"><b>Note:</b>
            Offer-type text is a teaser that's presented throughout the buyer's journey
            through the sales flow and is generated by eBay. This text is not editable
            by the seller&mdash;it's derived from the settings in the <b>discountRules</b>
            and <b>discountSpecification</b> fields&mdash;and can be, for example,
            "Extra 20% off when you buy 3+".</p>  <br><b>Maximum length:</b> 50
          type: string
        discountRules:
          description: A list containing the promotion benefits (<b>discountRule</b>)
            and the rules that define when the benefit is applied (<b>discountSpecification</b>).
          items:
            $ref: '#/components/schemas/DiscountRule'
          type: array
        endDate:
          description: The date and time the promotion ends in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            For display purposes, convert this time into the local time of the seller.
          type: string
        inventoryCriterion:
          $ref: '#/components/schemas/InventoryCriterion'
        marketplaceId:
          description: The eBay marketplace ID of the site where the threshold promotion
            is hosted. Threshold promotions are currently supported on a limited number
            of eBay marketplaces.  <p><b>Valid values:</b></p>  <ul class="compact"><li><code>EBAY_AU</code>
            = Australia</li> <li><code>EBAY_DE</code> = Germany</li> <li><code>EBAY_ES</code>
            = Spain</li> <li><code>EBAY_FR</code> = France</li> <li><code>EBAY_GB</code>
            = Great Britain</li> <li><code>EBAY_IT</code> = Italy</li> <li><code>EBAY_US</code>
            = United States</li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: The seller-defined name or "title" of the promotion that the
            seller can use to identify a promotion. This label is not displayed in
            end-user flows.  <br><br><b>Maximum length:</b> 90
          type: string
        priority:
          description: Applicable for only <b>ORDER_DISCOUNT</b> promotions, this
            field indicates the precedence of the promotion, which eBay uses to determine
            the position of a promotion on the seller's <b>All Offers</b> page. If
            an item is associated with multiple promotions, the promotion with the
            higher priority takes precedence. For implementation help, refer to <a
            href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionPriorityEnum'>eBay
            API documentation</a>
          type: string
        promotionId:
          description: A unique eBay-assigned ID for the promotion that's generated
            when the promotion is created.
          type: string
        promotionImageUrl:
          description: Required for CODED_COUPON, MARKDOWN_SALE, and ORDER_DISCOUNT
            promotions, and not applicable for <b>VOLUME_DISCOUNT</b> promotions,
            this field is a URL that points to an image for the promotion. This image
            is displayed on the seller's <b>All Offers</b> page. The URL must point
            to either JPEG or PNG image and it must be a minimum of 500x500 pixels
            in dimension and cannot exceed 12Mb in size.
          type: string
        promotionStatus:
          description: The current status of the promotion. When creating a new promotion,
            this value must be set to either <code>DRAFT</code> or <code>SCHEDULED</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionStatusEnum'>eBay
            API documentation</a>
          type: string
        promotionType:
          description: Indicates the type of the promotion, either <code>CODED_COUPON</code>,
            <code>MARKDOWN_SALE</code>, <code>ORDER_DISCOUNT</code>, or <code>VOLUME_DISCOUNT</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionTypeEnum'>eBay
            API documentation</a>
          type: string
        startDate:
          description: The date and time the promotion starts in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            For display purposes, convert this time into the local time of the seller.
          type: string
      type: object
      x-apifox-orders:
      - applyDiscountToSingleItemOnly
      - budget
      - couponConfiguration
      - description
      - discountRules
      - endDate
      - inventoryCriterion
      - marketplaceId
      - name
      - priority
      - promotionId
      - promotionImageUrl
      - promotionStatus
      - promotionType
      - startDate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ItemPriceMarkdown:
      description: This type defines the fields used to describe an item price markdown
        promotion.
      example:
        marketplaceId: marketplaceId
        selectedInventoryDiscounts:
        - inventoryCriterion:
            inventoryItems:
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            listingIds:
            - listingIds
            - listingIds
            ruleCriteria:
              markupInventoryItems:
              - condition: condition
                product:
                  ean:
                  - ean
                  - ean
                  imageUrls:
                  - imageUrls
                  - imageUrls
                  isbn:
                  - isbn
                  - isbn
                  subtitle: subtitle
                  aspects: aspects
                  description: description
                  epid: epid
                  upc:
                  - upc
                  - upc
                  mpn: mpn
                  title: title
                  brand: brand
                  videoIds:
                  - videoIds
                  - videoIds
                packageWeightAndSize:
                  weight:
                    unit: unit
                    value: value
                  packageType: packageType
                  dimensions:
                    name: name
                    dimensionKey: dimensionKey
                    value: value
                availability:
                  shipToLocationAvailability:
                    quantity: 1
                    availabilityDistributions:
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                  pickupAtLocationAvailability:
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                conditionDescription: conditionDescription
              - condition: condition
                product:
                  ean:
                  - ean
                  - ean
                  imageUrls:
                  - imageUrls
                  - imageUrls
                  isbn:
                  - isbn
                  - isbn
                  subtitle: subtitle
                  aspects: aspects
                  description: description
                  epid: epid
                  upc:
                  - upc
                  - upc
                  mpn: mpn
                  title: title
                  brand: brand
                  videoIds:
                  - videoIds
                  - videoIds
                packageWeightAndSize:
                  weight:
                    unit: unit
                    value: value
                  packageType: packageType
                  dimensions:
                    name: name
                    dimensionKey: dimensionKey
                    value: value
                availability:
                  shipToLocationAvailability:
                    quantity: 1
                    availabilityDistributions:
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                  pickupAtLocationAvailability:
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                conditionDescription: conditionDescription
              markupListingIds:
              - markupListingIds
              - markupListingIds
              excludeInventoryItems:
              - condition: condition
                product:
                  ean:
                  - ean
                  - ean
                  imageUrls:
                  - imageUrls
                  - imageUrls
                  isbn:
                  - isbn
                  - isbn
                  subtitle: subtitle
                  aspects: aspects
                  description: description
                  epid: epid
                  upc:
                  - upc
                  - upc
                  mpn: mpn
                  title: title
                  brand: brand
                  videoIds:
                  - videoIds
                  - videoIds
                packageWeightAndSize:
                  weight:
                    unit: unit
                    value: value
                  packageType: packageType
                  dimensions:
                    name: name
                    dimensionKey: dimensionKey
                    value: value
                availability:
                  shipToLocationAvailability:
                    quantity: 1
                    availabilityDistributions:
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                  pickupAtLocationAvailability:
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                conditionDescription: conditionDescription
              - condition: condition
                product:
                  ean:
                  - ean
                  - ean
                  imageUrls:
                  - imageUrls
                  - imageUrls
                  isbn:
                  - isbn
                  - isbn
                  subtitle: subtitle
                  aspects: aspects
                  description: description
                  epid: epid
                  upc:
                  - upc
                  - upc
                  mpn: mpn
                  title: title
                  brand: brand
                  videoIds:
                  - videoIds
                  - videoIds
                packageWeightAndSize:
                  weight:
                    unit: unit
                    value: value
                  packageType: packageType
                  dimensions:
                    name: name
                    dimensionKey: dimensionKey
                    value: value
                availability:
                  shipToLocationAvailability:
                    quantity: 1
                    availabilityDistributions:
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                  pickupAtLocationAvailability:
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                conditionDescription: conditionDescription
              excludeListingIds:
              - excludeListingIds
              - excludeListingIds
              selectionRules:
              - categoryIds:
                - categoryIds
                - categoryIds
                brands:
                - brands
                - brands
                categoryScope: categoryScope
                minPrice:
                  currency: currency
                  value: value
                maxPrice:
                  currency: currency
                  value: value
                listingConditionIds:
                - listingConditionIds
                - listingConditionIds
              - categoryIds:
                - categoryIds
                - categoryIds
                brands:
                - brands
                - brands
                categoryScope: categoryScope
                minPrice:
                  currency: currency
                  value: value
                maxPrice:
                  currency: currency
                  value: value
                listingConditionIds:
                - listingConditionIds
                - listingConditionIds
            inventoryCriterionType: inventoryCriterionType
          ruleOrder: 0
          discountId: discountId
          discountBenefit:
            amountOffOrder:
              currency: currency
              value: value
            amountOffItem:
              currency: currency
              value: value
            percentageOffItem: percentageOffItem
            percentageOffOrder: percentageOffOrder
        - inventoryCriterion:
            inventoryItems:
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            listingIds:
            - listingIds
            - listingIds
            ruleCriteria:
              markupInventoryItems:
              - condition: condition
                product:
                  ean:
                  - ean
                  - ean
                  imageUrls:
                  - imageUrls
                  - imageUrls
                  isbn:
                  - isbn
                  - isbn
                  subtitle: subtitle
                  aspects: aspects
                  description: description
                  epid: epid
                  upc:
                  - upc
                  - upc
                  mpn: mpn
                  title: title
                  brand: brand
                  videoIds:
                  - videoIds
                  - videoIds
                packageWeightAndSize:
                  weight:
                    unit: unit
                    value: value
                  packageType: packageType
                  dimensions:
                    name: name
                    dimensionKey: dimensionKey
                    value: value
                availability:
                  shipToLocationAvailability:
                    quantity: 1
                    availabilityDistributions:
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                  pickupAtLocationAvailability:
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                conditionDescription: conditionDescription
              - condition: condition
                product:
                  ean:
                  - ean
                  - ean
                  imageUrls:
                  - imageUrls
                  - imageUrls
                  isbn:
                  - isbn
                  - isbn
                  subtitle: subtitle
                  aspects: aspects
                  description: description
                  epid: epid
                  upc:
                  - upc
                  - upc
                  mpn: mpn
                  title: title
                  brand: brand
                  videoIds:
                  - videoIds
                  - videoIds
                packageWeightAndSize:
                  weight:
                    unit: unit
                    value: value
                  packageType: packageType
                  dimensions:
                    name: name
                    dimensionKey: dimensionKey
                    value: value
                availability:
                  shipToLocationAvailability:
                    quantity: 1
                    availabilityDistributions:
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                  pickupAtLocationAvailability:
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                conditionDescription: conditionDescription
              markupListingIds:
              - markupListingIds
              - markupListingIds
              excludeInventoryItems:
              - condition: condition
                product:
                  ean:
                  - ean
                  - ean
                  imageUrls:
                  - imageUrls
                  - imageUrls
                  isbn:
                  - isbn
                  - isbn
                  subtitle: subtitle
                  aspects: aspects
                  description: description
                  epid: epid
                  upc:
                  - upc
                  - upc
                  mpn: mpn
                  title: title
                  brand: brand
                  videoIds:
                  - videoIds
                  - videoIds
                packageWeightAndSize:
                  weight:
                    unit: unit
                    value: value
                  packageType: packageType
                  dimensions:
                    name: name
                    dimensionKey: dimensionKey
                    value: value
                availability:
                  shipToLocationAvailability:
                    quantity: 1
                    availabilityDistributions:
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                  pickupAtLocationAvailability:
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                conditionDescription: conditionDescription
              - condition: condition
                product:
                  ean:
                  - ean
                  - ean
                  imageUrls:
                  - imageUrls
                  - imageUrls
                  isbn:
                  - isbn
                  - isbn
                  subtitle: subtitle
                  aspects: aspects
                  description: description
                  epid: epid
                  upc:
                  - upc
                  - upc
                  mpn: mpn
                  title: title
                  brand: brand
                  videoIds:
                  - videoIds
                  - videoIds
                packageWeightAndSize:
                  weight:
                    unit: unit
                    value: value
                  packageType: packageType
                  dimensions:
                    name: name
                    dimensionKey: dimensionKey
                    value: value
                availability:
                  shipToLocationAvailability:
                    quantity: 1
                    availabilityDistributions:
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                    - quantity: 6
                      merchantLocationKey: merchantLocationKey
                      fulfillmentTime:
                        unit: unit
                        value: 0
                  pickupAtLocationAvailability:
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - availabilityType: availabilityType
                    quantity: 0
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                conditionDescription: conditionDescription
              excludeListingIds:
              - excludeListingIds
              - excludeListingIds
              selectionRules:
              - categoryIds:
                - categoryIds
                - categoryIds
                brands:
                - brands
                - brands
                categoryScope: categoryScope
                minPrice:
                  currency: currency
                  value: value
                maxPrice:
                  currency: currency
                  value: value
                listingConditionIds:
                - listingConditionIds
                - listingConditionIds
              - categoryIds:
                - categoryIds
                - categoryIds
                brands:
                - brands
                - brands
                categoryScope: categoryScope
                minPrice:
                  currency: currency
                  value: value
                maxPrice:
                  currency: currency
                  value: value
                listingConditionIds:
                - listingConditionIds
                - listingConditionIds
            inventoryCriterionType: inventoryCriterionType
          ruleOrder: 0
          discountId: discountId
          discountBenefit:
            amountOffOrder:
              currency: currency
              value: value
            amountOffItem:
              currency: currency
              value: value
            percentageOffItem: percentageOffItem
            percentageOffOrder: percentageOffOrder
        endDate: endDate
        promotionImageUrl: promotionImageUrl
        name: name
        description: description
        blockPriceIncreaseInItemRevision: true
        autoSelectFutureInventory: true
        priority: priority
        applyFreeShipping: true
        startDate: startDate
        promotionStatus: promotionStatus
      properties:
        applyFreeShipping:
          description: If set to <code>true</code>, free shipping is applied to the
            first shipping service specified for the item. The first domestic shipping
            option is set to "free shipping," regardless if the shipping <b>optionType</b>
            for that service is set to <code>FLAT_RATE</code>, <code>CALCULATED</code>,
            or <code>NOT_SPECIFIED</code> (freight). This flag essentially adds free
            shipping as a promotional bonus. <br><br><b>Default:</b> <code>false</code>
          type: boolean
        autoSelectFutureInventory:
          description: If set to <code>true</code>, eBay will automatically add inventory
            items to the markdown promotion if they meet the <b>selectedInventoryDiscounts</b>
            criteria specified for the markdown promotion.  <br><br><b>Default:</b>
            <code>false</code>
          type: boolean
        blockPriceIncreaseInItemRevision:
          description: If set to <code>true</code>, price increases (including removing
            the free shipping flag) are blocked and an error message is returned if
            a seller attempts to adjust the price of an item that's partaking in this
            markdown promotion. If set to <code>false</code>, an item is dropped from
            the markdown promotion if the seller adjusts the price.  <br><br><b>Default:</b>
            <code>false</code>
          type: boolean
        description:
          description: This field is required if you are configuring an MARKDOWN_SALE
            promotion. <br><br>This is the seller-defined "tag line" for the offer,
            such as "Save on designer shoes." A tag line appears under the "offer-type
            text" that is generated for the promotion. The text is displayed on the
            offer tile that is shown on the seller's <b>All Offers</b> page and on
            the event page for the promotion.  <p class="tablenote"><b>Note:</b> Offer-type
            text is a teaser that's presented throughout the buyer's journey through
            the sales flow and is generated by eBay. This text is not editable by
            the seller&mdash;it's derived from the settings in the <b>discountRules</b>
            and <b>discountSpecification</b> fields&mdash;and can be, for example,
            "20% off".</p>  <br><b>Maximum length:</b> 50
          type: string
        endDate:
          description: The date and time the promotion ends, in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            The value supplied for <b>endDate</b> must be at least 24 hours after
            the value supplied for the <b>startDate</b> of the markdown promotion.<br><br>For
            display purposes, convert this time into the local time of the seller.  <br><br><b>Max
            value:</b><ul><li><code>14</code> days for the AT, CH, DE, ES, FR, IE,
            IT, and UK, marketplaces.</li>  <li><code>45</code> days for all other
            marketplaces.</li></ul>
          type: string
        marketplaceId:
          description: The eBay marketplace ID of the site where the markdown promotion
            is hosted. Markdown promotions are supported on all eBay marketplaces.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: The seller-defined name or 'title' of the promotion that the
            seller can use to identify a promotion. This label is not displayed in
            end-user flows.  <br><br><b>Maximum length:</b> 90
          type: string
        priority:
          description: This field is ignored in markdown promotions. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionPriorityEnum'>eBay
            API documentation</a>
          type: string
        promotionImageUrl:
          description: Required for CODED_COUPON, MARKDOWN_SALE, and ORDER_DISCOUNT
            promotions, populate this field with a URL that points to an image to
            be used with the promotion. This image is displayed on the seller's <b>All
            Offers</b> page. The URL must point to either JPEG or PNG image and it
            must be a minimum of 500x500 pixels in dimension and cannot exceed 12Mb
            in size.
          type: string
        promotionStatus:
          description: The current status of the promotion. When creating a new promotion,
            you must set this value to either <code>DRAFT</code> or <code>SCHEDULED</code>.  <br><br>Note
            that you must set this value to <code>SCHEDULED</code> when you update
            a <b>RUNNING</b> promotion. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionStatusEnum'>eBay
            API documentation</a>
          type: string
        selectedInventoryDiscounts:
          description: A list that defines the sets of selected items for the markdown
            promotion and the discount specified for promotion.
          items:
            $ref: '#/components/schemas/SelectedInventoryDiscount'
          type: array
        startDate:
          description: The date and time the promotion starts in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            For display purposes, convert this time into the local time of the seller.
          type: string
      type: object
      x-apifox-orders:
      - applyFreeShipping
      - autoSelectFutureInventory
      - blockPriceIncreaseInItemRevision
      - description
      - endDate
      - marketplaceId
      - name
      - priority
      - promotionImageUrl
      - promotionStatus
      - selectedInventoryDiscounts
      - startDate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ItemPromotion:
      description: This type defines the fields that describe a threshold promotion
        and includes the promotional discount, the items included in the promotion,
        and the rules that specify when the promotion is applied.
      example:
        promotionType: promotionType
        endDate: endDate
        promotionImageUrl: promotionImageUrl
        discountRules:
        - discountSpecification:
            minAmount:
              currency: currency
              value: value
            minQuantity: 1
            numberOfDiscountedItems: 5
            forEachAmount:
              currency: currency
              value: value
            forEachQuantity: 6
          maxDiscountAmount:
            currency: currency
            value: value
          ruleOrder: 5
          discountBenefit:
            amountOffOrder:
              currency: currency
              value: value
            amountOffItem:
              currency: currency
              value: value
            percentageOffItem: percentageOffItem
            percentageOffOrder: percentageOffOrder
        - discountSpecification:
            minAmount:
              currency: currency
              value: value
            minQuantity: 1
            numberOfDiscountedItems: 5
            forEachAmount:
              currency: currency
              value: value
            forEachQuantity: 6
          maxDiscountAmount:
            currency: currency
            value: value
          ruleOrder: 5
          discountBenefit:
            amountOffOrder:
              currency: currency
              value: value
            amountOffItem:
              currency: currency
              value: value
            percentageOffItem: percentageOffItem
            percentageOffOrder: percentageOffOrder
        description: description
        couponConfiguration:
          maxCouponRedemptionPerUser: 0
          couponType: couponType
          couponCode: couponCode
        priority: priority
        promotionStatus: promotionStatus
        marketplaceId: marketplaceId
        inventoryCriterion:
          inventoryItems:
          - condition: condition
            product:
              ean:
              - ean
              - ean
              imageUrls:
              - imageUrls
              - imageUrls
              isbn:
              - isbn
              - isbn
              subtitle: subtitle
              aspects: aspects
              description: description
              epid: epid
              upc:
              - upc
              - upc
              mpn: mpn
              title: title
              brand: brand
              videoIds:
              - videoIds
              - videoIds
            packageWeightAndSize:
              weight:
                unit: unit
                value: value
              packageType: packageType
              dimensions:
                name: name
                dimensionKey: dimensionKey
                value: value
            availability:
              shipToLocationAvailability:
                quantity: 1
                availabilityDistributions:
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              pickupAtLocationAvailability:
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            conditionDescription: conditionDescription
          - condition: condition
            product:
              ean:
              - ean
              - ean
              imageUrls:
              - imageUrls
              - imageUrls
              isbn:
              - isbn
              - isbn
              subtitle: subtitle
              aspects: aspects
              description: description
              epid: epid
              upc:
              - upc
              - upc
              mpn: mpn
              title: title
              brand: brand
              videoIds:
              - videoIds
              - videoIds
            packageWeightAndSize:
              weight:
                unit: unit
                value: value
              packageType: packageType
              dimensions:
                name: name
                dimensionKey: dimensionKey
                value: value
            availability:
              shipToLocationAvailability:
                quantity: 1
                availabilityDistributions:
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              pickupAtLocationAvailability:
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            conditionDescription: conditionDescription
          listingIds:
          - listingIds
          - listingIds
          ruleCriteria:
            markupInventoryItems:
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            markupListingIds:
            - markupListingIds
            - markupListingIds
            excludeInventoryItems:
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            - condition: condition
              product:
                ean:
                - ean
                - ean
                imageUrls:
                - imageUrls
                - imageUrls
                isbn:
                - isbn
                - isbn
                subtitle: subtitle
                aspects: aspects
                description: description
                epid: epid
                upc:
                - upc
                - upc
                mpn: mpn
                title: title
                brand: brand
                videoIds:
                - videoIds
                - videoIds
              packageWeightAndSize:
                weight:
                  unit: unit
                  value: value
                packageType: packageType
                dimensions:
                  name: name
                  dimensionKey: dimensionKey
                  value: value
              availability:
                shipToLocationAvailability:
                  quantity: 1
                  availabilityDistributions:
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                  - quantity: 6
                    merchantLocationKey: merchantLocationKey
                    fulfillmentTime:
                      unit: unit
                      value: 0
                pickupAtLocationAvailability:
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - availabilityType: availabilityType
                  quantity: 0
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              conditionDescription: conditionDescription
            excludeListingIds:
            - excludeListingIds
            - excludeListingIds
            selectionRules:
            - categoryIds:
              - categoryIds
              - categoryIds
              brands:
              - brands
              - brands
              categoryScope: categoryScope
              minPrice:
                currency: currency
                value: value
              maxPrice:
                currency: currency
                value: value
              listingConditionIds:
              - listingConditionIds
              - listingConditionIds
            - categoryIds:
              - categoryIds
              - categoryIds
              brands:
              - brands
              - brands
              categoryScope: categoryScope
              minPrice:
                currency: currency
                value: value
              maxPrice:
                currency: currency
                value: value
              listingConditionIds:
              - listingConditionIds
              - listingConditionIds
          inventoryCriterionType: inventoryCriterionType
        applyDiscountToSingleItemOnly: true
        name: name
        startDate: startDate
        budget:
          currency: currency
          value: value
      properties:
        applyDiscountToSingleItemOnly:
          description: This flag is relevant in only when <b>promotionType</b> is
            set to <code>VOLUME_DISCOUNT</code>. For details on volume pricing promotions,
            see <a href="/api-docs/sell/static/marketing/pm-volume-discounts.html">Configuring
            volume pricing discounts</a>.  <br><br>If set to <code>true</code>, the
            discount is applied only when the buyer purchases multiple quantities
            of a single item in the promotion. Otherwise, the promotional discount
            applies to multiple quantities of any items in the promotion. Different
            variations of a multi-variation item are considered to be the same item.
            Note that this flag is not relevant if the <b>inventoryCriterion</b> container
            identifies a single listing ID for the promotion.
          type: boolean
        budget:
          $ref: '#/components/schemas/Amount'
        couponConfiguration:
          $ref: '#/components/schemas/CouponConfiguration'
        description:
          description: This is the seller-defined "tag line" for the offer, such as
            "Save on designer shoes."  <br><br>The tag line appears under the "offer-type
            text" that is generated for the promotion and is displayed on the offer
            tile that's shown on the seller's <b>All Offers</b> page, and on the event
            page for the promotion.  <p class="tablenote"><b>Note:</b> Offer-type
            text is a teaser that's presented throughout the buyer's journey through
            the sales flow and is generated by eBay. The offer-type text is not editable
            by the seller&mdash;it's derived from the settings in the <b>discountRules</b>
            and <b>discountSpecification</b> fields&mdash;and can be, for example,
            "Extra 20% off when you buy 3+".</p>  <br><b>Maximum length:</b> 50 <br><br><i>Required
            if</i> you are configuring CODED_COUPON, ORDER_DISCOUNT, or MARKDOWN_SALE
            promotions (and not valid for VOLUME_DISCOUNT promotions).
          type: string
        discountRules:
          description: 'This container defines a promotion using the following two
            required fields: <ul><li><b>discountBenefit</b> &ndash; Defines a discount
            as either a monetary amount or a percentage that is subtracted from the
            sales price of an item, a set of items, or an order.</li>  <li><b>discountSpecification</b>
            &ndash; Defines a set of rules that determine when the promotion is applied.</li></ul>
            <p class="tablenote"><b>Note:</b> For volume pricing, you must specify
            at least two and not more than four <b>discountBenefit</b>/<b>discountSpecification</b>
            pairs. In addition, you must define each set of rules with a <b>ruleOrder</b>
            value that corresponds with the order of volume discounts you present.</p>  <p><b>Tip:</b>
            Refer to <a href="/api-docs/sell/static/marketing/pm-specifying-discounts.html">Specifying
            item promotion discounts</a> for information and examples on how to combine
            <b>discountBenefit</b> and <b>discountSpecification</b> to create different
            types of promotions.</p>'
          items:
            $ref: '#/components/schemas/DiscountRule'
          type: array
        endDate:
          description: The date and time the promotion ends in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            For display purposes, convert this time into the local time of the seller.
          type: string
        inventoryCriterion:
          $ref: '#/components/schemas/InventoryCriterion'
        marketplaceId:
          description: The eBay marketplace ID of the site where the threshold promotion
            is hosted. Threshold promotions are currently supported on a limited number
            of eBay marketplaces.  <p><b>Valid values:</b></p>  <ul><li><code>EBAY_AU</code>
            = Australia</li> <li><code>EBAY_DE</code> = Germany</li> <li><code>EBAY_ES</code>
            = Spain</li> <li><code>EBAY_FR</code> = France</li> <li><code>EBAY_GB</code>
            = Great Britain</li> <li><code>EBAY_IT</code> = Italy</li> <li><code>EBAY_US</code>
            = United States</li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: The seller-defined name or "title" of the promotion that the
            seller can use to identify a promotion. This label is not displayed in
            end-user flows.  <br><br><b>Maximum length:</b> 90
          type: string
        priority:
          description: Applicable for only <b>ORDER_DISCOUNT</b> promotions, this
            field indicates the precedence of the promotion, which is used to determine
            the position of a promotion on the seller's <b>All Offers</b> page. If
            an item is associated with multiple promotions, the promotion with the
            higher priority takes precedence. For implementation help, refer to <a
            href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionPriorityEnum'>eBay
            API documentation</a>
          type: string
        promotionImageUrl:
          description: Required for CODED_COUPON, MARKDOWN_SALE, and ORDER_DISCOUNT
            promotions, and not valid for VOLUME_DISCOUNT promotions.  <br><br>Populate
            this field with a URL that points to an image to be used with the promotion.
            This image is displayed on the seller's <b>All Offers</b> page. The URL
            must point to either JPEG or PNG image and it must be a minimum of 500x500
            pixels in dimension and cannot exceed 12Mb in size.
          type: string
        promotionStatus:
          description: The current status of the promotion. When creating a new promotion,
            this value must be set to either <code>DRAFT</code> or <code>SCHEDULED</code>.  <br><br>Note
            that you must set this value to <code>SCHEDULED</code> when you update
            a <b>RUNNING</b> promotion. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionStatusEnum'>eBay
            API documentation</a>
          type: string
        promotionType:
          description: Use this field to specify the type of the promotion you are
            creating. <p>The supported types are:</p> <ul><li><code>CODED_COUPON</code>
            &ndash; A coupon code promotion set with <b>createItemPromotion</b>.</li>
            <li><code>MARKDOWN_SALE</code> &ndash; A markdown promotion set with <b>createItemPriceMarkdownPromotion</b>.</li>
            <li><code>ORDER_DISCOUNT</code> &ndash; A threshold promotion set with
            <b>createItemPromotion</b>.</li> <li><code>VOLUME_DISCOUNT</code> &ndash;
            A volume pricing promotion set with <b>createItemPromotion</b>.</li></ul>
            <p>See the <a href="/api-docs/sell/static/marketing/promotions-manager.html"
            target="_blank">Promotions Manager</a> documentation for details.</p>
            <p><i>Required if </i> you are creating a volume pricing promotion (<code>VOLUME_DISCOUNT</code>).</p>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionTypeEnum'>eBay
            API documentation</a>
          type: string
        startDate:
          description: The date and time the promotion starts in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            For display purposes, convert this time into the local time of the seller.
          type: string
      type: object
      x-apifox-orders:
      - applyDiscountToSingleItemOnly
      - budget
      - couponConfiguration
      - description
      - discountRules
      - endDate
      - inventoryCriterion
      - marketplaceId
      - name
      - priority
      - promotionImageUrl
      - promotionStatus
      - promotionType
      - startDate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ItemMarkdownStatus:
      description: This type defines the status of a markdown promotion.
      example:
        listingMarkdownStatus: listingMarkdownStatus
        statusChangedDate: statusChangedDate
        statusMessage: statusMessage
      properties:
        listingMarkdownStatus:
          description: Indicates the state assigned to the markdown promotion using
            one of the <b>status</b> values. For implementation help, refer to <a
            href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:ItemMarkdownStatusEnum'>eBay
            API documentation</a>
          type: string
        statusChangedDate:
          description: Identifies the date the last time the state of the promotion
            changed. Both both markdown and markup events can trigger a status change.
          type: string
        statusMessage:
          description: An eBay-assigned text string that describes the status of the
            promotion.
          type: string
      type: object
      x-apifox-orders:
      - listingMarkdownStatus
      - statusChangedDate
      - statusMessage
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryReference:
      description: This complex type is used to identify an item that is managed by
        the Inventory API. The type defines the fields contained in an inventory reference
        ID.
      example:
        inventoryReferenceId: inventoryReferenceId
        inventoryReferenceType: inventoryReferenceType
      properties:
        inventoryReferenceId:
          description: The seller's inventory reference ID for an item that is managed
            with the Inventory API.  <br><br>An inventory reference is either the
            ID of a single listing or the ID of the parent of an item group listing
            (a multi-variation listing, such as a shirt that is available in multiple
            sizes and colors).  <br><br><i>Required if </i> if you supply an <b>inventoryReferenceType</b>.
          type: string
        inventoryReferenceType:
          description: Indicates the type of item indicated by the <b>inventoryReferenceId</b>.  <br><br>This
            value can be set to either <code>INVENTORY_ITEM</code> or <code>INVENTORY_ITEM_GROUP</code>
            (if the ID points to a multi-variation listing). <br><br><i>Required if
            </i> if you supply an <b>inventoryReferenceId</b>. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:InventoryReferenceTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - inventoryReferenceId
      - inventoryReferenceType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ItemBasis:
      description: A container for details regarding the basis for an item.
      example:
        estimatedValue: 1
        metric: metric
      properties:
        estimatedValue:
          description: The estimated value of the search impressions for items based
            on the provided dimensions. <br /><br /><b>Duration:</b> 17 days<br /><br
            /><b>Total slots:</b> 200 <br /><br /><b>Channel:</b> Dweb, Mweb, Native
          format: int32
          type: integer
        metric:
          description: The basis of the statistics. For implementation help, refer
            to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:TargetingMetricsEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - estimatedValue
      - metric
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryCriterion:
      description: This type defines either the selections rules or the list of listing
        IDs for the promotion. The "listing IDs" are are either the seller's item
        IDs or the eBay listing IDs.
      example:
        inventoryItems:
        - condition: condition
          product:
            ean:
            - ean
            - ean
            imageUrls:
            - imageUrls
            - imageUrls
            isbn:
            - isbn
            - isbn
            subtitle: subtitle
            aspects: aspects
            description: description
            epid: epid
            upc:
            - upc
            - upc
            mpn: mpn
            title: title
            brand: brand
            videoIds:
            - videoIds
            - videoIds
          packageWeightAndSize:
            weight:
              unit: unit
              value: value
            packageType: packageType
            dimensions:
              name: name
              dimensionKey: dimensionKey
              value: value
          availability:
            shipToLocationAvailability:
              quantity: 1
              availabilityDistributions:
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            pickupAtLocationAvailability:
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          conditionDescription: conditionDescription
        - condition: condition
          product:
            ean:
            - ean
            - ean
            imageUrls:
            - imageUrls
            - imageUrls
            isbn:
            - isbn
            - isbn
            subtitle: subtitle
            aspects: aspects
            description: description
            epid: epid
            upc:
            - upc
            - upc
            mpn: mpn
            title: title
            brand: brand
            videoIds:
            - videoIds
            - videoIds
          packageWeightAndSize:
            weight:
              unit: unit
              value: value
            packageType: packageType
            dimensions:
              name: name
              dimensionKey: dimensionKey
              value: value
          availability:
            shipToLocationAvailability:
              quantity: 1
              availabilityDistributions:
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            pickupAtLocationAvailability:
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          conditionDescription: conditionDescription
        listingIds:
        - listingIds
        - listingIds
        ruleCriteria:
          markupInventoryItems:
          - condition: condition
            product:
              ean:
              - ean
              - ean
              imageUrls:
              - imageUrls
              - imageUrls
              isbn:
              - isbn
              - isbn
              subtitle: subtitle
              aspects: aspects
              description: description
              epid: epid
              upc:
              - upc
              - upc
              mpn: mpn
              title: title
              brand: brand
              videoIds:
              - videoIds
              - videoIds
            packageWeightAndSize:
              weight:
                unit: unit
                value: value
              packageType: packageType
              dimensions:
                name: name
                dimensionKey: dimensionKey
                value: value
            availability:
              shipToLocationAvailability:
                quantity: 1
                availabilityDistributions:
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              pickupAtLocationAvailability:
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            conditionDescription: conditionDescription
          - condition: condition
            product:
              ean:
              - ean
              - ean
              imageUrls:
              - imageUrls
              - imageUrls
              isbn:
              - isbn
              - isbn
              subtitle: subtitle
              aspects: aspects
              description: description
              epid: epid
              upc:
              - upc
              - upc
              mpn: mpn
              title: title
              brand: brand
              videoIds:
              - videoIds
              - videoIds
            packageWeightAndSize:
              weight:
                unit: unit
                value: value
              packageType: packageType
              dimensions:
                name: name
                dimensionKey: dimensionKey
                value: value
            availability:
              shipToLocationAvailability:
                quantity: 1
                availabilityDistributions:
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              pickupAtLocationAvailability:
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            conditionDescription: conditionDescription
          markupListingIds:
          - markupListingIds
          - markupListingIds
          excludeInventoryItems:
          - condition: condition
            product:
              ean:
              - ean
              - ean
              imageUrls:
              - imageUrls
              - imageUrls
              isbn:
              - isbn
              - isbn
              subtitle: subtitle
              aspects: aspects
              description: description
              epid: epid
              upc:
              - upc
              - upc
              mpn: mpn
              title: title
              brand: brand
              videoIds:
              - videoIds
              - videoIds
            packageWeightAndSize:
              weight:
                unit: unit
                value: value
              packageType: packageType
              dimensions:
                name: name
                dimensionKey: dimensionKey
                value: value
            availability:
              shipToLocationAvailability:
                quantity: 1
                availabilityDistributions:
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              pickupAtLocationAvailability:
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            conditionDescription: conditionDescription
          - condition: condition
            product:
              ean:
              - ean
              - ean
              imageUrls:
              - imageUrls
              - imageUrls
              isbn:
              - isbn
              - isbn
              subtitle: subtitle
              aspects: aspects
              description: description
              epid: epid
              upc:
              - upc
              - upc
              mpn: mpn
              title: title
              brand: brand
              videoIds:
              - videoIds
              - videoIds
            packageWeightAndSize:
              weight:
                unit: unit
                value: value
              packageType: packageType
              dimensions:
                name: name
                dimensionKey: dimensionKey
                value: value
            availability:
              shipToLocationAvailability:
                quantity: 1
                availabilityDistributions:
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
              pickupAtLocationAvailability:
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            conditionDescription: conditionDescription
          excludeListingIds:
          - excludeListingIds
          - excludeListingIds
          selectionRules:
          - categoryIds:
            - categoryIds
            - categoryIds
            brands:
            - brands
            - brands
            categoryScope: categoryScope
            minPrice:
              currency: currency
              value: value
            maxPrice:
              currency: currency
              value: value
            listingConditionIds:
            - listingConditionIds
            - listingConditionIds
          - categoryIds:
            - categoryIds
            - categoryIds
            brands:
            - brands
            - brands
            categoryScope: categoryScope
            minPrice:
              currency: currency
              value: value
            maxPrice:
              currency: currency
              value: value
            listingConditionIds:
            - listingConditionIds
            - listingConditionIds
        inventoryCriterionType: inventoryCriterionType
      properties:
        inventoryCriterionType:
          description: Indicates how the items to include in the promotion are selected.
            You can include inventory by ID, using rules, or globally include all
            your inventory.  For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:InventoryCriterionEnum'>eBay
            API documentation</a>
          type: string
        inventoryItems:
          description: An array of containers for the seller's inventory reference
            IDs (also known as an "SKU" or "custom label") to be added to the promotion.  <p
            class="tablenote"><b>Note:</b> The request can have either <b>inventoryItems</b>
            or <b>listingIds</b>, but not both.</p>  <br><br><b>Required:</b> All
            listings in a promotion must offer an electronic payment method.  <br><b>Maximum:</b>
            500 parent items  <br><b>Maximum SKU or custom label length:</b> 50 characters
            <br><br><i>Required if </i> <b>InventoryCriterionType</b> is set to <code>INVENTORY_BY_VALUE</code>,
            you must specify either <b>inventoryItems</b> or <b>listingIds</b>.
          items:
            $ref: '#/components/schemas/InventoryItem'
          type: array
        listingIds:
          description: An array of eBay listing IDs to be added to the promotion.  <p
            class="tablenote"><b>Note:</b> The request can have either <b>inventoryItems</b>
            or <b>listingIds</b>, but not both.</p>  <br><br><b>Required:</b> All
            listings in a promotion must offer an electronic payment method.  <br><b>Maximum:</b>
            500 parent items  <br><b>Maximum SKU or custom label length:</b> 50 characters
            <br><br><i>Required if </i> <b>InventoryCriterionType</b> is set to <code>INVENTORY_BY_VALUE</code>,
            you must specify either <b>inventoryItems</b> or <b>listingIds</b>.
          items:
            type: string
          type: array
        ruleCriteria:
          $ref: '#/components/schemas/RuleCriteria'
      type: object
      x-apifox-orders:
      - inventoryCriterionType
      - inventoryItems
      - listingIds
      - ruleCriteria
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FundingStrategy:
      description: This type defines how the Promoted Listings fee is calculated for
        a Promoted Listings ad campaign.
      example:
        adRateStrategy: adRateStrategy
        dynamicAdRatePreferences:
        - adRateAdjustmentPercent: adRateAdjustmentPercent
          adRateCapPercent: adRateCapPercent
        - adRateAdjustmentPercent: adRateAdjustmentPercent
          adRateCapPercent: adRateCapPercent
        fundingModel: fundingModel
        bidPercentage: bidPercentage
      properties:
        adRateStrategy:
          description: The ad rate strategy that shall be applied to the campaign.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AdRateStrategyEnum'>eBay
            API documentation</a>
          type: string
        bidPercentage:
          description: 'The user-defined <b>bid percentage</b> (also known as the
            <i>ad rate</i>) sets the level that eBay increases the visibility in search
            results for the associated listing. The higher the <b>bidPercentage</b>
            value, the more eBay promotes the listing.  <br><br>The value specified
            here is also used to calculate the Promoted Listings fee. This percentage
            value is multiplied by the final sales price to determine the fee. <br><br>The
            Promoted Listings fee is determined at the time the transaction completes
            and the seller is assessed the fee only when an item sells through a Promoted
            Listings ad campaign. <br><br>The <b>bidPercentage</b> is a single precision
            value that is guided by the following rules: <ul><li>These values are
            <b>valid</b>:<br>&nbsp;&nbsp;&nbsp;<code>4.1</code>, &nbsp;&nbsp;&nbsp;<code>5.0</code>,
            &nbsp;&nbsp;&nbsp;<code>5.5</code>, ...</li>  <li>These values are <b>not
            valid</b>:<br /> &nbsp;&nbsp;&nbsp;<code>0.01</code>, &nbsp;&nbsp;&nbsp;<code>10.75</code>,
            &nbsp;&nbsp;&nbsp;<code>99.99</code>,<br /> &nbsp;&nbsp;&nbsp;and so on.</li></ul>This
            is the default bid percentage for the campaigns using the Cost Per Sale
            (CPS) funding model, and this value will be overridden by any ads in the
            campaign that have their own set bid percentages.<br /><br />If a bid
            percentage is not provided for an ad, eBay uses the default bid percentage
            of the associated campaign.<br /><br /><span class="tablenote"><b>Note:</b>This
            field is only relevant for campaigns that use the CPS funding model. It
            is not used for campaigns that use the Cost Per Click (CPC) funding model.</span><br
            /><b>Minimum value:</b> 2.0 <br><b>Maximum value:</b> 100.0'
          type: string
        dynamicAdRatePreferences:
          description: A field that indicates whether a single, user-defined bid percentage
            (also known as the <i>ad rate</i>) should be used, or whether eBay should
            automatically adjust listings to maintain the daily suggested bid percentage.<br
            /><br /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            Dynamic adjustment is only applicable when the <b>adRateStrategy</b> is
            set to <code>DYNAMIC</code>.</span><br /><b>Default:</b> <code>FIXED</code>
          items:
            $ref: '#/components/schemas/DynamicAdRatePreference'
          type: array
        fundingModel:
          description: Indicates the model that eBay uses to calculate the Promoted
            Listings fee. <p>For a description of the funding model types, refer to
            <b>FundingModelTypeEnum</b>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:FundingModelEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - adRateStrategy
      - bidPercentage
      - dynamicAdRatePreferences
      - fundingModel
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DynamicAdRatePreference:
      description: A type that defines the ad rate details for a Promoted Listings
        Standard (PLS) ad campaign.
      example:
        adRateAdjustmentPercent: adRateAdjustmentPercent
        adRateCapPercent: adRateCapPercent
      properties:
        adRateAdjustmentPercent:
          description: The percentage above or below (-) the eBay suggested ad rate
            that a seller is willing to pay.<br /><br />This specifies the maximum
            and minimum values to which an ad rate can be dynamically adjusted.
          type: string
        adRateCapPercent:
          description: The maximum value (specified as a percentage) to which the
            eBay suggested ad rate can be adjusted. The adjusted ad rate will never
            exceed this percentage.
          type: string
      type: object
      x-apifox-orders:
      - adRateAdjustmentPercent
      - adRateCapPercent
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DiscountSpecification:
      description: This container defines the criteria for when the discounts of a
        promotion trigger, such as the minimum quantity the buyer must purchase before
        the promotion kicks in. The promotional discount is applied each time the
        criteria defined by this container is met.  <p><b>Note:</b> When configuring
        the rules that govern when the discounts are applied, populate just one of
        the following fields in the <b>discountSpecification</b> container:</p>  <ul><li><b>minAmount</b></li>
        <li><b>minQuantity</b></li> <li><b>forEachQuantity</b></li> <li><b>forEachAmount</b></li></ul>
        <p class="tablenote"><b>Tip:</b> Refer to <a href="/api-docs/sell/static/marketing/pm-specifying-discounts.html">Configuring
        discounts for threshold promotions</a> for information and examples on how
        to combine <b>discountBenefit</b> and <b>discountSpecification</b> to create
        different types of promotions.</p>
      example:
        minAmount:
          currency: currency
          value: value
        minQuantity: 1
        numberOfDiscountedItems: 5
        forEachAmount:
          currency: currency
          value: value
        forEachQuantity: 6
      properties:
        forEachAmount:
          $ref: '#/components/schemas/Amount'
        forEachQuantity:
          description: The number of items that must be purchased in order to qualify
            for the discount.  <br><br><b>Valid values:</b> <br><code> &nbsp; 1, 2,
            3, 4, 5, 6, 7, 8, 9, 10, 11, <br> &nbsp; 12, 13, 14, 15, 16, 17, 18, 19
            <br> &nbsp; 20, 25, 50, 75, 100</code>
          format: int32
          type: integer
        minAmount:
          $ref: '#/components/schemas/Amount'
        minQuantity:
          description: The minimum quantity of promoted items that needs to be bought
            in order to qualify for the promotion's discount.  <br><br><b>Valid values:</b>
            <br><code> &nbsp; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, <br> &nbsp; 12, 13,
            14, 15, 16, 17, 18, 19 <br> &nbsp; 20, 25, 50, 75, 100</code>
          format: int32
          type: integer
        numberOfDiscountedItems:
          description: Use this field to configure "Buy One Get One" (or <b>BOGO</b>)
            promotions.  <br><br>You must couple this field with <b>forEachQuantity</b>
            and an <b>amountOffItem</b> or <b>percentOffItem</b> field to configure
            your BOGO promotion. This field is not valid with order-based promotions.
            <br><br>The value of this field represents the number of items to be discounted
            when other promotion criteria is met. For example, when the buyer adds
            the number of items identified by the <b>forEachQuantity</b> value to
            their cart, they are then eligible to receive the stated discount from
            an additional number of like items (the number of which is identified
            by this field) when they add those items to their cart. To receive the
            discount, the buyer must purchase the number of items indicated by  <b>forEachQuantity</b>
            <i>plus</i> the number indicated by this field.  <br><br><b>Valid values:</b>
            <br><code> &nbsp; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10</code>
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - forEachAmount
      - forEachQuantity
      - minAmount
      - minQuantity
      - numberOfDiscountedItems
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DiscountRule:
      description: This complex type defines a promotion as being either a monetary
        amount or a percentage of a sales price that's subtracted from the price of
        an item or order. <p>Set the amount of the discount and the rules that govern
        when the discount triggers using the <b>discountBenefit</b> and <b>discountSpecification</b>
        fields.</p>  <p class="tablenote"><b>Note:</b> In <b>volume pricing promotions</b>,
        you must configure at least two <b>discountRule</b> containers and at most
        four.</p>
      example:
        discountSpecification:
          minAmount:
            currency: currency
            value: value
          minQuantity: 1
          numberOfDiscountedItems: 5
          forEachAmount:
            currency: currency
            value: value
          forEachQuantity: 6
        maxDiscountAmount:
          currency: currency
          value: value
        ruleOrder: 5
        discountBenefit:
          amountOffOrder:
            currency: currency
            value: value
          amountOffItem:
            currency: currency
            value: value
          percentageOffItem: percentageOffItem
          percentageOffOrder: percentageOffOrder
      properties:
        discountBenefit:
          $ref: '#/components/schemas/DiscountBenefit'
        discountSpecification:
          $ref: '#/components/schemas/DiscountSpecification'
        maxDiscountAmount:
          $ref: '#/components/schemas/Amount'
        ruleOrder:
          description: This field indicates the order in which the <b>discountRules</b>
            are presented. The value specified for this field must equal the associated
            <b>minQuantity</b> value. <br><br><i>Required if </i> you are creating
            a volume pricing promotion.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - discountBenefit
      - discountSpecification
      - maxDiscountAmount
      - ruleOrder
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DiscountBenefit:
      description: 'This container defines the promotional discount as either a monetary
        amount or a percentage of the sales price.  <p class="tablenote"><b>Important!:</b>
        You must populate one and only one of the fields in this container: <ul><li><b>amountOffItem</b></li>
        <li><b>amountOffOrder</b></li> <li><b>percentageOffItem</b></li> <li><b>percentageOffOrder</b></li></ul></p>  <p
        class="tablenote"><b>Tip:</b> Refer to <a href="/api-docs/sell/static/marketing/pm-specifying-discounts.html">Configuring
        discounts for threshold promotions</a> for information and examples on how
        to combine <b>discountBenefit</b> and <b>discountSpecification</b> values
        to create different types of promotions.</p>'
      example:
        amountOffOrder:
          currency: currency
          value: value
        amountOffItem:
          currency: currency
          value: value
        percentageOffItem: percentageOffItem
        percentageOffOrder: percentageOffOrder
      properties:
        amountOffItem:
          $ref: '#/components/schemas/Amount'
        amountOffOrder:
          $ref: '#/components/schemas/Amount'
        percentageOffItem:
          description: 'The percentage applied to the sales price that is discounted
            off the promoted item (or items) when the promotion criteria is met.  <br><br>Valid
            integer values for percentage off: &nbsp;&nbsp;<b>Min:</b> <code>5</code>
            &nbsp;&nbsp;<b>Max:</b> <code>80</code>'
          type: string
        percentageOffOrder:
          description: 'Used for threshold promotions, this is the percentage of the
            order price that is discounted off the order when the promotion criteria
            is met. This field is not value for markdown promotions.  <br><br>Valid
            integer values for ORDER_DISCOUNT promotions: &nbsp;&nbsp;<b>Min:</b>
            <code>5</code> &nbsp;&nbsp;<b>Max:</b> <code>80</code>  <br><br>For VOLUME_DISCOUNT
            promotions: Must be set to <code>0</code> for the first discount rule.'
          type: string
      type: object
      x-apifox-orders:
      - amountOffItem
      - amountOffOrder
      - percentageOffItem
      - percentageOffOrder
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DimensionMetadata:
      description: This type defines the dimension used to create the report and the
        annotation keys associated with that dimension.
      example:
        dimensionKeyAnnotations:
        - dataType: dataType
          annotationKey: annotationKey
        - dataType: dataType
          annotationKey: annotationKey
        dataType: dataType
        dimensionKey: dimensionKey
      properties:
        dataType:
          description: The data type of the dimension value used to create the report.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:DataTypeEnum'>eBay
            API documentation</a>
          type: string
        dimensionKey:
          description: The name of the dimension used to create the report.
          type: string
        dimensionKeyAnnotations:
          description: An list of annotation keys associated with the specified dimension
            of the report.
          items:
            $ref: '#/components/schemas/DimensionKeyAnnotation'
          type: array
      type: object
      x-apifox-orders:
      - dataType
      - dimensionKey
      - dimensionKeyAnnotations
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DeleteAdsByInventoryReferenceResponse:
      description: This type defines the fields returned by request to delete a set
        of ads by inventory reference ID.
      example:
        adIds:
        - adIds
        - adIds
        inventoryReferenceId: inventoryReferenceId
        inventoryReferenceType: inventoryReferenceType
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        adIds:
          description: The unique identifier of the ad that was deleted, or the ad
            that the seller attempted to delete.<span class="tablenote"><b>Note:</b>Although
            the field name is plural and it is an array, only one ad ID will be returned
            here since there can be only one ad per listing.</span>
          items:
            type: string
          type: array
        errors:
          description: The container for the errors associated with the request.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        inventoryReferenceId:
          description: The inventory reference ID is a seller-defined SKU value for
            a single-item listing, or a seller-defined identifier for an inventory
            item group. Both of these values are defined when using the Inventory
            API, and an inventory item group is used to create a multiple-variation
            listing.
          type: string
        inventoryReferenceType:
          description: The enumeration value returned here indicates if the ad was
            for a single-variation listing or a multiple-variation listing. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:InventoryReferenceTypeEnum'>eBay
            API documentation</a>
          type: string
        statusCode:
          description: An HTTP status code indicating if the corresponding ad was
            successfully deleted or not. <code>200 Successful</code> should be returned
            for successfully deleted ads. <span class="tablenote"><b>Note:</b>A status
            code is returned for each ad that the seller deletes, or attempts to delete.</span>
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - adIds
      - errors
      - inventoryReferenceId
      - inventoryReferenceType
      - statusCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DimensionKeyAnnotation:
      description: This type defines the annotation values associated with a dimension.
        Annotations are metadata of the dimension. For example, annotations for a
        listing ID could be <code>listing_title</code> or <code>listing_quantity_sold</code>.
      example:
        dataType: dataType
        annotationKey: annotationKey
      properties:
        annotationKey:
          description: An annotation key associated with the dimension.
          type: string
        dataType:
          description: The data type of the annotation key value. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:DataTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - annotationKey
      - dataType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DeleteAdsByInventoryReferenceRequest:
      description: This type defines the fields needed to delete an ad by its inventory
        reference ID.  You must always supply both <b>inventory_reference_id</b> and
        <b>inventory_reference_type</b>.
      example:
        inventoryReferenceId: inventoryReferenceId
        inventoryReferenceType: inventoryReferenceType
      properties:
        inventoryReferenceId:
          description: The inventory reference ID is a seller-defined SKU value for
            a single-item listing, or a seller-defined identifier for an inventory
            item group. Both of these values are defined when using the Inventory
            API, and an inventory item group is used to create a multiple-variation
            listing.
          type: string
        inventoryReferenceType:
          description: The enumeration value passed into this field indicates the
            type of value used for the corresponding <b>inventoryReferenceId</b> value.
            The enumeration value used here will either be <code>INVENTORY_ITEM</code>
            (to delete the ad for a single SKU listing) or <code>INVENTORY_ITEM_GROUP</code>
            (to delete the ad for a multiple-variation listing). For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:InventoryReferenceTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - inventoryReferenceId
      - inventoryReferenceType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DeleteAdResponse:
      description: This type defines the fields returned in a delete-ad response.
      example:
        adId: adId
        listingId: listingId
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        adId:
          description: The unique identifier of the ad that was deleted, or the ad
            that the seller attempted to delete.
          type: string
        errors:
          description: An array of the errors or warnings associated with the request.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        listingId:
          description: A unique eBay-assigned ID for a listing that is generated when
            the listing is created.
          type: string
        statusCode:
          description: An HTTP status code that indicates the response-status of the
            request. Check this code to see if the ad was successfully deleted.<span
            class="tablenote"><b>Note:</b>A status code is returned for each ad that
            the seller deletes, or attempts to delete.</span>
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - adId
      - errors
      - listingId
      - statusCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateReportTask:
      description: This type defines the rules that govern the generation of a report
        task and the criteria that's used to create the report. The report-generation
        rules include the starting and ending dates for the report. Report-task criteria
        includes the report dimensions, metrics, listings covered in the report, and
        so on. For information on the required and optional fields for each report
        type, see <a href="/api-docs/sell/static/marketing/pl-reports.html">Promoted
        Listings reporting</a>.
      example:
        marketplaceId: marketplaceId
        reportType: reportType
        metricKeys:
        - metricKeys
        - metricKeys
        listingIds:
        - listingIds
        - listingIds
        inventoryReferences:
        - inventoryReferenceId: inventoryReferenceId
          inventoryReferenceType: inventoryReferenceType
        - inventoryReferenceId: inventoryReferenceId
          inventoryReferenceType: inventoryReferenceType
        dateTo: dateTo
        fundingModels:
        - fundingModels
        - fundingModels
        reportFormat: reportFormat
        campaignIds:
        - campaignIds
        - campaignIds
        dateFrom: dateFrom
        additionalRecords:
        - additionalRecords
        - additionalRecords
        dimensions:
        - name: name
          dimensionKey: dimensionKey
          value: value
        - name: name
          dimensionKey: dimensionKey
          value: value
      properties:
        additionalRecords:
          description: A list of additional records that shall be included in the
            report, such as non-performing data.<br /><br /><span class="tablenote"><span
            style="color:#004680"><strong>Note:</strong></span> Additional records
            are only applicable to Promoted Listings Advanced (PLA) campaigns that
            use the Cost Per Click (CPC) funding model.</span><br /><b>Valid Value:</b>
            <code>NON_PERFORMING_DATA</code>
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/marketing/types/plr:AdditionalRecordEnum''>eBay
              API documentation</a>'
            type: string
          type: array
        campaignIds:
          description: A list of campaign IDs to be included in the report task. Call
            <b>getCampaigns</b> to get a list of the current campaign IDs for a seller.<br
            /><br />For Promoted Listings Standard (PLS) sellers, this field is required
            if the <b>reportType</b> is set to <code>CAMPAIGN_PERFORMANCE_REPORT</code>
            or <code>CAMPAIGN_PERFORMANCE_SUMMARY_REPORT</code>.<br /><br />For Promoted
            Listings Advanced (PLA) sellers, leave this request field blank to retrieve
            the details for all campaigns associated with your account, or specify
            the campaign IDs for which you would like to retrieve the campaign-specific
            details.<br /><br /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            There is a maximum data limit that cannot be exceeded when generating
            reports. If this threshold is exceeded, the report will fail. Refer to
            <a href="/api-docs/sell/static/marketing/pl-reports.html#creation">Promoted
            Listings reporting</a> in the Selling Integration Guide for details.</span><br
            /><br /><b>Maximum:</b><ul><li>25 IDs for PLS</li><li>1,000 IDs for PLA</li></ul>
          items:
            type: string
          type: array
        dateFrom:
          description: The date defining the start of the timespan covered by the
            report.<br /><br />Format the timestamp as an <a href="https://www.iso.org/iso-8601-date-and-time-format.html"
            title="https://www.iso.org" target="_blank">ISO 8601</a> string, which
            is based on the 24-hour Coordinated Universal Time (UTC) clock with local
            offset.<br /><br /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            The date specified cannot be a future date.</span><br /><br /><b>Format:</b>
            <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code><br /><br /><b>Example:</b>
            <code>2021-03-15T13:00:00-07:00</code>
          type: string
        dateTo:
          description: The date defining the end of the timespan covered by the report.<br
            /><br />As with the <b>dateFrom</b> field, format the timestamp as an
            <a href="https://www.iso.org/iso-8601-date-and-time-format.html" title="https://www.iso.org"
            target="_blank">ISO 8601</a> string.<br /><br /><span class="tablenote"><span
            style="color:#004680"><strong>Note:</strong></span> The date specified
            cannot be a future date. Additionally, the time specified must be a later
            time than that specified in the <b>dateFrom</b> field.</span><br /><br
            /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code><br
            /><br /><b>Example:</b> <code>2021-03-17T13:00:00-07:00</code>
          type: string
        dimensions:
          description: The list of the dimensions applied to the report.  <p>A dimension
            is an attribute to which the report data applies. For example, if you
            set <b>dimensionKey</b> to <code>campaign_id</code> in a Campaign Performance
            Report, the data will apply to the entire ad campaign. For information
            on the dimensions and how to specify them, see <a href="/api-docs/sell/static/marketing/pl-reports.html">Promoted
            Listings reporting</a>.</p>
          items:
            $ref: '#/components/schemas/Dimension'
          type: array
        fundingModels:
          description: The funding model for the campaign that shall be included in
            the report.<br /><br /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            The default funding model for Promoted Listings reports is <code>COST_PER_SALE</code>.</span><br
            /><br /><b>Valid Values:</b><ul><li><code>COST_PER_SALE</code></li><li><code>COST_PER_CLICK</code></li></ul><i>Required
            if</i> the campaign funding model is Cost Per Click (CPC).
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/marketing/types/pls:FundingModelEnum''>eBay
              API documentation</a>'
            type: string
          type: array
        inventoryReferences:
          description: 'You can use this field to supply an array of items to include
            in the report if you manage your inventory with the <a href="/api-docs/sell/inventory/resources/methods">Inventory
            API</a>.  <br><br>This field is mutually exclusive with the <b>listingIds</b>
            field; if you populate this field, <i>do not</i> populate the <b>listingIds</b>
            field.  <br><br>An inventory reference identifies an item in your inventory
            using a pair of values, where the <b>inventoryReferenceId</b> can be either
            a seller-defined <b>SKU</b> value or an <b>inventoryItemGroupKey</b>,
            where an <b>inventoryItemGroupKey</b> is seller-defined ID for an inventory
            item group (a multiple-variation listing). <br><br>Couple the <b>inventoryReferenceId</b>
            with an <b>inventoryReferenceType</b> identifier to fully identify an
            item in your inventory.  <br><br><b>Maximum: </b> 500 items <br><br><i>Required
            if </i> you do not supply an array of <b>listingId</b> values or if you
            set <b>reportType</b> to <code>INVENTORY_PERFORMANCE_REPORT</code>.'
          items:
            $ref: '#/components/schemas/InventoryReference'
          type: array
        listingIds:
          description: Use this field to supply an array of listing IDs you want to
            include in the report.<br><br>A listing ID is the eBay listing identifier
            that is generated when the listing is created. This field accepts listing
            ID values generated with both the Inventory API and the eBay Traditional
            APIs, such as the Trading and Finding APIs.<br><br><span class="tablenote"><span
            style="color:#FF0000"><strong>Important:</strong></span> This field is
            mutually exclusive with the <b>inventoryReferences</b> field; if you populate
            this field, <i>do not</i> populate the <b>inventoryReferences</b> field.</span><br
            /><br />For Promoted Listings Standard (PLS) sellers, this field is required
            if you do not supply an array of <b>inventoryReferences</b> values or
            if you set the <b>reportType</b> to <code>LISTING_PERFORMANCE_REPORT</code>.<br
            /><br />For Promoted Listings Advanced (PLA) sellers, leave this field
            blank to retrieve the details for all listings associated with the specified
            campaign IDs (or all campaigns associated with your account, if no campaign
            IDs are specified), or specify the listing IDs for which you would like
            to retrieve the listing-specific details.<br /><br /><span class="tablenote"><span
            style="color:#004680"><strong>Note:</strong></span> There is a maximum
            data limit that cannot be exceeded when generating reports. If this threshold
            is exceeded, the report will fail. Refer to <a href="/api-docs/sell/static/marketing/pl-reports.html#creation">Promoted
            Listings reporting</a> in the Selling Integration Guide for details.</span><br
            /><br /><b>Maximum:</b> 500 listings
          items:
            type: string
          type: array
        marketplaceId:
          description: 'The ID for the eBay marketplace on which the report is based.<br
            /><br /><b>Maximum: </b> 1 For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum''>eBay
            API documentation</a>'
          type: string
        metricKeys:
          description: 'The list of metrics to be included in the report.  <p>Metrics
            are the quantitative measurements compiled into the report and the data
            returned is based on the specified dimension of the report. For example,
            if the dimension is <code>campaign</code>, the metrics for <b>number of
            sales</b> would be the number of sales in the campaign. However, if the
            dimension is <code>listing</code>, the <b>number of sales</b> represents
            the number of items sold in that listing.</p>  <p>For information on metric
            keys and how to set them, see <a href="/api-docs/sell/static/marketing/pl-reports.html">Promoted
            Listings reporting</a>.</p><b>Minimum: </b> 1'
          items:
            type: string
          type: array
        reportFormat:
          description: The file format of the report. Currently, the only supported
            format is <code>TSV_GZIP</code>, which is a gzip file with tab separated
            values. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:ReportFormatEnum'>eBay
            API documentation</a>
          type: string
        reportType:
          description: The type of report to be generated, such as <code>ACCOUNT_PERFORMANCE_REPORT</code>
            or <code>CAMPAIGN_PERFORMANCE_REPORT</code>.<br/><br/><span class="tablenote"><b>Note:</b>
            INVENTORY_PERFORMANCE_REPORT is not currently available; availability
            date is pending.</span><br /><br /><b>Maximum:</b> 1 For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:ReportTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - additionalRecords
      - campaignIds
      - dateFrom
      - dateTo
      - dimensions
      - fundingModels
      - inventoryReferences
      - listingIds
      - marketplaceId
      - metricKeys
      - reportFormat
      - reportType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DeleteAdRequest:
      description: This type defines the fields used in a delete-ad request.
      example:
        listingId: listingId
      properties:
        listingId:
          description: A unique eBay-assigned ID for a listing that is generated when
            the listing is created.  <p class="tablenote"><b>Note:</b> This request
            accepts both listing IDs, as generated by the Inventory API, and an item
            IDs, as used in the eBay Traditional API set (e.g., the Trading and Finding
            APIs).</p>
          type: string
      type: object
      x-apifox-orders:
      - listingId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateAdsByInventoryReferenceResponse:
      description: This type defines the fields returned when you create an ad by
        inventory reference ID.
      example:
        ads:
        - adId: adId
          href: href
        - adId: adId
          href: href
        inventoryReferenceId: inventoryReferenceId
        inventoryReferenceType: inventoryReferenceType
        adGroupId: adGroupId
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        adGroupId:
          description: A unique eBay-assigned ID for an ad group in a Promoted Listings
            Advanced (PLA) campaign that uses the Cost Per Click (CPC) funding model.<span
            class="tablenote"><b>Note:</b> This field will always be returned for
            campaigns that use the CPC funding model. It will not be returned for
            campaigns that use the Cost Per Sale (CPS) funding model.</span>
          type: string
        ads:
          description: A list of ad IDs. An ad ID is generated for each successfully
            created ad.
          items:
            $ref: '#/components/schemas/AdReference'
          type: array
        errors:
          description: An array of errors or warnings associated with the create-ads
            request.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        inventoryReferenceId:
          description: An ID that identifies a single-item listing or multiple-variation
            listing that is managed with the <a href="/api-docs/sell/inventory/resources/methods"
            title="Inventory API Reference">Inventory API</a>. <p>The <i>inventory
            reference ID</i> is a seller-defined value that can be either an <b>SKU</b>
            for a single-item listing or an <b>inventoryItemGroupKey</b> for a multiple-value
            listing.</p>
          type: string
        inventoryReferenceType:
          description: Indicates the type of item the <b>inventoryReferenceId</b>
            references. The item can be either an <code>INVENTORY_ITEM</code> or <code>INVENTORY_ITEM_GROUP</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:InventoryReferenceTypeEnum'>eBay
            API documentation</a>
          type: string
        statusCode:
          description: An HTTP status code that indicates the response-status of the
            request. Check this code to see if the ads were successfuly created.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - adGroupId
      - ads
      - errors
      - inventoryReferenceId
      - inventoryReferenceType
      - statusCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateKeywordRequest:
      description: A type that defines the fields for the <b>CreateKeyword</b> request.
      example:
        matchType: matchType
        bid:
          currency: currency
          value: value
        adGroupId: adGroupId
        keywordText: keywordText
      properties:
        adGroupId:
          description: This adGroupId is created when an ad group is first created
            and associated with a campaign. This is the ad group that the corresponding
            keyword will be added to. This ad group must be a part of the campaign
            that is specified in the call URI.<br /><br /><span class="tablenote"><b>Note:</b>
            You can call the  <a href="/api-docs/sell/marketing/resources/adgroup/methods/getAdGroups">getAdGroups</a>
            method to retrieve the ad group IDs for a seller, and <a href="/api-docs/sell/marketing/resources/keywords/methods/getKeywords">getKeywords</a>
            to retrieve the keyword IDs for a seller's keywords.</span>
          type: string
        bid:
          $ref: '#/components/schemas/Amount'
        keywordText:
          description: Input the keyword into this field.
          type: string
        matchType:
          description: A field that defines the match type for the keyword.<br /><br
            /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            Broad matching of keywords is currently only supported in the AU marketplace.</span><br
            /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - adGroupId
      - bid
      - keywordText
      - matchType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateCampaignRequest:
      description: This type defines the fields needed to create a campaign. To create
        a campaign, you need to specify a name, start and end dates, funding, marketplace,
        and optionally the criterion (selection rules).
      example:
        marketplaceId: marketplaceId
        campaignCriterion:
          criterionType: criterionType
          autoSelectFutureInventory: true
          selectionRules:
          - categoryIds:
            - categoryIds
            - categoryIds
            brands:
            - brands
            - brands
            categoryScope: categoryScope
            minPrice:
              currency: currency
              value: value
            maxPrice:
              currency: currency
              value: value
            listingConditionIds:
            - listingConditionIds
            - listingConditionIds
          - categoryIds:
            - categoryIds
            - categoryIds
            brands:
            - brands
            - brands
            categoryScope: categoryScope
            minPrice:
              currency: currency
              value: value
            maxPrice:
              currency: currency
              value: value
            listingConditionIds:
            - listingConditionIds
            - listingConditionIds
        endDate: endDate
        fundingStrategy:
          adRateStrategy: adRateStrategy
          dynamicAdRatePreferences:
          - adRateAdjustmentPercent: adRateAdjustmentPercent
            adRateCapPercent: adRateCapPercent
          - adRateAdjustmentPercent: adRateAdjustmentPercent
            adRateCapPercent: adRateCapPercent
          fundingModel: fundingModel
          bidPercentage: bidPercentage
        campaignName: campaignName
        startDate: startDate
        budget:
          daily:
            amount:
              currency: currency
              value: value
      properties:
        budget:
          $ref: '#/components/schemas/CampaignBudgetRequest'
        campaignCriterion:
          $ref: '#/components/schemas/CampaignCriterion'
        campaignName:
          description: 'A seller-defined name for the campaign. This value must be
            unique for the seller. <p>You can use any alphanumeric characters in the
            name, except the less than (&lt;) or greater than (&gt;) characters.</p><b>Max
            length: </b>80 characters'
          type: string
        endDate:
          description: The date and time the campaign ends, in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            If this field is omitted, the campaign will have no defined end date,
            and will not end until the seller makes a decision to end the campaign
            with an <a href="/api-docs/sell/marketing/resources/campaign/methods/endCampaign">endCampaign</a>
            call, or if they update the campaign at a later time with an end date.
          type: string
        fundingStrategy:
          $ref: '#/components/schemas/FundingStrategy'
        marketplaceId:
          description: The ID of the eBay marketplace where the campaign is hosted.
            See the <b>MarketplaceIdEnum</b> type to get the appropriate enumeration
            value for the listing marketplace. For implementation help, refer to <a
            href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        startDate:
          description: The date and time the campaign starts, in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            For display purposes, convert this time into the local time of the seller.  <p>On
            the date specified, the service derives the keywords for each listing
            in the campaign, creates an ad for each listing, and associates each new
            ad with the campaign. The campaign starts after this process is completed.
            The amount of time it takes the service to start the campaign depends
            on the number of listings in the campaign. Call <b>getCampaign</b> to
            check the status of the campaign.</p>
          type: string
      type: object
      x-apifox-orders:
      - budget
      - campaignCriterion
      - campaignName
      - endDate
      - fundingStrategy
      - marketplaceId
      - startDate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateNegativeKeywordRequest:
      description: A type that defines the fields for the <b>CreateNegativeKeyword</b>
        request.
      example:
        negativeKeywordText: negativeKeywordText
        campaignId: campaignId
        negativeKeywordMatchType: negativeKeywordMatchType
        adGroupId: adGroupId
      properties:
        adGroupId:
          description: This adGroupId is created when an ad group is first created
            and associated with a campaign. This is the ad group to which the corresponding
            negative keyword will be added.<br /><br /><span class="tablenote"><b>Note:</b>
            You can call the  <a href="/api-docs/sell/marketing/resources/adgroup/methods/getAdGroups">getAdGroups</a>
            method to retrieve the ad group IDs for a seller.</span><br /><br /><i>Required
            if</i> the negative keyword is being created at the ad group level.
          type: string
        campaignId:
          description: A unique eBay-assigned ID for a campaign. This ID is generated
            when a campaign is created.<br /><br /><i>Required if</i> the negative
            keyword is being created at the ad group level.
          type: string
        negativeKeywordMatchType:
          description: A field that defines the match type for the negative keyword.<br
            /><br /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            Broad matching of negative keywords is not currently supported.</span><br
            /><b>Valid Values:</b><ul><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:NegativeKeywordMatchTypeEnum'>eBay
            API documentation</a>
          type: string
        negativeKeywordText:
          description: The negative keyword text.
          type: string
      type: object
      x-apifox-orders:
      - adGroupId
      - campaignId
      - negativeKeywordMatchType
      - negativeKeywordText
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateAdsByInventoryReferenceRequest:
      description: This type defines the fields needed to create ads by inventory
        reference ID request.
      example:
        inventoryReferenceId: inventoryReferenceId
        inventoryReferenceType: inventoryReferenceType
        bidPercentage: bidPercentage
        adGroupId: adGroupId
      properties:
        adGroupId:
          description: <span class="tablenote"><b>Note:</b> This field is not currently
            in use. Ad groups are only applicable to Promoted Listings Advanced (PLA)
            ad campaigns that use the Cost Per Click (CPC) funding model. See <a href="/api-docs/sell/static/marketing/pl-overview.html#funding-model">Funding
            Models</a> in the <i>Promoted Listings Playbook</i> for more information.</span>
          type: string
        bidPercentage:
          description: 'The user-defined <b>bid percentage</b> (also known as the
            <i>ad rate</i>) sets the level that eBay increases the visibility in search
            results for the associated listing. The higher the <b>bidPercentage</b>
            value, the more eBay promotes the listing.<br /><br /><i>Required if</i>
            the campaign''s funding model is Cost Per Sale (CPS).<br /><br />The value
            specified here is also used to calculate the Promoted Listings fee. This
            percentage value is multiplied by the final sales price to determine the
            fee.<br /><br />The Promoted Listings fee is determined at the time the
            transaction completes and the seller is assessed the fee only when an
            item sells through a Promoted Listings ad campaign.<br /><br />The <b>bidPercentage</b>
            is a single precision value that is guided by the following rules: <ul><li>These
            values are <b>valid</b>:<br>&nbsp;&nbsp;&nbsp;<code>4.1</code>, &nbsp;&nbsp;&nbsp;<code>5.0</code>,&nbsp;&nbsp;&nbsp;<code>5.5</code>,
            ...</li>  <li>These values are <b>not valid</b>:<br /> &nbsp;&nbsp;&nbsp;<code>0.01</code>,
            &nbsp;&nbsp;&nbsp;<code>10.75</code>, &nbsp;&nbsp;&nbsp;<code>99.99</code>,<br
            /> &nbsp;&nbsp;&nbsp;and so on.</li></ul>This is default bid percentage
            for the campaigns using the Cost Per Sale (CPS) funding model, and this
            value will be overridden by any ads in the campaign that have their own
            set bid percentages.<br /><br />If a bid percentage is not provided for
            an ad, eBay uses the default bid percentage of the associated campaign.<br
            /><br /><b>Minimum value:</b> 2.0 <br><b>Maximum value:</b> 100.0'
          type: string
        inventoryReferenceId:
          description: An ID that identifies a single-item listing or multiple-variation
            listing that is managed with the <a href="/api-docs/sell/inventory/resources/methods"
            title="Inventory API Reference">Inventory API</a>. <p>The <i>inventory
            reference ID</i> is a seller-defined value that can be either an <b>SKU</b>
            for a single-item listing or an <b>inventoryItemGroupKey</b> for a multiple-value
            listing.</p>  <p>An <i>inventoryItemGroupKey</i> is a value that the seller
            defines to indicate a listing that's the parent of an inventory item group
            (a multiple-variation listing, such as a listing for a shirt that's available
            in multiple sizes and colors).</p>  <p>You must always specify both an
            <b>inventoryReferenceId</b> and an <b>inventoryReferenceType</b> to indicate
            an item that's managed with the Inventory API.</p>
          type: string
        inventoryReferenceType:
          description: Indicates the type of item the <b>inventoryReferenceId</b>
            references. The item can be either an <code>INVENTORY_ITEM</code> or <code>INVENTORY_ITEM_GROUP</code>.
            <p>You must always pair an <b>inventoryReferenceId</b> with and <b>inventoryReferenceType</b>.</p>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:InventoryReferenceTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - adGroupId
      - bidPercentage
      - inventoryReferenceId
      - inventoryReferenceType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateAdRequest:
      description: This type defines the fields for the create ad request.
      example:
        listingId: listingId
        bidPercentage: bidPercentage
        adGroupId: adGroupId
      properties:
        adGroupId:
          description: A unique eBay-assigned ID for an ad group in a campaign that
            uses the Cost Per Click (CPC) funding model. <p><i>Required if</i> the
            campaign's funding model is Cost Per Click (CPC).</p><p>Create an ad group
            using the <a href="/api-docs/sell/marketing/resources/adgroup/methods/createAdGroup">createAdGroup</a>
            method.</p><p>Specify the campaign to associate the ad group with using
            the <b>campaign_id</b> path parameter. </p><span class="tablenote"><b>Note:</b>
            You can call the  <a href="/api-docs/sell/marketing/resources/adgroup/methods/getAdGroups">getAdGroups</a>
            method to retrieve the ad group IDs for a seller.</span>
          type: string
        bidPercentage:
          description: 'The user-defined <b>bid percentage</b> (also known as the
            <i>ad rate</i>) sets the level that eBay increases the visibility in search
            results for the associated listing. The higher the <b>bidPercentage</b>
            value, the more eBay promotes the listing.<br><br><i>Required if</i> the
            campaign''s funding model is Cost Per Sale (CPS).  <br><br>The value specified
            here is also used to calculate the Promoted Listings fee. This percentage
            value is multiplied by the final sales price to determine the fee. <br><br>The
            Promoted Listings fee is determined at the time the transaction completes
            and the seller is assessed the fee only when an item sells through a Promoted
            Listings ad campaign. <br><br>The <b>bidPercentage</b> is a single precision
            value that is guided by the following rules: <ul><li>These values are
            <b>valid</b>:<br>&nbsp;&nbsp;&nbsp;<code>4.1</code>,&nbsp;&nbsp;&nbsp;<code>5.0</code>,
            &nbsp;&nbsp;&nbsp;<code>5.5</code>, ...</li>  <li>These values are <b>not
            valid</b>:<br /> &nbsp;&nbsp;&nbsp;<code>0.01</code>, &nbsp;&nbsp;&nbsp;<code>10.75</code>,
            &nbsp;&nbsp;&nbsp;<code>99.99</code>,<br /> &nbsp;&nbsp;&nbsp;and so on.</li></ul>This
            is default bid percentage for the campaigns using the Cost Per Sale (CPS)
            funding model, and this value will be overridden by any ads in the campaign
            that have their own set bid percentages.<br /><br />If a bid percentage
            is not provided for an ad, eBay uses the default bid percentage of the
            associated campaign.<br /><br /><b>Minimum value:</b> 2.0 <br><b>Maximum
            value:</b> 100.0'
          type: string
        listingId:
          description: A unique eBay-assigned ID for a listing that is generated when
            the listing is created.  <p class="tablenote"><b>Note:</b> This field
            accepts listing IDs, as generated by the Inventory API, and item IDs,
            as used in the eBay Traditional API set (e.g., the Trading and Finding
            APIs).</p>
          type: string
      type: object
      x-apifox-orders:
      - adGroupId
      - bidPercentage
      - listingId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CloneCampaignRequest:
      description: This type defines the fields needed for a clone-campaign request.
      example:
        endDate: endDate
        fundingStrategy:
          adRateStrategy: adRateStrategy
          dynamicAdRatePreferences:
          - adRateAdjustmentPercent: adRateAdjustmentPercent
            adRateCapPercent: adRateCapPercent
          - adRateAdjustmentPercent: adRateAdjustmentPercent
            adRateCapPercent: adRateCapPercent
          fundingModel: fundingModel
          bidPercentage: bidPercentage
        campaignName: campaignName
        startDate: startDate
      properties:
        campaignName:
          description: 'A seller-defined name for the newly-cloned campaign. This
            value must be unique for the seller. <p>You can use any alphanumeric characters
            in the name, except the less than (&lt;) or greater than (&gt;) characters.</p><b>Max
            length: </b>80 characters'
          type: string
        endDate:
          description: The date and time the campaign ends, in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            If this field is omitted, the campaign will have no defined end date,
            and will not end until the seller makes a decision to end the campaign
            with an <a href="/api-docs/sell/marketing/resources/campaign/methods/endCampaign">endCampaign</a>
            call, or if they update the campaign at a later time with an end date.
          type: string
        fundingStrategy:
          $ref: '#/components/schemas/FundingStrategy'
        startDate:
          description: The date and time the cloned campaign starts, in UTC format
            (<code>yyyy-MM-ddThh:mm:ssZ</code>). For display purposes, convert this
            time into the local time of the seller.  <p>On the date specified, the
            service derives the keywords for each listing in the campaign, creates
            an ad for each listing, and associates each new ad with the campaign.
            The campaign starts after this process is completed. The amount of time
            it takes the service to start the campaign depends on the number of listings
            in the campaign. Call <b>getCampaign</b> to check the status of the campaign.</p>
          type: string
      type: object
      x-apifox-orders:
      - campaignName
      - endDate
      - fundingStrategy
      - startDate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CouponConfiguration:
      description: This container defines a coded coupon promotion. It is required
        if the promotion type is CODED_COUPON.
      example:
        maxCouponRedemptionPerUser: 0
        couponType: couponType
        couponCode: couponCode
      properties:
        couponCode:
          description: A unique code that buyers can use during checkout to receive
            a discount. The code must be unique across eBay. <br><br>The code must
            be from 8-15 alphanumeric characters and can contain no more than two
            dashes ( - ).<br><br>This is required when the promotion type is CODED_COUPON.
          type: string
        couponType:
          description: This indicates the type of Coded Coupon promotion, and is required
            when the promotion type is <b>CODED_COUPON</b>.<br><br>Supported types:<ul><li><b>PRIVATE_SINGLE_SELLER_COUPON:</b>
            Anyone can use and share the coupon code, but it isn't posted on eBay.</li><li><b>PUBLIC_SINGLE_SELLER_COUPON:</b>
            Anyone can find the coupon code on eBay and use it.</li></ul> For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:CouponTypeEnum'>eBay
            API documentation</a>
          type: string
        maxCouponRedemptionPerUser:
          description: This sets the limit on the number of times a buyer can use
            this coupon. The range of values is 1-10. If no value is provided, a buyer
            can use the coupon an unlimited number of times.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - couponCode
      - couponType
      - maxCouponRedemptionPerUser
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateAdGroupRequest:
      description: A type that defines the fields for the <b>CreateAdGroup</b> request.
      example:
        name: name
        defaultBid:
          currency: currency
          value: value
      properties:
        defaultBid:
          $ref: '#/components/schemas/Amount'
        name:
          description: The seller-defined name of the ad group.
          type: string
      type: object
      x-apifox-orders:
      - defaultBid
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CampaignBudget:
      description: A type that defines the budget details for a Cost Per Click (CPC)
        Promoted Listings campaign.
      example:
        daily:
          amount:
            currency: currency
            value: value
          budgetStatus: budgetStatus
      properties:
        daily:
          $ref: '#/components/schemas/Budget'
      type: object
      x-apifox-orders:
      - daily
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Campaign:
      description: This type defines the fields that describe an ad campaign.
      example:
        alerts:
        - alertType: alertType
          details:
          - aspect:
              value: value
              key: key
            dimension:
              name: name
              dimensionKey: dimensionKey
              value: value
          - aspect:
              value: value
              key: key
            dimension:
              name: name
              dimensionKey: dimensionKey
              value: value
        - alertType: alertType
          details:
          - aspect:
              value: value
              key: key
            dimension:
              name: name
              dimensionKey: dimensionKey
              value: value
          - aspect:
              value: value
              key: key
            dimension:
              name: name
              dimensionKey: dimensionKey
              value: value
        marketplaceId: marketplaceId
        campaignCriterion:
          criterionType: criterionType
          autoSelectFutureInventory: true
          selectionRules:
          - categoryIds:
            - categoryIds
            - categoryIds
            brands:
            - brands
            - brands
            categoryScope: categoryScope
            minPrice:
              currency: currency
              value: value
            maxPrice:
              currency: currency
              value: value
            listingConditionIds:
            - listingConditionIds
            - listingConditionIds
          - categoryIds:
            - categoryIds
            - categoryIds
            brands:
            - brands
            - brands
            categoryScope: categoryScope
            minPrice:
              currency: currency
              value: value
            maxPrice:
              currency: currency
              value: value
            listingConditionIds:
            - listingConditionIds
            - listingConditionIds
        endDate: endDate
        campaignId: campaignId
        campaignStatus: campaignStatus
        fundingStrategy:
          adRateStrategy: adRateStrategy
          dynamicAdRatePreferences:
          - adRateAdjustmentPercent: adRateAdjustmentPercent
            adRateCapPercent: adRateCapPercent
          - adRateAdjustmentPercent: adRateAdjustmentPercent
            adRateCapPercent: adRateCapPercent
          fundingModel: fundingModel
          bidPercentage: bidPercentage
        campaignName: campaignName
        startDate: startDate
        budget:
          daily:
            amount:
              currency: currency
              value: value
            budgetStatus: budgetStatus
      properties:
        alerts:
          description: This array contains alert messages for the campaign.
          items:
            $ref: '#/components/schemas/Alert'
          type: array
        budget:
          $ref: '#/components/schemas/CampaignBudget'
        campaignCriterion:
          $ref: '#/components/schemas/CampaignCriterion'
        campaignId:
          description: A unique eBay-assigned ID for a campaign. This ID is generated
            when a campaign is created.
          type: string
        campaignName:
          description: 'A seller-defined name for the campaign. This value must be
            unique for the seller. <p>You can use any alphanumeric characters in the
            name, except the less than (&lt;) or greater than (&gt;) characters.</p><b>Max
            length: </b>80 characters'
          type: string
        campaignStatus:
          description: Indicates the status of the campaign, such as <code>RUNNING</code>,
            <code>PAUSED</code>, and <code>ENDED</code>. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:CampaignStatusEnum'>eBay
            API documentation</a>
          type: string
        endDate:
          description: The date and time the campaign ends, in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            If this field is omitted, the campaign will have no defined end date,
            and will not end until the seller makes a decision to end the campaign
            with an <a href="/api-docs/sell/marketing/resources/campaign/methods/endCampaign">endCampaign</a>
            call, or if they update the campaign at a later time with an end date.
          type: string
        fundingStrategy:
          $ref: '#/components/schemas/FundingStrategy'
        marketplaceId:
          description: The ID of the eBay marketplace where the campaign is hosted.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        startDate:
          description: The date and time the campaign starts, in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>).
            For display purposes, convert this time into the local time of the seller.  <p>On
            the date specified, the service derives the keywords for each listing
            in the campaign, creates an ad for each listing, and associates each new
            ad with the campaign. The campaign starts after this process is completed.
            The amount of time it takes the service to start the campaign depends
            on the number of listings in the campaign. Call <a href="/api-docs/sell/marketing/resources/campaign/methods/getCampaign">getCampaign</a>
            to check the status of the campaign.</p>
          type: string
      type: object
      x-apifox-orders:
      - alerts
      - budget
      - campaignCriterion
      - campaignId
      - campaignName
      - campaignStatus
      - endDate
      - fundingStrategy
      - marketplaceId
      - startDate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CampaignBudgetRequest:
      description: A container for the details of a Promoted Listings campaign that
        uses the Cost Per Click (CPC) funding model.
      example:
        daily:
          amount:
            currency: currency
            value: value
      properties:
        daily:
          $ref: '#/components/schemas/BudgetRequest'
      type: object
      x-apifox-orders:
      - daily
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CampaignCriterion:
      description: This type defines the fields for specifying the criterion (selection
        rule) settings of an ad campaign. If you populate the campaignCriterion object
        in your <b>createCampaign</b> request, ads for the campaign are created by
        rule for the listings that meet the criteria you specify, and these ads are
        associated with the newly created campaign.
      example:
        criterionType: criterionType
        autoSelectFutureInventory: true
        selectionRules:
        - categoryIds:
          - categoryIds
          - categoryIds
          brands:
          - brands
          - brands
          categoryScope: categoryScope
          minPrice:
            currency: currency
            value: value
          maxPrice:
            currency: currency
            value: value
          listingConditionIds:
          - listingConditionIds
          - listingConditionIds
        - categoryIds:
          - categoryIds
          - categoryIds
          brands:
          - brands
          - brands
          categoryScope: categoryScope
          minPrice:
            currency: currency
            value: value
          maxPrice:
            currency: currency
            value: value
          listingConditionIds:
          - listingConditionIds
          - listingConditionIds
      properties:
        autoSelectFutureInventory:
          description: A field used to indicate whether listings shall be automatically
            added to, or removed from, a Promoted Listings campaign based on the rules
            that have been configured for the campaign.<br /><br />If set to <code>true</code>,
            eBay adds all listings matching the campaign criterion to the campaign,
            including any new listings created from the items in a seller's inventory.<br
            /><br /><b>Default:</b> <code>false</code>
          type: boolean
        criterionType:
          description: This enum defines the criterion (selection rule) types. Currently,
            the only criterion type supported is <code>INVENTORY_PARTITION</code>,
            and you must specify this value if you manage your items with the Inventory
            API and you want to include items based on their inventory reference IDs.  <br><br>Do
            not include this field if you manage your listings with Trading API/legacy
            model. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:CriterionTypeEnum'>eBay
            API documentation</a>
          type: string
        selectionRules:
          description: This container shows all of the rules/inclusion filters used
            to add listings to the campaign.
          items:
            $ref: '#/components/schemas/SelectionRule'
          type: array
      type: object
      x-apifox-orders:
      - autoSelectFutureInventory
      - criterionType
      - selectionRules
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CampaignPagedCollectionResponse:
      description: This type defines the fields that paginate the campaigns returned
        by the request. The entire <i>result set</i> consists of 0 or more sequenced
        <i>response pages</i>, where each page consists of 0 or more items from the
        complete result set.
      example:
        next: next
        total: 1
        campaigns:
        - alerts:
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          marketplaceId: marketplaceId
          campaignCriterion:
            criterionType: criterionType
            autoSelectFutureInventory: true
            selectionRules:
            - categoryIds:
              - categoryIds
              - categoryIds
              brands:
              - brands
              - brands
              categoryScope: categoryScope
              minPrice:
                currency: currency
                value: value
              maxPrice:
                currency: currency
                value: value
              listingConditionIds:
              - listingConditionIds
              - listingConditionIds
            - categoryIds:
              - categoryIds
              - categoryIds
              brands:
              - brands
              - brands
              categoryScope: categoryScope
              minPrice:
                currency: currency
                value: value
              maxPrice:
                currency: currency
                value: value
              listingConditionIds:
              - listingConditionIds
              - listingConditionIds
          endDate: endDate
          campaignId: campaignId
          campaignStatus: campaignStatus
          fundingStrategy:
            adRateStrategy: adRateStrategy
            dynamicAdRatePreferences:
            - adRateAdjustmentPercent: adRateAdjustmentPercent
              adRateCapPercent: adRateCapPercent
            - adRateAdjustmentPercent: adRateAdjustmentPercent
              adRateCapPercent: adRateCapPercent
            fundingModel: fundingModel
            bidPercentage: bidPercentage
          campaignName: campaignName
          startDate: startDate
          budget:
            daily:
              amount:
                currency: currency
                value: value
              budgetStatus: budgetStatus
        - alerts:
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          marketplaceId: marketplaceId
          campaignCriterion:
            criterionType: criterionType
            autoSelectFutureInventory: true
            selectionRules:
            - categoryIds:
              - categoryIds
              - categoryIds
              brands:
              - brands
              - brands
              categoryScope: categoryScope
              minPrice:
                currency: currency
                value: value
              maxPrice:
                currency: currency
                value: value
              listingConditionIds:
              - listingConditionIds
              - listingConditionIds
            - categoryIds:
              - categoryIds
              - categoryIds
              brands:
              - brands
              - brands
              categoryScope: categoryScope
              minPrice:
                currency: currency
                value: value
              maxPrice:
                currency: currency
                value: value
              listingConditionIds:
              - listingConditionIds
              - listingConditionIds
          endDate: endDate
          campaignId: campaignId
          campaignStatus: campaignStatus
          fundingStrategy:
            adRateStrategy: adRateStrategy
            dynamicAdRatePreferences:
            - adRateAdjustmentPercent: adRateAdjustmentPercent
              adRateCapPercent: adRateCapPercent
            - adRateAdjustmentPercent: adRateAdjustmentPercent
              adRateCapPercent: adRateCapPercent
            fundingModel: fundingModel
            bidPercentage: bidPercentage
          campaignName: campaignName
          startDate: startDate
          budget:
            daily:
              amount:
                currency: currency
                value: value
              budgetStatus: budgetStatus
        offset: 6
        prev: prev
        limit: 0
        href: href
      properties:
        campaigns:
          description: This array contains all of the seller's campaign that match
            the request criteria.
          items:
            $ref: '#/components/schemas/Campaign'
          type: array
        href:
          description: The URI of the current page of results from the result set.
          type: string
        limit:
          description: The number of items returned on a single page from the result
            set. This value can be set in the request with the <b>limit</b> query
            parameter.
          format: int32
          type: integer
        next:
          description: 'The call URI that can be used to retrieve the next page in
            the result set. This value is returned only if there is an additional
            page of results to display from the result set. <br><br><b>Max length</b>:
            2048'
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            <b>offset</b> query parameter. <p class="tablenote"><strong>Note: </strong>The
            items in a paginated result set use a zero-based list where the first
            item in the list has an offset of <code>0</code>.</p>'
          format: int32
          type: integer
        prev:
          description: 'The call URI that can be used to retrieve the previous page
            in the result set. Basically, all of the request parameters will remain
            the same except the offset value, which will be decreased to retrieve
            the previous page of results. <br><br><b>Max length</b>: 2048'
          type: string
        total:
          description: The total number of campaigns retrieved in the result set.  <br><br>If
            no campaigns are found, this field is returned with a value of <code>0</code>.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - campaigns
      - href
      - limit
      - next
      - offset
      - prev
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Campaigns:
      description: This type contains a list of campaigns.
      example:
        campaigns:
        - alerts:
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          marketplaceId: marketplaceId
          campaignCriterion:
            criterionType: criterionType
            autoSelectFutureInventory: true
            selectionRules:
            - categoryIds:
              - categoryIds
              - categoryIds
              brands:
              - brands
              - brands
              categoryScope: categoryScope
              minPrice:
                currency: currency
                value: value
              maxPrice:
                currency: currency
                value: value
              listingConditionIds:
              - listingConditionIds
              - listingConditionIds
            - categoryIds:
              - categoryIds
              - categoryIds
              brands:
              - brands
              - brands
              categoryScope: categoryScope
              minPrice:
                currency: currency
                value: value
              maxPrice:
                currency: currency
                value: value
              listingConditionIds:
              - listingConditionIds
              - listingConditionIds
          endDate: endDate
          campaignId: campaignId
          campaignStatus: campaignStatus
          fundingStrategy:
            adRateStrategy: adRateStrategy
            dynamicAdRatePreferences:
            - adRateAdjustmentPercent: adRateAdjustmentPercent
              adRateCapPercent: adRateCapPercent
            - adRateAdjustmentPercent: adRateAdjustmentPercent
              adRateCapPercent: adRateCapPercent
            fundingModel: fundingModel
            bidPercentage: bidPercentage
          campaignName: campaignName
          startDate: startDate
          budget:
            daily:
              amount:
                currency: currency
                value: value
              budgetStatus: budgetStatus
        - alerts:
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          marketplaceId: marketplaceId
          campaignCriterion:
            criterionType: criterionType
            autoSelectFutureInventory: true
            selectionRules:
            - categoryIds:
              - categoryIds
              - categoryIds
              brands:
              - brands
              - brands
              categoryScope: categoryScope
              minPrice:
                currency: currency
                value: value
              maxPrice:
                currency: currency
                value: value
              listingConditionIds:
              - listingConditionIds
              - listingConditionIds
            - categoryIds:
              - categoryIds
              - categoryIds
              brands:
              - brands
              - brands
              categoryScope: categoryScope
              minPrice:
                currency: currency
                value: value
              maxPrice:
                currency: currency
                value: value
              listingConditionIds:
              - listingConditionIds
              - listingConditionIds
          endDate: endDate
          campaignId: campaignId
          campaignStatus: campaignStatus
          fundingStrategy:
            adRateStrategy: adRateStrategy
            dynamicAdRatePreferences:
            - adRateAdjustmentPercent: adRateAdjustmentPercent
              adRateCapPercent: adRateCapPercent
            - adRateAdjustmentPercent: adRateAdjustmentPercent
              adRateCapPercent: adRateCapPercent
            fundingModel: fundingModel
            bidPercentage: bidPercentage
          campaignName: campaignName
          startDate: startDate
          budget:
            daily:
              amount:
                currency: currency
                value: value
              budgetStatus: budgetStatus
      properties:
        campaigns:
          description: This is an array of one or campaigns that match the listing
            or inventory item group specified in the request.
          items:
            $ref: '#/components/schemas/Campaign'
          type: array
      type: object
      x-apifox-orders:
      - campaigns
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkUpdateNegativeKeywordResponse:
      description: A type that defines the fields for the <b>BulkUpdateNegativeKeyword</b>
        response.
      example:
        responses:
        - negativeKeywordId: negativeKeywordId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - negativeKeywordId: negativeKeywordId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: A list of negative keywords that have been processed from the
            bulk request.
          items:
            $ref: '#/components/schemas/UpdateNegativeKeywordResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkUpdateNegativeKeywordRequest:
      description: A type that defines the fields for the <b>BulkUpdateNegativeKeyword</b>
        request.
      example:
        requests:
        - negativeKeywordStatus: negativeKeywordStatus
          negativeKeywordId: negativeKeywordId
        - negativeKeywordStatus: negativeKeywordStatus
          negativeKeywordId: negativeKeywordId
      properties:
        requests:
          description: An array to update the statuses of one or more existing negative
            keywords.
          items:
            $ref: '#/components/schemas/UpdateNegativeKeywordIdRequest'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkUpdateKeywordResponse:
      description: A type that defines the fields for the <b>BulkUpdateKeyword</b>
        response.
      example:
        responses:
        - keywordId: keywordId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - keywordId: keywordId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: A list of keywords that have been processed from the bulk request.
          items:
            $ref: '#/components/schemas/UpdateKeywordResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkCreateKeywordResponse:
      description: A type that contains the response fields for the bulk request to
        create keywords.
      example:
        responses:
        - keywordId: keywordId
          matchType: matchType
          href: href
          adGroupId: adGroupId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          keywordText: keywordText
          statusCode: 0
        - keywordId: keywordId
          matchType: matchType
          href: href
          adGroupId: adGroupId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          keywordText: keywordText
          statusCode: 0
      properties:
        responses:
          description: A list of keywords that have been processed by the request.
          items:
            $ref: '#/components/schemas/KeywordResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkUpdateKeywordRequest:
      description: A type that defines the fields for the <b>BulkUpdateKeyword</b>
        request.
      example:
        requests:
        - keywordId: keywordId
          keywordStatus: keywordStatus
          bid:
            currency: currency
            value: value
        - keywordId: keywordId
          keywordStatus: keywordStatus
          bid:
            currency: currency
            value: value
      properties:
        requests:
          description: Use this array to update the bid values and/or statuses of
            one or more existing keywords.
          items:
            $ref: '#/components/schemas/UpdateKeywordByKeywordIdRequest'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkUpdateAdsByInventoryReferenceResponse:
      description: A type that defines the fields for the <b>BulkUpdateAdStatusByInventoryReference</b>
        response.
      example:
        responses:
        - ads:
          - adId: adId
            href: href
          - adId: adId
            href: href
          inventoryReferenceId: inventoryReferenceId
          inventoryReferenceType: inventoryReferenceType
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - ads:
          - adId: adId
            href: href
          - adId: adId
            href: href
          inventoryReferenceId: inventoryReferenceId
          inventoryReferenceType: inventoryReferenceType
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: A list of inventory references that were processed from the
            request.
          items:
            $ref: '#/components/schemas/UpdateAdsByInventoryReferenceResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkDeleteAdsByInventoryReferenceResponse:
      description: This type defines a container that lists the ads that <b>bulkDeleteAdsByInventoryReference</b>
        deleted.
      example:
        responses:
        - adIds:
          - adIds
          - adIds
          inventoryReferenceId: inventoryReferenceId
          inventoryReferenceType: inventoryReferenceType
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - adIds:
          - adIds
          - adIds
          inventoryReferenceId: inventoryReferenceId
          inventoryReferenceType: inventoryReferenceType
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: An array of the ads that were deleted by the <b>bulkDeleteAdsByInventoryReference</b>
            request, including information associated with each individual delete
            request.
          items:
            $ref: '#/components/schemas/DeleteAdsByInventoryReferenceResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkCreateNegativeKeywordResponse:
      description: A type that contains the response fields for the bulk request to
        create negative keywords.
      example:
        responses:
        - negativeKeywordText: negativeKeywordText
          campaignId: campaignId
          negativeKeywordMatchType: negativeKeywordMatchType
          href: href
          negativeKeywordId: negativeKeywordId
          adGroupId: adGroupId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - negativeKeywordText: negativeKeywordText
          campaignId: campaignId
          negativeKeywordMatchType: negativeKeywordMatchType
          href: href
          negativeKeywordId: negativeKeywordId
          adGroupId: adGroupId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: A list of negative keywords that have been processed by the
            request.
          items:
            $ref: '#/components/schemas/NegativeKeywordResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkUpdateAdStatusByListingIdRequest:
      description: A type that defines the fields for the <b>BulkUpdateAdStatusByListingId</b>
        request.
      example:
        requests:
        - adStatus: adStatus
          listingId: listingId
          adGroupId: adGroupId
        - adStatus: adStatus
          listingId: listingId
          adGroupId: adGroupId
      properties:
        requests:
          description: An array of listing IDs and bid percentages.
          items:
            $ref: '#/components/schemas/UpdateAdStatusByListingIdRequest'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkDeleteAdResponse:
      description: This type defines a container that lists the ads that <b>bulkDeleteAdsByListingId</b>
        deleted.
      example:
        responses:
        - adId: adId
          listingId: listingId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - adId: adId
          listingId: listingId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: An array of the ads that were deleted by the <b>bulkDeleteAdsByListingId</b>
            request, including information associated with each individual delete
            request.
          items:
            $ref: '#/components/schemas/DeleteAdResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkCreateNegativeKeywordRequest:
      description: A type that contains the fields for the bulk request to create
        negative keywords.
      example:
        requests:
        - negativeKeywordText: negativeKeywordText
          campaignId: campaignId
          negativeKeywordMatchType: negativeKeywordMatchType
          adGroupId: adGroupId
        - negativeKeywordText: negativeKeywordText
          campaignId: campaignId
          negativeKeywordMatchType: negativeKeywordMatchType
          adGroupId: adGroupId
      properties:
        requests:
          description: This array is used to pass in multiple negative keywords for
            one or more ad groups that belong to a campaign that uses the Cost Per
            Click (CPC) funding model.
          items:
            $ref: '#/components/schemas/CreateNegativeKeywordRequest'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkUpdateAdStatusRequest:
      description: A type that defines the fields for the <b>BulkUpdateAdStatus</b>
        request.
      example:
        requests:
        - adId: adId
          adStatus: adStatus
        - adId: adId
          adStatus: adStatus
      properties:
        requests:
          description: An array of listing IDs and bid percentages.
          items:
            $ref: '#/components/schemas/UpdateAdStatusRequest'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkDeleteAdsByInventoryReferenceRequest:
      description: This type defines the request fields that <b>bulkDeleteAdsByInventoryReference</b>
        uses to delete ads in bulk.
      example:
        requests:
        - inventoryReferenceId: inventoryReferenceId
          inventoryReferenceType: inventoryReferenceType
        - inventoryReferenceId: inventoryReferenceId
          inventoryReferenceType: inventoryReferenceType
      properties:
        requests:
          description: A list of inventory referenceID and inventory reference type
            pairs that specify the set of ads to remove in bulk.
          items:
            $ref: '#/components/schemas/DeleteAdsByInventoryReferenceRequest'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkDeleteAdRequest:
      description: This type defines the fields that the call uses to remove ads in
        bulk.
      example:
        requests:
        - listingId: listingId
        - listingId: listingId
      properties:
        requests:
          description: An array of the listing IDs that identify the ads to remove.
          items:
            $ref: '#/components/schemas/DeleteAdRequest'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkCreateKeywordRequest:
      description: A type that contains the fields for the bulk request to create
        keywords.
      example:
        requests:
        - matchType: matchType
          bid:
            currency: currency
            value: value
          adGroupId: adGroupId
          keywordText: keywordText
        - matchType: matchType
          bid:
            currency: currency
            value: value
          adGroupId: adGroupId
          keywordText: keywordText
      properties:
        requests:
          description: This array is used to pass in multiple keywords for one or
            more ad groups that belong to a campaign that uses the Cost Per Click
            (CPC) funding model. Up to {max value} keywords can be created with one
            call.
          items:
            $ref: '#/components/schemas/CreateKeywordRequest'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkAdUpdateStatusByListingIdResponse:
      description: A type that defines the fields for the updated ad status in the
        bulk response.
      example:
        responses:
        - href: href
          listingId: listingId
          adGroupId: adGroupId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - href: href
          listingId: listingId
          adGroupId: adGroupId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: An array of processed ad listings in bulk.
          items:
            $ref: '#/components/schemas/AdUpdateStatusByListingIdResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkCreateAdsByInventoryReferenceResponse:
      description: This type defines the response fields used by the <b>bulkCreateAdsByInventoryReference</b>
        method.
      example:
        responses:
        - ads:
          - adId: adId
            href: href
          - adId: adId
            href: href
          inventoryReferenceId: inventoryReferenceId
          inventoryReferenceType: inventoryReferenceType
          adGroupId: adGroupId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - ads:
          - adId: adId
            href: href
          - adId: adId
            href: href
          inventoryReferenceId: inventoryReferenceId
          inventoryReferenceType: inventoryReferenceType
          adGroupId: adGroupId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: This array displays the list of ads that were successfully
            created. For any ads that were not created successfully, the errors array
            may provide more detail about why creation of one or more ads failed.
          items:
            $ref: '#/components/schemas/CreateAdsByInventoryReferenceResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkAdUpdateResponse:
      description: A type that defines the fields for updated ads in the bulk response.
      example:
        responses:
        - adId: adId
          href: href
          listingId: listingId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - adId: adId
          href: href
          listingId: listingId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: A set of ad listings processed by the call.
          items:
            $ref: '#/components/schemas/AdUpdateResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkCreateAdsByInventoryReferenceRequest:
      description: This type defines the fields used to create ads in bulk by inventory
        reference IDs.
      example:
        requests:
        - inventoryReferenceId: inventoryReferenceId
          inventoryReferenceType: inventoryReferenceType
          bidPercentage: bidPercentage
          adGroupId: adGroupId
        - inventoryReferenceId: inventoryReferenceId
          inventoryReferenceType: inventoryReferenceType
          bidPercentage: bidPercentage
          adGroupId: adGroupId
      properties:
        requests:
          description: A list of inventory reference ID and inventory reference type
            pairs, and the bid percentage, which the call uses to create ads in bulk.
          items:
            $ref: '#/components/schemas/CreateAdsByInventoryReferenceRequest'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkCreateAdRequest:
      description: This type defines the fields for the create ads in bulk by listing
        IDs.
      example:
        requests:
        - listingId: listingId
          bidPercentage: bidPercentage
          adGroupId: adGroupId
        - listingId: listingId
          bidPercentage: bidPercentage
          adGroupId: adGroupId
      properties:
        requests:
          description: 'An array of listing IDs and their associated bid percentages,
            which the request uses to create ads in bulk. This request accepts both
            listing IDs, as generated by the Inventory API, and an item IDs, as used
            in the eBay Traditional API set (e.g., the Trading and Finding APIs).  <br><br><b>Maximum:
            </b> 500 IDs per call'
          items:
            $ref: '#/components/schemas/CreateAdRequest'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkAdUpdateStatusResponse:
      description: A type that defines the fields for the updated ad status in the
        bulk response.
      example:
        responses:
        - adId: adId
          href: href
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - adId: adId
          href: href
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: An array of processed ad listings in bulk.
          items:
            $ref: '#/components/schemas/AdUpdateStatusResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BudgetRequest:
      description: A container for the budget details of a Promoted Listings campaign
        that uses the Cost Per Click (CPC) funding model.<br /><br /><span class="tablenote"><b>Note:</b>
        This container will only be returned for campaigns using the CPC funding model;
        it does not apply to the Cost Per Sale (CPS) funding model.</span>
      example:
        amount:
          currency: currency
          value: value
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - amount
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkAdResponse:
      description: This type defines the fields for the create ads in bulk response.
      example:
        responses:
        - adId: adId
          href: href
          listingId: listingId
          adGroupId: adGroupId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - adId: adId
          href: href
          listingId: listingId
          adGroupId: adGroupId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: This array displays the list of ads that were successfully
            created. For any ads that were not created successfully, the errors array
            may provide more detail about why creation of one or more ads failed.
          items:
            $ref: '#/components/schemas/AdResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Budget:
      description: A container for the budget details of a Promoted Listings campaign
        that uses the Cost Per Click (CPC) funding model.<br /><br /><span class="tablenote"><b>Note:</b>
        This container will only be returned for campaigns using the CPC funding model;
        it does not apply to the Cost Per Sale (CPS) funding model.</span>
      example:
        amount:
          currency: currency
          value: value
        budgetStatus: budgetStatus
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        budgetStatus:
          description: The budget status for a CPC Promoted Listings campaign. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:BudgetStatusEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - amount
      - budgetStatus
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AlertDetails:
      description: A type that contains the alert detail fields.
      example:
        aspect:
          value: value
          key: key
        dimension:
          name: name
          dimensionKey: dimensionKey
          value: value
      properties:
        dimension:
          $ref: '#/components/schemas/Dimension'
        aspect:
          $ref: '#/components/schemas/Aspect'
      type: object
      x-apifox-orders:
      - dimension
      - aspect
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdditionalInfoData:
      description: A type that defines the data produced for additional information
        about suggested keywords.
      example:
        metricKey: metricKey
        value: value
      properties:
        metricKey:
          description: The metric used to provide additional information for the suggested
            keyword.<br /><br /><strong>Valid Values:</strong> <ul><li><code>ACTIVE_SELLER_COUNT</code></li><li><code>SEARCH_VOLUME</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MetricEnum'>eBay
            API documentation</a>
          type: string
        value:
          description: The data provided for the specified metric.<br /><br /><span
            class="tablenote"><span style="color:#004680"><strong>Note:</strong></span>
            All metric data is compiled for the marketplace associated with the specified
            campaign ID.</span>
          type: string
      type: object
      x-apifox-orders:
      - metricKey
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Alert:
      description: A type that contains the alert message fields for the ad.
      example:
        alertType: alertType
        details:
        - aspect:
            value: value
            key: key
          dimension:
            name: name
            dimensionKey: dimensionKey
            value: value
        - aspect:
            value: value
            key: key
          dimension:
            name: name
            dimensionKey: dimensionKey
            value: value
      properties:
        alertType:
          description: The type of alert message. For example, an invalid bid percentage.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AlertTypeEnum'>eBay
            API documentation</a>
          type: string
        details:
          description: A description of the alert including dimensions and aspects.
          items:
            $ref: '#/components/schemas/AlertDetails'
          type: array
      type: object
      x-apifox-orders:
      - alertType
      - details
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Aspect:
      description: A type that contains the aspect fields.
      example:
        value: value
        key: key
      properties:
        key:
          description: The type of the aspect. For example, <code>MINIMUM_REQUIRED</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AspectKeyEnum'>eBay
            API documentation</a>
          type: string
        value:
          description: The value of the aspect. For example, if the aspect is a percentage,
            a value of '2.0' would equal 2%.
          type: string
      type: object
      x-apifox-orders:
      - key
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Ads:
      description: This type defines the container for an array of ads.
      example:
        ads:
        - alerts:
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          adId: adId
          inventoryReferenceId: inventoryReferenceId
          adStatus: adStatus
          inventoryReferenceType: inventoryReferenceType
          listingId: listingId
          bidPercentage: bidPercentage
          adGroupId: adGroupId
        - alerts:
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          adId: adId
          inventoryReferenceId: inventoryReferenceId
          adStatus: adStatus
          inventoryReferenceType: inventoryReferenceType
          listingId: listingId
          bidPercentage: bidPercentage
          adGroupId: adGroupId
      properties:
        ads:
          description: A list of ad IDs. An ad ID is generated for each successfully
            created ad.
          items:
            $ref: '#/components/schemas/Ad'
          type: array
      type: object
      x-apifox-orders:
      - ads
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdResponse:
      description: This type defines the fields returned in an ad response.
      example:
        adId: adId
        href: href
        listingId: listingId
        adGroupId: adGroupId
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        adGroupId:
          description: A unique eBay-assigned ID for an ad group in a Promoted Listings
            Advanced (PLA) campaign that uses the Cost Per Click (CPC) funding model.<span
            class="tablenote"><b>Note:</b> This field will always be returned for  campaigns
            that use the CPC funding model. It will not be returned for campaigns
            that use the Cost Per Sale (CPS) funding model.</span>
          type: string
        adId:
          description: A unique eBay-assigned ID for an ad. This ID is generated when
            an ad is created.<span class="tablenote"><b>Note:</b>This field is only
            returned when an ad is successfully created for the corresponding listing.</span>
          type: string
        errors:
          description: An array of errors associated with the request.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        href:
          description: The getAd URI that points to the ad.<span class="tablenote"><b>Note:</b>This
            field is only returned when an ad is successfully created for the corresponding
            listing.</span>
          type: string
        listingId:
          description: A unique eBay-assigned ID for a listing that is generated when
            the listing is created.
          type: string
        statusCode:
          description: An HTTP status code indicating if the corresponding ad was
            successfully created or not. <code>200 Successful</code> should be returned
            for successfully created ads.<span class="tablenote"><b>Note:</b>A status
            code is returned for each ad that the seller creates, or attempts to create.</span>
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - adGroupId
      - adId
      - errors
      - href
      - listingId
      - statusCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdUpdateStatusResponse:
      description: A type that contains the fields for the ad update status response.
      example:
        adId: adId
        href: href
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        adId:
          description: A unique eBay-assigned ID that is generated when the ad is
            created.
          type: string
        errors:
          description: A list of errors associated with the specified listing ID.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        href:
          description: The URI for the ad, which can be used to retrieve the ad.
          type: string
        statusCode:
          description: An HTTP status code that indicates the response-status of the
            request.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - adId
      - errors
      - href
      - statusCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdUpdateResponse:
      description: A type that contains the fields for the ad update response.
      example:
        adId: adId
        href: href
        listingId: listingId
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        adId:
          description: A unique eBay-assigned ID that is generated when the ad is
            created.
          type: string
        errors:
          description: A list of errors associated with the specified listing ID.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        href:
          description: The URI for the ad, which can be used to retrieve the ad.
          type: string
        listingId:
          description: A unique eBay-assigned ID that is generated when the listing
            is created.
          type: string
        statusCode:
          description: An HTTP status code that indicates the response-status of the
            request.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - adId
      - errors
      - href
      - listingId
      - statusCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdditionalInfo:
      description: A type that provides additional information for suggested keywords.
      example:
        infoType: infoType
        metrics:
        - metricKey: metricKey
          value: value
        - metricKey: metricKey
          value: value
      properties:
        infoType:
          description: The type of additional information provided for the suggested
            keyword.<br /><br /><strong>Valid Value:</strong> <code>KEYWORD_INSIGHTS</code>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AdditionalInfoEnum'>eBay
            API documentation</a>
          type: string
        metrics:
          description: A list of additional data provided for the suggested keyword.
          items:
            $ref: '#/components/schemas/AdditionalInfoData'
          type: array
      type: object
      x-apifox-orders:
      - infoType
      - metrics
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdUpdateStatusByListingIdResponse:
      description: A type that contains the fields for the ad update status by listing
        ID response.
      example:
        href: href
        listingId: listingId
        adGroupId: adGroupId
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        adGroupId:
          description: A unique eBay-assigned ID for an ad group in a campaign that
            uses the Cost Per Click (CPC) funding model.
          type: string
        errors:
          description: A list of errors associated with the specified listing ID.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        href:
          description: The URI for the ad, which can be used to retrieve the ad.
          type: string
        listingId:
          description: A unique eBay-assigned ID that is generated when the listing
            is created.
          type: string
        statusCode:
          description: An HTTP status code that indicates the response-status of the
            request.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - adGroupId
      - errors
      - href
      - listingId
      - statusCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdIds:
      description: This type is a container for a list of ad IDs.
      example:
        adIds:
        - adIds
        - adIds
      properties:
        adIds:
          description: A list of ad IDs. Only one ad can be deleted per operation
            and only one adId value will be returned.
          items:
            type: string
          type: array
      type: object
      x-apifox-orders:
      - adIds
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdReference:
      description: This type defines the fields for an ad ID and its associated URL.
      example:
        adId: adId
        href: href
      properties:
        adId:
          description: A unique eBay-assigned ID for an ad. This ID is generated when
            an ad is created.
          type: string
        href:
          description: The getAd URI of an ad. You can use this URI to retrieve the
            ad.
          type: string
      type: object
      x-apifox-orders:
      - adId
      - href
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdReferences:
      description: This type is a container for a list of ad IDs and their associated
        URIs.
      example:
        ads:
        - adId: adId
          href: href
        - adId: adId
          href: href
      properties:
        ads:
          description: A list of ad IDs. An ad ID is generated for each successfully
            created ad. Only one ad can be created per operation.
          items:
            $ref: '#/components/schemas/AdReference'
          type: array
      type: object
      x-apifox-orders:
      - ads
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdPagedCollectionResponse:
      description: This type defines the fields that paginate the ads returned by
        the request. The entire <i>result set</i> consists of 0 or more sequenced
        <i>response pages</i>, where each page consists of 0 or more items from the
        complete result set.
      example:
        next: next
        ads:
        - alerts:
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          adId: adId
          inventoryReferenceId: inventoryReferenceId
          adStatus: adStatus
          inventoryReferenceType: inventoryReferenceType
          listingId: listingId
          bidPercentage: bidPercentage
          adGroupId: adGroupId
        - alerts:
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          - alertType: alertType
            details:
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
            - aspect:
                value: value
                key: key
              dimension:
                name: name
                dimensionKey: dimensionKey
                value: value
          adId: adId
          inventoryReferenceId: inventoryReferenceId
          adStatus: adStatus
          inventoryReferenceType: inventoryReferenceType
          listingId: listingId
          bidPercentage: bidPercentage
          adGroupId: adGroupId
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
      properties:
        ads:
          description: The list of ads that matched the request criteria.
          items:
            $ref: '#/components/schemas/Ad'
          type: array
        href:
          description: The URI of the current page of results from the result set.
          type: string
        limit:
          description: 'The number of items returned on a single page from the result
            set. This value can be set in the request with the <b>limit</b> query
            parameter.<p><b>Default</b>: <code>10</code>'
          format: int32
          type: integer
        next:
          description: 'The call URI that can be used to retrieve the next page in
            the result set. Basically, all of the request parameters will remain the
            same except the offset value, which will be increased to retrieve the
            next page of results. <br><br><b>Max length</b>: 2048'
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first result on the current page. This value can be set in the request
            with the <b>offset</b> query parameter. If the <b>offset</b> value is
            not set, it defaults to zero.<p><b>Default</b>: <code>0</code></p><p class="tablenote"><strong>Note:
            </strong>The items in a paginated result set use a zero-based list where
            the first item in the list has an offset of <code>0</code>.</p>'
          format: int32
          type: integer
        prev:
          description: 'The call URI that can be used to retrieve the previous page
            in the result set. Basically, all of the request parameters will remain
            the same except the offset value, which will be decreased to retrieve
            the previous page of results. <br><br><b>Max length</b>: 2048'
          type: string
        total:
          description: The total number of items retrieved in the result set.  <br><br>If
            no items are found, this field is returned with a value of <code>0</code>.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - ads
      - href
      - limit
      - next
      - offset
      - prev
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdGroupPagedCollectionResponse:
      description: A container for the details of a paged collection of ad groups.<br
        /><br /><span class="tablenote"><b>Note:</b> This type only applies to the
        Cost Per Click (CPC) funding model; it does not apply to the Cost Per Sale
        (CPS) funding model.</span>
      example:
        next: next
        total: 1
        adGroups:
        - adGroupStatus: adGroupStatus
          name: name
          adGroupId: adGroupId
          defaultBid:
            currency: currency
            value: value
        - adGroupStatus: adGroupStatus
          name: name
          adGroupId: adGroupId
          defaultBid:
            currency: currency
            value: value
        offset: 6
        prev: prev
        limit: 0
        href: href
      properties:
        adGroups:
          description: The details of existing ad groups, such as the name, ID, and
            status of the ad groups.
          items:
            $ref: '#/components/schemas/AdGroup'
          type: array
        href:
          description: The URI of the current page of results from the result set.
          type: string
        limit:
          description: The number of items returned on a single page from the result
            set. This value can be set in the request with the <b>limit</b> query
            parameter.
          format: int32
          type: integer
        next:
          description: The call URI that can be used to retrieve the next page in
            the result set. This value is returned only if there is an additional
            page of results to display from the result set.
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            <b>offset</b> query parameter. <p><b>Default:</b> 0</p><br><span class="tablenote"><b>Note:
            </b>The items in a paginated result set use a zero-based list, where the
            first item in the list has an offset of <code>0</code>.</span>'
          format: int32
          type: integer
        prev:
          description: The call URI that can be used to retrieve the previous page
            in the result set. Basically, all of the request parameters will remain
            the same except the offset value, which will be decreased to retrieve
            the previous page of results.
          type: string
        total:
          description: 'The total number of items retrieved in the result set.<br
            /><br /><span class="tablenote"><b>Note: </b>If no items are found, this
            field is returned with a value of <code>0</code>.</span>'
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - adGroups
      - href
      - limit
      - next
      - offset
      - prev
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Ad:
      description: A type that defines the fields for an ad.
      example:
        alerts:
        - alertType: alertType
          details:
          - aspect:
              value: value
              key: key
            dimension:
              name: name
              dimensionKey: dimensionKey
              value: value
          - aspect:
              value: value
              key: key
            dimension:
              name: name
              dimensionKey: dimensionKey
              value: value
        - alertType: alertType
          details:
          - aspect:
              value: value
              key: key
            dimension:
              name: name
              dimensionKey: dimensionKey
              value: value
          - aspect:
              value: value
              key: key
            dimension:
              name: name
              dimensionKey: dimensionKey
              value: value
        adId: adId
        inventoryReferenceId: inventoryReferenceId
        adStatus: adStatus
        inventoryReferenceType: inventoryReferenceType
        listingId: listingId
        bidPercentage: bidPercentage
        adGroupId: adGroupId
      properties:
        adGroupId:
          description: A unique eBay-assigned ID for an ad group in a campaign that
            uses the Cost Per Click (CPC) funding model. This ID is created after
            a successful <a href="/api-docs/sell/marketing/resources/adgroup/methods/createAdGroup">createAdGroup</a>
            call, and all ad groups must be associated with a CPC campaign.
          type: string
        adId:
          description: A unique eBay-assigned ID that is generated when the ad is
            created.
          type: string
        adStatus:
          description: The current status of the CPC ad.<br /><br /><b>Valid Values:</b><ul><li><code>ACTIVE</code></li><li><code>PAUSED</code></li><li><code>ARCHIVED</code></li></ul><span
            class="tablenote"><b>Note:</b> This type only applies to the Cost Per
            Click (CPC) funding model; it does not apply to the Cost Per Sale (CPS)
            funding model.</span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AdStatusEnum'>eBay
            API documentation</a>
          type: string
        alerts:
          description: An array containing alert messages for the ad.
          items:
            $ref: '#/components/schemas/Alert'
          type: array
        bidPercentage:
          description: 'The user-defined <b>bid percentage</b> (also known as the
            <i>ad rate</i>) sets the level that eBay increases the visibility in search
            results for the associated listing. The higher the <b>bidPercentage</b>
            value, the more eBay promotes the listing.  <br><br>The value specified
            here is also used to calculate the Promoted Listings fee. This percentage
            value is multiplied by the final sales price to determine the fee. <br><br>The
            Promoted Listings fee is determined at the time the transaction completes
            and the seller is assessed the fee only when an item sells through a Promoted
            Listings ad campaign. <br><br>The <b>bidPercentage</b> is a single precision
            value that is guided by the following rules: <ul><li>These values are
            <b>valid</b>:<br>&nbsp;&nbsp;&nbsp;<code>4.1</code>, &nbsp;&nbsp;&nbsp;<code>5.0</code>,
            &nbsp;&nbsp;&nbsp;<code>5.5</code>, ...</li>  <li>These values are <b>not
            valid</b>:<br /> &nbsp;&nbsp;&nbsp;<code>0.01</code>, &nbsp;&nbsp;&nbsp;<code>10.75</code>,
            &nbsp;&nbsp;&nbsp;<code>99.99</code>,<br /> &nbsp;&nbsp;&nbsp;and so on.</li></ul>This
            is default bid percentage for the campaigns using the Cost Per Sale (CPS)
            funding model, and this value will be overridden by any ads in the campaign
            that have their own set bid percentages.<br /><br />If a bid percentage
            is not provided for an ad, eBay uses the default bid percentage of the
            associated campaign.<br /><br /><span class="tablenote"><b>Note:</b>This
            field will always be returned for campaigns that use the Cost Per Sale
            (CPS) funding model. It will not be returned for campaigns that use the
            Cost Per Click (CPC) funding model.</span><br /><b>Minimum value:</b>
            2.0 <br><b>Maximum value:</b> 100.0'
          type: string
        inventoryReferenceId:
          description: An ID that identifies a single-item listing or multiple-variation
            listing that is managed with the <a href="/api-docs/sell/inventory/resources/methods"
            title="Inventory API Reference">Inventory API</a>. <p>The <i>inventory
            reference ID</i> is a seller-defined value that can be either an <b>SKU</b>
            for a single-item listing or an <b>inventoryItemGroupKey</b> for a multiple-value
            listing.</p>  <p>An <i>inventoryItemGroupKey</i> is a value that the seller
            defines to indicate a listing that's the parent of an inventory item group
            (a multiple-variation listing, such as a listing for a shirt that's available
            in multiple sizes and colors).</p><p>This field is only returned if the
            ad is associated with a SKU or an inventory item group value.</p>
          type: string
        inventoryReferenceType:
          description: The enumeration value returned here indicates the type of listing
            the inventoryReferenceId references. The value returned here will be <code>INVENTORY_ITEM</code>
            for a single-variation listing, or <code>INVENTORY_ITEM_GROUP</code> for
            a multiple-variation listing. <p>This field is only returned if the ad
            is associated with a SKU or an inventory item group value.</p> For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:InventoryReferenceTypeEnum'>eBay
            API documentation</a>
          type: string
        listingId:
          description: A unique eBay-assigned ID that is generated when a listing
            is created.
          type: string
      type: object
      x-apifox-orders:
      - adGroupId
      - adId
      - adStatus
      - alerts
      - bidPercentage
      - inventoryReferenceId
      - inventoryReferenceType
      - listingId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdGroup:
      description: A container for the details of an existing ad group.<br /><br />An
        ad group can be added to a campaign that uses the Cost Per Click (CPC) funding
        model. A campaign may have multiple ad groups. All listings that are promoted
        in the campaign are included in the ad group.<br /><br /><span class="tablenote"><b>Note:</b>
        This type only applies to the CPC funding model; it does not apply to the
        Cost Per Sale (CPS) funding model.</span>
      example:
        adGroupStatus: adGroupStatus
        name: name
        adGroupId: adGroupId
        defaultBid:
          currency: currency
          value: value
      properties:
        adGroupId:
          description: A unique eBay-assigned ID for an ad group in a campaign that
            uses the Cost Per Click (CPC) funding model.
          type: string
        adGroupStatus:
          description: An enumeration value representing the current status of the
            ad group.<br /><br /><b>Valid Values:</b><ul><li><code>ACTIVE</code></li><li><code>PAUSED</code></li><li><code>ARCHIVED</code></li></ul>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AdGroupStatusEnum'>eBay
            API documentation</a>
          type: string
        defaultBid:
          $ref: '#/components/schemas/Amount'
        name:
          description: The seller-defined name of the ad group.
          type: string
      type: object
      x-apifox-orders:
      - adGroupId
      - adGroupStatus
      - defaultBid
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    WithdrawResponse:
      description: The base response of the <strong>withdrawOffer</strong> call.
      example:
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        listingId: listingId
      properties:
        listingId:
          description: The unique identifier of the eBay listing associated with the
            offer that was withdrawn. This field will not be returned if the eBay
            listing was not successfully ended.
          type: string
        warnings:
          description: This container will be returned if there were one or more warnings
            associated with the attempt to withdraw the offer.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - listingId
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    WithdrawByInventoryItemGroupRequest:
      description: This type is used by the base request of the <strong>WithdrawByInventoryItemGroup</strong>
        method, which is used to end a multiple-variation listing.
      example:
        marketplaceId: marketplaceId
        inventoryItemGroupKey: inventoryItemGroupKey
      properties:
        inventoryItemGroupKey:
          description: This is the unique identifier of the inventory item group.
            This identifier is automatically generated by eBay once an inventory item
            group is created. This field is required.
          type: string
        marketplaceId:
          description: This is the unique identifier of the eBay site for which the
            offer will be made available. The marketPlaceId enumeration values are
            found in MarketplaceIdEnum. This field is required. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:MarketplaceEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - inventoryItemGroupKey
      - marketplaceId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Version:
      description: This type is used to show the version number and instance of the
        service or API.
      properties:
        instance:
          $ref: '#/components/schemas/Version'
        version:
          description: The version number of the service or API.
          type: string
      type: object
      x-apifox-orders:
      - instance
      - version
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Specification:
      description: This type is used to specify product aspects for which variations
        within an inventory item group vary, and the order in which they appear in
        the listing. For example, t-shirts in an inventory item group may be available
        in multiple sizes and colors.
      example:
        values:
        - values
        - values
        name: name
      properties:
        name:
          description: 'This is the name of product variation aspect. Typically, for
            clothing, typical aspect names are <code>"Size"</code> and <code>"Color"</code>.
            Product variation aspects are not required immediately upon creating an
            inventory item group, but these aspects will be required before a multiple-variation
            listing containing this inventory item group is published. For each product
            variation aspect that is specified through the <strong>specifications</strong>
            container, one <strong>name</strong> value is required and two or more
            variations of this aspect are required through the <strong>values</strong>
            array.<br/><br/> <span class="tablenote"> <strong>Note:</strong> Each
            member of the inventory item group should have these same aspect names
            specified through the <strong>product.aspects</strong> container when
            the inventory item is created with the <strong>createOrReplaceInventoryItem</strong>
            or <strong>bulkCreateOrReplaceInventoryItem</strong> call. </span><br/><strong>Max
            Length</strong>: 40'
          type: string
        values:
          description: 'This is an array of values pertaining to the corresponding
            product variation aspect (specified in the <strong>name</strong> field).
            Below is a sample of how these values will appear under a <strong>specifications</strong>
            container: <br/> <pre><code>"specifications": [{<br/> "name": "Size",<br/>
            "values": ["Small",<br/> "Medium",<br/> "Large"]<br/> },<br/> { <br/>
            "name": "Color",<br/> "values": ["Blue",<br/> "White",<br/> "Red"] <br/>
            }] </pre></code><span class="tablenote"> <strong>Note:</strong> Each member
            of the inventory item group should have these same aspect names, and each
            individual inventory item should have each variation of the product aspect
            values specified through the <strong>product.aspects</strong> container
            when the inventory item is created with the <strong>createOrReplaceInventoryItem</strong>
            or <strong>bulkCreateOrReplaceInventoryItem</strong> call. </span><br/><strong>Max
            Length</strong>: 50'
          items:
            type: string
          type: array
      type: object
      x-apifox-orders:
      - name
      - values
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ShippingCostOverride:
      description: This type is used if the seller wants to override the shipping
        costs or surcharge associated with a specific domestic or international shipping
        service option defined in the fulfillment listing policy that is being applied
        toward the offer. The shipping-related costs that can be overridden include
        the shipping cost to ship one item, the shipping cost to ship each additional
        item (if multiple quantity are purchased), and the shipping surcharge applied
        to the shipping service option.
      example:
        surcharge:
          currency: currency
          value: value
        shippingServiceType: shippingServiceType
        shippingCost:
          currency: currency
          value: value
        additionalShippingCost:
          currency: currency
          value: value
        priority: 5
      properties:
        additionalShippingCost:
          $ref: '#/components/schemas/Amount'
        priority:
          description: The integer value input into this field, along with the <strong>shippingServiceType</strong>
            value, sets which domestic or international shipping service option in
            the fulfillment policy will be modified with updated shipping costs. Specifically,
            the <strong>shippingCostOverrides.shippingServiceType</strong> value in
            a <strong>createOffer</strong> or <strong>updateOffer</strong> call must
            match the <strong>shippingOptions.optionType</strong> value in a fulfillment
            listing policy, and the <strong>shippingCostOverrides.priority</strong>
            value in a <strong>createOffer</strong> or <strong>updateOffer</strong>
            call must match the <strong>shippingOptions.shippingServices.sortOrderId</strong>
            value in a fulfillment listing policy.<br><br>This field is always required
            when overriding the shipping costs of a shipping service option, and will
            be always be returned for each shipping service option whose costs are
            being overridden.
          format: int32
          type: integer
        shippingCost:
          $ref: '#/components/schemas/Amount'
        shippingServiceType:
          description: This enumerated value indicates whether the shipping service
            specified in the <strong>priority</strong> field is a domestic or an international
            shipping service option. To override the shipping costs for a specific
            domestic shipping service in the fulfillment listing policy, this field
            should be set to <code>DOMESTIC</code>, and to override the shipping costs
            for each international shipping service, this field should be set to <code>INTERNATIONAL</code>.
            This value, along with <strong>priority</strong> value, sets which domestic
            or international shipping service option in the fulfillment policy that
            will be modified with updated shipping costs. Specifically, the <strong>shippingCostOverrides.shippingServiceType</strong>
            value in a <strong>createOffer</strong> or <strong>updateOffer</strong>
            call must match the <strong>shippingOptions.optionType</strong> value
            in a fulfillment listing policy, and the <strong>shippingCostOverrides.priority</strong>
            value in a <strong>createOffer</strong> or <strong>updateOffer</strong>
            call must match the <strong>shippingOptions.shippingServices.sortOrderId</strong>
            value in a fulfillment listing policy.<br><br>This field is always required
            when overriding the shipping costs of a shipping service option, and will
            be always be returned for each shipping service option whose costs are
            being overridden. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:ShippingServiceTypeEnum'>eBay
            API documentation</a>
          type: string
        surcharge:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - additionalShippingCost
      - priority
      - shippingCost
      - shippingServiceType
      - surcharge
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SpecialHours:
      description: This type is used to express the special operating hours of a store
        location on a specific date. A <strong>specialHours</strong> container is
        needed when the store's opening hours on a specific date are different than
        the normal operating hours on that particular day of the week.
      example:
        date: date
        intervals:
        - close: close
          open: open
        - close: close
          open: open
      properties:
        date:
          description: A <strong>date</strong> value is required for each specific
            date that the store location has special operating hours.  <br><br>The
            timestamp is formatted as an <a href="https://www.iso.org/iso-8601-date-and-time-format.html"
            title="https://www.iso.org" target="_blank">ISO 8601</a> string, which
            is based on the 24-hour Coordinated Universal Time (UTC) clock.  <br><br><b>Format:</b>
            <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code> <br><b>Example:</b>
            <code>2018-08-04T07:09:00.000Z</code> <br><br>This field is returned if
            set for the store location.
          type: string
        intervals:
          description: This container is used to define the opening and closing times
            of a store on a specific date (defined in the <strong>date</strong> field).
            An <strong>intervals</strong> container is needed for each specific date
            that the store has special operating hours. These special operating hours
            on the specific date override the normal operating hours for the specific
            day of the week. If a store location closes for lunch (or any other period
            during the day) and then reopens, multiple <strong>open</strong> and <strong>close</strong>
            pairs are needed. <br><br>This container is returned if set for the store
            location.
          items:
            $ref: '#/components/schemas/Interval'
          type: array
      type: object
      x-apifox-orders:
      - date
      - intervals
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    VariesBy:
      description: This type is used to specify the product aspect(s) where individual
        items of the group vary, as well as a list of the available variations of
        those aspects.
      example:
        aspectsImageVariesBy:
        - aspectsImageVariesBy
        - aspectsImageVariesBy
        specifications:
        - values:
          - values
          - values
          name: name
        - values:
          - values
          - values
          name: name
      properties:
        aspectsImageVariesBy:
          description: This container is used if the seller wants to include multiple
            images to demonstrate how variations within a multiple-variation listing
            differ. In this string field, the seller will specify the product aspect
            where the variations of the inventory item group vary, such as color.
            If <code>Color</code> is specified in this field, <code>Color</code> must
            also be one of the <strong>specifications.name</strong> values, and all
            available colors must appear in the corresponding <strong>specifications.values</strong>
            array.<br><br>If the <strong>aspectsImageVariesBy</strong> container is
            used, links to images of each variation should be specified through the
            <strong>imageUrls</strong> container of the inventory item group, or the
            seller can choose to include those links to images in each inventory item
            record for the inventory items in the group.
          items:
            type: string
          type: array
        specifications:
          description: This container consists of an array of one or more product
            aspects where each variation differs, and values for each of those product
            aspects. This container is not immediately required, but will be required
            before the first offer of the inventory item group is published. <br><br>If
            a product aspect is specified in the <strong>aspectsImageVariesBy</strong>
            container, this product aspect (along with all variations of that product
            aspect) must be included in the <strong>specifications</strong> container.
            Before offers related to the inventory item group are published, the product
            aspects and values specified through the <strong>specifications</strong>
            container should be in synch with the name-value pairs specified through
            the <strong>product.aspects</strong> containers of the inventory items
            contained in the group. For example, if <code>Color</code> and <code>Size</code>
            are in this <strong>specifications</strong> container, each inventory
            item of the group should also have <code>Color</code> and <code>Size</code>
            as aspect names in their inventory item records.<br><br/>This container
            is always returned if one or more offers associated with the inventory
            item group have been published. For inventory item groups that have yet
            to have any published offers, this container is only returned if set.
          items:
            $ref: '#/components/schemas/Specification'
          type: array
      type: object
      x-apifox-orders:
      - aspectsImageVariesBy
      - specifications
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ShipToLocationAvailabilityWithAll:
      description: This type is used to specify the total 'ship-to-home' quantity
        of the inventory items that will be available for purchase through one or
        more published offers.
      example:
        quantity: 5
        availabilityDistributions:
        - quantity: 6
          merchantLocationKey: merchantLocationKey
          fulfillmentTime:
            unit: unit
            value: 0
        - quantity: 6
          merchantLocationKey: merchantLocationKey
          fulfillmentTime:
            unit: unit
            value: 0
        allocationByFormat:
          fixedPrice: 1
          auction: 6
      properties:
        allocationByFormat:
          $ref: '#/components/schemas/FormatAllocation'
        availabilityDistributions:
          description: This container is used to set the available quantity of the
            inventory item at one or more warehouse locations.<br /><br /> This container
            will be returned if the available quantity is set for one or more inventory
            locations.
          items:
            $ref: '#/components/schemas/AvailabilityDistribution'
          type: array
        quantity:
          description: This container is used to set the total 'ship-to-home' quantity
            of the inventory item that will be available for purchase through one
            or more published offers. This container is not immediately required,
            but 'ship-to-home' quantity must be set before an offer of the inventory
            item can be published.<br/><br/>If an existing inventory item is being
            updated, and the 'ship-to-home' quantity already exists for the inventory
            item record, this container should be included again, even if the value
            is not changing, or the available quantity data will be lost.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - allocationByFormat
      - availabilityDistributions
      - quantity
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ShipToLocationAvailability:
      description: This type is used to specify the total 'ship-to-home' quantity
        of the inventory item that will be available for purchase through one or more
        published offers.
      example:
        quantity: 1
        availabilityDistributions:
        - quantity: 6
          merchantLocationKey: merchantLocationKey
          fulfillmentTime:
            unit: unit
            value: 0
        - quantity: 6
          merchantLocationKey: merchantLocationKey
          fulfillmentTime:
            unit: unit
            value: 0
      properties:
        availabilityDistributions:
          description: This container is used to set the available quantity of the
            inventory item at one or more warehouse locations.<br><br> This container
            will be returned if available quantity is set for one or more inventory
            locations.
          items:
            $ref: '#/components/schemas/AvailabilityDistribution'
          type: array
        quantity:
          description: This container is used to set the total 'ship-to-home' quantity
            of the inventory item that will be available for purchase through one
            or more published offers. This container is not immediately required,
            but 'ship-to-home' quantity must be set before an offer of the inventory
            item can be published.<br/><br/>If an existing inventory item is being
            updated, and the 'ship-to-home' quantity already exists for the inventory
            item record, this container should be included again, even if the value
            is not changing, or the available quantity data will be lost.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - availabilityDistributions
      - quantity
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PublishResponse:
      description: This type is used by the base response payload of the <strong>publishOffer</strong>
        and <strong>publishOfferByInventoryItemGroup</strong> calls.
      example:
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        listingId: listingId
      properties:
        listingId:
          description: The unique identifier of the newly created eBay listing. This
            field is returned if the single offer (if <strong>publishOffer</strong>
            call was used) or group of offers in an inventory item group (if <strong>publishOfferByInventoryItemGroup</strong>
            call was used) was successfully converted into an eBay listing.
          type: string
        warnings:
          description: This container will contain an array of errors and/or warnings
            if any occur when a <strong>publishOffer</strong> or <strong>publishOfferByInventoryItemGroup</strong>
            call is made.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - listingId
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ProductIdentifier:
      description: This type is used to identify a motor vehicle that is compatible
        with the corresponding inventory item (the SKU that is passed in as part of
        the call URI). The motor vehicle can be identified through an eBay Product
        ID or a K-Type value. The <strong>gtin</strong> field (for inputting Global
        Trade Item Numbers) is for future use only. If a motor vehicle is found in
        the eBay product catalog, the motor vehicle properties (engine, make, model,
        trim, and year) will automatically get picked up for that motor vehicle.<br/><br/><span
        class="tablenote"> <strong>Note:</strong> Currently, parts compatibility is
        only applicable for motor vehicles, but it is possible that the Product Compatibility
        feature is expanded to other (non-vehicle) products in the future.</span>
      example:
        gtin: gtin
        epid: epid
        ktype: ktype
      properties:
        epid:
          description: This field can be used if the seller already knows the eBay
            catalog product ID (ePID) associated with the motor vehicle that is to
            be added to the compatible product list. If this eBay catalog product
            ID is found in the eBay product catalog, the motor vehicle properties
            (e.g. make, model, year, engine, and trim) will automatically get picked
            up for that motor vehicle.
          type: string
        gtin:
          description: This field can be used if the seller knows the Global Trade
            Item Number for the motor vehicle that is to be added to the compatible
            product list. If this GTIN value is found in the eBay product catalog,
            the motor vehicle properties (e.g. make, model, year, engine, and trim
            will automatically get picked up for that motor vehicle.<br/><br/><span
            class="tablenote"> <strong>Note:</strong> This field is for future use.</span>
          type: string
        ktype:
          description: This field can be used if the seller knows the K Type Number
            for the motor vehicle that is to be added to the compatible product list.
            If this K Type value is found in the eBay product catalog, the motor vehicle
            properties (e.g. make, model, year, engine, and trim) will automatically
            get picked up for that motor vehicle. <br/><br/>Only the AU, DE, ES, FR,
            IT, and UK marketplaces support the use of K Type Numbers.
          type: string
      type: object
      x-apifox-orders:
      - epid
      - gtin
      - ktype
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PublishByInventoryItemGroupRequest:
      description: This type is used by the request payload of the <strong>publishByInventoryItemGroup</strong>
        call. The identifier of the inventory item group to publish and the eBay marketplace
        where the listing will be published is needed in the request payload.
      example:
        marketplaceId: marketplaceId
        inventoryItemGroupKey: inventoryItemGroupKey
      properties:
        inventoryItemGroupKey:
          description: This is the unique identifier of the inventory item group.
            All unpublished offers associated with this inventory item group will
            be published as a multiple-variation listing if the <strong>publishByInventoryItemGroup</strong>
            call is successful. The <strong>inventoryItemGroupKey</strong> identifier
            is automatically generated by eBay once an inventory item group is created.<br/><br/>To
            retrieve an <strong>inventoryItemGroupKey</strong> value, you can use
            the <strong>getInventoryItem</strong> call to retrieve an inventory item
            that is known to be in the inventory item group to publish, and then look
            for the inventory item group identifier under the <strong>groupIds</strong>
            container in the response of that call.
          type: string
        marketplaceId:
          description: This is the unique identifier of the eBay site on which the
            multiple-variation listing will be published. The <strong>marketPlaceId</strong>
            enumeration values are found in <strong>MarketplaceIdEnum</strong>. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:MarketplaceEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - inventoryItemGroupKey
      - marketplaceId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Product:
      description: This type is used to define the product details, such as a title,
        a product description, product aspects/item specifics, and links to images
        for the product. Optionally, in a <strong>createOrReplaceInventoryItem</strong>
        call, a seller can pass in an eBay Product Identifier (ePID) or a Global Trade
        Item Number (GTIN) value, such as an EAN, an ISBN, a UPC, to identify a product
        to be matched with a product in the eBay Catalog. The information in this
        type is also returned in the <strong>getInventoryItem</strong>, <strong>getInventoryItems</strong>,
        and <strong>bulkGetInventoryItem</strong> calls if defined.
      example:
        ean:
        - ean
        - ean
        imageUrls:
        - imageUrls
        - imageUrls
        isbn:
        - isbn
        - isbn
        subtitle: subtitle
        aspects: aspects
        description: description
        epid: epid
        upc:
        - upc
        - upc
        mpn: mpn
        title: title
        brand: brand
        videoIds:
        - videoIds
        - videoIds
      properties:
        aspects:
          description: 'This is a collection of item specifics (aka product aspects)
            name-value pairs that provide more information about the product and might
            make it easier for buyers to find. To view required/recommended product
            aspects/item specifics names (and corresponding values) for a specific
            eBay category, sellers can use the <a href="https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/GetCategorySpecifics.html"  target="_blank">GetCategorySpecifics</a>
            call of the Trading API. Alternatively, sellers can view similar items
            on eBay.com in the same category to get an idea of what other sellers
            are using for product aspects/item specifics.<br/><br/>Sellers also have
            the option of specifying an eBay Product ID (ePID) or optionally, a Global
            Trade Item Number (GTIN) through the corresponding fields in the <strong>product</strong>
            container in an attempt to find a product match in the eBay Catalog. If
            a match is found based on the ePID or GTIN value, the product aspects
            that are defined for the eBay Catalog product will automatically get picked
            up by the newly created/updated inventory item. <br/><br/>Below is an
            example of the proper JSON syntax to use when manually inputting item
            specifics. Note that one item specific name, such as ''Features'', can
            have more than one value. If an item specific name has more than one value,
            each value is delimited with a comma.<br/><br/> <pre><code>"aspects":
            {<br/> "Brand": ["GoPro"],<br/> "Storage Type": ["Removable"]<br/> }</code></pre><br/>Note
            that inventory items that will become part of an inventory item group
            and multiple-variation listing should have the same attributes that are
            defined for the inventory item group.<br/><br/>This container will be
            returned if one or more item specific pairs are defined for the inventory
            item.<br/><br/><strong>Max Length for Aspect Name</strong>: 40<br/><br/><strong>Max
            Length for Aspect Value</strong>: 50'
          type: string
        brand:
          description: 'The brand of the product. This field is often paired with
            the <strong>mpn</strong> field to identify a specific product by Manufacture
            Part Number. This field is conditionally required if the eBay category
            requires a Manufacturer Part Number (MPN) value. If eBay is able to find
            a product match in the eBay Catalog when an eBay Product ID (ePID) or
            GTIN value (UPC, ISBN, or EAN) is supplied, all product details of that
            eBay Catalog product is picked up by the inventory item record (including
            brand) if the <strong>createOrReplaceInventoryItem</strong> call is successful.
            <br/><br/>This field is returned if defined for an inventory item. If
            a brand was passed in as an item specific name-value pair through the
            <strong>aspects</strong> array in a <strong>createOrReplaceInventoryItem</strong>
            call, this value is also picked up by the <strong>brand</strong> field.<br/><br/><strong>Max
            Length</strong>: 65'
          type: string
        description:
          description: 'The description of the product. The description of an existing
            inventory item can be added or modified with a <strong>createOrReplaceInventoryItem</strong>
            call. The description of an inventory item is automatically populated
            if the seller specifies an eBay Product ID (ePID) or a Global Trade Item
            Number (GTIN) and eBay is able to find a matching product in the eBay
            Catalog.<br/><br/>Note that this field is optional but recommended. If
            a <strong>listingDescription</strong> field is omitted when creating and
            publishing a single-variation offer, the text in this field will be used
            instead. If neither the <strong>product.description</strong> field for
            the inventory item nor the <strong>listingDescription</strong> field for
            the offer exist, the <strong>publishOffer</strong> call will fail. If
            the inventory item will be part of an inventory item group/multiple-variation
            listing, this field should definitely be used to specify how the corresponding
            product variation is different (e.g. <em>This is the green, extra-large
            version of the shirt</em>). However, in the case of an inventory item
            group, the text in the <strong>description</strong> field of the inventory
            item group will become the listing description of the actual eBay listing
            instead of the text in this field.<br/><br/>Basic HTML tags are supported,
            including the following tags:<ul><li>&lt;b&gt;</li><li>&lt;strong&gt;</li><li>&lt;br&gt;</li><li>&lt;ol&gt;</li><li>&lt;ul&gt;</li><li>&lt;li&gt;</li><li>Table
            tags including &lt;table&gt;, &lt;tr&gt;, &lt;td&gt;, &lt;th&gt;, &lt;thead&gt;,
            &lt;tfoot&gt;, &lt;tbody&gt;, &lt;caption&gt;, &lt;colgroup&gt;, and &lt;col&gt;</li></ul>A
            seller can not use any active content in their listing description. Active
            content includes animation or video via JavaScript, Flash, plug-ins, or
            form actions.<br/><br/>This field is returned if defined for an inventory
            item. If one of the GTIN types (e.g. UPC) was passed in when the inventory
            item was created/modified and a product match was found in the eBay catalog,
            product description is one of the details that gets picked up from the
            catalog product.<br/><br/><strong>Max Length</strong>: 4000'
          type: string
        ean:
          description: The European Article Number/International Article Number (EAN)
            for the product. Although an ePID value is preferred when trying to find
            a product match in the eBay Catalog, this field can also be used in an
            attempt to find a product match in the eBay Catalog. If a product match
            is found in the eBay Catalog, the inventory item is automatically populated
            with available product details such as a title, a product description,
            product aspects (including the specified EAN value), and a link to any
            stock image that exists for the catalog product.<br/><br/>This field is
            returned if defined for an inventory item. If an EAN was passed in as
            an item specific name-value pair through the <strong>aspects</strong>
            array in a <strong>createOrReplaceInventoryItem</strong> call, this value
            is also picked up by the <strong>ean</strong> field.
          items:
            type: string
          type: array
        epid:
          description: The eBay Product Identifier (ePID) for the product. This field
            can be used to directly identify an eBay Catalog product. Based on its
            specified ePID value, eBay will search for the product in the eBay Catalog,
            and if a match is found, the inventory item is automatically populated
            with available product details such as product title, product description,
            product aspects, and a link to any stock image that exists for the catalog
            product.<br/><br/>In an attempt to find a eBay Catalog product match,
            an ePID value is always preferred over the other product identifiers,
            since it is possible that one GTIN value can be associated with multiple
            eBay Catalog products, and if multiple products are found, product details
            will not be picked up by the Inventory Item object.<br/><br/>This field
            is returned if defined for an inventory item.
          type: string
        imageUrls:
          description: An array of one or more links to images for the product. URLs
            must use the "HTTPS" protocol. Images can be self-hosted by the seller,
            or sellers can use the <a href="https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/UploadSiteHostedPictures.html"  target="_blank">UploadSiteHostedPictures</a>
            call of the Trading API to upload images to an eBay Picture Server. If
            successful, the response of the <a href="https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/UploadSiteHostedPictures.html"
            target="_blank">UploadSiteHostedPictures</a> call will contain a full
            URL to the image on an eBay Picture Server. This is the URL that will
            be passed in through the <strong>imageUrls</strong> array. Before an offer
            can be published, at least one image must exist for the inventory item.
            Most eBay sites support up to 12 pictures free of charge, and eBay Motors
            listings can have up to 24 pictures.<br/><br/>A link to a stock image
            for a product may automatically be populated for an inventory item if
            the seller specifies an eBay Product ID (ePID) or a Global Trade Item
            Number (GTIN) and eBay is able to find a matching product in the eBay
            Catalog.<br/><br/>This container will always be returned for an inventory
            item that is part of a published offer since a published offer will always
            have at least one picture, but this container will only be returned if
            defined for inventory items that are not a part of a published offer.
          items:
            type: string
          type: array
        isbn:
          description: The International Standard Book Number (ISBN) value for the
            product. Although an ePID value is preferred when trying to find a product
            match in the eBay Catalog, this field can also be used in an attempt to
            find a product match in the eBay Catalog. If a product match is found
            in the eBay Catalog, the inventory item is automatically populated with
            available product details such as a title, a product description, product
            aspects (including the specified ISBN value), and a link to any stock
            image that exists for the catalog product.<br/><br/>This field is returned
            if defined for an inventory item. If an ISBN was passed in as an item
            specific name-value pair through the <strong>aspects</strong> array in
            a <strong>createOrReplaceInventoryItem</strong> call, this value is also
            picked up by the <strong>isbn</strong> field.
          items:
            type: string
          type: array
        mpn:
          description: 'The Manufacturer Part Number (MPN) of a product. This field
            is paired with the <strong>brand</strong> field to identify a product.
            Some eBay categories require MPN values. The <a href="https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/GetCategorySpecifics.html"  target="_blank">GetCategorySpecifics</a>
            call of the Trading API can be used to see if a category requires an MPN.
            The MPN value for a product may automatically be populated for an inventory
            item if the seller specifies an eBay Product ID (ePID) or a Global Trade
            Item Number (GTIN) and eBay is able to find a matching product in the
            eBay Catalog. <br/><br/>This field is returned if defined for an inventory
            item. If an MPN was passed in as an item specific name-value pair through
            the <strong>aspects</strong> array in a <strong>createOrReplaceInventoryItem</strong>
            call, this value is also picked up by the <strong>mpn</strong> field.<br/><br/><strong>Max
            Length</strong>: 65'
          type: string
        subtitle:
          description: 'A subtitle is an optional listing feature that allows the
            seller to provide more information about the product, possibly including
            keywords that may assist with search results. An additional listing fee
            will be charged to the seller if a subtitle is used. For more information
            on using listing subtitles on the US site, see the <a href="https://pages.ebay.com/help/sell/itemsubtitle.html"
            target="_blank">Adding a subtitle to your listings</a> help page. The
            subtitle of an existing inventory item can added, modified, or removed
            with a <strong>createOrReplaceInventoryItem</strong> call.<br/><br/>Note
            that the same <strong>subtitle</strong> text should be used for each inventory
            item that will be part of an inventory item group, and ultimately become
            one product variation within a multiple-variation listing.<br/><br/>This
            field will only be returned if set for an inventory item.<br/><br/><strong>Max
            Length</strong>: 55'
          type: string
        title:
          description: 'The title of an inventory item can be added or modified with
            a <strong>createOrReplaceInventoryItem</strong> call. Although not immediately
            required, a title will be needed before an offer with the inventory item
            is published. The title of an inventory item is automatically populated
            if the seller specifies an eBay Product ID (ePID) or a Global Trade Item
            Number (GTIN) and eBay is able to find a matching product in the eBay
            Catalog. If the inventory item will become part of a single-variation
            offer, and the listing is not a product-based listing, the text in this
            field will become the actual listing title for the published offer. However,
            if the inventory item will become part of a multiple-variation offer,
            the text in <strong>title</strong> field of the inventory item group entity
            will actually become the listing title for the published offer instead,
            although a title can still be provided for the inventory item, and it
            will actually become the title of the variation.<br/><br/>This field will
            always be returned for an inventory item that is part of a published offer
            since a published offer will always have a listing title, but this field
            will only be returned if defined for inventory items that are not a part
            of a published offer.<br/><br/><strong>Max Length</strong>: 80'
          type: string
        upc:
          description: The Universal Product Code (UPC) value for the product. Although
            an ePID value is preferred when trying to find a product match in the
            eBay Catalog, this field can also be used in an attempt to find a product
            match in the eBay Catalog. If a product match is found in the eBay Catalog,
            the inventory item is automatically populated with available product details
            such as a title, a product description, product aspects (including the
            specified UPC value), and a link to any stock image that exists for the
            catalog product.<br/><br/>This field is returned if defined for an inventory
            item. If a UPC was passed in as an item specific name-value pair through
            the <strong>aspects</strong> array in a <strong>createOrReplaceInventoryItem</strong>
            call, this value is also picked up by the <strong>upc</strong> field.
          items:
            type: string
          type: array
        videoIds:
          description: An array of one or more VideoId values for the product. A VideoId
            is a unique identifier that is automatically created by eBay when a seller
            successfully uploads a video to eBay using the  <a href="https://developer.ebay.com/api-docs/commerce/media/resources/video/methods/uploadVideo"
            target="_blank">uploadVideo</a> method of the <a href="https://developer.ebay.com/api-docs/commerce/media/overview.html"
            target="_blank">Media API</a>.<br /><br />For information on supported
            marketplaces and platforms, as well as other requirements and limitations
            of video support, please refer to <a href="https://developer.ebay.com/api-docs/sell/static/inventory/managing-video-media.html"
            target="_blank">Managing videos</a>.
          items:
            type: string
          type: array
      type: object
      x-apifox-orders:
      - aspects
      - brand
      - description
      - ean
      - epid
      - imageUrls
      - isbn
      - mpn
      - subtitle
      - title
      - upc
      - videoIds
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ProductFamilyProperties:
      description: This type is used to specify the details of a motor vehicle that
        is compatible with the inventory item specified through the SKU value in the
        call URI.
      example:
        trim: trim
        engine: engine
        year: year
        model: model
        make: make
      properties:
        engine:
          description: This field indicates the specifications of the engine, including
            its size, block type, and fuel type. An example is <code>2.7L V6 gas DOHC
            naturally aspirated</code>. This field is conditionally required, but
            should be supplied if known/applicable.
          type: string
        make:
          description: This field indicates the make of the vehicle (e.g. <code>Toyota</code>).
            This field is always required to identify a motor vehicle.
          type: string
        model:
          description: This field indicates the model of the vehicle (e.g. <code>Camry</code>).
            This field is always required to identify a motor vehicle.
          type: string
        trim:
          description: This field indicates the trim of the vehicle (e.g. <code>2-door
            Coupe</code>). This field is conditionally required, but should be supplied
            if known/applicable.
          type: string
        year:
          description: This field indicates the year of the vehicle (e.g. <code>2016</code>).
            This field is always required to identify a motor vehicle.
          type: string
      type: object
      x-apifox-orders:
      - engine
      - make
      - model
      - trim
      - year
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PriceQuantityResponse:
      description: This type is used to display the result for each offer and/or inventory
        item that the seller attempted to update with a <strong>bulkUpdatePriceQuantity</strong>
        call. If any errors or warnings occur, the error/warning data is returned
        at the offer/inventory item level.
      example:
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        offerId: offerId
        sku: sku
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        errors:
          description: This array will be returned if there were one or more errors
            associated with the update to the offer or inventory item record.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        offerId:
          description: The unique identifier of the offer that was updated. This field
            will not be returned in situations where the seller is only updating the
            total 'ship-to-home' quantity of an inventory item record.
          type: string
        sku:
          description: 'This is the seller-defined SKU value of the product. This
            field is returned whether the seller attempted to update an offer with
            the SKU value or just attempted to update the total ''ship-to-home'' quantity
            of an inventory item record.<br/><br/><strong>Max Length</strong>: 50<br/>'
          type: string
        statusCode:
          description: The value returned in this container will indicate the status
            of the attempt to update the price and/or quantity of the offer (specified
            in the corresponding <strong>offerId</strong> field) or the attempt to
            update the total 'ship-to-home' quantity of an inventory item (specified
            in the corresponding <strong>sku</strong> field). For a completely successful
            update of an offer or inventory item record, a value of <code>200</code>
            will appear in this field.  A user can view the <strong>HTTP status codes</strong>
            section for information on other status codes that may be returned with
            the <strong>bulkUpdatePriceQuantity</strong> method.
          format: int32
          type: integer
        warnings:
          description: This array will be returned if there were one or more warnings
            associated with the update to the offer or inventory item record.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - errors
      - offerId
      - sku
      - statusCode
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PriceQuantity:
      description: This type is used to update the total "ship-to-home"  quantity
        for one or more inventory items and/or to update the price and/or quantity
        of one or more specific offers associated with one or more inventory items.
      example:
        offers:
        - availableQuantity: 0
          price:
            currency: currency
            value: value
          offerId: offerId
        - availableQuantity: 0
          price:
            currency: currency
            value: value
          offerId: offerId
        shipToLocationAvailability:
          quantity: 1
          availabilityDistributions:
          - quantity: 6
            merchantLocationKey: merchantLocationKey
            fulfillmentTime:
              unit: unit
              value: 0
          - quantity: 6
            merchantLocationKey: merchantLocationKey
            fulfillmentTime:
              unit: unit
              value: 0
        sku: sku
      properties:
        offers:
          description: This container is needed if the seller is updating the price
            and/or quantity of one or more published offers, and a successful call
            will actually update the active eBay listing with the revised price and/or
            available quantity.<br/><br/>This call is not designed to work with unpublished
            offers. For unpublished offers, the seller should use the <strong>updateOffer</strong>
            call to update the available quantity and/or price.<br/><br/> If the seller
            is also using the <strong>shipToLocationAvailability</strong> container
            and <strong>sku</strong> field to update the total 'ship-to-home' quantity
            of the inventory item, the SKU value associated with the corresponding
            <strong>offerId</strong> value(s) must be the same as the corresponding
            <strong>sku</strong> value that is passed in, or an error will occur.<br/><br/>A
            separate (<strong>OfferPriceQuantity</strong>) node is required for each
            offer being updated.
          items:
            $ref: '#/components/schemas/OfferPriceQuantity'
          type: array
        shipToLocationAvailability:
          $ref: '#/components/schemas/ShipToLocationAvailability'
        sku:
          description: 'This is the seller-defined SKU value of the inventory item
            whose total ''ship-to-home'' quantity will be updated. This field is only
            required when the seller is updating the total quantity of an inventory
            item using the <strong>shipToLocationAvailability</strong> container.
            If the seller is updating the price and/or quantity of one or more specific
            offers, one or more <strong>offerId</strong> values are used instead,
            and the <strong>sku</strong> value is not needed.<br/><br/>If the seller
            wants to update the price and/or quantity of one or more offers, and also
            wants to update the total ''ship-to-home'' quantity of the corresponding
            inventory item, the SKU value associated with the <strong>offerId</strong>
            value(s) must be the same as the corresponding <strong>sku</strong> value
            that is passed in, or an error will occur.<br/><br/><strong>Max Length</strong>:
            50<br/>'
          type: string
      type: object
      x-apifox-orders:
      - offers
      - shipToLocationAvailability
      - sku
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PickupAtLocationAvailability:
      description: This type is used to specify/indicate the quantity of the inventory
        item that is available for an In-Store Pickup order at the merchant's physical
        store (specified by the <strong>merchantLocationKey</strong> field).
      example:
        availabilityType: availabilityType
        quantity: 0
        merchantLocationKey: merchantLocationKey
        fulfillmentTime:
          unit: unit
          value: 0
      properties:
        availabilityType:
          description: The enumeration value in this field indicates the availability
            status of the inventory item at the merchant's physical store specified
            by the <strong>pickupAtLocationAvailability.merchantLocationKey</strong>
            field. This field is required if the <strong>pickupAtLocationAvailability</strong>
            container is used, and is always returned with the <strong>pickupAtLocationAvailability</strong>
            container.  <br/><br/> See <a href="/api-docs/sell/inventory/types/slr:AvailabilityTypeEnum">AvailabilityTypeEnum</a>
            for more information about how/when you use each enumeration value. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:AvailabilityTypeEnum'>eBay
            API documentation</a>
          type: string
        fulfillmentTime:
          $ref: '#/components/schemas/TimeDuration'
        merchantLocationKey:
          description: 'The unique identifier of a merchant''s store where the In-Store
            Pickup inventory item is currently located, or where inventory will be
            sent to. If the merchant''s store is currently awaiting for inventory,
            the <strong>availabilityType</strong> value should be <code>SHIP_TO_STORE</code>.
            This field is required if the <strong>pickupAtLocationAvailability</strong>
            container is used, and is always returned with the <strong>pickupAtLocationAvailability</strong>
            container.<br/> <br/><b>Max length</b>: 36'
          type: string
        quantity:
          description: This integer value indicates the quantity of the inventory
            item that is available for In-Store Pickup at the store identified by
            the  <strong>merchantLocationKey</strong> value.  The value of <strong>quantity</strong>
            should be an integer value greater than <code>0</code>, unless the inventory
            item is out of stock. This field is required if the <strong>pickupAtLocationAvailability</strong>
            container is used, and is always returned with the <strong>pickupAtLocationAvailability</strong>
            container.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - availabilityType
      - fulfillmentTime
      - merchantLocationKey
      - quantity
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PackageWeightAndSize:
      description: This type is used to indicate the package type, weight, and dimensions
        of the shipping package. Package weight and dimensions are required when calculated
        shipping rates are used, and weight alone is required when flat-rate shipping
        is used, but with a weight surcharge. See the <a href="https://pages.ebay.com/help/pay/calculated-shipping.html"
        target="_blank">Calculated shipping</a> help page for more information on
        calculated shipping.
      example:
        weight:
          unit: unit
          value: value
        packageType: packageType
        dimensions:
          name: name
          dimensionKey: dimensionKey
          value: value
      properties:
        dimensions:
          $ref: '#/components/schemas/Dimension'
        packageType:
          description: This enumeration value indicates the type of shipping package
            used to ship the inventory item. The supported values for this field can
            be found in the <a href="/api-docs/sell/inventory/types/slr:PackageTypeEnum">PackageTypeEnum</a>
            type.<br/><br/>This field will be returned if the package type is set
            for the inventory item.<br /><br /><span class="tablenote"> <strong>Note:</strong>
            You can use the <a href="/Devzone/XML/docs/Reference/eBay/GeteBayDetails.html#Response.ShippingPackageDetails">GeteBayDetails</a>
            Trading API call to retrieve a list of supported package types for a specific
            marketplace.</span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:PackageTypeEnum'>eBay
            API documentation</a>
          type: string
        weight:
          $ref: '#/components/schemas/Weight'
      type: object
      x-apifox-orders:
      - dimensions
      - packageType
      - weight
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OperatingHours:
      description: This type is used to express the regular operating hours of a merchant's
        store during the days of the week.
      example:
        intervals:
        - close: close
          open: open
        - close: close
          open: open
        dayOfWeekEnum: dayOfWeekEnum
      properties:
        dayOfWeekEnum:
          description: A <strong>dayOfWeekEnum</strong> value is required for each
            day of the week that the store location has regular operating hours. <br><br>This
            field is returned if operating hours are defined for the store location.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/api:DayOfWeekEnum'>eBay
            API documentation</a>
          type: string
        intervals:
          description: This container is used to define the opening and closing times
            of a store's working day (defined in the <strong>dayOfWeekEnum</strong>
            field). An <strong>intervals</strong> container is needed for each day
            of the week that the store location is open. If a store location closes
            for lunch (or any other period during the day) and then reopens, multiple
            <strong>open</strong> and <strong>close</strong> pairs are needed <br><br>This
            container is returned if operating hours are defined for the store location.
          items:
            $ref: '#/components/schemas/Interval'
          type: array
      type: object
      x-apifox-orders:
      - dayOfWeekEnum
      - intervals
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Offers:
      description: This type is used by the base response of the <strong>getOffers</strong>
        call, and it is an array of one or more of the seller's offers, along with
        pagination data.
      example:
        next: next
        offers:
        - availableQuantity: 6
          hideBuyerDetails: true
          includeCatalogProductDetails: true
          lotSize: 5
          quantityLimitPerBuyer: 2
          format: format
          secondaryCategoryId: secondaryCategoryId
          tax:
            amount:
              currency: currency
              value: value
            taxType: taxType
          pricingSummary:
            total:
              currency: currency
              value: value
            deliveryDiscount:
              currency: currency
              value: value
            priceSubtotal:
              currency: currency
              value: value
            fee:
              currency: currency
              value: value
            adjustment:
              currency: currency
              value: value
            tax:
              currency: currency
              value: value
            priceDiscountSubtotal:
              currency: currency
              value: value
            deliveryCost:
              currency: currency
              value: value
          listingPolicies:
            takeBackPolicyId: takeBackPolicyId
            eBayPlusIfEligible: true
            returnPolicyId: returnPolicyId
            bestOfferTerms:
              bestOfferEnabled: true
              autoAcceptPrice:
                currency: currency
                value: value
              autoDeclinePrice:
                currency: currency
                value: value
            shippingCostOverrides:
            - surcharge:
                currency: currency
                value: value
              shippingServiceType: shippingServiceType
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              priority: 5
            - surcharge:
                currency: currency
                value: value
              shippingServiceType: shippingServiceType
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              priority: 5
            fulfillmentPolicyId: fulfillmentPolicyId
            paymentPolicyId: paymentPolicyId
            productCompliancePolicyIds:
            - productCompliancePolicyIds
            - productCompliancePolicyIds
          marketplaceId: marketplaceId
          charity:
            donationPercentage: donationPercentage
            charityId: charityId
          merchantLocationKey: merchantLocationKey
          offerId: offerId
          storeCategoryNames:
          - storeCategoryNames
          - storeCategoryNames
          listingStartDate: listingStartDate
          extendedProducerResponsibility:
            productPackageId: productPackageId
            ecoParticipationFee:
              currency: currency
              value: value
            productDocumentationId: productDocumentationId
            producerProductId: producerProductId
            shipmentPackageId: shipmentPackageId
          listing:
            listingStatus: listingStatus
            listingId: listingId
            soldQuantity: 1
          sku: sku
          categoryId: categoryId
          listingDuration: listingDuration
          listingDescription: listingDescription
          status: status
        - availableQuantity: 6
          hideBuyerDetails: true
          includeCatalogProductDetails: true
          lotSize: 5
          quantityLimitPerBuyer: 2
          format: format
          secondaryCategoryId: secondaryCategoryId
          tax:
            amount:
              currency: currency
              value: value
            taxType: taxType
          pricingSummary:
            total:
              currency: currency
              value: value
            deliveryDiscount:
              currency: currency
              value: value
            priceSubtotal:
              currency: currency
              value: value
            fee:
              currency: currency
              value: value
            adjustment:
              currency: currency
              value: value
            tax:
              currency: currency
              value: value
            priceDiscountSubtotal:
              currency: currency
              value: value
            deliveryCost:
              currency: currency
              value: value
          listingPolicies:
            takeBackPolicyId: takeBackPolicyId
            eBayPlusIfEligible: true
            returnPolicyId: returnPolicyId
            bestOfferTerms:
              bestOfferEnabled: true
              autoAcceptPrice:
                currency: currency
                value: value
              autoDeclinePrice:
                currency: currency
                value: value
            shippingCostOverrides:
            - surcharge:
                currency: currency
                value: value
              shippingServiceType: shippingServiceType
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              priority: 5
            - surcharge:
                currency: currency
                value: value
              shippingServiceType: shippingServiceType
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              priority: 5
            fulfillmentPolicyId: fulfillmentPolicyId
            paymentPolicyId: paymentPolicyId
            productCompliancePolicyIds:
            - productCompliancePolicyIds
            - productCompliancePolicyIds
          marketplaceId: marketplaceId
          charity:
            donationPercentage: donationPercentage
            charityId: charityId
          merchantLocationKey: merchantLocationKey
          offerId: offerId
          storeCategoryNames:
          - storeCategoryNames
          - storeCategoryNames
          listingStartDate: listingStartDate
          extendedProducerResponsibility:
            productPackageId: productPackageId
            ecoParticipationFee:
              currency: currency
              value: value
            productDocumentationId: productDocumentationId
            producerProductId: producerProductId
            shipmentPackageId: shipmentPackageId
          listing:
            listingStatus: listingStatus
            listingId: listingId
            soldQuantity: 1
          sku: sku
          categoryId: categoryId
          listingDuration: listingDuration
          listingDescription: listingDescription
          status: status
        total: 9
        size: 7
        prev: prev
        limit: 0
        href: href
      properties:
        href:
          description: This is the URL to the current page of offers.
          type: string
        limit:
          description: This integer value is the number of offers that will be displayed
            on each results page.
          format: int32
          type: integer
        next:
          description: This is the URL to the next page of offers. This field will
            only be returned if there are additional offers to view.
          type: string
        offers:
          description: This container is an array of one or more of the seller's offers
            for the SKU value that is passed in through the required <strong>sku</strong>
            query parameter.<br/><br/> <span class="tablenote"> <strong>Note:</strong>
            Currently, the Inventory API does not support the same SKU across multiple
            eBay marketplaces, so the <strong>getOffers</strong> call will only return
            one offer.</span><br/><br/><strong>Max Occurs:</strong> 25
          items:
            $ref: '#/components/schemas/EbayOfferDetailsWithAll'
          type: array
        prev:
          description: This is the URL to the previous page of offers. This field
            will only be returned if there are previous offers to view.
          type: string
        size:
          description: This integer value indicates the number of offers being displayed
            on the current page of results. This number will generally be the same
            as the <strong>limit</strong> value if there are additional pages of results
            to view.<br/><br/> <span class="tablenote"> <strong>Note:</strong> Currently,
            the Inventory API does not support the same SKU across multiple eBay marketplaces,
            so the <strong>Get Offers</strong> call will only return one offer, so
            this value should always be <code>1</code>.</span>
          format: int32
          type: integer
        total:
          description: This integer value is the total number of offers that exist
            for the specified SKU value. Based on this number and on the <strong>limit</strong>
            value, the seller may have to toggle through multiple pages to view all
            offers.<br/><br/> <span class="tablenote"> <strong>Note:</strong> Currently,
            the Inventory API does not support the same SKU across multiple eBay marketplaces,
            so the <strong>Get Offers</strong> call will only return one offer, so
            this value should always be <code>1</code>.</span>
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offers
      - prev
      - size
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OfferResponseWithListingId:
      description: This type is used to indicate the status of each offer that the
        user attempted to publish. If an offer is successfully published, an eBay
        listing ID (also known as an Item ID) is returned. If there is an issue publishing
        the offer and creating the new eBay listing, the information about why the
        listing failed should be returned in the <strong>errors</strong> and/or <strong>warnings</strong>
        containers.
      example:
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        offerId: offerId
        listingId: listingId
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        errors:
          description: This container will be returned if there were one or more errors
            associated with publishing the offer.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        listingId:
          description: The unique identifier of the newly-created eBay listing. This
            field is only returned if the seller successfully published the offer
            and created the new eBay listing.
          type: string
        offerId:
          description: The unique identifier of the offer that the seller published
            (or attempted to publish).
          type: string
        statusCode:
          description: The HTTP status code returned in this field indicates the success
            or failure of publishing the offer specified in the <strong>offerId</strong>
            field. See the <strong>HTTP status codes</strong> table to see which each
            status code indicates.
          format: int32
          type: integer
        warnings:
          description: This container will be returned if there were one or more warnings
            associated with publishing the offer.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - errors
      - listingId
      - offerId
      - statusCode
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OfferSkuResponse:
      description: This type is used by the <strong>bulkCreateOffer</strong> response
        to show the status of each offer that the seller attempted to create with
        the <strong>bulkCreateOffer</strong> method. For each offer that is created
        successfully, the returned <strong>statusCode</strong> value should be <code>200</code>,
        and a unique <strong>offerId</strong> should be created for each offer. If
        any issues occur with the creation of any offers, <strong>errors</strong>
        and/or <strong>warnings</strong> containers will be returned.
      example:
        marketplaceId: marketplaceId
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        format: format
        offerId: offerId
        sku: sku
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        errors:
          description: This container will be returned at the offer level, and will
            contain one or more errors if any occurred with the attempted creation
            of the corresponding offer.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        format:
          description: This enumeration value indicates the listing format of the
            offer. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:FormatTypeEnum'>eBay
            API documentation</a>
          type: string
        marketplaceId:
          description: This enumeration value is the unique identifier of the eBay
            marketplace for which the offer will be made available. This enumeration
            value should be the same for all offers since the <strong>bulkCreateOffer</strong>
            method can only be used to create offers for one eBay marketplace at a
            time. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:MarketplaceEnum'>eBay
            API documentation</a>
          type: string
        offerId:
          description: The unique identifier of the newly-created offer. This identifier
            should be automatically created by eBay if the creation of the offer was
            successful. It is not returned if the creation of the offer was not successful.
            In which case, the user may want to scan the corresponding <strong>errors</strong>
            and/or <strong>warnings</strong> container to see what the issue may be.
          type: string
        sku:
          description: The seller-defined Stock-Keeping Unit (SKU) of the inventory
            item. The <strong>sku</strong> value is required for each product offer
            that the seller is trying to create, and it is always returned to identified
            the product that is associated with the offer.
          type: string
        statusCode:
          description: The integer value returned in this field is the http status
            code. If an offer is created successfully, the value returned in this
            field should be <code>200</code>. A user can view the <strong>HTTP status
            codes</strong> section for information on other status codes that may
            be returned with the <strong>bulkCreateOffer</strong> method.
          format: int32
          type: integer
        warnings:
          description: This container will be returned at the offer level, and will
            contain one or more warnings if any occurred with the attempted creation
            of the corresponding offer. Note that it is possible that an offer can
            be created successfully even if one or more warnings are triggered.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - errors
      - format
      - marketplaceId
      - offerId
      - sku
      - statusCode
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OfferKeysWithId:
      description: This type is used by the base request payload of the <strong>getListingFees</strong>
        call.
      example:
        offers:
        - offerId: offerId
        - offerId: offerId
      properties:
        offers:
          description: This container is used to identify one or more (up to 250)unpublished
            offers for which expected listing fees will be retrieved. The user passes
            one or more <strong>offerId</strong> values (maximum of 250) in to this
            container to identify the unpublished offers in which to retrieve expected
            listing fees. This call is only applicable for offers in the unpublished
            state. <br/><br/> The call response gives aggregate fee amounts per eBay
            marketplace, and does not give fee information at the individual offer
            level.
          items:
            $ref: '#/components/schemas/OfferKeyWithId'
          type: array
      type: object
      x-apifox-orders:
      - offers
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OfferPriceQuantity:
      description: This type is used by the <strong>offers</strong> container in a
        <strong>Bulk Update Price and Quantity</strong> call to update the current
        price and/or quantity of one or more offers associated with a specific inventory
        item.
      example:
        availableQuantity: 0
        price:
          currency: currency
          value: value
        offerId: offerId
      properties:
        availableQuantity:
          description: This field is used if the seller wants to modify the current
            quantity of the inventory item that will be available for purchase in
            the offer (identified by the corresponding <strong>offerId</strong> value).
            Either the <strong>availableQuantity</strong> field or the <strong>price</strong>
            container is required, but not necessarily both.
          format: int32
          type: integer
        offerId:
          description: This field is the unique identifier of the offer. If an <strong>offers</strong>
            container is used to update one or more offers associated to a specific
            inventory item, the <strong>offerId</strong> value is required in order
            to identify the offer to update with a modified price and/or quantity.<br/><br/>The
            seller can run a <strong>getOffers</strong> call (passing in the correct
            SKU value as a query parameter) to retrieve <strong>offerId</strong> values
            for offers associated with the SKU.
          type: string
        price:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - availableQuantity
      - offerId
      - price
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    MigrateListingResponse:
      description: This type is used to display the results of each listing that the
        seller attempted to migrate.
      example:
        marketplaceId: marketplaceId
        inventoryItems:
        - offerId: offerId
          sku: sku
        - offerId: offerId
          sku: sku
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        inventoryItemGroupKey: inventoryItemGroupKey
        listingId: listingId
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        errors:
          description: If one or more errors occur with the attempt to migrate the
            listing, this container will be returned with detailed information on
            each error.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        inventoryItemGroupKey:
          description: This field will only be returned for a multiple-variation listing
            that the seller attempted to migrate. Its value is auto-generated by eBay.
            For a multiple-variation listing that is successfully migrated to the
            new Inventory model, eBay automatically creates an inventory item group
            object for the listing, and the seller will be able to retrieve and manage
            that new inventory item group object by using the value in this field.
          type: string
        inventoryItems:
          description: This container exists of an array of SKU values and offer IDs.
            For single-variation listings, this will only be one SKU value and one
            offer ID (if listing was successfully migrated), but multiple SKU values
            and offer IDs will be returned for multiple-variation listings.
          items:
            $ref: '#/components/schemas/InventoryItemListing'
          type: array
        listingId:
          description: The unique identifier of the eBay listing that the seller attempted
            to migrate.
          type: string
        marketplaceId:
          description: This is the unique identifier of the eBay Marketplace where
            the listing resides. The value fo the eBay US site will be <code>EBAY_US</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:MarketplaceEnum'>eBay
            API documentation</a>
          type: string
        statusCode:
          description: This field is returned for each listing that the seller attempted
            to migrate. See the <strong>HTTP status codes</strong> table to see which
            each status code indicates.
          format: int32
          type: integer
        warnings:
          description: If one or more warnings occur with the attempt to migrate the
            listing, this container will be returned with detailed information on
            each warning. It is possible that a listing can be successfully migrated
            even if a warning occurs.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - errors
      - inventoryItemGroupKey
      - inventoryItems
      - listingId
      - marketplaceId
      - statusCode
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OfferKeyWithId:
      description: This type is used by the <strong>getListingFees</strong> call to
        indicate the unpublished offer(s) for which expected listing fees will be
        retrieved. The user passes in one or more <strong>offerId</strong> values
        (a maximum of 250). See the <a href="https://pages.ebay.com/help/sell/fees.html"
        target="_blank">Standard selling fees</a> help page for more information on
        listing fees.
      example:
        offerId: offerId
      properties:
        offerId:
          description: The unique identifier of an unpublished offer for which expected
            listing fees will be retrieved. One to 250 <strong>offerId</strong> values
            can be passed in to the <strong>offers</strong> container for one <strong>getListingFees</strong>
            call. Errors will occur if <strong>offerId</strong> values representing
            published offers are passed in.
          type: string
      type: object
      x-apifox-orders:
      - offerId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OfferResponse:
      description: This type is used by the response payload of the <strong>createOffer</strong>
        and <strong>updateOffer</strong> calls. The <strong>offerId</strong> field
        contains the unique identifier for the offer if the offer is successfully
        created by the <strong>createOffer</strong> call. The <strong>warnings</strong>
        field contains any errors and/or warnings that may have been triggered by
        the call. <p> <span class="tablenote"><strong>Note:</strong> The <strong>offerId</strong>
        value is only returned with a successful <strong>createOffer</strong> call.
        This field will not be returned in the <strong>updateOffer </strong> response.</span></p>
      example:
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        offerId: offerId
      properties:
        offerId:
          description: The unique identifier of the offer that was just created with
            a <strong>createOffer</strong> call. It is not returned if the <strong>createOffer</strong>
            call fails to create an offer. This identifier will be needed for many
            offer-related calls. <p> <span class="tablenote"><strong>Note:</strong>
            The <strong>offerId</strong> value is only returned with a successful
            <strong>createOffer</strong> call. This field will not be returned in
            the <strong>updateOffer </strong> response.</span></p>
          type: string
        warnings:
          description: This container will contain an array of errors and/or warnings
            when a call is made, and errors and/or warnings occur.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - offerId
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    MigrateListing:
      description: This type is used to specify one to five eBay listings that will
        be migrated to the new Inventory model.
      example:
        listingId: listingId
      properties:
        listingId:
          description: The unique identifier of the eBay listing to migrate to the
            new Inventory model. In the Trading API, this field is known as the <strong>ItemID</strong>.
            Up to five unique eBay listings may be specified here in separate <strong>listingId</strong>
            fields. The seller should make sure that each of these listings meet the
            requirements that are stated at the top of this Call Reference page.
          type: string
      type: object
      x-apifox-orders:
      - listingId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    LocationResponse:
      description: This type is used by the base response payload for the <strong>getInventoryLocations</strong>
        call.
      example:
        next: next
        total: 1
        offset: 6
        prev: prev
        limit: 0
        locations:
        - locationTypes:
          - locationTypes
          - locationTypes
          phone: phone
          locationInstructions: locationInstructions
          merchantLocationKey: merchantLocationKey
          operatingHours:
          - intervals:
            - close: close
              open: open
            - close: close
              open: open
            dayOfWeekEnum: dayOfWeekEnum
          - intervals:
            - close: close
              open: open
            - close: close
              open: open
            dayOfWeekEnum: dayOfWeekEnum
          locationWebUrl: locationWebUrl
          name: name
          merchantLocationStatus: merchantLocationStatus
          location:
            address:
              country: country
              stateOrProvince: stateOrProvince
              city: city
              postalCode: postalCode
              county: county
              addressLine1: addressLine1
              addressLine2: addressLine2
            locationId: locationId
            geoCoordinates:
              latitude: 0.8008281904610115
              longitude: 6.027456183070403
          locationAdditionalInformation: locationAdditionalInformation
          specialHours:
          - date: date
            intervals:
            - close: close
              open: open
            - close: close
              open: open
          - date: date
            intervals:
            - close: close
              open: open
            - close: close
              open: open
        - locationTypes:
          - locationTypes
          - locationTypes
          phone: phone
          locationInstructions: locationInstructions
          merchantLocationKey: merchantLocationKey
          operatingHours:
          - intervals:
            - close: close
              open: open
            - close: close
              open: open
            dayOfWeekEnum: dayOfWeekEnum
          - intervals:
            - close: close
              open: open
            - close: close
              open: open
            dayOfWeekEnum: dayOfWeekEnum
          locationWebUrl: locationWebUrl
          name: name
          merchantLocationStatus: merchantLocationStatus
          location:
            address:
              country: country
              stateOrProvince: stateOrProvince
              city: city
              postalCode: postalCode
              county: county
              addressLine1: addressLine1
              addressLine2: addressLine2
            locationId: locationId
            geoCoordinates:
              latitude: 0.8008281904610115
              longitude: 6.027456183070403
          locationAdditionalInformation: locationAdditionalInformation
          specialHours:
          - date: date
            intervals:
            - close: close
              open: open
            - close: close
              open: open
          - date: date
            intervals:
            - close: close
              open: open
            - close: close
              open: open
        href: href
      properties:
        href:
          description: The URI of the current page of results from the result set.
          type: string
        limit:
          description: The number of items returned on a single page from the result
            set.
          format: int32
          type: integer
        next:
          description: 'The URI for the following page of results. This value is returned
            only if there is an additional page of results to display from the result
            set. <br><br><b>Max length</b>: 2048'
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value is set in the request with the <b>offset</b>
            query parameter. <p class="tablenote"><strong>Note: </strong>The items
            in a paginated result set use a zero-based list where the first item in
            the list has an offset of <code>0</code>.</p>'
          format: int32
          type: integer
        prev:
          description: 'The URI for the preceding page of results. This value is returned
            only if there is a previous page of results to display from the result
            set. <br><br><b>Max length</b>: 2048'
          type: string
        total:
          description: The total number of items retrieved in the result set.  <br><br>If
            no items are found, this field is returned with a value of <code>0</code>.
          format: int32
          type: integer
        locations:
          description: An array of one or more of the merchant's inventory locations.
          items:
            $ref: '#/components/schemas/InventoryLocationResponse'
          type: array
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - prev
      - total
      - locations
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    LocationDetails:
      description: This type is used by the <b>createInventoryLocation</b> call to
        provide an full or partial address of an inventory location.
      example:
        address:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          postalCode: postalCode
          county: county
          addressLine1: addressLine1
          addressLine2: addressLine2
        geoCoordinates:
          latitude: 0.8008281904610115
          longitude: 6.027456183070403
      properties:
        address:
          $ref: '#/components/schemas/Address'
        geoCoordinates:
          $ref: '#/components/schemas/GeoCoordinates'
      type: object
      x-apifox-orders:
      - address
      - geoCoordinates
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Location:
      description: A complex type that is used to provide the physical address of
        a location, and it geo-coordinates.
      example:
        address:
          country: country
          stateOrProvince: stateOrProvince
          city: city
          postalCode: postalCode
          county: county
          addressLine1: addressLine1
          addressLine2: addressLine2
        locationId: locationId
        geoCoordinates:
          latitude: 0.8008281904610115
          longitude: 6.027456183070403
      properties:
        address:
          $ref: '#/components/schemas/Address'
        geoCoordinates:
          $ref: '#/components/schemas/GeoCoordinates'
        locationId:
          description: A unique eBay-assigned ID for the location. <br><br> <span
            class="tablenote"> <strong>Note:</strong> This field should not be confused
            with the seller-defined <b>merchantLocationKey</b> value. It is the <b>merchantLocationKey</b>
            value which is used to identify an inventory location when working with
            inventory location API calls. The <strong>locationId</strong> value is
            only used internally by eBay.</span>
          type: string
      type: object
      x-apifox-orders:
      - address
      - geoCoordinates
      - locationId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ListingPolicies:
      description: This type is used to identify business policies including payment,
        return, and fulfillment policies, and also to identify custom policies. These
        policies are, or will be, associated with the listing. Every published offer
        must have a payment, return, and fulfillment business policy associated with
        it. This type is also used to override the shipping costs of one or more shipping
        service options that are associated with the fulfillment policy, to enable
        eBay Plus eligibility for a listing, or to enable the Best Offer feature on
        the listing.
      example:
        takeBackPolicyId: takeBackPolicyId
        eBayPlusIfEligible: true
        returnPolicyId: returnPolicyId
        bestOfferTerms:
          bestOfferEnabled: true
          autoAcceptPrice:
            currency: currency
            value: value
          autoDeclinePrice:
            currency: currency
            value: value
        shippingCostOverrides:
        - surcharge:
            currency: currency
            value: value
          shippingServiceType: shippingServiceType
          shippingCost:
            currency: currency
            value: value
          additionalShippingCost:
            currency: currency
            value: value
          priority: 5
        - surcharge:
            currency: currency
            value: value
          shippingServiceType: shippingServiceType
          shippingCost:
            currency: currency
            value: value
          additionalShippingCost:
            currency: currency
            value: value
          priority: 5
        fulfillmentPolicyId: fulfillmentPolicyId
        paymentPolicyId: paymentPolicyId
        productCompliancePolicyIds:
        - productCompliancePolicyIds
        - productCompliancePolicyIds
      properties:
        bestOfferTerms:
          $ref: '#/components/schemas/BestOffer'
        eBayPlusIfEligible:
          description: This field is included in an offer and set to <code>true</code>
            if a Top-Rated seller is opted in to the eBay Plus program. With the eBay
            Plus program, qualified sellers must commit to next-day delivery of the
            item, and the buyers must have an eBay Plus subscription to be eligible
            to receive the benefits of this program, which are free, next-day delivery,
            as well as free returns.<br><br>Currently, this program is only available
            on the Germany and Australian sites.<br/><br/>This field will be returned
            in the <strong>getOffer</strong> and <strong>getOffers</strong> calls
            if set for the offer.
          type: boolean
        fulfillmentPolicyId:
          description: This unique identifier indicates the fulfillment business policy
            that will be used once an offer is published and converted to an eBay
            listing. This fulfillment business policy will set all fulfillment-related
            settings for the eBay listing.<br/><br/>Business policies are not immediately
            required for offers, but are required before an offer can be published.
            The seller should review the fulfillment business policy before assigning
            it to the offer to make sure it is compatible with the inventory item
            and the offer settings. The seller may also want to review the shipping
            service costs in the fulfillment policy, and that seller might decide
            to override the shipping costs for one or more shipping service options
            by using the <strong>shippingCostOverrides</strong> container.<br/><br/>Business
            policies can be created and managed in My eBay or with the <strong>Account
            API</strong>. To get a list of all return policies associated with a seller's
            account on a specific eBay Marketplace, use the Account API's <strong>getFulfillmentPolicies</strong>
            call. There are also calls in the <strong>Account API</strong> to retrieve
            a fulfillment policy by policy ID or policy name.<br/><br/>This field
            will be returned in the <strong>getOffer</strong> and <strong>getOffers</strong>
            calls if set for the offer.
          type: string
        paymentPolicyId:
          description: This unique identifier indicates the payment business policy
            that will be used once an offer is published and converted to an eBay
            listing. This payment business policy will set all payment-related settings
            for the eBay listing.<br/><br/>Business policies are not immediately required
            for offers, but are required before an offer can be published. The seller
            should review the payment business policy to make sure that it is compatible
            with the marketplace and listing category before assigning it to the offer.<br
            /><br />Business policies can be created and managed in My eBay or with
            the <strong>Account API</strong>. To get a list of all payment policies
            associated with a seller's account on a specific eBay Marketplace, use
            the Account API's <strong>getPaymentPolicies</strong> call. There are
            also calls in the <strong>Account API</strong> to retrieve a payment policy
            by policy ID or policy name.<br/><br/>This field will be returned in the
            <strong>getOffer</strong> and <strong>getOffers</strong> calls if set
            for the offer.
          type: string
        productCompliancePolicyIds:
          description: This field contains an array of up to five IDs specifying the
            seller created compliance policies for the listing. Custom policies provide
            buyers with important information and disclosures about products. For
            example, if you sell batteries and specific disclosures are required,
            your compliance policy could contain the required disclosures. See <a
            href="https://www.ebay.com/help/selling/custom-policies/custom-policies?id=5311"
            target="_blank">Custom Policies</a> for more information. Up to five different
            compliance policies can be applied to each listing. Refer to the <a href="/api-docs/sell/account/resources/methods#h2-custom_policy
            ">custom_policy</a> resource (in the <strong>Sell Account API</strong>)
            to create and manage custom policies.
          items:
            type: string
          type: array
        returnPolicyId:
          description: This unique identifier indicates the return business policy
            that will be used once an offer is published and converted to an eBay
            listing. This return business policy will set all return policy settings
            for the eBay listing.<br/><br/>Business policies are not immediately required
            for offers, but are required before an offer can be published. The seller
            should review the return business policy before assigning it to the offer
            to make sure it is compatible with the inventory item and the offer settings.<br/><br/>Business
            policies can be created and managed in My eBay or with the <strong>Account
            API</strong>. To get a list of all return policies associated with a seller's
            account on a specific eBay Marketplace, use the Account API's <strong>getReturnPolicies</strong>
            call. There are also calls in the <strong>Account API</strong> to retrieve
            a return policy by policy ID or policy name.<br/><br/>This field will
            be returned in the <strong>getOffer</strong> and <strong>getOffers</strong>
            calls if set for the offer.
          type: string
        shippingCostOverrides:
          description: This container is used if the seller wishes to override the
            shipping costs or surcharge for one or more domestic or international
            shipping service options defined in the fulfillment listing policy. To
            override the costs of a specific domestic or international shipping service
            option, the seller must know the priority/order of that shipping service
            in the fulfillment listing policy. The name of a shipping service option
            can be found in the <strong>shippingOptions.shippingServices.shippingServiceCode</strong>
            field of the fulfillment policy, and the priority/order of that shipping
            service option is found in the <strong>shippingOptions.shippingServices.sortOrderId</strong>
            field. Both of these values can be retrieved by searching for that fulfillment
            policy with the <strong>getFulfillmentPolicies</strong> or <strong>getFulfillmentPolicyByName</strong>
            calls of the <strong>Account API</strong>. The <strong>shippingCostOverrides.priority</strong>
            value should match the <strong>shippingOptions.shippingServices.sortOrderId</strong>
            in order to override the shipping costs for that shipping service option.
            The seller must also ensure that the <strong>shippingServiceType</strong>
            value is set to <code>DOMESTIC</code> to override a domestic shipping
            service option, or to <code>INTERNATIONAL</code> to override an international
            shipping service option.<br/><br/>A separate <strong>ShippingCostOverrides</strong>
            node is needed for each shipping service option whose costs are being
            overridden. All defined fields of the <strong>shippingCostOverrides</strong>
            container should be included, even if the shipping costs and surcharge
            values are not changing.<br/><br/>The <strong>shippingCostOverrides</strong>
            container is returned in the <strong>getOffer</strong> and <strong>getOffers</strong>
            calls if one or more shipping cost overrides are being applied to the
            fulfillment policy.
          items:
            $ref: '#/components/schemas/ShippingCostOverride'
          type: array
        takeBackPolicyId:
          description: This field specifies the ID of the seller created take-back
            policy. The law in some countries may require sellers to take back a used
            product when the buyer buys a new product. See <a href="https://www.ebay.com/help/selling/custom-policies/custom-policies?id=5311"
            target="_blank">Custom Policies</a> for more information. One take-back
            policy ID can be specified for each listing. Refer to the <a href="/api-docs/sell/account/resources/methods#h2-custom_policy
            ">custom_policy</a> resource (in the <strong>Sell Account API</strong>)
            to create and manage takeback policies.
          type: string
      type: object
      x-apifox-orders:
      - bestOfferTerms
      - eBayPlusIfEligible
      - fulfillmentPolicyId
      - paymentPolicyId
      - productCompliancePolicyIds
      - returnPolicyId
      - shippingCostOverrides
      - takeBackPolicyId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryLocationResponse:
      description: This type is used by the base response of the <strong>getInventoryLocation</strong>
        and <strong>getInventoryLocations</strong> calls. These responses provide
        details about inventory location(s) defined for the merchant's account.
      example:
        locationTypes:
        - locationTypes
        - locationTypes
        phone: phone
        locationInstructions: locationInstructions
        merchantLocationKey: merchantLocationKey
        operatingHours:
        - intervals:
          - close: close
            open: open
          - close: close
            open: open
          dayOfWeekEnum: dayOfWeekEnum
        - intervals:
          - close: close
            open: open
          - close: close
            open: open
          dayOfWeekEnum: dayOfWeekEnum
        locationWebUrl: locationWebUrl
        name: name
        merchantLocationStatus: merchantLocationStatus
        location:
          address:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            postalCode: postalCode
            county: county
            addressLine1: addressLine1
            addressLine2: addressLine2
          locationId: locationId
          geoCoordinates:
            latitude: 0.8008281904610115
            longitude: 6.027456183070403
        locationAdditionalInformation: locationAdditionalInformation
        specialHours:
        - date: date
          intervals:
          - close: close
            open: open
          - close: close
            open: open
        - date: date
          intervals:
          - close: close
            open: open
          - close: close
            open: open
      properties:
        location:
          $ref: '#/components/schemas/Location'
        locationAdditionalInformation:
          description: 'This text field provides additional information about an inventory
            location. This field is returned if it is set for the inventory location.
            <br><br><b>Max length</b>: 256'
          type: string
        locationInstructions:
          description: 'This text field is used by the merchant to provide special
            pickup instructions for the store location. This field can help create
            a pleasant and easy pickup experience for In-Store Pickup and Click and
            Collect orders. If this field was not set up through a <strong>createInventoryLocation</strong>
            or a <strong>updateInventoryLocation</strong> call, eBay will use the
            default pickup instructions contained in the merchant''s profile.<br><br><b>Max
            length</b>: 1000'
          type: string
        locationTypes:
          description: This container defines the function of the inventory location.
            Typically, an inventory location will serve as a store or a warehouse,
            but in some cases, an inventory location may be both. <br><br>The location
            type of an inventory location defaults to <code>WAREHOUSE</code> if a
            location type is not specified when a merchant creates an inventory location.
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/inventory/types/api:StoreTypeEnum''>eBay
              API documentation</a>'
            type: string
          type: array
        locationWebUrl:
          description: 'This text field shows the  Website address (URL) associated
            with the inventory location. This field is returned if defined for the
            inventory location. <br><br><b>Max length</b>: 512'
          type: string
        merchantLocationKey:
          description: 'The unique identifier of the inventory location. This identifier
            is set up by the merchant when the inventory location is first created
            with the <strong>createInventoryLocation</strong> call. Once this value
            is set for an inventory location, it cannot be modified. <br><br><b>Max
            length</b>: 36'
          type: string
        merchantLocationStatus:
          description: This field indicates whether the inventory location is enabled
            (inventory can be loaded to location) or disabled (inventory can not be
            loaded to location). The merchant can use the <strong>enableInventoryLocation</strong>
            call to enable an inventory location in disabled status, or the <strong>disableInventoryLocation</strong>
            call to disable an inventory location in enabled status. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/api:StatusEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: 'The name of the inventory location. This name should be a
            human-friendly name as it will be displayed in In-Store Pickup and Click
            and Collect listings. For store inventory locations, this field is not
            required for the <strong>createInventoryLocation</strong> call, but a
            store inventory location must have a defined <strong>name</strong> value
            before an In-Store Pickup and Click and Collect enabled offer is published.
            So, if the seller omits this field in the <strong>createInventoryLocation</strong>
            call, it will have to be added later through a <strong>updateInventoryLocation</strong>
            call. <br><br><b>Max length</b>: 1000'
          type: string
        operatingHours:
          description: This container shows the regular operating hours for a store
            location during the days of the week. A <strong>dayOfWeekEnum</strong>
            field and an <strong>intervals</strong> container is shown for each day
            of the week that the store location is open.
          items:
            $ref: '#/components/schemas/OperatingHours'
          type: array
        phone:
          description: 'The phone number for an inventory location. This field will
            typically only be set and returned for store locations. <br><br><b>Max
            length</b>: 36'
          type: string
        specialHours:
          description: This container shows the special operating hours for a store
            location on a specific date or dates.
          items:
            $ref: '#/components/schemas/SpecialHours'
          type: array
      type: object
      x-apifox-orders:
      - location
      - locationAdditionalInformation
      - locationInstructions
      - locationTypes
      - locationWebUrl
      - merchantLocationKey
      - merchantLocationStatus
      - name
      - operatingHours
      - phone
      - specialHours
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ListingDetails:
      description: This type is used by the <strong>listing</strong> container in
        the <strong>getOffer</strong> and <strong>getOffers</strong> calls to provide
        the eBay listing ID, the listing status, and quantity sold for the offer.
        The <strong>listing</strong> container is only returned for published offers,
        and is not returned for unpublished offers.
      example:
        listingStatus: listingStatus
        listingId: listingId
        soldQuantity: 1
      properties:
        listingId:
          description: 'The unique identifier of the eBay listing that is associated
            with the published offer. '
          type: string
        listingStatus:
          description: The enumeration value returned in this field indicates the
            status of the listing that is associated with the published offer. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:ListingStatusEnum'>eBay
            API documentation</a>
          type: string
        soldQuantity:
          description: This integer value indicates the quantity of the product that
            has been sold for the published offer.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - listingId
      - listingStatus
      - soldQuantity
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryLocationFull:
      description: This type is used by the <strong>createInventoryLocation</strong>
        call to provide details on the inventory location, including the location's
        name, physical address, operating hours, special hours, phone number and other
        details of an inventory location.
      example:
        locationTypes:
        - locationTypes
        - locationTypes
        phone: phone
        locationInstructions: locationInstructions
        operatingHours:
        - intervals:
          - close: close
            open: open
          - close: close
            open: open
          dayOfWeekEnum: dayOfWeekEnum
        - intervals:
          - close: close
            open: open
          - close: close
            open: open
          dayOfWeekEnum: dayOfWeekEnum
        locationWebUrl: locationWebUrl
        name: name
        merchantLocationStatus: merchantLocationStatus
        location:
          address:
            country: country
            stateOrProvince: stateOrProvince
            city: city
            postalCode: postalCode
            county: county
            addressLine1: addressLine1
            addressLine2: addressLine2
          geoCoordinates:
            latitude: 0.8008281904610115
            longitude: 6.027456183070403
        locationAdditionalInformation: locationAdditionalInformation
        specialHours:
        - date: date
          intervals:
          - close: close
            open: open
          - close: close
            open: open
        - date: date
          intervals:
          - close: close
            open: open
          - close: close
            open: open
      properties:
        location:
          $ref: '#/components/schemas/LocationDetails'
        locationAdditionalInformation:
          description: 'This text field is used by the merchant to provide additional
            information about an inventory location. <br><br><b>Max length</b>: 256'
          type: string
        locationInstructions:
          description: This text field is generally used by the merchant to provide
            special pickup instructions for a store inventory location. Although this
            field is optional, it is recommended that merchants provide this field
            to create a pleasant and easy pickup experience for In-Store Pickup and
            Click and Collect orders. If this field is not included in the call request
            payload, eBay will use the default pickup instructions contained in the
            merchant's profile (if available). <br><br>
          type: string
        locationTypes:
          description: 'This container is used to define the function of the inventory
            location. Typically, an inventory location will serve as a store or a
            warehouse, but in some cases, an inventory location may be both. <br><br>
            If this container is omitted, the location type of the inventory location
            will default to <code>WAREHOUSE</code>. See <a href="/api-docs/sell/inventory/types/api:StoreTypeEnum">StoreTypeEnum</a>
            for the supported values.<br/><br/><b>Default</b>: WAREHOUSE'
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/inventory/types/api:StoreTypeEnum''>eBay
              API documentation</a>'
            type: string
          type: array
        locationWebUrl:
          description: 'This text field is used by the merchant to provide the Website
            address (URL) associated with the inventory location. <br><br><b>Max length</b>:
            512'
          type: string
        merchantLocationStatus:
          description: 'This field is used to indicate whether the inventory location
            will be enabled (inventory can be loaded to location) or disabled (inventory
            can not be loaded to location). If this field is omitted, a successful
            <strong>createInventoryLocation</strong> call will automatically enable
            the inventory location. A merchant may want to create a new inventory
            location but leave it as disabled if the inventory location is not yet
            ready for active inventory. Once the inventory location is ready, the
            merchant can use the <strong>enableInventoryLocation</strong> call to
            enable an inventory location that is in a disabled state. See <a href="/api-docs/sell/inventory/types/api:StatusEnum">StatusEnum</a>
            for the supported values.  <br/><br/><b>Default</b>: ENABLED For implementation
            help, refer to <a href=''https://developer.ebay.com/api-docs/sell/inventory/types/api:StatusEnum''>eBay
            API documentation</a>'
          type: string
        name:
          description: 'The name of the inventory location. This name should be a
            human-friendly name as it will be displayed in In-Store Pickup and Click
            and Collect listings. A name is not required for warehouse inventory locations.
            For store inventory locations, this field is not immediately required,
            but will be required before an offer enabled with the In-Store Pickup
            or Click and Collect capability can be published. So, if the seller omits
            this field in a <strong>createInventoryLocation</strong> call, it becomes
            required for an <strong>updateInventoryLocation</strong> call.<br/><br/><b>Max
            length</b>: 1000'
          type: string
        operatingHours:
          description: Although not technically required, this container is highly
            recommended to be used to specify operating hours for a store inventory
            location. This container is used to express the regular operating hours
            for a store location during each day of the week. A <strong>dayOfWeekEnum</strong>
            field and an <strong>intervals</strong> container will be needed for each
            day of the week that the store location is open.
          items:
            $ref: '#/components/schemas/OperatingHours'
          type: array
        phone:
          description: 'Although not technically required, this field is highly recommended
            to be used to specify the phone number for a store inventory location.
            <br><br><b>Max length</b>: 36'
          type: string
        specialHours:
          description: This container is used to express the special operating hours
            for a store inventory location on a specific date, such as a holiday.
            The special hours specified for the specific date will override the normal
            operating hours for that particular day of the week.
          items:
            $ref: '#/components/schemas/SpecialHours'
          type: array
      type: object
      x-apifox-orders:
      - location
      - locationAdditionalInformation
      - locationInstructions
      - locationTypes
      - locationWebUrl
      - merchantLocationStatus
      - name
      - operatingHours
      - phone
      - specialHours
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryLocation:
      description: This type is used by the <strong>updateInventoryLocation</strong>
        call to update operating hours, special hours, phone number, and other minor
        details of an inventory location.
      example:
        phone: phone
        locationInstructions: locationInstructions
        operatingHours:
        - intervals:
          - close: close
            open: open
          - close: close
            open: open
          dayOfWeekEnum: dayOfWeekEnum
        - intervals:
          - close: close
            open: open
          - close: close
            open: open
          dayOfWeekEnum: dayOfWeekEnum
        locationWebUrl: locationWebUrl
        name: name
        locationAdditionalInformation: locationAdditionalInformation
        specialHours:
        - date: date
          intervals:
          - close: close
            open: open
          - close: close
            open: open
        - date: date
          intervals:
          - close: close
            open: open
          - close: close
            open: open
      properties:
        locationAdditionalInformation:
          description: 'This text field is used by the merchant to provide/update
            additional information about an inventory location. Whatever text is passed
            in this field will replace the current text string defined for this field.
            If the text will not change, the same text should be passed in once again.
            <br><br><b>Max length</b>: 256'
          type: string
        locationInstructions:
          description: 'This text field is generally used by the merchant to provide/update
            special pickup instructions for a store inventory location. Although this
            field is optional, it is recommended that merchants provide this field
            to create a pleasant and easy pickup experience for In-Store Pickup and
            Click and Collect orders. If this field is not included in the call request
            payload, eBay will use the default pickup instructions contained in the
            merchant''s profile (if available). Whatever text is passed in this field
            will replace the current text string defined for this field. If the text
            will not change, the same text should be passed in once again. <br><br><b>Max
            length</b>: 1000'
          type: string
        locationWebUrl:
          description: 'This text field is used by the merchant to provide/update
            the Website address (URL) associated with the inventory location. The
            URL that is passed in this field will replace any other URL that may be
            defined for this field. <br><br><b>Max length</b>: 512'
          type: string
        name:
          description: This text field is used by the merchant to update the name
            of the inventory location. This name should be a human-friendly name as
            it will be in In-Store Pickup and Click and Collect listings. A name is
            not required for warehouse inventory locations. For store inventory locations,
            this field is not immediately required, but will be required before an
            offer enabled with the In-Store Pickup or Click and Collect capability
            can be published. So, if the seller omitted this field in the <strong>createInventoryLocation</strong>
            call, it is required for an <strong>updateInventoryLocation</strong> call.
            The name that is passed in this field will replace any other name that
            may be defined for this field.
          type: string
        operatingHours:
          description: This container is used to provide/update the regular operating
            hours for a store location during the days of the week. A <strong>dayOfWeekEnum</strong>
            field and an <strong>intervals</strong> container will be needed for each
            day of the week that the store location is open. Note that if operating
            hours are already set for an inventory location for a specific day of
            the week, whatever is set through an <strong>updateInventoryLocation</strong>
            call will override those existing hours.
          items:
            $ref: '#/components/schemas/OperatingHours'
          type: array
        phone:
          description: 'This text field is used by the merchant to provide/update
            the phone number for the inventory location. The phone number that is
            passed in this field will replace any other phone number that may be defined
            for this field. <br><br><b>Max length</b>: 36'
          type: string
        specialHours:
          description: This container is used to provide/update the special operating
            hours for a store location on a specific date, such as a holiday. The
            special hours specified for the specific date will override the normal
            operating hours for that particular day of the week. If special hours
            have already been set up for an inventory location, specifying special
            hours through an <strong>updateInventoryLocation</strong> call will only
            add to the list, unless the date(s) used are the same special date(s)
            already set up, in which case, the special hours set up through the <strong>updateInventoryLocation</strong>
            call will override the existing special hours.
          items:
            $ref: '#/components/schemas/SpecialHours'
          type: array
      type: object
      x-apifox-orders:
      - locationAdditionalInformation
      - locationInstructions
      - locationWebUrl
      - name
      - operatingHours
      - phone
      - specialHours
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryItemWithSkuLocale:
      description: This type is used to define/modify each inventory item record that
        is being created and/or updated with the <strong>bulkCreateOrReplaceInventoryItem</strong>
        method. Up to 25 inventory item records can be created and/or updated with
        one call.
      example:
        condition: condition
        product:
          ean:
          - ean
          - ean
          imageUrls:
          - imageUrls
          - imageUrls
          isbn:
          - isbn
          - isbn
          subtitle: subtitle
          aspects: aspects
          description: description
          epid: epid
          upc:
          - upc
          - upc
          mpn: mpn
          title: title
          brand: brand
          videoIds:
          - videoIds
          - videoIds
        packageWeightAndSize:
          weight:
            unit: unit
            value: value
          packageType: packageType
          dimensions:
            name: name
            dimensionKey: dimensionKey
            value: value
        availability:
          shipToLocationAvailability:
            quantity: 1
            availabilityDistributions:
            - quantity: 6
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - quantity: 6
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          pickupAtLocationAvailability:
          - availabilityType: availabilityType
            quantity: 0
            merchantLocationKey: merchantLocationKey
            fulfillmentTime:
              unit: unit
              value: 0
          - availabilityType: availabilityType
            quantity: 0
            merchantLocationKey: merchantLocationKey
            fulfillmentTime:
              unit: unit
              value: 0
        locale: locale
        sku: sku
        conditionDescription: conditionDescription
      properties:
        availability:
          $ref: '#/components/schemas/Availability'
        condition:
          description: This enumeration value indicates the condition of the item.
            Supported item condition values will vary by eBay site and category. To
            see which item condition values that a particular eBay category supports,
            use the <a href="/api-docs/sell/metadata/resources/marketplace/methods/getItemConditionPolicies">getItemConditionPolicies</a>
            method of the <strong>Metadata API</strong>. This method returns condition
            ID values that map to the enumeration values defined in the <a href="/api-docs/sell/inventory/types/slr:ConditionEnum">ConditionEnum</a>
            type. The <a href="/api-docs/sell/static/metadata/condition-id-values.html">Item
            condition ID and name values</a> topic in the <strong>Selling Integration
            Guide</strong> has a table that maps condition ID values to <strong>ConditionEnum</strong>
            values. The <strong>getItemConditionPolicies</strong> call reference page
            has more information.<br><br> A <strong>condition</strong> value is optional
            up until the seller is ready to publish an offer with the SKU, at which
            time it becomes required for most eBay categories. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:ConditionEnum'>eBay
            API documentation</a>
          type: string
        conditionDescription:
          description: 'This string field is used by the seller to more clearly describe
            the condition of a used inventory item, or an inventory item whose <strong>condition</strong>
            value is not <code>NEW</code>, <code>LIKE_NEW</code>, <code>NEW_OTHER</code>,
            or <code>NEW_WITH_DEFECTS</code>.<br/><br/> The <strong>conditionDescription</strong>
            field is available for all eBay categories. If the <strong>conditionDescription</strong>
            field is used with an item in one of the new conditions (mentioned in
            previous paragraph), eBay will simply ignore this field if included, and
            eBay will return a warning message to the user. <br/><br/> This field
            should only be used to further clarify the condition of the used item.
            It should not be used for branding, promotions, shipping, returns, payment
            or other information unrelated to the condition of the used item. Make
            sure that the <strong>condition</strong> value, condition description,
            listing description, and the item''s pictures do not contradict one another.
            <br /><br /> This field is not always required, but is required if an
            inventory item is being updated and a condition description already exists
            for that inventory item. <br /><br /> This field is returned in the <strong>getInventoryItem</strong>,
            <strong>bulkGetInventoryItem</strong>, and <strong>getInventoryItems</strong>
            calls if a condition description was provided for a used inventory item.<br/><br/><strong>Max
            Length</strong>: 1000.'
          type: string
        locale:
          description: This field is for future use only. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:LocaleEnum'>eBay
            API documentation</a>
          type: string
        packageWeightAndSize:
          $ref: '#/components/schemas/PackageWeightAndSize'
        product:
          $ref: '#/components/schemas/Product'
        sku:
          description: 'This is the seller-defined SKU value of the product that will
            be listed on the eBay site (specified in the <strong>marketplaceId</strong>
            field). Only one offer (in unpublished or published state) may exist for
            each <strong>sku</strong>/<strong>marketplaceId</strong>/<strong>format</strong>
            combination. This field is required.<br/><br/><strong>Max Length</strong>:
            50<br/>'
          type: string
      type: object
      x-apifox-orders:
      - availability
      - condition
      - conditionDescription
      - locale
      - packageWeightAndSize
      - product
      - sku
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryItems:
      description: 'This type is used by the base response payload of <strong>getInventoryItems</strong>
        call. '
      example:
        next: next
        total: 1
        inventoryItems:
        - condition: condition
          product:
            ean:
            - ean
            - ean
            imageUrls:
            - imageUrls
            - imageUrls
            isbn:
            - isbn
            - isbn
            subtitle: subtitle
            aspects: aspects
            description: description
            epid: epid
            upc:
            - upc
            - upc
            mpn: mpn
            title: title
            brand: brand
            videoIds:
            - videoIds
            - videoIds
          groupIds:
          - groupIds
          - groupIds
          packageWeightAndSize:
            weight:
              unit: unit
              value: value
            packageType: packageType
            dimensions:
              name: name
              dimensionKey: dimensionKey
              value: value
          availability:
            shipToLocationAvailability:
              quantity: 5
              availabilityDistributions:
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              allocationByFormat:
                fixedPrice: 1
                auction: 6
            pickupAtLocationAvailability:
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          locale: locale
          sku: sku
          conditionDescription: conditionDescription
          inventoryItemGroupKeys:
          - inventoryItemGroupKeys
          - inventoryItemGroupKeys
        - condition: condition
          product:
            ean:
            - ean
            - ean
            imageUrls:
            - imageUrls
            - imageUrls
            isbn:
            - isbn
            - isbn
            subtitle: subtitle
            aspects: aspects
            description: description
            epid: epid
            upc:
            - upc
            - upc
            mpn: mpn
            title: title
            brand: brand
            videoIds:
            - videoIds
            - videoIds
          groupIds:
          - groupIds
          - groupIds
          packageWeightAndSize:
            weight:
              unit: unit
              value: value
            packageType: packageType
            dimensions:
              name: name
              dimensionKey: dimensionKey
              value: value
          availability:
            shipToLocationAvailability:
              quantity: 5
              availabilityDistributions:
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              allocationByFormat:
                fixedPrice: 1
                auction: 6
            pickupAtLocationAvailability:
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          locale: locale
          sku: sku
          conditionDescription: conditionDescription
          inventoryItemGroupKeys:
          - inventoryItemGroupKeys
          - inventoryItemGroupKeys
        size: 6
        prev: prev
        limit: 0
        href: href
      properties:
        href:
          description: This is the URL to the current page of inventory items.
          type: string
        inventoryItems:
          description: This container is an array of one or more inventory items,
            with detailed information on each inventory item.
          items:
            $ref: '#/components/schemas/InventoryItemWithSkuLocaleGroupid'
          type: array
        limit:
          description: This integer value is the number of inventory items that will
            be displayed on each results page.
          format: int32
          type: integer
        next:
          description: This is the URL to the next page of inventory items. This field
            will only be returned if there are additional inventory items to view.
          type: string
        prev:
          description: This is the URL to the previous page of inventory items. This
            field will only be returned if there are previous inventory items to view.
          type: string
        size:
          description: This integer value indicates the total number of pages of results
            that are available. This number will depend on the total number of inventory
            items available for viewing, and on the <strong>limit</strong> value.
          format: int32
          type: integer
        total:
          description: This integer value is the total number of inventory items that
            exist for the seller's account. Based on this number and on the <strong>limit</strong>
            value, the seller may have to toggle through multiple pages to view all
            inventory items.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - inventoryItems
      - limit
      - next
      - prev
      - size
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryItemWithSkuLocaleGroupid:
      example:
        condition: condition
        product:
          ean:
          - ean
          - ean
          imageUrls:
          - imageUrls
          - imageUrls
          isbn:
          - isbn
          - isbn
          subtitle: subtitle
          aspects: aspects
          description: description
          epid: epid
          upc:
          - upc
          - upc
          mpn: mpn
          title: title
          brand: brand
          videoIds:
          - videoIds
          - videoIds
        groupIds:
        - groupIds
        - groupIds
        packageWeightAndSize:
          weight:
            unit: unit
            value: value
          packageType: packageType
          dimensions:
            name: name
            dimensionKey: dimensionKey
            value: value
        availability:
          shipToLocationAvailability:
            quantity: 5
            availabilityDistributions:
            - quantity: 6
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - quantity: 6
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            allocationByFormat:
              fixedPrice: 1
              auction: 6
          pickupAtLocationAvailability:
          - availabilityType: availabilityType
            quantity: 0
            merchantLocationKey: merchantLocationKey
            fulfillmentTime:
              unit: unit
              value: 0
          - availabilityType: availabilityType
            quantity: 0
            merchantLocationKey: merchantLocationKey
            fulfillmentTime:
              unit: unit
              value: 0
        locale: locale
        sku: sku
        conditionDescription: conditionDescription
        inventoryItemGroupKeys:
        - inventoryItemGroupKeys
        - inventoryItemGroupKeys
      properties:
        availability:
          $ref: '#/components/schemas/AvailabilityWithAll'
        condition:
          description: This enumeration value indicates the condition of the item.
            Supported item condition values will vary by eBay site and category. <br
            /><br /> Since the condition of an inventory item must be specified before
            being published in an offer, this field is always returned in the 'Get'
            calls for SKUs that are part of a published offer. If a SKU is not part
            of a published offer, this field will only be returned if set for the
            inventory item. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:ConditionEnum'>eBay
            API documentation</a>
          type: string
        conditionDescription:
          description: 'This string field is used by the seller to more clearly describe
            the condition of used items, or items that are not ''Brand New'', ''New
            with tags'', or ''New in box''. The ConditionDescription field is available
            for all categories. If the ConditionDescription field is used with an
            item in a new condition (Condition IDs 1000-1499), eBay will simply ignore
            this field if included, and eBay will return a warning message to the
            user. This field should only be used to further clarify the condition
            of the used item. It should not be used for branding, promotions, shipping,
            returns, payment or other information unrelated to the condition of the
            item. Make sure that the condition value, condition description, listing
            description, and the item''s pictures do not contradict one another.<br
            /><br /><strong>Max length</strong>/: 1000.'
          type: string
        groupIds:
          description: This array is returned if the inventory item is associated
            with any inventory item group(s). The value(s) returned in this array
            are the unique identifier(s) of the inventory item group(s). This array
            is not returned if the inventory item is not associated with any inventory
            item groups.
          items:
            type: string
          type: array
        inventoryItemGroupKeys:
          description: This array is returned if the inventory item is associated
            with any inventory item group(s). The value(s) returned in this array
            are the unique identifier(s) of the inventory item's variation in a multiple-variation
            listing. This array is not returned if the inventory item is not associated
            with any inventory item groups.
          items:
            type: string
          type: array
        locale:
          description: This field is for future use only. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:LocaleEnum'>eBay
            API documentation</a>
          type: string
        packageWeightAndSize:
          $ref: '#/components/schemas/PackageWeightAndSize'
        product:
          $ref: '#/components/schemas/Product'
        sku:
          description: The seller-defined Stock-Keeping Unit (SKU) of the inventory
            item. The seller should have a unique SKU value for every product that
            they sell.
          type: string
      type: object
      x-apifox-orders:
      - availability
      - condition
      - conditionDescription
      - groupIds
      - inventoryItemGroupKeys
      - locale
      - packageWeightAndSize
      - product
      - sku
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryItem:
      description: This type is used to provide detailed information about an inventory
        item.
      example:
        condition: condition
        product:
          ean:
          - ean
          - ean
          imageUrls:
          - imageUrls
          - imageUrls
          isbn:
          - isbn
          - isbn
          subtitle: subtitle
          aspects: aspects
          description: description
          epid: epid
          upc:
          - upc
          - upc
          mpn: mpn
          title: title
          brand: brand
          videoIds:
          - videoIds
          - videoIds
        packageWeightAndSize:
          weight:
            unit: unit
            value: value
          packageType: packageType
          dimensions:
            name: name
            dimensionKey: dimensionKey
            value: value
        availability:
          shipToLocationAvailability:
            quantity: 1
            availabilityDistributions:
            - quantity: 6
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - quantity: 6
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          pickupAtLocationAvailability:
          - availabilityType: availabilityType
            quantity: 0
            merchantLocationKey: merchantLocationKey
            fulfillmentTime:
              unit: unit
              value: 0
          - availabilityType: availabilityType
            quantity: 0
            merchantLocationKey: merchantLocationKey
            fulfillmentTime:
              unit: unit
              value: 0
        conditionDescription: conditionDescription
      properties:
        availability:
          $ref: '#/components/schemas/Availability'
        condition:
          description: This enumeration value indicates the condition of the item.
            Supported item condition values will vary by eBay site and category. To
            see which item condition values that a particular eBay category supports,
            use the <a href="/api-docs/sell/metadata/resources/marketplace/methods/getItemConditionPolicies">getItemConditionPolicies</a>
            method of the <strong>Metadata API</strong>. This method returns condition
            ID values that map to the enumeration values defined in the <a href="/api-docs/sell/inventory/types/slr:ConditionEnum">ConditionEnum</a>
            type. The <a href="/api-docs/sell/static/metadata/condition-id-values.html">Item
            condition ID and name values</a> topic in the <strong>Selling Integration
            Guide</strong> has a table that maps condition ID values to <strong>ConditionEnum</strong>
            values. The <strong>getItemConditionPolicies</strong> call reference page
            has more information.<br><br> A <strong>condition</strong> value is optional
            up until the seller is ready to publish an offer with the SKU, at which
            time it becomes required for most eBay categories. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:ConditionEnum'>eBay
            API documentation</a>
          type: string
        conditionDescription:
          description: 'This string field is used by the seller to more clearly describe
            the condition of a used inventory item, or an inventory item whose <strong>condition</strong>
            value is not <code>NEW</code>, <code>LIKE_NEW</code>, <code>NEW_OTHER</code>,
            or <code>NEW_WITH_DEFECTS</code>.<br/><br/> The <strong>conditionDescription</strong>
            field is available for all eBay categories. If the <strong>conditionDescription</strong>
            field is used with an item in one of the new conditions (mentioned in
            previous paragraph), eBay will simply ignore this field if included, and
            eBay will return a warning message to the user. <br/><br/> This field
            should only be used to further clarify the condition of the used item.
            It should not be used for branding, promotions, shipping, returns, payment
            or other information unrelated to the condition of the used item. Make
            sure that the <strong>condition</strong> value, condition description,
            listing description, and the item''s pictures do not contradict one another.
            <br /><br /> This field is not always required, but is required if an
            inventory item is being updated and a condition description already exists
            for that inventory item. <br /><br /> This field is returned in the <strong>getInventoryItem</strong>
            and <strong>getInventoryItems</strong> calls if a condition description
            was provided for a used inventory item.<br/><br/><strong>Max Length</strong>:
            1000.'
          type: string
        packageWeightAndSize:
          $ref: '#/components/schemas/PackageWeightAndSize'
        product:
          $ref: '#/components/schemas/Product'
      type: object
      x-apifox-orders:
      - availability
      - condition
      - conditionDescription
      - packageWeightAndSize
      - product
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryItemGroup:
      description: This type is used by the base request payload of the <strong>createOrReplaceInventoryItemGroup</strong>
        call and the base response payload of the <strong>getInventoryItemGroup</strong>
        call.
      example:
        variesBy:
          aspectsImageVariesBy:
          - aspectsImageVariesBy
          - aspectsImageVariesBy
          specifications:
          - values:
            - values
            - values
            name: name
          - values:
            - values
            - values
            name: name
        variantSKUs:
        - variantSKUs
        - variantSKUs
        imageUrls:
        - imageUrls
        - imageUrls
        subtitle: subtitle
        aspects: aspects
        inventoryItemGroupKey: inventoryItemGroupKey
        description: description
        title: title
        videoIds:
        - videoIds
        - videoIds
      properties:
        aspects:
          description: 'This is a collection of item specifics (aka product aspects)
            name-value pairs that are shared by all product variations within the
            inventory item group. Common aspects for the inventory item group are
            not immediately required upon creating an inventory item group, but these
            aspects will be required before the first offer of the group is published.
            Common aspects for a men''s t-shirt might be pattern and sleeve length.
            Below is an example of the proper JSON syntax to use when manually inputting
            item specifics. Note that one item specific name, such as ''Features'',
            can have more than one value. If an item specific name has more than one
            value, each value is delimited with a comma.<br/> <pre><code>"aspects":
            {<br/> "pattern": ["solid"],<br/> "sleeves": ["short"]<br/> }</code></pre>This
            container is always returned if one or more offers associated with the
            inventory item group have been published, and is only returned if set
            for an inventory item group if that group has yet to have any offers published.<br/>'
          type: string
        description:
          description: 'The description of the inventory item group. This description
            should fully describe the product and the variations of the product that
            are available in the inventory item group, since this description will
            ultimately become the listing description once the first offer of the
            group is published. This field is not initially required when first creating
            an inventory item group, but will be required before the first offer of
            the group is published. <br><br><span class="tablenote"> <strong>Note:</strong>
            Since this description will ultimately  become the listing description
            in a multiple-variation listing, the seller should omit the <strong>listingDescription</strong>
            field when creating the offers for each variation. If they include the
            <strong>listingDescription</strong> field for the individual offer(s)
            in an item group, the text in that field for a published offer will overwrite
            the text provided in this <strong>description</strong> field for the inventory
            item group.</span><br/><br/>HTML tags and markup can be used in this field,
            but each character counts toward the max length limit.<br/><br/><span
            class="tablenote"> <strong>Note:</strong> To ensure that their short listing
            description is optimized when viewed on mobile devices, sellers should
            strongly consider using eBay''s <a href="https://pages.ebay.com/sell/itemdescription/customizeyoursummary.html"
            target="_blank">View Item description summary feature</a> when listing
            their items. Keep in mind that the ''short'' listing description is what
            prospective buyers first see when they view the listing on a mobile device.
            The ''full'' listing description is also available to mobile users when
            they click on the short listing description, but the full description
            is not automatically optimized for viewing in mobile devices, and many
            users won''t even drill down to the full description.<br><br> Using HTML
            div and span tag attributes, this feature allows sellers to customize
            and fully control the short listing description that is displayed to prospective
            buyers when viewing the listing on a mobile device. The short listing
            description on mobile devices is limited to 800 characters, and whenever
            the full listing description (provided in this field, in UI, or seller
            tool) exceeds this limit, eBay uses a special algorithm to derive the
            best possible short listing description within the 800-character limit.
            However, due to some short listing description content being removed,
            it is definitely not ideal for the seller, and could lead to a bad buyer
            experience and possibly to a Significantly not as described (SNAD) case,
            since the buyer may not get complete details on the item when viewing
            the short listing description. See the eBay help page for more details
            on using the HTML div and span tags.</span><br/><br/>This field is always
            returned if one or more offers associated with the inventory item group
            have been published, and is only returned if set for an inventory item
            group if that group has yet to have any offers published.<br/><br/><strong>Max
            Length</strong>: 500000 (which includes HTML markup/tags)<br>'
          type: string
        imageUrls:
          description: An array of one or more links to images for the inventory item
            group. URLs must use the "HTTPS" protocol. Images can be self-hosted by
            the seller, or sellers can use the <a href="https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/UploadSiteHostedPictures.html"
            target="_blank">UploadSiteHostedPictures</a> call of the Trading API to
            upload images to an eBay Picture Server. If successful, the response of
            the <a href="https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/UploadSiteHostedPictures.html"
            target="_blank">UploadSiteHostedPictures</a> call will contain a full
            URL to the image on an eBay Picture Server. This is the URL that will
            be passed in through the <strong>imageUrls</strong> array. <br/><br/>
            Before any offer can be published, at least one image must exist for the
            offer. Links to images can either be passed in through this <strong>imageUrls</strong>
            container, or they can be passed in through the <strong>product.imageUrls</strong>
            container when creating each inventory item in the group. If the <strong>variesBy.aspectsImageVariesBy</strong>
            field is used to specify the main product aspect where the variations
            vary, the links to the images must be passed in through this <strong>imageUrls</strong>
            container, and there should be a picture for each variation. So, if the
            <strong>variesBy.aspectsImageVariesBy</strong> field is set to <code>Color</code>,
            a link should be included to an image demonstrating each available color
            in the group.<br><br> Most eBay sites support up to 12 pictures free of
            charge, and eBay Motors listings can have up to 24 pictures.<br/><br/>
            This container will always be returned for an inventory item group that
            has at least one published offer since a published offer will always have
            at least one picture, but this container will only be returned if defined
            for inventory item groups that have yet to have any published offers.
          items:
            type: string
          type: array
        inventoryItemGroupKey:
          description: 'This is the unique identifier of the inventory item group.
            This identifier is created by the seller when an inventory item group
            is created. This field is only applicable to the <strong>getInventoryItemGroup</strong>
            call and not to the <strong>createOrReplaceInventoryItemGroup</strong>
            call. In the <strong>createOrReplaceInventoryItemGroup</strong> call,
            the <strong>inventoryItemGroupKey</strong> value is passed into the end
            of the call URI instead. '
          type: string
        subtitle:
          description: 'A subtitle is an optional listing feature that allows the
            seller to provide more information about the product, possibly including
            keywords that may assist with search results. An additional listing fee
            will be charged to the seller if a subtitle is used. For more information
            on using listing subtitles on the US site, see the <a href="https://pages.ebay.com/help/sell/itemsubtitle.html"
            target="_blank">Adding a subtitle to your listings</a> help page. <br><br><span
            class="tablenote"> <strong>Note:</strong> Since this subtitle will ultimately  become
            the subtitle in a multiple-variation listing, the seller should not include
            the <strong>subtitle</strong> field when creating the inventory items
            that are members of the group. If they do include the <strong>subtitle</strong>
            field in an inventory item record, the text in that field will overwrite
            the text provided in this <strong>subtitle</strong> field for each inventory
            item in the group that is published.</span><br/><br/>This field will only
            be returned if set for an inventory item.<br/><br/><strong>Max Length</strong>:
            55<br/>'
          type: string
        title:
          description: 'The title of the inventory item group. This title will ultimately
            become the listing title once the first offer of the group is published.
            This field is not initially required when first creating an inventory
            item group, but will be required before the first offer of the group is
            published.<br><br><span class="tablenote"> <strong>Note:</strong> Since
            this title will ultimately  become the listing title in a multiple-variation
            listing, the seller should omit the <strong>title</strong> field when
            creating the inventory items that are members of the group. If they do
            include the <strong>title</strong> field in an inventory item record,
            the text in that field will overwrite the text provided in this <strong>title</strong>
            field for each inventory item in the group that is published.</span><br/><br/>
            This field is always returned if one or more offers associated with the
            inventory item group have been published, and is only returned if set
            for an inventory item group if that group has yet to have any offers published.<br/><br/><strong>Max
            Length</strong>: 80 <br/>'
          type: string
        variantSKUs:
          description: This required container is used to assign individual inventory
            items to the inventory item group. Multiple SKU values are passed in to
            this container. If updating an existing inventory item group, the seller
            should make sure that all member SKU values are passed in, as long as
            the seller wants that SKU to remain in the group.<br><br> It is also possible
            to add or remove SKUs with a <strong>createOrReplaceInventoryItemGroup</strong>
            call. If the seller wants to remove a SKU from the group, that seller
            will just omit that SKU value from this container to remove that inventory
            item/SKU from the inventory item group and any published, multiple-variation
            listing. However, a variation cannot be removed from the group if that
            variation has one or more sales for that listing. A workaround for this
            is to set that variation's quantity to <code>0</code> and it will be 'grayed
            out' in the View Item page.<br><br>This container is always returned.
          items:
            type: string
          type: array
        variesBy:
          $ref: '#/components/schemas/VariesBy'
        videoIds:
          description: An array of one or more VideoId values for the inventory item
            group. A VideoId is a unique identifier that is automatically created
            by eBay when a seller successfully uploads a video to eBay using the  <a
            href="https://developer.ebay.com/api-docs/commerce/media/resources/video/methods/uploadVideo"
            target="_blank">uploadVideo</a> method of the <a href="https://developer.ebay.com/api-docs/commerce/media/overview.html"
            target="_blank">Media API</a>.<br /><br />For information on supported
            marketplaces and platforms, as well as other requirements and limitations
            of video support, please refer to <a href="https://developer.ebay.com/api-docs/sell/static/inventory/managing-video-media.html"
            target="_blank">Managing videos</a>.
          items:
            type: string
          type: array
      type: object
      x-apifox-orders:
      - aspects
      - description
      - imageUrls
      - inventoryItemGroupKey
      - subtitle
      - title
      - variantSKUs
      - variesBy
      - videoIds
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryItemResponse:
      description: This type is used by the response of the <strong>bulkCreateOrReplaceInventoryItem</strong>
        method to indicate the success or failure of creating and/or updating each
        inventory item record. The <strong>sku</strong> value in this type identifies
        each inventory item record.
      example:
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        locale: locale
        sku: sku
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        errors:
          description: This container will be returned if there were one or more errors
            associated with the creation or update to the inventory item record.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        locale:
          description: This field is for future use only. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:LocaleEnum'>eBay
            API documentation</a>
          type: string
        sku:
          description: The seller-defined Stock-Keeping Unit (SKU) of the inventory
            item. The seller should have a unique SKU value for every product that
            they sell.
          type: string
        statusCode:
          description: The HTTP status code returned in this field indicates the success
            or failure of creating or updating the inventory item record for the inventory
            item indicated in the <strong>sku</strong> field. See the <strong>HTTP
            status codes</strong> table to see which each status code indicates.
          format: int32
          type: integer
        warnings:
          description: This container will be returned if there were one or more warnings
            associated with the creation or update to the inventory item record.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - errors
      - locale
      - sku
      - statusCode
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryItemWithSkuLocaleGroupKeys:
      description: This type is used to provide details about each retrieved inventory
        item record.
      example:
        condition: condition
        product:
          ean:
          - ean
          - ean
          imageUrls:
          - imageUrls
          - imageUrls
          isbn:
          - isbn
          - isbn
          subtitle: subtitle
          aspects: aspects
          description: description
          epid: epid
          upc:
          - upc
          - upc
          mpn: mpn
          title: title
          brand: brand
          videoIds:
          - videoIds
          - videoIds
        packageWeightAndSize:
          weight:
            unit: unit
            value: value
          packageType: packageType
          dimensions:
            name: name
            dimensionKey: dimensionKey
            value: value
        availability:
          shipToLocationAvailability:
            quantity: 5
            availabilityDistributions:
            - quantity: 6
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - quantity: 6
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            allocationByFormat:
              fixedPrice: 1
              auction: 6
          pickupAtLocationAvailability:
          - availabilityType: availabilityType
            quantity: 0
            merchantLocationKey: merchantLocationKey
            fulfillmentTime:
              unit: unit
              value: 0
          - availabilityType: availabilityType
            quantity: 0
            merchantLocationKey: merchantLocationKey
            fulfillmentTime:
              unit: unit
              value: 0
        locale: locale
        sku: sku
        conditionDescription: conditionDescription
        inventoryItemGroupKeys:
        - inventoryItemGroupKeys
        - inventoryItemGroupKeys
      properties:
        availability:
          $ref: '#/components/schemas/AvailabilityWithAll'
        condition:
          description: This enumeration value indicates the condition of the item.
            Supported item condition values will vary by eBay site and category. <br
            /><br /> Since the condition of an inventory item must be specified before
            being published in an offer, this field is always returned in the 'Get'
            calls for SKUs that are part of a published offer. If a SKU is not part
            of a published offer, this field will only be returned if set for the
            inventory item. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:ConditionEnum'>eBay
            API documentation</a>
          type: string
        conditionDescription:
          description: 'This string field is used by the seller to more clearly describe
            the condition of used items, or items that are not ''Brand New'', ''New
            with tags'', or ''New in box''. The ConditionDescription field is available
            for all categories. If the ConditionDescription field is used with an
            item in a new condition (Condition IDs 1000-1499), eBay will simply ignore
            this field if included, and eBay will return a warning message to the
            user. This field should only be used to further clarify the condition
            of the used item. It should not be used for branding, promotions, shipping,
            returns, payment or other information unrelated to the condition of the
            item. Make sure that the condition value, condition description, listing
            description, and the item''s pictures do not contradict one another.Max
            length: 1000.'
          type: string
        inventoryItemGroupKeys:
          description: This array is returned if the inventory item is associated
            with any inventory item group(s). The value(s) returned in this array
            are the unique identifier(s) of the inventory item's variation in a multiple-variation
            listing. This array is not returned if the inventory item is not associated
            with any inventory item groups.
          items:
            type: string
          type: array
        locale:
          description: This field is for future use only. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:LocaleEnum'>eBay
            API documentation</a>
          type: string
        packageWeightAndSize:
          $ref: '#/components/schemas/PackageWeightAndSize'
        product:
          $ref: '#/components/schemas/Product'
        sku:
          description: The seller-defined Stock-Keeping Unit (SKU) of the inventory
            item. The seller should have a unique SKU value for every product that
            they sell.
          type: string
      type: object
      x-apifox-orders:
      - availability
      - condition
      - conditionDescription
      - inventoryItemGroupKeys
      - locale
      - packageWeightAndSize
      - product
      - sku
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryItemListing:
      description: This type is used by the <strong>inventoryItems</strong> container
        that is returned in the response of the <strong>bulkMigrateListing</strong>
        call. Up to five <strong>sku</strong>/<strong>offerId</strong> pairs may be
        returned under the <strong>inventoryItems</strong> container, dependent on
        how many eBay listings the seller is attempting to migrate to the inventory
        model.
      example:
        offerId: offerId
        sku: sku
      properties:
        offerId:
          description: Upon a successful migration of a listing, eBay auto-generates
            this unique identifier, and this offer ID value will be used to retrieve
            and manage the newly-created offer object. This value will only be generated
            and returned if the eBay listing is migrated successfully.
          type: string
        sku:
          description: This is the seller-defined SKU value associated with the item(s)
            in a listing. This same SKU value will be used to retrieve and manage
            the newly-created inventory item object if the listing migration is successful.
            This SKU value will get returned even if the migration is not successful.
          type: string
      type: object
      x-apifox-orders:
      - offerId
      - sku
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Interval:
      description: 'This type is used by the <strong>intervals</strong> container
        to define the opening and closing times of a store''s working day. Local time
        (in Military format) is used, with the following format: <code>hh:mm:ss</code>.'
      example:
        close: close
        open: open
      properties:
        close:
          description: 'The <strong>close</strong> value is actually the time that
            the store closes. Local time (in Military format) is used. So, if a store
            closed at 8 PM local time, the <strong>close</strong> time would look
            like the following: <code>20:00:00</code>. This field is conditionally
            required if the <strong>intervals</strong> container is used to specify
            working hours or special hours for a store. <br><br>This field is returned
            if set for the store location.'
          type: string
        open:
          description: 'The <strong>open</strong> value is actually the time that
            the store opens. Local time (in Military format) is used. So, if a store
            opens at 9 AM local time, the <strong>close</strong> time would look like
            the following: <code>09:00:00</code>. This field is conditionally required
            if the <strong>intervals</strong> container is used to specify working
            hours or special hours for a store. <br><br>This field is returned if
            set for the store location.'
          type: string
      type: object
      x-apifox-orders:
      - close
      - open
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    GetInventoryItemResponse:
      description: This type is used by the response of the <strong>bulkGetInventoryItem</strong>
        method to give the status of each inventory item record that the user tried
        to retrieve.
      example:
        inventoryItem:
          condition: condition
          product:
            ean:
            - ean
            - ean
            imageUrls:
            - imageUrls
            - imageUrls
            isbn:
            - isbn
            - isbn
            subtitle: subtitle
            aspects: aspects
            description: description
            epid: epid
            upc:
            - upc
            - upc
            mpn: mpn
            title: title
            brand: brand
            videoIds:
            - videoIds
            - videoIds
          packageWeightAndSize:
            weight:
              unit: unit
              value: value
            packageType: packageType
            dimensions:
              name: name
              dimensionKey: dimensionKey
              value: value
          availability:
            shipToLocationAvailability:
              quantity: 5
              availabilityDistributions:
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              allocationByFormat:
                fixedPrice: 1
                auction: 6
            pickupAtLocationAvailability:
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          locale: locale
          sku: sku
          conditionDescription: conditionDescription
          inventoryItemGroupKeys:
          - inventoryItemGroupKeys
          - inventoryItemGroupKeys
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        sku: sku
        errors:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        statusCode: 0
      properties:
        errors:
          description: This container will be returned if there were one or more errors
            associated with retrieving the inventory item record.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        inventoryItem:
          $ref: '#/components/schemas/InventoryItemWithSkuLocaleGroupKeys'
        sku:
          description: The seller-defined Stock-Keeping Unit (SKU) of the inventory
            item. The seller should have a unique SKU value for every product that
            they sell.
          type: string
        statusCode:
          description: The HTTP status code returned in this field indicates the success
            or failure of retrieving the inventory item record for the inventory item
            specified in the <strong>sku</strong> field. See the <strong>HTTP status
            codes</strong> table to see which each status code indicates.
          format: int32
          type: integer
        warnings:
          description: This container will be returned if there were one or more warnings
            associated with retrieving the inventory item record.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - errors
      - inventoryItem
      - sku
      - statusCode
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    GetInventoryItem:
      description: The seller-defined Stock-Keeping Unit (SKU) of each inventory item
        that the user wants to retrieve is passed in the request of the <strong>bulkGetInventoryItem</strong>
        method.
      example:
        sku: sku
      properties:
        sku:
          description: An array of SKU values are passed in under the <strong>sku</strong>
            container to retrieve up to 25 inventory item records.
          type: string
      type: object
      x-apifox-orders:
      - sku
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    GeoCoordinates:
      description: This type is used to express the Global Positioning System (GPS)
        latitude and longitude coordinates of an inventory location.
      example:
        latitude: 0.8008281904610115
        longitude: 6.027456183070403
      properties:
        latitude:
          description: The latitude (North-South) component of the geographic coordinate.
            This field is required if a <strong>geoCoordinates</strong> container
            is used. <br><br>This field is returned if geographical coordinates are
            set for the inventory location.
          type: number
        longitude:
          description: The longitude (East-West) component of the geographic coordinate.
            This field is required if a <strong>geoCoordinates</strong> container
            is used. <br><br>This field is returned if geographical coordinates are
            set for the inventory location.
          type: number
      type: object
      x-apifox-orders:
      - latitude
      - longitude
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FeeSummary:
      description: This type is used to display the expected listing fees for each
        unpublished offer specified in the request of the <strong>getListingFees</strong>
        call.
      example:
        marketplaceId: marketplaceId
        fees:
        - amount:
            currency: currency
            value: value
          feeJurisdiction:
            regionType: regionType
            regionName: regionName
          feeMemo: feeMemo
          feeType: feeType
        - amount:
            currency: currency
            value: value
          feeJurisdiction:
            regionType: regionType
            regionName: regionName
          feeMemo: feeMemo
          feeType: feeType
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        fees:
          description: This container is an array of listing fees that can be expected
            to be applied to an offer on the specified eBay marketplace (<strong>marketplaceId</strong>
            value). Many fee types will get returned even when they are <code>0.0</code>.<br/><br/>See
            the <a href="https://pages.ebay.com/help/sell/fees.html" target="_blank">Standard
            selling fees</a> help page for more information on listing fees.
          items:
            $ref: '#/components/schemas/Fee'
          type: array
        marketplaceId:
          description: This is the unique identifier of the eBay site for which  listing
            fees for the offer are applicable. For implementation help, refer to <a
            href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:MarketplaceEnum'>eBay
            API documentation</a>
          type: string
        warnings:
          description: This container will contain an array of errors and/or warnings
            when a call is made, and errors and/or warnings occur.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - fees
      - marketplaceId
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FeesSummaryResponse:
      description: 'This type is used by the base response payload for the <strong>getListingFees</strong>
        call. '
      example:
        feeSummaries:
        - marketplaceId: marketplaceId
          fees:
          - amount:
              currency: currency
              value: value
            feeJurisdiction:
              regionType: regionType
              regionName: regionName
            feeMemo: feeMemo
            feeType: feeType
          - amount:
              currency: currency
              value: value
            feeJurisdiction:
              regionType: regionType
              regionName: regionName
            feeMemo: feeMemo
            feeType: feeType
          warnings:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
        - marketplaceId: marketplaceId
          fees:
          - amount:
              currency: currency
              value: value
            feeJurisdiction:
              regionType: regionType
              regionName: regionName
            feeMemo: feeMemo
            feeType: feeType
          - amount:
              currency: currency
              value: value
            feeJurisdiction:
              regionType: regionType
              regionName: regionName
            feeMemo: feeMemo
            feeType: feeType
          warnings:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
      properties:
        feeSummaries:
          description: This container consists of an array of one or more listing
            fees that the seller can expect to pay for unpublished offers specified
            in the call request. Many fee types will get returned even when they are
            <code>0.0</code>.
          items:
            $ref: '#/components/schemas/FeeSummary'
          type: array
      type: object
      x-apifox-orders:
      - feeSummaries
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FormatAllocation:
      description: This type is used to indicate the quantities of the inventory items
        that are reserved for the different listing formats of the SKU offers.
      example:
        fixedPrice: 1
        auction: 6
      properties:
        auction:
          description: This integer value indicates the quantity of the inventory
            item that is reserved for the published auction format offers of the SKU.
          format: int32
          type: integer
        fixedPrice:
          description: This integer value indicates the quantity of the inventory
            item that is available for the fixed-price offers of the SKU.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - auction
      - fixedPrice
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    EbayOfferDetailsWithKeys:
      description: This type provides details of an offer, and is used by the base
        request payload of the <strong>createOffer</strong> and <strong>bulkCreateOffer</strong>
        methods.
      example:
        availableQuantity: 0
        hideBuyerDetails: true
        includeCatalogProductDetails: true
        lotSize: 6
        quantityLimitPerBuyer: 1
        format: format
        secondaryCategoryId: secondaryCategoryId
        tax:
          amount:
            currency: currency
            value: value
          taxType: taxType
        pricingSummary:
          total:
            currency: currency
            value: value
          deliveryDiscount:
            currency: currency
            value: value
          priceSubtotal:
            currency: currency
            value: value
          fee:
            currency: currency
            value: value
          adjustment:
            currency: currency
            value: value
          tax:
            currency: currency
            value: value
          priceDiscountSubtotal:
            currency: currency
            value: value
          deliveryCost:
            currency: currency
            value: value
        listingPolicies:
          takeBackPolicyId: takeBackPolicyId
          eBayPlusIfEligible: true
          returnPolicyId: returnPolicyId
          bestOfferTerms:
            bestOfferEnabled: true
            autoAcceptPrice:
              currency: currency
              value: value
            autoDeclinePrice:
              currency: currency
              value: value
          shippingCostOverrides:
          - surcharge:
              currency: currency
              value: value
            shippingServiceType: shippingServiceType
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            priority: 5
          - surcharge:
              currency: currency
              value: value
            shippingServiceType: shippingServiceType
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            priority: 5
          fulfillmentPolicyId: fulfillmentPolicyId
          paymentPolicyId: paymentPolicyId
          productCompliancePolicyIds:
          - productCompliancePolicyIds
          - productCompliancePolicyIds
        marketplaceId: marketplaceId
        charity:
          donationPercentage: donationPercentage
          charityId: charityId
        merchantLocationKey: merchantLocationKey
        storeCategoryNames:
        - storeCategoryNames
        - storeCategoryNames
        listingStartDate: listingStartDate
        extendedProducerResponsibility:
          productPackageId: productPackageId
          ecoParticipationFee:
            currency: currency
            value: value
          productDocumentationId: productDocumentationId
          producerProductId: producerProductId
          shipmentPackageId: shipmentPackageId
        sku: sku
        categoryId: categoryId
        listingDuration: listingDuration
        listingDescription: listingDescription
      properties:
        availableQuantity:
          description: This integer value sets the quantity of the inventory item
            (specified by the <strong>sku</strong> value) that will be available for
            purchase by buyers shopping on the eBay site specified in the <strong>marketplaceId</strong>
            field. Quantity must be set to <code>1</code> or more in order for the
            inventory item to be purchasable, but this field is not necessarily required,
            even for published offers, if the general quantity of the inventory item
            has already been set in the inventory item record.<br/><br/> For auction
            listings, this value must be <code>1</code>.
          format: int32
          type: integer
        categoryId:
          description: The unique identifier of the eBay category that the product
            will be listed under. This field is not immediately required upon creating
            an offer, but will be required before publishing the offer. Sellers can
            use the <a href="https://developer.ebay.com/api-docs/commerce/taxonomy/resources/category_tree/methods/getCategorySuggestions"
            target="_blank">getCategorySuggestions</a> method of the Taxonomy API
            to retrieve suggested category ID values. The seller passes in a query
            string like "<em>iPhone 6</em>", and category ID values for suggested
            categories are returned in the response.
          type: string
        charity:
          $ref: '#/components/schemas/Charity'
        extendedProducerResponsibility:
          $ref: '#/components/schemas/ExtendedProducerResponsibility'
        format:
          description: This enumerated value indicates the listing format of the offer.
            <br/><br/>Supported values are <code>FIXED_PRICE</code> and <code>AUCTION</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:FormatTypeEnum'>eBay
            API documentation</a>
          type: string
        hideBuyerDetails:
          description: This field is included and set to <code>true</code> if the
            seller wishes to create a private listing. <br><br> Sellers may want to
            use this option when they believe that a listing's potential bidders/buyers
            would not want their obfuscated user IDs (and feedback scores) exposed
            to other users.
          type: boolean
        includeCatalogProductDetails:
          description: This field indicates whether or not eBay product catalog details
            are applied to a listing. A value of <code>true</code> indicates the listing
            corresponds to the eBay product associated with the provided product identifier.
            The product identifier is provided in <strong>createOrReplaceInventoryItem</strong>.<br/><br/>
            <strong>Default:</strong> true<p><span class="tablenote"><strong>Note:</strong>
            Though the <strong>includeCatalogProductDetails</strong> parameter is
            not required to be submitted in the request, the parameter defaults to
            <code>true</code> if omitted.</span></p>
          type: boolean
        listingDescription:
          description: 'The text in this field is (published offers), or will become
            (unpublished offers) the description of the eBay listing. This field is
            not immediately required for an unpublished offer, but will be required
            before publishing the offer. Note that if the <strong>listingDescription</strong>
            field was omitted in the <strong>createOffer</strong> call for the offer,
            the offer entity should have picked up the text provided in the <strong>product.description</strong>
            field of the inventory item record, or if the inventory item is part of
            a group, the offer entity should have picked up the text provided in the
            <strong>description</strong> field of the inventory item group record.<br/><br/>HTML
            tags and markup can be used in listing descriptions, but each character
            counts toward the max length limit.<br/><br/><span class="tablenote">
            <strong>Note:</strong> To ensure that their short listing description
            is optimized when viewed on mobile devices, sellers should strongly consider
            using eBay''s <a href="https://pages.ebay.com/sell/itemdescription/customizeyoursummary.html"
            target="_blank">View Item description summary feature</a> when listing
            their items. Keep in mind that the ''short'' listing description is what
            prospective buyers first see when they view the listing on a mobile device.
            The ''full'' listing description is also available to mobile users when
            they click on the short listing description, but the full description
            is not automatically optimized for viewing in mobile devices, and many
            users won''t even drill down to the full description.<br><br> Using HTML
            div and span tag attributes, this feature allows sellers to customize
            and fully control the short listing description that is displayed to prospective
            buyers when viewing the listing on a mobile device. The short listing
            description on mobile devices is limited to 800 characters, and whenever
            the full listing description (provided in this field, in UI, or seller
            tool) exceeds this limit, eBay uses a special algorithm to derive the
            best possible short listing description within the 800-character limit.
            However, due to some short listing description content being removed,
            it is definitely not ideal for the seller, and could lead to a bad buyer
            experience and possibly to a Significantly not as described (SNAD) case,
            since the buyer may not get complete details on the item when viewing
            the short listing description. See the eBay help page for more details
            on using the HTML div and span tags.</span><br><br><strong>Max length</strong>:
            500000 (which includes HTML markup/tags)'
          type: string
        listingDuration:
          description: This field indicates the number of days that the listing will
            be active. For fixed-price listings, this value must be set to <code>GTC</code>,
            but auction listings support different listing durations.<br /><br />
            The GTC (Good 'Til Cancelled) listings are automatically renewed each
            calendar month until the seller decides to end the listing.<br /><br /><span
            class="tablenote"> <strong>Note:</strong> If the listing duration expires
            for an auction offer without a winning bidder, the listing then becomes
            available as a fixed-price offer and listing duration will be <code>GTC</code>.</span>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:ListingDurationEnum'>eBay
            API documentation</a>
          type: string
        listingPolicies:
          $ref: '#/components/schemas/ListingPolicies'
        listingStartDate:
          description: This field can be used if the seller wants to specify a time
            in the future that the listing will become active on eBay. The timestamp
            supplied in this field should be in UTC format, and it should be far enough
            in the future so that the seller will have enought time to publish the
            listing with the <strong>publishOffer</strong> method.<br><br> This field
            is optional. If this field is not provided, the listing starts immediately
            after a successful <strong>publishOffer</strong> method.
          type: string
        lotSize:
          description: This field is only applicable if the listing is a lot listing.
            A lot listing is a listing that has multiple quantity of the same item,
            such as four identical tires being sold as a single offer, or it can be
            a mixed lot of similar items, such as used clothing items or an assortment
            of baseball cards. Whether the lot listing involved identical items or
            a mixed lot, the integer value passed into this field is the total number
            of items in the lot. Lots can be used for auction and fixed-price listings.
          format: int32
          type: integer
        marketplaceId:
          description: This enumeration value is the unique identifier of the eBay
            site for which the offer will be made available. See <strong>MarketplaceEnum</strong>
            for the list of supported enumeration values. This field is required.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:MarketplaceEnum'>eBay
            API documentation</a>
          type: string
        merchantLocationKey:
          description: 'The unique identifier of a merchant''s inventory location
            (where the inventory item in the offer is located). A <strong>merchantLocationKey</strong>
            value is established when the merchant creates an inventory location using
            the <strong>createInventoryLocation</strong> call. To get more information
            about inventory locations, the <strong>getInventoryLocation</strong> call
            can be used.<br/><br/>This field is not initially required upon first
            creating an offer, but will become required before an offer can be published.<br/><br/><b>Max
            length</b>: 36'
          type: string
        pricingSummary:
          $ref: '#/components/schemas/PricingSummary'
        quantityLimitPerBuyer:
          description: This field is only applicable and set if the seller wishes
            to set a restriction on the purchase quantity per seller. If this field
            is set by the seller for the offer, then each distinct buyer may purchase
            up to, but not exceed the quantity specified for this field. So, if this
            field's value is <code>5</code>, each buyer may purchase between one to
            five of these products, and the purchases can occur in one multiple-quantity
            purchase, or over multiple transactions. If a buyer attempts to purchase
            one or more of these products, and the cumulative quantity will take the
            buyer beyond the quantity limit, that buyer will be blocked from that
            purchase. <br/>
          format: int32
          type: integer
        secondaryCategoryId:
          description: The unique identifier for a secondary category. This field
            is applicable if the seller decides to list the item under two categories.
            Sellers can use the <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getCategorySuggestions"
            target="_blank">getCategorySuggestions</a> method of the Taxonomy API
            to retrieve suggested category ID values. A fee may be charged when adding
            a secondary category to a listing. <br/><br/><span class="tablenote"><strong>Note:</strong>
            You cannot list <strong>US eBay Motors</strong> vehicles in two categories.
            However, you can list <strong>Parts & Accessories</strong> in two categories.</span>
          type: string
        sku:
          description: 'This is the seller-defined SKU value of the product that will
            be listed on the eBay site (specified in the <strong>marketplaceId</strong>
            field). Only one offer (in unpublished or published state) may exist for
            each <strong>sku</strong>/<strong>marketplaceId</strong>/<strong>format</strong>
            combination. This field is required.<br/><br/><strong>Max Length</strong>:
            50<br/>'
          type: string
        storeCategoryNames:
          description: 'This container is used if the seller would like to place the
            inventory item into one or two eBay store categories that the seller has
            set up for their eBay store. The string value(s) passed in to this container
            will be the full path(s) to the eBay store categories, as shown below:<br>
            <pre><code>"storeCategoryNames": [<br/> "/Fashion/Men/Shirts", <br/> "/Fashion/Men/Accessories"
            ], </pre></code>'
          items:
            type: string
          type: array
        tax:
          $ref: '#/components/schemas/Tax'
      type: object
      x-apifox-orders:
      - availableQuantity
      - categoryId
      - charity
      - extendedProducerResponsibility
      - format
      - hideBuyerDetails
      - includeCatalogProductDetails
      - listingDescription
      - listingDuration
      - listingPolicies
      - listingStartDate
      - lotSize
      - marketplaceId
      - merchantLocationKey
      - pricingSummary
      - quantityLimitPerBuyer
      - secondaryCategoryId
      - sku
      - storeCategoryNames
      - tax
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    EbayOfferDetailsWithId:
      description: This type provides details of an offer, and is used by the base
        request payload of the <strong>updateOffer</strong> call. Every field that
        is currently set with the unpublished/published offer must also be passed
        into the <strong>updateOffer</strong> call, even those fields whose values
        are not changing. Note that for published offers, a successful <strong>updateOffer</strong>
        call will actually update the active eBay listing with whatever changes were
        made.
      example:
        availableQuantity: 0
        hideBuyerDetails: true
        includeCatalogProductDetails: true
        lotSize: 6
        quantityLimitPerBuyer: 1
        secondaryCategoryId: secondaryCategoryId
        tax:
          amount:
            currency: currency
            value: value
          taxType: taxType
        pricingSummary:
          total:
            currency: currency
            value: value
          deliveryDiscount:
            currency: currency
            value: value
          priceSubtotal:
            currency: currency
            value: value
          fee:
            currency: currency
            value: value
          adjustment:
            currency: currency
            value: value
          tax:
            currency: currency
            value: value
          priceDiscountSubtotal:
            currency: currency
            value: value
          deliveryCost:
            currency: currency
            value: value
        listingPolicies:
          takeBackPolicyId: takeBackPolicyId
          eBayPlusIfEligible: true
          returnPolicyId: returnPolicyId
          bestOfferTerms:
            bestOfferEnabled: true
            autoAcceptPrice:
              currency: currency
              value: value
            autoDeclinePrice:
              currency: currency
              value: value
          shippingCostOverrides:
          - surcharge:
              currency: currency
              value: value
            shippingServiceType: shippingServiceType
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            priority: 5
          - surcharge:
              currency: currency
              value: value
            shippingServiceType: shippingServiceType
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            priority: 5
          fulfillmentPolicyId: fulfillmentPolicyId
          paymentPolicyId: paymentPolicyId
          productCompliancePolicyIds:
          - productCompliancePolicyIds
          - productCompliancePolicyIds
        charity:
          donationPercentage: donationPercentage
          charityId: charityId
        merchantLocationKey: merchantLocationKey
        storeCategoryNames:
        - storeCategoryNames
        - storeCategoryNames
        listingStartDate: listingStartDate
        extendedProducerResponsibility:
          productPackageId: productPackageId
          ecoParticipationFee:
            currency: currency
            value: value
          productDocumentationId: productDocumentationId
          producerProductId: producerProductId
          shipmentPackageId: shipmentPackageId
        categoryId: categoryId
        listingDuration: listingDuration
        listingDescription: listingDescription
      properties:
        availableQuantity:
          description: This integer value sets the quantity of the inventory item
            that will be available through the offer. Quantity must be set to <code>1</code>
            or more in order for the inventory item to be purchasable. This value
            should not be more than the quantity that is specified for the inventory
            item record. For auction listings, this value must be <code>1</code>.
            <br/><br/>If this field exists for the current unpublished or published
            offer, it should be provided again in the <strong>updateOffer</strong>
            call, even if the value is not changing. If this particular field is omitted
            in an <strong>updateOffer</strong> call, the general available quantity
            set for the inventory item record may be used instead, and this may not
            be accurate if the inventory item is being sold across multiple marketplaces.
          format: int32
          type: integer
        categoryId:
          description: The unique identifier of the eBay category that the inventory
            item is/will be listed under. This field is not immediately required for
            an unpublished offer, but will be required before publishing the offer.
            Sellers can use the <a href="https://developer.ebay.com/api-docs/commerce/taxonomy/resources/category_tree/methods/getCategorySuggestions"
            target="_blank">getCategorySuggestions</a> method of the Taxonomy API
            to retrieve suggested category ID values. The seller passes in a query
            string like "<em>iPhone 6</em>", and category ID values for suggested
            categories are returned in the response.<br/><br/>If this field exists
            for the current unpublished offer, it should be provided again in the
            <strong>updateOffer</strong> call, even if the eBay category is not changing.
            For a published offer (aka active eBay listing), this field must be provided
            or an error may occur. The eBay category of an active eBay listing cannot
            be changed once the listing has one or more sales, or if the listing is
            scheduled to end in less than 12 hours.
          type: string
        charity:
          $ref: '#/components/schemas/Charity'
        extendedProducerResponsibility:
          $ref: '#/components/schemas/ExtendedProducerResponsibility'
        hideBuyerDetails:
          description: This field is included and set to <code>true</code> if the
            seller wishes to update a published or unpublished offer with the private
            listing feature. Alternatively, the seller could also remove the private
            listing feature (if already set for a published or unpublished offer)
            by including this field and setting it to <code>false</code>. <br><br>
            Sellers may want to use this option when they believe that a listing's
            potential bidders/buyers would not want their obfuscated user IDs (and
            feedback scores) exposed to other users.
          type: boolean
        includeCatalogProductDetails:
          description: This field indicates whether or not eBay product catalog details
            are applied to a listing. A value of <code>true</code> indicates the listing
            corresponds to the eBay product associated with the provided product identifier.
            The product identifier is provided in <strong>createOrReplaceInventoryItem</strong>.<p><span
            class="tablenote"><strong>Note:</strong> Though the <strong>includeCatalogProductDetails</strong>
            parameter is not required to be submitted in the request, the parameter
            defaults to 'true' if omitted.</span></p>
          type: boolean
        listingDescription:
          description: 'The text in this field is (published offers), or will become
            (unpublished offers) the description of the eBay listing. This field is
            not immediately required for an unpublished offer, but will be required
            before publishing the offer. Note that if the <strong>listingDescription</strong>
            field was omitted in the <strong>createOffer</strong> call for the offer,
            the offer entity should have picked up the text provided in the <strong>product.description</strong>
            field of the inventory item record, or if the inventory item is part of
            a group, the offer entity should have picked up the text provided in the
            <strong>description</strong> field of the inventory item group record.<br/><br/>HTML
            tags and markup can be used in listing descriptions, but each character
            counts toward the max length limit.<br/><br/><span class="tablenote">
            <strong>Note:</strong> To ensure that their short listing description
            is optimized when viewed on mobile devices, sellers should strongly consider
            using eBay''s <a href="https://pages.ebay.com/sell/itemdescription/customizeyoursummary.html"
            target="_blank">View Item description summary feature</a> when listing
            their items. Keep in mind that the ''short'' listing description is what
            prospective buyers first see when they view the listing on a mobile device.
            The ''full'' listing description is also available to mobile users when
            they click on the short listing description, but the full description
            is not automatically optimized for viewing in mobile devices, and many
            users won''t even drill down to the full description.<br><br> Using HTML
            div and span tag attributes, this feature allows sellers to customize
            and fully control the short listing description that is displayed to prospective
            buyers when viewing the listing on a mobile device. The short listing
            description on mobile devices is limited to 800 characters, and whenever
            the full listing description (provided in this field, in UI, or seller
            tool) exceeds this limit, eBay uses a special algorithm to derive the
            best possible short listing description within the 800-character limit.
            However, due to some short listing description content being removed,
            it is definitely not ideal for the seller, and could lead to a bad buyer
            experience and possibly to a Significantly not as described (SNAD) case,
            since the buyer may not get complete details on the item when viewing
            the short listing description. See the eBay help page for more details
            on using the HTML div and span tags.</span><br/><br/>If this field exists
            for the current unpublished offer, it should be provided again in the
            <strong>updateOffer</strong> call, even if the text is not changing. For
            a published offer (aka active eBay listing), this field must be provided
            or an error may occur.<br><br><strong>Max length</strong>: 500000 (which
            includes HTML markup/tags)'
          type: string
        listingDuration:
          description: This field indicates the number of days that the listing will
            be active. For fixed-price listings, this value must be set to <code>GTC</code>,
            but auction listings support different listing durations.<br /><br />
            The GTC (Good 'Til Cancelled) listings are automatically renewed each
            calendar month until the seller decides to end the listing.<br /><br /><span
            class="tablenote"> <strong>Note:</strong> If the listing duration expires
            for an auction offer without a winning bidder, the listing then becomes
            available as a fixed-price offer and listing duration will be <code>GTC</code>.</span>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:ListingDurationEnum'>eBay
            API documentation</a>
          type: string
        listingPolicies:
          $ref: '#/components/schemas/ListingPolicies'
        listingStartDate:
          description: This field can be used with an unpublished offer if the seller
            wants to specify a time in the future that the listing will become active
            on eBay. The timestamp supplied in this field should be in UTC format,
            and it should be far enough in the future so that the seller will have
            enough time to publish the listing with the <strong>publishOffer</strong>
            method.<br><br> This field is optional, and it doesn't apply to offers
            where the corresponding listing is already active. If this field is not
            provided, the listing starts immediately after a successful <strong>publishOffer</strong>
            method.
          type: string
        lotSize:
          description: This field is only applicable if the listing is a lot listing.
            A lot listing is a listing that has multiple quantity of the same item,
            such as four identical tires being sold as a single offer, or it can be
            a mixed lot of similar items, such as used clothing items or an assortment
            of baseball cards. Whether the lot listing involved identical items or
            a mixed lot, the integer value passed into this field is the total number
            of items in the lot. Lots can be used for auction and fixed-price listings.
          format: int32
          type: integer
        merchantLocationKey:
          description: 'The unique identifier of a merchant''s inventory location
            (where the inventory item in the offer is located). A <strong>merchantLocationKey</strong>
            value is established when the merchant creates an inventory location using
            the <strong>createInventoryLocation</strong> call. To get more information
            about inventory locations, the <strong>getInventoryLocation</strong> call
            can be used.<br/><br/>This field is not initially required upon first
            creating an offer, but will become required before an offer can be published.<br/><br/><b>Max
            length</b>: 36'
          type: string
        pricingSummary:
          $ref: '#/components/schemas/PricingSummary'
        quantityLimitPerBuyer:
          description: This field is only applicable and set if the seller wishes
            to set a restriction on the purchase quantity per seller. If this field
            is set by the seller for the offer, then each distinct buyer may purchase
            up to, but not exceeding the quantity specified for this field. So, if
            this field's value is <code>5</code>, each buyer may purchase between
            one to five of these products, and the purchases can occur in one multiple-quantity
            purchase, or over multiple transactions. If a buyer attempts to purchase
            one or more of these products, and the cumulative quantity will take the
            buyer beyond the quantity limit, that buyer will be blocked from that
            purchase.<br><br>If this field currently exists for an unpublished or
            published offer, it should be provided again in an <strong>updateOffer</strong>
            call, even if the value is not changing.<br/>
          format: int32
          type: integer
        secondaryCategoryId:
          description: The unique identifier for a secondary category. This field
            is applicable if the seller decides to list the item under two categories.
            Sellers can use the <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getCategorySuggestions"
            target="_blank">getCategorySuggestions</a> method of the Taxonomy API
            to retrieve suggested category ID values. A fee may be charged when adding
            a secondary category to a listing. <br/><br/><span class="tablenote"><strong>Note:</strong>
            You cannot list <strong>US eBay Motors</strong> vehicles in two categories.
            However, you can list <strong>Parts & Accessories</strong> in two categories.</span>
          type: string
        storeCategoryNames:
          description: 'This container is used if the seller would like to place the
            inventory item into one or two store categories that the seller has set
            up for their eBay store. The string value(s) passed in to this container
            will be the full path(s) to the store categories, as shown below:<br>
            <pre><code>"storeCategoryNames": [<br/> "/Fashion/Men/Shirts", <br/> "/Fashion/Men/Accessories"
            ], </pre></code>If this field currently exists for an unpublished or published
            offer, it should be provided again in an <strong>updateOffer</strong>
            call, even if the eBay categories are not changing.'
          items:
            type: string
          type: array
        tax:
          $ref: '#/components/schemas/Tax'
      type: object
      x-apifox-orders:
      - availableQuantity
      - categoryId
      - charity
      - extendedProducerResponsibility
      - hideBuyerDetails
      - includeCatalogProductDetails
      - listingDescription
      - listingDuration
      - listingPolicies
      - listingStartDate
      - lotSize
      - merchantLocationKey
      - pricingSummary
      - quantityLimitPerBuyer
      - secondaryCategoryId
      - storeCategoryNames
      - tax
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ExtendedProducerResponsibility:
      description: This type provides IDs for the producer or importer related to
        the new item, packaging, added documentation, or an eco-participation fee.
        In some markets, such as in France, this may be the importer of the item.
      example:
        productPackageId: productPackageId
        ecoParticipationFee:
          currency: currency
          value: value
        productDocumentationId: productDocumentationId
        producerProductId: producerProductId
        shipmentPackageId: shipmentPackageId
      properties:
        producerProductId:
          description: This ID is the Unique Identifier of the producer related to
            the item. For instance, if the seller is selling a cell phone, it is the
            ID related to the cell phone.
          type: string
        productPackageId:
          description: 'The Unique ID of the producer of any packaging related to
            the product added by the seller. This does not include package in which
            the product is shipped (see <strong>ShipmentPackageID</strong>). For instance,
            if the seller adds bubble wrap, it is the ID related to the bubble wrap. '
          type: string
        shipmentPackageId:
          description: This ID is the Unique Identifier of the producer of any packaging
            used by the seller to ship the item. This does not include non-shipping
            packaging added to the product (see <strong>ProductPackageID</strong>).
            This ID is required when the seller uses packaging to ship the item. For
            instance, if the seller uses a different box to ship the item, it is the
            ID related to the box.
          type: string
        productDocumentationId:
          description: This ID is the Unique Identifier of the producer of any paper
            added to the parcel of the item by the seller. For example, this ID concerns
            any notice, leaflet, or paper that the seller adds to a cell phone parcel.
          type: string
        ecoParticipationFee:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - producerProductId
      - productPackageId
      - shipmentPackageId
      - productDocumentationId
      - ecoParticipationFee
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    EbayOfferDetailsWithAll:
      description: This type provides details of an offer, and is used by the response
        payloads of the <strong>getOffer</strong> and the <strong>getOffers</strong>
        calls.
      example:
        availableQuantity: 6
        hideBuyerDetails: true
        includeCatalogProductDetails: true
        lotSize: 5
        quantityLimitPerBuyer: 2
        format: format
        secondaryCategoryId: secondaryCategoryId
        tax:
          amount:
            currency: currency
            value: value
          taxType: taxType
        pricingSummary:
          total:
            currency: currency
            value: value
          deliveryDiscount:
            currency: currency
            value: value
          priceSubtotal:
            currency: currency
            value: value
          fee:
            currency: currency
            value: value
          adjustment:
            currency: currency
            value: value
          tax:
            currency: currency
            value: value
          priceDiscountSubtotal:
            currency: currency
            value: value
          deliveryCost:
            currency: currency
            value: value
        listingPolicies:
          takeBackPolicyId: takeBackPolicyId
          eBayPlusIfEligible: true
          returnPolicyId: returnPolicyId
          bestOfferTerms:
            bestOfferEnabled: true
            autoAcceptPrice:
              currency: currency
              value: value
            autoDeclinePrice:
              currency: currency
              value: value
          shippingCostOverrides:
          - surcharge:
              currency: currency
              value: value
            shippingServiceType: shippingServiceType
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            priority: 5
          - surcharge:
              currency: currency
              value: value
            shippingServiceType: shippingServiceType
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            priority: 5
          fulfillmentPolicyId: fulfillmentPolicyId
          paymentPolicyId: paymentPolicyId
          productCompliancePolicyIds:
          - productCompliancePolicyIds
          - productCompliancePolicyIds
        marketplaceId: marketplaceId
        charity:
          donationPercentage: donationPercentage
          charityId: charityId
        merchantLocationKey: merchantLocationKey
        offerId: offerId
        storeCategoryNames:
        - storeCategoryNames
        - storeCategoryNames
        listingStartDate: listingStartDate
        extendedProducerResponsibility:
          productPackageId: productPackageId
          ecoParticipationFee:
            currency: currency
            value: value
          productDocumentationId: productDocumentationId
          producerProductId: producerProductId
          shipmentPackageId: shipmentPackageId
        listing:
          listingStatus: listingStatus
          listingId: listingId
          soldQuantity: 1
        sku: sku
        categoryId: categoryId
        listingDuration: listingDuration
        listingDescription: listingDescription
        status: status
      properties:
        availableQuantity:
          description: This integer value indicates the quantity of the inventory
            item (specified by the <strong>sku</strong> value) that will be available
            for purchase by buyers shopping on the eBay site specified in the <strong>marketplaceId</strong>
            field. For unpublished offers where the available quantity has yet to
            be set, the <strong>availableQuantity</strong> value is set to <code>0</code>.
          format: int32
          type: integer
        categoryId:
          description: The unique identifier of the primary eBay category that the
            inventory item is listed under. This field is always returned for published
            offers, but is only returned if set for unpublished offers.
          type: string
        charity:
          $ref: '#/components/schemas/Charity'
        extendedProducerResponsibility:
          $ref: '#/components/schemas/ExtendedProducerResponsibility'
        format:
          description: This enumerated value indicates the listing format of the offer.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:FormatTypeEnum'>eBay
            API documentation</a>
          type: string
        hideBuyerDetails:
          description: This field is returned as <code>true</code> if the private
            listing feature has been enabled for the offer. Sellers may want to use
            this feature when they believe that a listing's potential bidders/buyers
            would not want their obfuscated user IDs (and feedback scores) exposed
            to other users. <br><br> This field is always returned even if not explicitly
            set in the offer. It defaults to <code>false</code>, so will get returned
            as <code>false</code> if seller does not set this feature with a 'Create'
            or 'Update' offer method.
          type: boolean
        includeCatalogProductDetails:
          description: This field indicates whether or not eBay product catalog details
            are applied to a listing. A value of <code>true</code> indicates the listing
            corresponds to the eBay product associated with the provided product identifier.
            The product identifier is provided in <strong>createOrReplaceInventoryItem</strong>.<p><span
            class="tablenote"><strong>Note:</strong> Though the <strong>includeCatalogProductDetails</strong>
            parameter is not required to be submitted in the request, the parameter
            defaults to 'true' if omitted.</span></p>
          type: boolean
        listing:
          $ref: '#/components/schemas/ListingDetails'
        listingDescription:
          description: 'The description of the eBay listing that is part of the unpublished
            or published offer. This field is always returned for published offers,
            but is only returned if set for unpublished offers.<br/><br/><strong>Max
            Length</strong>: 500000 (which includes HTML markup/tags)'
          type: string
        listingDuration:
          description: This field indicates the number of days that the listing will
            be active.<br /><br />This field is returned for both auction and fixed-price
            listings; however, the value returned for fixed-price listings will always
            be <code>GTC</code>. The GTC (Good 'Til Cancelled) listings are automatically
            renewed each calendar month until the seller decides to end the listing.<br
            /><br /><span class="tablenote"> <strong>Note:</strong> If the listing
            duration expires for an auction offer, the listing then becomes available
            as a fixed-price offer and will be GTC.</span> For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:ListingDurationEnum'>eBay
            API documentation</a>
          type: string
        listingPolicies:
          $ref: '#/components/schemas/ListingPolicies'
        listingStartDate:
          description: This timestamp is the date/time that the seller set for the
            scheduled listing. With the scheduled listing feature, the seller can
            set a time in the future that the listing will become active, instead
            of the listing becoming active immediately after a <strong>publishOffer</strong>
            call. <br><br> Scheduled listings do not always start at the exact date/time
            specified by the seller, but the date/time of the timestamp returned in
            <strong>getOffer</strong>/<strong>getOffers</strong> will be the same
            as the timestamp passed into a 'Create' or 'Update' offer call. <br><br>
            This field is returned if set for an offer.
          type: string
        lotSize:
          description: This field is only applicable and returned if the listing is
            a lot listing. A lot listing is a listing that has multiple quantity of
            the same product. An example would be a set of four identical car tires.
            The integer value in this field is the number of identical items being
            sold through the lot listing.
          format: int32
          type: integer
        marketplaceId:
          description: This enumeration value is the unique identifier of the eBay
            site on which the offer is available, or will be made available. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:MarketplaceEnum'>eBay
            API documentation</a>
          type: string
        merchantLocationKey:
          description: 'The unique identifier of the inventory location. This identifier
            is set up by the merchant when the inventory location is first created
            with the <strong>createInventoryLocation</strong> call. Once this value
            is set for an inventory location, it can not be modified. To get more
            information about this inventory location, the <strong>getInventoryLocation</strong>
            call can be used, passing in this value at the end of the call URI.<br/><br/>This
            field is always returned for published offers, but is only returned if
            set for unpublished offers.<br/><br/><b>Max length</b>: 36'
          type: string
        offerId:
          description: The unique identifier of the offer. This identifier is used
            in many offer-related calls, and it is also used in the <strong>bulkUpdatePriceQuantity</strong>
            call.
          type: string
        pricingSummary:
          $ref: '#/components/schemas/PricingSummary'
        quantityLimitPerBuyer:
          description: This field is only applicable and set if the seller wishes
            to set a restriction on the purchase quantity of an inventory item per
            seller. If this field is set by the seller for the offer, then each distinct
            buyer may purchase up to, but not exceed the quantity in this field. So,
            if this field's value is <code>5</code>, each buyer may purchase a quantity
            of the inventory item between one and five, and the purchases can occur
            in one multiple-quantity purchase, or over multiple transactions. If a
            buyer attempts to purchase one or more of these products, and the cumulative
            quantity will take the buyer beyond the quantity limit, that buyer will
            be blocked from that purchase.<br/>
          format: int32
          type: integer
        secondaryCategoryId:
          description: The unique identifier for a secondary category. This field
            is applicable if the seller decides to list the item under two categories.
            Sellers can use the <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getCategorySuggestions"
            target="_blank">getCategorySuggestions</a> method of the Taxonomy API
            to retrieve suggested category ID values. A fee may be charged when adding
            a secondary category to a listing. <br/><br/><span class="tablenote"><strong>Note:</strong>
            You cannot list <strong>US eBay Motors</strong> vehicles in two categories.
            However, you can list <strong>Parts & Accessories</strong> in two categories.</span>
          type: string
        sku:
          description: 'This is the seller-defined SKU value of the product in the
            offer.<br/><br/><strong>Max Length</strong>: 50 <br/>'
          type: string
        status:
          description: The enumeration value in this field specifies the status of
            the offer - either <code>PUBLISHED</code> or <code>UNPUBLISHED</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:OfferStatusEnum'>eBay
            API documentation</a>
          type: string
        storeCategoryNames:
          description: 'This container is returned if the seller chose to place the
            inventory item into one or two eBay store categories that the seller has
            set up for their eBay store. The string value(s) in this container will
            be the full path(s) to the eBay store categories, as shown below:<br>
            <pre><code>"storeCategoryNames": [<br/> "/Fashion/Men/Shirts", <br/> "/Fashion/Men/Accessories"
            ], </pre></code>'
          items:
            type: string
          type: array
        tax:
          $ref: '#/components/schemas/Tax'
      type: object
      x-apifox-orders:
      - availableQuantity
      - categoryId
      - charity
      - extendedProducerResponsibility
      - format
      - hideBuyerDetails
      - includeCatalogProductDetails
      - listing
      - listingDescription
      - listingDuration
      - listingPolicies
      - listingStartDate
      - lotSize
      - marketplaceId
      - merchantLocationKey
      - offerId
      - pricingSummary
      - quantityLimitPerBuyer
      - secondaryCategoryId
      - sku
      - status
      - storeCategoryNames
      - tax
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkPublishResponse:
      description: This type is used by the base response of the <strong>bulkPublishOffer</strong>
        method.
      example:
        responses:
        - warnings:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          offerId: offerId
          listingId: listingId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - warnings:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          offerId: offerId
          listingId: listingId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: A node is returned under the <strong>responses</strong> container
            to indicate the success or failure of each offer that the seller was attempting
            to publish.
          items:
            $ref: '#/components/schemas/OfferResponseWithListingId'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AvailabilityWithAll:
      description: This type is used to specify the quantity of the inventory items
        that are available for purchase if the items will be shipped to the buyer,
        and the quantity of the inventory items that are available for In-Store Pickup
        at one or more of the merchant's physical stores.<br /><br />In-Store Pickup
        is only available to large merchants selling on the US, UK, Germany, and Australia
        sites.
      example:
        shipToLocationAvailability:
          quantity: 5
          availabilityDistributions:
          - quantity: 6
            merchantLocationKey: merchantLocationKey
            fulfillmentTime:
              unit: unit
              value: 0
          - quantity: 6
            merchantLocationKey: merchantLocationKey
            fulfillmentTime:
              unit: unit
              value: 0
          allocationByFormat:
            fixedPrice: 1
            auction: 6
        pickupAtLocationAvailability:
        - availabilityType: availabilityType
          quantity: 0
          merchantLocationKey: merchantLocationKey
          fulfillmentTime:
            unit: unit
            value: 0
        - availabilityType: availabilityType
          quantity: 0
          merchantLocationKey: merchantLocationKey
          fulfillmentTime:
            unit: unit
            value: 0
      properties:
        pickupAtLocationAvailability:
          description: This container consists of an array of one or more of the merchant's
            physical stores where the inventory item is available for in-store pickup.<br
            /><br />The store ID, the quantity available, and the fulfillment time
            (how soon the item will be ready for pickup after the order occurs) are
            all returned in this container.
          items:
            $ref: '#/components/schemas/PickupAtLocationAvailability'
          type: array
        shipToLocationAvailability:
          $ref: '#/components/schemas/ShipToLocationAvailabilityWithAll'
      type: object
      x-apifox-orders:
      - pickupAtLocationAvailability
      - shipToLocationAvailability
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Compatibility:
      description: This type is used by the <strong>createOrReplaceProductCompatibility</strong>
        call to associate compatible vehicles to an inventory item. This type is also
        the base response of the <strong>getProductCompatibility</strong> call.
      example:
        compatibleProducts:
        - notes: notes
          productIdentifier:
            gtin: gtin
            epid: epid
            ktype: ktype
          compatibilityProperties:
          - name: name
            value: value
          - name: name
            value: value
          productFamilyProperties:
            trim: trim
            engine: engine
            year: year
            model: model
            make: make
        - notes: notes
          productIdentifier:
            gtin: gtin
            epid: epid
            ktype: ktype
          compatibilityProperties:
          - name: name
            value: value
          - name: name
            value: value
          productFamilyProperties:
            trim: trim
            engine: engine
            year: year
            model: model
            make: make
        sku: sku
      properties:
        compatibleProducts:
          description: This container consists of an array of motor vehicles (make,
            model, year, trim, engine) that are compatible with the motor vehicle
            part or accessory specified by the sku value.
          items:
            $ref: '#/components/schemas/CompatibleProduct'
          type: array
        sku:
          description: This is the seller-defined SKU value of the inventory item
            that will be associated with the compatible vehicles. This field is not
            applicable to the <strong>createOrReplaceProductCompatibility</strong>  call,
            but it is always returned with the <strong>getProductCompatibility</strong>
            call. For the <strong>createOrReplaceProductCompatibility</strong>  call,
            the SKU value for the inventory item is actually passed in as part of
            the call URI, and not in the request payload.
          type: string
      type: object
      x-apifox-orders:
      - compatibleProducts
      - sku
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkMigrateListingResponse:
      description: This type is used by the response payload of the <strong>bulkMigrateListings</strong>
        call.
      example:
        responses:
        - marketplaceId: marketplaceId
          inventoryItems:
          - offerId: offerId
            sku: sku
          - offerId: offerId
            sku: sku
          warnings:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          inventoryItemGroupKey: inventoryItemGroupKey
          listingId: listingId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - marketplaceId: marketplaceId
          inventoryItems:
          - offerId: offerId
            sku: sku
          - offerId: offerId
            sku: sku
          warnings:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          inventoryItemGroupKey: inventoryItemGroupKey
          listingId: listingId
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: This is the base container of the response payload of the <strong>bulkMigrateListings</strong>
            call. The results of each attempted listing migration is captured under
            this container.
          items:
            $ref: '#/components/schemas/MigrateListingResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkGetInventoryItem:
      description: This type is used by the base request of the <strong>bulkGetInventoryItem</strong>
        method.
      example:
        requests:
        - sku: sku
        - sku: sku
      properties:
        requests:
          description: The seller passes in multiple SKU values under this container
            to retrieve multiple inventory item records. Up to 25 inventory item records
            can be retrieved at one time.
          items:
            $ref: '#/components/schemas/GetInventoryItem'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkPriceQuantityResponse:
      description: This type is use by the base response payload of the <strong>bulkUpdatePriceQuantity</strong>
        call. The <strong>bulkUpdatePriceQuantity</strong> call response will return
        an HTTP status code, offer ID, and SKU value for each offer/inventory item
        being updated, as well as an <strong>errors</strong> and/or <strong>warnings</strong>
        container if any errors or warnings are triggered while trying to update those
        offers/inventory items.
      example:
        responses:
        - warnings:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          offerId: offerId
          sku: sku
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - warnings:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          offerId: offerId
          sku: sku
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: This container will return an HTTP status code, offer ID, and
            SKU value for each offer/inventory item being updated, as well as an <strong>errors</strong>
            and/or <strong>warnings</strong> container if any errors or warnings are
            triggered while trying to update those offers/inventory items.
          items:
            $ref: '#/components/schemas/PriceQuantityResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CompatibleProduct:
      description: 'This type is used to specify/indicate the motor vehicles that
        are compatible with the corresponding inventory item. '
      example:
        notes: notes
        productIdentifier:
          gtin: gtin
          epid: epid
          ktype: ktype
        compatibilityProperties:
        - name: name
          value: value
        - name: name
          value: value
        productFamilyProperties:
          trim: trim
          engine: engine
          year: year
          model: model
          make: make
      properties:
        compatibilityProperties:
          description: 'This container consists of an array of motor vehicles that
            are compatible with the motor vehicle part or accessory specified by the
            SKU value in the call URI. Each motor vehicle is defined through a separate
            set of name/value pairs. In the <strong>name</strong> field, the vehicle
            aspect (such as ''make'', ''model'', ''year'', ''trim'', or ''engine'')
            will be identified, and the <strong>value</strong> field will be used
            to identify the value of each aspect. The <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getCompatibilityProperties">getCompatibilityProperties</a>
            method of the Taxonomy API can be used to retrieve applicable vehicle
            aspect names for a specified category, and the <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getCompatibilityPropertyValues">getCompatibilityPropertyValues</a>
            method of the Taxonomy API can be used to retrieve possible values for
            these same vehicle aspect names. Below is an example of identifying one
            motor vehicle using the <strong>compatibilityProperties</strong> container:<br><br><code>&quot;compatibilityProperties&quot;
            : &#91;<br>&nbsp;&nbsp;&#123;<br>&nbsp;&nbsp;&nbsp;&quot;name&quot; :
            &quot;make&quot;,<br>&nbsp;&nbsp;&nbsp;&quot;value&quot; : &quot;Subaru&quot;<br>&nbsp;&nbsp;&#125;,<br>&nbsp;&nbsp;&#123;<br>&nbsp;&nbsp;&nbsp;&quot;name&quot;
            : &quot;model&quot;,<br>&nbsp;&nbsp;&nbsp;&quot;value&quot; : &quot;GL&quot;<br>&nbsp;&nbsp;&#125;,<br>&nbsp;&nbsp;&#123;<br>&nbsp;&nbsp;&nbsp;&quot;name&quot;
            : &quot;year&quot;,<br>&nbsp;&nbsp;&nbsp;&quot;value&quot; : &quot;1983&quot;<br>&nbsp;&nbsp;&#125;,<br>&nbsp;&nbsp;&#123;<br>&nbsp;&nbsp;&nbsp;&quot;name&quot;
            : &quot;trim&quot;,<br>&nbsp;&nbsp;&nbsp;&quot;value&quot; : &quot;Base
            Wagon 4-Door&quot;<br>&nbsp;&nbsp;&#125;,<br>&nbsp;&nbsp;&#123;<br>&nbsp;&nbsp;&nbsp;&quot;name&quot;
            : &quot;engine&quot;,<br>&nbsp;&nbsp;&nbsp;&quot;value&quot; : &quot;1.8L
            Turbocharged&quot;<br>&nbsp;&nbsp;&#125;<br>&#93;</code><br><br>Typically,
            the make, model, and year of the motor vehicle are always required, with
            the trim and engine being necessary sometimes, but it will be dependent
            on the part or accessory, and on the vehicle class.<br/><br/><span class="tablenote">
            <strong>Note:</strong> The <strong>productFamilyProperties</strong> container
            is in the process of being deprecated and will no longer be supported
            in February of 2021, so if you are a new user of <strong>createOrReplaceProductCompatibility</strong>,
            you should use the <strong>compatibilityProperties</strong> container
            instead, and if you are already integrated and using the <strong>productFamilyProperties</strong>
            container, you should make plans to migrate to <strong>compatibilityProperties</strong>.
            The <strong>productFamilyProperties</strong> and <strong>compatibilityProperties</strong>
            containers may not be used together or the call will fail.</span>'
          items:
            $ref: '#/components/schemas/NameValueList'
          type: array
        notes:
          description: 'This field is optionally used by the seller to input any notes
            pertaining to the compatible vehicle list being defined. The seller might
            use this field to specify the placement of the part on a vehicle or other
            applicable information. This field will only be returned if specified
            by the seller.<br/><br/><strong>Max Length</strong>: 500<br/>'
          type: string
        productFamilyProperties:
          $ref: '#/components/schemas/ProductFamilyProperties'
        productIdentifier:
          $ref: '#/components/schemas/ProductIdentifier'
      type: object
      x-apifox-orders:
      - compatibilityProperties
      - notes
      - productFamilyProperties
      - productIdentifier
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Charity:
      description: This type is used to identify the charitable organization associated
        with the listing, and the percentage of the sale proceeds that the charitable
        organization will receive for each sale generated by the listing. <br/><br/>In
        order to receive a percentage of the sales proceeds, the charitable organization
        must be registered with the PayPal Giving Fund, which is a partner of eBay
        for Charity.
      example:
        donationPercentage: donationPercentage
        charityId: charityId
      properties:
        charityId:
          description: The eBay-assigned unique identifier of the charitable organization
            that will receive a percentage of the sales proceeds. The charitable organization
            must be reqistered with the PayPal Giving Fund in order to receive sales
            proceeds through eBay listings.<br/><br/>This field is conditionally required
            if a seller is planning on donating a percentage of the sale proceeds
            to a charitable organization.<br><br>The eBay-assigned unique identifier
            of a charitable organization can be found using the <strong>GetCharities</strong>
            call of the Trading API. In the <strong>GetCharities</strong> call response,
            this unique identifier is shown in the <strong>id</strong> attribute of
            the <strong>Charity</strong> container.
          type: string
        donationPercentage:
          description: This field is the percentage of the purchase price that the
            charitable organization (identified in the <strong>charityId</strong>
            field) will receive for each sale that the listing generates. This field
            is conditionally required if a seller is planning on donating a percentage
            of the sale proceeds to a charitable organization. This numeric value
            can range from 10 to 100, and in any 5 (percent) increments in between
            this range (e.g. <code>10</code>, <code>15</code>, <code>20</code>...<code>95</code>,...
            <code>100</code>). The seller would pass in <code>10</code> for 10 percent,
            <code>15</code> for 15 percent, <code>20</code> for 20 percent, and so
            on, all the way to <code>100</code> for 100 percent.
          type: string
      type: object
      x-apifox-orders:
      - charityId
      - donationPercentage
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkPriceQuantity:
      description: This type is used by the base request payload of the <strong>bulkUpdatePriceQuantity</strong>
        call. The <strong>bulkUpdatePriceQuantity</strong> call allows the seller
        to update the total 'ship-to-home' quantity of one or more inventory items
        (up to 25) and/or to update the price and/or quantity of one or more specific
        published offers.
      example:
        requests:
        - offers:
          - availableQuantity: 0
            price:
              currency: currency
              value: value
            offerId: offerId
          - availableQuantity: 0
            price:
              currency: currency
              value: value
            offerId: offerId
          shipToLocationAvailability:
            quantity: 1
            availabilityDistributions:
            - quantity: 6
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - quantity: 6
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          sku: sku
        - offers:
          - availableQuantity: 0
            price:
              currency: currency
              value: value
            offerId: offerId
          - availableQuantity: 0
            price:
              currency: currency
              value: value
            offerId: offerId
          shipToLocationAvailability:
            quantity: 1
            availabilityDistributions:
            - quantity: 6
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - quantity: 6
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          sku: sku
      properties:
        requests:
          description: This container is used by the seller to update the total 'ship-to-home'
            quantity of one or more inventory items (up to 25) and/or to update the
            price and/or quantity of one or more specific published offers.
          items:
            $ref: '#/components/schemas/PriceQuantity'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkMigrateListing:
      description: This type is used by the base container of the <strong>bulkMigrateListings</strong>
        request payload.
      example:
        requests:
        - listingId: listingId
        - listingId: listingId
      properties:
        requests:
          description: This is the base container of the <strong>bulkMigrateListings</strong>
            request payload. One to five eBay listings will be included under this
            container.
          items:
            $ref: '#/components/schemas/MigrateListing'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkInventoryItemResponse:
      description: This type is used by the base response of the <strong>bulkCreateOrReplaceInventoryItem</strong>
        method.
      example:
        responses:
        - warnings:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          locale: locale
          sku: sku
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - warnings:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          locale: locale
          sku: sku
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: This is the base container of the <strong>bulkCreateOrReplaceInventoryItem</strong>
            response. The results of each attempted inventory item creation/update
            is captured under this container.
          items:
            $ref: '#/components/schemas/InventoryItemResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkOfferResponse:
      description: This type is used by the base response of the <strong>bulkCreateOffer</strong>
        method.
      example:
        responses:
        - marketplaceId: marketplaceId
          warnings:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          format: format
          offerId: offerId
          sku: sku
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - marketplaceId: marketplaceId
          warnings:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          format: format
          offerId: offerId
          sku: sku
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          items:
            $ref: '#/components/schemas/OfferSkuResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkGetInventoryItemResponse:
      description: This type is used by the base response of the <strong>bulkGetInventoryItem</strong>
        method.
      example:
        responses:
        - inventoryItem:
            condition: condition
            product:
              ean:
              - ean
              - ean
              imageUrls:
              - imageUrls
              - imageUrls
              isbn:
              - isbn
              - isbn
              subtitle: subtitle
              aspects: aspects
              description: description
              epid: epid
              upc:
              - upc
              - upc
              mpn: mpn
              title: title
              brand: brand
              videoIds:
              - videoIds
              - videoIds
            packageWeightAndSize:
              weight:
                unit: unit
                value: value
              packageType: packageType
              dimensions:
                name: name
                dimensionKey: dimensionKey
                value: value
            availability:
              shipToLocationAvailability:
                quantity: 5
                availabilityDistributions:
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                allocationByFormat:
                  fixedPrice: 1
                  auction: 6
              pickupAtLocationAvailability:
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            locale: locale
            sku: sku
            conditionDescription: conditionDescription
            inventoryItemGroupKeys:
            - inventoryItemGroupKeys
            - inventoryItemGroupKeys
          warnings:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          sku: sku
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
        - inventoryItem:
            condition: condition
            product:
              ean:
              - ean
              - ean
              imageUrls:
              - imageUrls
              - imageUrls
              isbn:
              - isbn
              - isbn
              subtitle: subtitle
              aspects: aspects
              description: description
              epid: epid
              upc:
              - upc
              - upc
              mpn: mpn
              title: title
              brand: brand
              videoIds:
              - videoIds
              - videoIds
            packageWeightAndSize:
              weight:
                unit: unit
                value: value
              packageType: packageType
              dimensions:
                name: name
                dimensionKey: dimensionKey
                value: value
            availability:
              shipToLocationAvailability:
                quantity: 5
                availabilityDistributions:
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                - quantity: 6
                  merchantLocationKey: merchantLocationKey
                  fulfillmentTime:
                    unit: unit
                    value: 0
                allocationByFormat:
                  fixedPrice: 1
                  auction: 6
              pickupAtLocationAvailability:
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - availabilityType: availabilityType
                quantity: 0
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            locale: locale
            sku: sku
            conditionDescription: conditionDescription
            inventoryItemGroupKeys:
            - inventoryItemGroupKeys
            - inventoryItemGroupKeys
          warnings:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          sku: sku
          errors:
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - domain: domain
            subdomain: subdomain
            outputRefIds:
            - outputRefIds
            - outputRefIds
            errorId: 0
            inputRefIds:
            - inputRefIds
            - inputRefIds
            category: category
            longMessage: longMessage
            message: message
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          statusCode: 0
      properties:
        responses:
          description: This is the base container of the <strong>bulkGetInventoryItem</strong>
            response. The results of each attempted inventory item retrieval is captured
            under this container.
          items:
            $ref: '#/components/schemas/GetInventoryItemResponse'
          type: array
      type: object
      x-apifox-orders:
      - responses
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkOffer:
      description: This type is used by the base request of the <strong>bulkPublishOffer</strong>
        method, which is used to publish up to 25 different offers.
      example:
        requests:
        - offerId: offerId
        - offerId: offerId
      properties:
        requests:
          description: This container is used to pass in an array of offers to publish.
            Up to 25 offers can be published with one <strong>bulkPublishOffer</strong>
            method.
          items:
            $ref: '#/components/schemas/OfferKeyWithId'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkInventoryItem:
      description: The base request of the <strong>bulkCreateOrReplaceInventoryItem</strong>
        method.
      example:
        requests:
        - condition: condition
          product:
            ean:
            - ean
            - ean
            imageUrls:
            - imageUrls
            - imageUrls
            isbn:
            - isbn
            - isbn
            subtitle: subtitle
            aspects: aspects
            description: description
            epid: epid
            upc:
            - upc
            - upc
            mpn: mpn
            title: title
            brand: brand
            videoIds:
            - videoIds
            - videoIds
          packageWeightAndSize:
            weight:
              unit: unit
              value: value
            packageType: packageType
            dimensions:
              name: name
              dimensionKey: dimensionKey
              value: value
          availability:
            shipToLocationAvailability:
              quantity: 1
              availabilityDistributions:
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            pickupAtLocationAvailability:
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          locale: locale
          sku: sku
          conditionDescription: conditionDescription
        - condition: condition
          product:
            ean:
            - ean
            - ean
            imageUrls:
            - imageUrls
            - imageUrls
            isbn:
            - isbn
            - isbn
            subtitle: subtitle
            aspects: aspects
            description: description
            epid: epid
            upc:
            - upc
            - upc
            mpn: mpn
            title: title
            brand: brand
            videoIds:
            - videoIds
            - videoIds
          packageWeightAndSize:
            weight:
              unit: unit
              value: value
            packageType: packageType
            dimensions:
              name: name
              dimensionKey: dimensionKey
              value: value
          availability:
            shipToLocationAvailability:
              quantity: 1
              availabilityDistributions:
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
              - quantity: 6
                merchantLocationKey: merchantLocationKey
                fulfillmentTime:
                  unit: unit
                  value: 0
            pickupAtLocationAvailability:
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
            - availabilityType: availabilityType
              quantity: 0
              merchantLocationKey: merchantLocationKey
              fulfillmentTime:
                unit: unit
                value: 0
          locale: locale
          sku: sku
          conditionDescription: conditionDescription
      properties:
        requests:
          description: The details of each inventory item that is being created or
            updated is passed in under this container. Up to 25 inventory item records
            can be created and/or updated with one <strong>bulkCreateOrReplaceInventoryItem</strong>
            call.
          items:
            $ref: '#/components/schemas/InventoryItemWithSkuLocale'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BulkEbayOfferDetailsWithKeys:
      description: This type is used by the base request of the <strong>bulkCreateOffer</strong>
        method, which is used to create up to 25 new offers.
      example:
        requests:
        - availableQuantity: 0
          hideBuyerDetails: true
          includeCatalogProductDetails: true
          lotSize: 6
          quantityLimitPerBuyer: 1
          format: format
          secondaryCategoryId: secondaryCategoryId
          tax:
            amount:
              currency: currency
              value: value
            taxType: taxType
          pricingSummary:
            total:
              currency: currency
              value: value
            deliveryDiscount:
              currency: currency
              value: value
            priceSubtotal:
              currency: currency
              value: value
            fee:
              currency: currency
              value: value
            adjustment:
              currency: currency
              value: value
            tax:
              currency: currency
              value: value
            priceDiscountSubtotal:
              currency: currency
              value: value
            deliveryCost:
              currency: currency
              value: value
          listingPolicies:
            takeBackPolicyId: takeBackPolicyId
            eBayPlusIfEligible: true
            returnPolicyId: returnPolicyId
            bestOfferTerms:
              bestOfferEnabled: true
              autoAcceptPrice:
                currency: currency
                value: value
              autoDeclinePrice:
                currency: currency
                value: value
            shippingCostOverrides:
            - surcharge:
                currency: currency
                value: value
              shippingServiceType: shippingServiceType
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              priority: 5
            - surcharge:
                currency: currency
                value: value
              shippingServiceType: shippingServiceType
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              priority: 5
            fulfillmentPolicyId: fulfillmentPolicyId
            paymentPolicyId: paymentPolicyId
            productCompliancePolicyIds:
            - productCompliancePolicyIds
            - productCompliancePolicyIds
          marketplaceId: marketplaceId
          charity:
            donationPercentage: donationPercentage
            charityId: charityId
          merchantLocationKey: merchantLocationKey
          storeCategoryNames:
          - storeCategoryNames
          - storeCategoryNames
          listingStartDate: listingStartDate
          extendedProducerResponsibility:
            productPackageId: productPackageId
            ecoParticipationFee:
              currency: currency
              value: value
            productDocumentationId: productDocumentationId
            producerProductId: producerProductId
            shipmentPackageId: shipmentPackageId
          sku: sku
          categoryId: categoryId
          listingDuration: listingDuration
          listingDescription: listingDescription
        - availableQuantity: 0
          hideBuyerDetails: true
          includeCatalogProductDetails: true
          lotSize: 6
          quantityLimitPerBuyer: 1
          format: format
          secondaryCategoryId: secondaryCategoryId
          tax:
            amount:
              currency: currency
              value: value
            taxType: taxType
          pricingSummary:
            total:
              currency: currency
              value: value
            deliveryDiscount:
              currency: currency
              value: value
            priceSubtotal:
              currency: currency
              value: value
            fee:
              currency: currency
              value: value
            adjustment:
              currency: currency
              value: value
            tax:
              currency: currency
              value: value
            priceDiscountSubtotal:
              currency: currency
              value: value
            deliveryCost:
              currency: currency
              value: value
          listingPolicies:
            takeBackPolicyId: takeBackPolicyId
            eBayPlusIfEligible: true
            returnPolicyId: returnPolicyId
            bestOfferTerms:
              bestOfferEnabled: true
              autoAcceptPrice:
                currency: currency
                value: value
              autoDeclinePrice:
                currency: currency
                value: value
            shippingCostOverrides:
            - surcharge:
                currency: currency
                value: value
              shippingServiceType: shippingServiceType
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              priority: 5
            - surcharge:
                currency: currency
                value: value
              shippingServiceType: shippingServiceType
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              priority: 5
            fulfillmentPolicyId: fulfillmentPolicyId
            paymentPolicyId: paymentPolicyId
            productCompliancePolicyIds:
            - productCompliancePolicyIds
            - productCompliancePolicyIds
          marketplaceId: marketplaceId
          charity:
            donationPercentage: donationPercentage
            charityId: charityId
          merchantLocationKey: merchantLocationKey
          storeCategoryNames:
          - storeCategoryNames
          - storeCategoryNames
          listingStartDate: listingStartDate
          extendedProducerResponsibility:
            productPackageId: productPackageId
            ecoParticipationFee:
              currency: currency
              value: value
            productDocumentationId: productDocumentationId
            producerProductId: producerProductId
            shipmentPackageId: shipmentPackageId
          sku: sku
          categoryId: categoryId
          listingDuration: listingDuration
          listingDescription: listingDescription
      properties:
        requests:
          description: The details of each offer that is being created is passed in
            under this container. Up to 25 offers can be created with one <strong>bulkCreateOffer</strong>
            call.
          items:
            $ref: '#/components/schemas/EbayOfferDetailsWithKeys'
          type: array
      type: object
      x-apifox-orders:
      - requests
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AvailabilityDistribution:
      description: This type is used to set the available quantity of the inventory
        item at one or more warehouse locations.
      example:
        quantity: 6
        merchantLocationKey: merchantLocationKey
        fulfillmentTime:
          unit: unit
          value: 0
      properties:
        fulfillmentTime:
          $ref: '#/components/schemas/TimeDuration'
        merchantLocationKey:
          description: The unique identifier of an inventory location where quantity
            is available for the inventory item. This field is conditionally required
            to identify the inventory location that has quantity of the inventory
            item.
          type: string
        quantity:
          description: The integer value passed into this field indicates the quantity
            of the inventory item that is available at this inventory location. This
            field is conditionally required.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - fulfillmentTime
      - merchantLocationKey
      - quantity
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BaseResponse:
      description: This is the base response of the <strong>createOrReplaceInventoryItem</strong>,
        <strong>createOrReplaceInventoryItemGroup</strong>,  and <strong>createOrReplaceProductCompatibility</strong>  calls.
        A response payload will only be returned for these three calls if one or more
        errors or warnings occur with the call.
      example:
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        warnings:
          description: This container will be returned in a call response payload
            if one or more warnings or errors are triggered when an Inventory API
            call is made. This container will contain detailed information about the
            error or warning.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BestOffer:
      description: This type is used by the <strong>bestOfferTerms</strong> container,
        which is used if the seller would like to support the Best Offer feature on
        their listing.
      example:
        bestOfferEnabled: true
        autoAcceptPrice:
          currency: currency
          value: value
        autoDeclinePrice:
          currency: currency
          value: value
      properties:
        autoAcceptPrice:
          $ref: '#/components/schemas/Amount'
        autoDeclinePrice:
          $ref: '#/components/schemas/Amount'
        bestOfferEnabled:
          description: This field indicates whether or not the Best Offer feature
            is enabled for the listing. A seller can enable the Best Offer feature
            for a listing as long as the category supports the Best Offer feature.<br><br>The
            seller includes this field and sets its value to <code>true</code> to
            enable Best Offer feature.
          type: boolean
      type: object
      x-apifox-orders:
      - autoAcceptPrice
      - autoDeclinePrice
      - bestOfferEnabled
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Availability:
      description: This type is used to specify the quantity of the inventory item
        that is available for purchase if the item will be shipped to the buyer, and
        the quantity of the inventory item that is available for In-Store Pickup at
        one or more of the merchant's physical stores. In-Store Pickup is only available
        to large merchants selling on the US, UK, Germany, and Australia sites.
      example:
        shipToLocationAvailability:
          quantity: 1
          availabilityDistributions:
          - quantity: 6
            merchantLocationKey: merchantLocationKey
            fulfillmentTime:
              unit: unit
              value: 0
          - quantity: 6
            merchantLocationKey: merchantLocationKey
            fulfillmentTime:
              unit: unit
              value: 0
        pickupAtLocationAvailability:
        - availabilityType: availabilityType
          quantity: 0
          merchantLocationKey: merchantLocationKey
          fulfillmentTime:
            unit: unit
            value: 0
        - availabilityType: availabilityType
          quantity: 0
          merchantLocationKey: merchantLocationKey
          fulfillmentTime:
            unit: unit
            value: 0
      properties:
        pickupAtLocationAvailability:
          description: This container consists of an array of one or more of the merchant's
            physical store locations where the inventory item is available for In-Store
            Pickup orders. The merchant's location, the quantity available, and the
            fulfillment time (how soon the item will be ready for pickup after the
            order takes place) are all in this container. In-Store Pickup is only
            available to large merchants selling on the US, UK, Germany, and Australia
            sites.
          items:
            $ref: '#/components/schemas/PickupAtLocationAvailability'
          type: array
        shipToLocationAvailability:
          $ref: '#/components/schemas/ShipToLocationAvailability'
      type: object
      x-apifox-orders:
      - pickupAtLocationAvailability
      - shipToLocationAvailability
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateEvidencePaymentDisputeRequest:
      description: This type is used by the request payload of the <strong>updateEvidence</strong>
        method. The <strong>updateEvidence</strong> method is used to update an existing
        evidence set against a payment dispute with one or more evidence files.
      example:
        lineItems:
        - itemId: itemId
          lineItemId: lineItemId
        - itemId: itemId
          lineItemId: lineItemId
        evidenceId: evidenceId
        evidenceType: evidenceType
        files:
        - fileId: fileId
        - fileId: fileId
      properties:
        evidenceId:
          description: The unique identifier of the evidence set that is being updated
            with new evidence files.
          type: string
        evidenceType:
          description: This field is used to indicate the type of evidence being provided
            through one or more evidence files. All evidence files (if more than one)
            should be associated with the evidence type passed in this field. See
            the <strong>EvidenceTypeEnum</strong> type for the supported evidence
            types. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:EvidenceTypeEnum'>eBay
            API documentation</a>
          type: string
        files:
          description: This array is used to specify one or more evidence files that
            will be added to the evidence set associated with a payment dispute. At
            least one evidence file must be specified in the <strong>files</strong>
            array.<br><br> The unique identifier of an evidence file is returned in
            the response payload of the <strong>uploadEvidence</strong> method.
          items:
            $ref: '#/components/schemas/FileEvidence'
          type: array
        lineItems:
          description: This required array identifies the order line item(s) for which
            the evidence file(s) will be applicable. Both the <strong>itemId</strong>
            and <strong>lineItemID</strong> fields are needed to identify each order
            line item, and both of these values are returned under the <strong>evidenceRequests.lineItems</strong>
            array in the <strong>getPaymentDispute</strong> response.
          items:
            $ref: '#/components/schemas/OrderLineItems'
          type: array
      type: object
      x-apifox-orders:
      - evidenceId
      - evidenceType
      - files
      - lineItems
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TrackingInfo:
      description: This type is used by the <strong>shipmentTracking</strong> array
        returned under the <strong>evidence</strong> container if the seller has provided
        shipment tracking information as evidence to support <code>PROOF_OF_DELIVERY</code>
        for an INR-related payment dispute.
      example:
        shippingCarrierCode: shippingCarrierCode
        shipmentTrackingNumber: shipmentTrackingNumber
      properties:
        shipmentTrackingNumber:
          description: This string value represents the shipment tracking number of
            the package.
          type: string
        shippingCarrierCode:
          description: This string value represents the shipping carrier used to ship
            the package.
          type: string
      type: object
      x-apifox-orders:
      - shipmentTrackingNumber
      - shippingCarrierCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TaxIdentifier:
      description: This type is used by the <strong>taxIdentifier</strong> container
        that is returned in <strong>getOrder</strong>. The <strong>taxIdentifier</strong>
        container consists of taxpayer identification information for buyers from
        Italy, Spain, or Guatemala. It is currently only returned for orders occurring
        on the eBay Italy or eBay Spain marketplaces.<br /><br /><span class="tablenote"><strong>Note:</strong>
        Currently, the <strong>taxIdentifier</strong> container is only returned in
        <strong>getOrder</strong> and not in <strong>getOrders</strong>. So, if a
        seller wanted to view a buyer's tax information for a particular order returned
        in <strong>getOrders</strong>, that seller would need to use the <strong>orderId</strong>
        value for that particular order, and then run a <strong>getOrder</strong>
        call against that order ID. </span>
      properties:
        taxpayerId:
          description: This value is the unique tax ID associated with the buyer.
            The type of tax identification is shown in the <strong>taxIdentifierType</strong>
            field.
          type: string
        taxIdentifierType:
          description: This enumeration value indicates the type of tax identification
            being used for the buyer. The different tax types are defined in the <strong>TaxIdentifierTypeEnum</strong>
            type. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:TaxIdentifierTypeEnum'>eBay
            API documentation</a>
          type: string
        issuingCountry:
          description: This two-letter code indicates the country that issued the
            buyer's tax ID. The country that the two-letter code represents can be
            found in the <strong>CountryCodeEnum</strong> type, or in the  <a href="https://www.iso.org/iso-3166-country-codes.html
            ">ISO 3166</a> standard. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - taxpayerId
      - taxIdentifierType
      - issuingCountry
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TaxAddress:
      description: This container consists of address information that can be used
        by sellers for tax purpose.
      properties:
        city:
          description: The city name that can be used by sellers for tax purpose.
          type: string
        countryCode:
          description: The country code that can be used by sellers for tax purpose,
            represented as a two-letter ISO 3166-1 alpha-2 country code. For example,
            <strong>US</strong> represents the United States, and <strong>DE</strong>
            represents Germany. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum'>eBay
            API documentation</a>
          type: string
        postalCode:
          description: The postal code that can be used by sellers for tax purpose.
            Usually referred to as Zip codes in the US.
          type: string
        stateOrProvince:
          description: The state name that can be used by sellers for tax purpose.
          type: string
      type: object
      x-apifox-orders:
      - city
      - countryCode
      - postalCode
      - stateOrProvince
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Tax:
      description: This type contains information about any sales tax applied to a
        line item.
      example:
        amount:
          currency: currency
          value: value
        taxType: taxType
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        taxType:
          description: Tax type. This field is only available when <strong>fieldGroups</strong>
            is set to <code>TAX_BREAKDOWN</code>. If the order has fees, a breakdown
            of the fees is also provided. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:TaxTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - amount
      - taxType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ShippingStep:
      description: This type contains shipping information for a fulfillment, including
        the shipping carrier, the shipping service option, the shipment destination,
        and the Global Shipping Program reference ID.
      properties:
        shippingCarrierCode:
          description: The unique identifier of the shipping carrier being used to
            ship the line item. <br /><br /><span class="tablenote"><strong>Note:</strong>
            The Trading API's <a href="https://developer.ebay.com/devzone/XML/docs/Reference/eBay/GeteBayDetails.html
            " target="_blank">GeteBayDetails</a> call can be used to retrieve the
            latest shipping carrier and shipping service option enumeration values.</span>
          type: string
        shippingServiceCode:
          description: The unique identifier of the shipping service option being
            used to ship the line item.<br /><br /><span class="tablenote"><strong>Note:</strong>
            Use the Trading API's <a href="https://developer.ebay.com/devzone/XML/docs/Reference/eBay/GeteBayDetails.html
            " target="_blank">GeteBayDetails</a> call to retrieve the latest shipping
            carrier and shipping service option enumeration values. When making the
            <a href="https://developer.ebay.com/devzone/XML/docs/Reference/eBay/GeteBayDetails.html
            " target="_blank">GeteBayDetails</a> call, include the <strong>DetailName</strong>
            field in the request payload and set its value to <code>ShippingServiceDetails</code>.
            Each valid shipping service option (returned in <strong>ShippingServiceDetails.ShippingService</strong>
            field) and corresponding shipping carrier (returned in <strong>ShippingServiceDetails.ShippingCarrier</strong>
            field) is returned in response payload.</span>
          type: string
        shipTo:
          $ref: '#/components/schemas/ExtendedContact'
        shipToReferenceId:
          description: 'This is the unique identifer of the Global Shipping Program
            (GSP) shipment. This field is only returned if the line item is being
            shipped via GSP (the value of the <b>fulfillmentStartInstructions.ebaySupportedFulfillment</b>
            field will be <code>true</code>. The international shipping provider uses
            the <b>shipToReferenceId</b> value as the primary reference number to
            retrieve the relevant details about the buyer, the order, and the fulfillment,
            so the shipment can be completed. <br /><br />Sellers must include this
            value on the shipping label immediately above the street address of the
            international shipping provider. <br /><br />Example: "Reference #1234567890123456"
            <br /><br /><span class="tablenote"><strong>Note:</strong> This value
            is the same as the <b>ShipToAddress.ReferenceID</b> value returned by
            the Trading API''s GetOrders call.</span>'
          type: string
      type: object
      x-apifox-orders:
      - shippingCarrierCode
      - shippingServiceCode
      - shipTo
      - shipToReferenceId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SimpleAmount:
      description: This type defines the monetary value of the payment dispute, and
        the currency used.
      example:
        currency: currency
        value: value
      properties:
        currency:
          description: A three-letter ISO 4217 code (such as <code>USD</code> for
            US site) that indicates the currency of the amount in the <strong>value</strong>
            field. Both the <strong>value</strong> and <strong>currency</strong> fields
            are always returned with the <strong>amount</strong> container. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CurrencyCodeEnum'>eBay
            API documentation</a>
          type: string
        value:
          description: The monetary amount of the payment dispute. Both the <strong>value</strong>
            and <strong>currency</strong> fields are always returned with the <strong>amount</strong>
            container.
          type: string
      type: object
      x-apifox-orders:
      - currency
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ShippingFulfillmentPagedCollection:
      description: This type contains the specifications for the entire collection
        of shipping fulfillments that are associated with the order specified by a
        <b>getShippingFulfillments</b> call. The <b>fulfillments</b> container returns
        an array of all the fulfillments in the collection.
      example:
        fulfillments:
        - lineItems:
          - quantity: 0
            lineItemId: lineItemId
          - quantity: 0
            lineItemId: lineItemId
          fulfillmentId: fulfillmentId
          shippingCarrierCode: shippingCarrierCode
          shipmentTrackingNumber: shipmentTrackingNumber
          shippedDate: shippedDate
        - lineItems:
          - quantity: 0
            lineItemId: lineItemId
          - quantity: 0
            lineItemId: lineItemId
          fulfillmentId: fulfillmentId
          shippingCarrierCode: shippingCarrierCode
          shipmentTrackingNumber: shipmentTrackingNumber
          shippedDate: shippedDate
        total: 6
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        fulfillments:
          description: This array contains one or more fulfillments required for the
            order that was specified in method endpoint.
          items:
            $ref: '#/components/schemas/ShippingFulfillment'
          type: array
        total:
          description: The total number of fulfillments in the specified order.<br
            /><br /><span class="tablenote"><strong>Note:</strong> If no fulfillments
            are found for the order, this field is returned with a value of <code>0</code>.</span>
          format: int32
          type: integer
        warnings:
          description: This array is only returned if one or more errors or warnings
            occur with the call request.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - fulfillments
      - total
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ShippingFulfillmentDetails:
      description: This type contains the details for creating a fulfillment for an
        order.
      example:
        lineItems:
        - quantity: 0
          lineItemId: lineItemId
        - quantity: 0
          lineItemId: lineItemId
        shippingCarrierCode: shippingCarrierCode
        shippedDate: shippedDate
        trackingNumber: trackingNumber
      properties:
        lineItems:
          description: This array contains a list of or more line items and the quantity
            that will be shipped in the same package.
          items:
            $ref: '#/components/schemas/LineItemReference'
          type: array
        shippedDate:
          description: This is the actual date and time that the fulfillment package
            was shipped. This timestamp is in ISO 8601 format, which uses the 24-hour
            Universal Coordinated Time (UTC) clock. The seller should use the actual
            date/time that the package was shipped, but if this field is omitted,
            it will default to the current date/time.<br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code><br /><br /><b>Default:</b>
            The current date and time.
          type: string
        shippingCarrierCode:
          description: The unique identifier of the shipping carrier being used to
            ship the line item(s). Technically, the <strong>shippingCarrierCode</strong>
            and <strong>trackingNumber</strong> fields are optional, but generally
            these fields will be provided if the shipping carrier and tracking number
            are known. <br /><br /><span class="tablenote"><strong>Note:</strong>
            Use the Trading API's <a href="https://developer.ebay.com/devzone/XML/docs/Reference/eBay/GeteBayDetails.html
            " target="_blank">GeteBayDetails</a> call to retrieve the latest shipping
            carrier enumeration values. When making the <a href="https://developer.ebay.com/devzone/XML/docs/Reference/eBay/GeteBayDetails.html
            " target="_blank">GeteBayDetails</a> call, include the <strong>DetailName</strong>
            field in the request payload and set its value to <code>ShippingCarrierDetails</code>.
            Each valid shipping carrier enumeration value is returned in a <strong>ShippingCarrierDetails.ShippingCarrier</strong>
            field in the response payload.</span><br /><span class="tablenote"><strong>Note:</strong>
            Only alphanumeric characters are supported for shipment tracking numbers.
            Spaces, hyphens, and all other special characters are not supported. Do
            not include a space in the tracking number even if a space appears in
            the tracking number on the shipping label.</span>
          type: string
        trackingNumber:
          description: The tracking number provided by the shipping carrier for this
            fulfillment. The seller should be careful that this tracking number is
            accurate since the buyer will use this tracking number to track shipment,
            and eBay has no way to verify the accuracy of this number.<br /><br />This
            field and the <b>shippingCarrierCode</b> field are mutually dependent.
            If you include one, you must also include the other.<br /><br /><span
            class="tablenote"><strong>Note:</strong> If you include <b>trackingNumber</b>
            (and <b>shippingCarrierCode</b>) in the request, the resulting fulfillment's
            ID (returned in the HTTP location code) is the tracking number. If you
            do not include shipment tracking information, the resulting fulfillment
            ID will default to an arbitrary number such as <code>999</code>.</span>
          type: string
      type: object
      x-apifox-orders:
      - lineItems
      - shippedDate
      - shippingCarrierCode
      - trackingNumber
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReturnAddress:
      description: This type is used by the payment dispute methods, and is relevant
        if the buyer will be returning the item to the seller.
      example:
        country: country
        primaryPhone:
          number: number
          countryCode: countryCode
        stateOrProvince: stateOrProvince
        city: city
        postalCode: postalCode
        county: county
        addressLine1: addressLine1
        fullName: fullName
        addressLine2: addressLine2
      properties:
        addressLine1:
          description: The first line of the street address.
          type: string
        addressLine2:
          description: The second line of the street address. This line is not always
            necessarily, but is often used for apartment number or suite number, or
            other relevant information that can not fit on the first line.
          type: string
        city:
          description: The city of the return address.
          type: string
        country:
          description: The country's two-digt, ISO 3166-1 country code. See the enumeration
            type for a country's value. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum'>eBay
            API documentation</a>
          type: string
        county:
          description: The county of the return address. Counties are not applicable
            to all countries.
          type: string
        fullName:
          description: The full name of return address owner.
          type: string
        postalCode:
          description: The postal code of the return address.
          type: string
        primaryPhone:
          $ref: '#/components/schemas/Phone'
        stateOrProvince:
          description: The state or province of the return address.
          type: string
      type: object
      x-apifox-orders:
      - addressLine1
      - addressLine2
      - city
      - country
      - county
      - fullName
      - postalCode
      - primaryPhone
      - stateOrProvince
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ShippingFulfillment:
      description: This type contains the complete details of an existing fulfillment
        for an order.
      example:
        lineItems:
        - quantity: 0
          lineItemId: lineItemId
        - quantity: 0
          lineItemId: lineItemId
        fulfillmentId: fulfillmentId
        shippingCarrierCode: shippingCarrierCode
        shipmentTrackingNumber: shipmentTrackingNumber
        shippedDate: shippedDate
      properties:
        fulfillmentId:
          description: The unique identifier of the fulfillment; for example, <code>9405509699937003457459</code>.
            This eBay-generated value is created with a successful <b>createShippingFulfillment</b>
            call.
          type: string
        lineItems:
          description: This array contains a list of one or more line items (and purchased
            quantity) to which the fulfillment applies.
          items:
            $ref: '#/components/schemas/LineItemReference'
          type: array
        shipmentTrackingNumber:
          description: The tracking number provided by the shipping carrier for the
            package shipped in this fulfillment. This field is returned if available.
          type: string
        shippedDate:
          description: The date and time that the fulfillment package was shipped.
            This timestamp is in ISO 8601 format, which uses the 24-hour Universal
            Coordinated Time (UTC) clock. This field should only be returned if the
            package has been shipped.<br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
          type: string
        shippingCarrierCode:
          description: The eBay code identifying the shipping carrier for this fulfillment.
            This field is returned if available. <br /><br /><span class="tablenote"><strong>Note:</strong>
            The Trading API's <b>ShippingCarrierCodeType</b> enumeration type contains
            the most current list of eBay shipping carrier codes and the countries
            served by each carrier. See <a href="https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/types/ShippingCarrierCodeType.html
            " target="_blank">ShippingCarrierCodeType</a>.</span>
          type: string
      type: object
      x-apifox-orders:
      - fulfillmentId
      - lineItems
      - shipmentTrackingNumber
      - shippedDate
      - shippingCarrierCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SellerActionsToRelease:
      description: This type is used to state possible action(s) that a seller can
        take to release a payment hold placed against an order.
      properties:
        sellerActionToRelease:
          description: A possible action that the seller can take to expedite the
            release of a payment hold. A <strong>sellerActionToRelease</strong> field
            is returned for each possible action that a seller may take. Possible
            actions may include providing shipping/tracking information, issuing a
            refund, providing refund information, contacting customer support, etc.
          type: string
      type: object
      x-apifox-orders:
      - sellerActionToRelease
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RefundItem:
      description: This type is used if the seller is issuing a refund for one or
        more individual order line items in a multiple line item order. Otherwise,
        the seller just uses the <b>orderLevelRefundAmount</b> container to specify
        the amount of the refund for the entire order.
      example:
        lineItemId: lineItemId
        refundAmount:
          currency: currency
          value: value
        legacyReference:
          legacyTransactionId: legacyTransactionId
          legacyItemId: legacyItemId
      properties:
        refundAmount:
          $ref: '#/components/schemas/SimpleAmount'
        lineItemId:
          description: The unique identifier of an order line item. This identifier
            is created once a buyer purchases a 'Buy It Now' item or if an auction
            listing ends with a winning bidder. Either this field or the <b>legacyReference</b>
            container is needed to identify an individual order line item that will
            receive a refund.<br/><br/><span class="tablenote"><strong>Note:</strong>
            The <b>lineItemId</b> field is used to identify an order line item in
            REST API format, and the  <b>legacyReference</b> container is used to
            identify an order line item in Trading/legacy API format. Both legacy
            and REST API identifiers are returned in <b>getOrder</b> (Fulfillment
            API) and <b>GetOrders</b> (Trading API).</span>
          type: string
        legacyReference:
          $ref: '#/components/schemas/LegacyReference'
      type: object
      x-apifox-orders:
      - refundAmount
      - lineItemId
      - legacyReference
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Refund:
      description: This is the base type of the <b>issueRefund</b> response payload.
        As long as the <b>issueRefund</b> method does not trigger an error, a response
        payload will be returned.
      example:
        refundStatus: refundStatus
        refundId: refundId
      properties:
        refundId:
          description: The unique identifier of the order refund. This value is returned
            unless the refund operation fails (<b>refundStatus</b> value shows <code>FAILED</code>).
            This identifier can be used to track the status of the refund through
            a <b>getOrder</b> or <b>getOrders</b> call. For order-level refunds, check
            the <b>paymentSummary.refunds.refundId</b> field in the <b>getOrder</b>/<b>getOrders</b>
            response, and for line item level refunds, check the <b>lineItems.refunds.refundId</b>
            field(s) in the <b>getOrder</b>/<b>getOrders</b> response.
          type: string
        refundStatus:
          description: The value returned in this field indicates the success or failure
            of the refund operation. A successful <b>issueRefund</b> operation should
            result in a value of <code>PENDING</code>. A failed <b>issueRefund</b>
            operation should result in a value of <code>FAILED</code>, and an HTTP
            status code and/or and API error code may also get returned to possibly
            indicate the issue.<br/><br/>The refunds issued through this method are
            processed asynchronously, so the refund will not show as 'Refunded' right
            away. A seller will have to make a subsequent <a href="https://developer.ebay.com/api-docs/sell/fulfillment/resources/order/methods/getOrder"
            target="_blank">getOrder</a> call to check the status of the refund.  The
            status of an order refund can be found in the <a href="https://developer.ebay.com/api-docs/sell/fulfillment/resources/order/methods/getOrder#response.paymentSummary.refunds.refundStatus"
            target="_blank">paymentSummary.refunds.refundStatus</a> field of the <a
            href="https://developer.ebay.com/api-docs/sell/fulfillment/resources/order/methods/getOrder"
            target="_blank">getOrder</a> response. For implementation help, refer
            to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:RefundStatusEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - refundId
      - refundStatus
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PricingSummary:
      description: This type contains a summary of cumulative costs and charges for
        all line items of an order, including item price, price adjustments, sales
        taxes, delivery costs, and order discounts.
      example:
        total:
          currency: currency
          value: value
        deliveryDiscount:
          currency: currency
          value: value
        priceSubtotal:
          currency: currency
          value: value
        fee:
          currency: currency
          value: value
        adjustment:
          currency: currency
          value: value
        tax:
          currency: currency
          value: value
        priceDiscountSubtotal:
          currency: currency
          value: value
        deliveryCost:
          currency: currency
          value: value
      properties:
        adjustment:
          $ref: '#/components/schemas/Amount'
        deliveryCost:
          $ref: '#/components/schemas/Amount'
        deliveryDiscount:
          $ref: '#/components/schemas/Amount'
        fee:
          $ref: '#/components/schemas/Amount'
        priceDiscountSubtotal:
          $ref: '#/components/schemas/Amount'
        priceSubtotal:
          $ref: '#/components/schemas/Amount'
        tax:
          $ref: '#/components/schemas/Amount'
        total:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - adjustment
      - deliveryCost
      - deliveryDiscount
      - fee
      - priceDiscountSubtotal
      - priceSubtotal
      - tax
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PickupStep:
      description: This type is used to indicate the merchant's store where the buyer
        will pickup their In-Store Pickup order. The <b>pickupStep</b> container is
        only returned for In-Store Pickup orders. The In-Store Pickup feature is supported
        in the US, Canada, UK, Germany, and Australia marketplaces.
      properties:
        merchantLocationKey:
          description: A merchant-defined unique identifier of the merchant's store
            where the buyer will pick up their In-Store Pickup order.<br/><br/> This
            field is always returned with the <b>pickupStep</b> container.
          type: string
      type: object
      x-apifox-orders:
      - merchantLocationKey
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PostSaleAuthenticationProgram:
      description: This type is used to provide the status and outcome of an order
        line item going through the Authenticity Guarantee verification process.
      properties:
        outcomeReason:
          description: This field indicates the result of the authenticity verification
            inspection on an order line item. This field is not returned when the
            status value of the order line item is <code>PENDING</code> or <code>PASSED</code>.
            The possible values returned here are <code>NOT_AUTHENTIC</code>, <code>NOT_AS_DESCRIBED</code>,
            <code>CUSTOMIZED</code>, <code>MISCATEGORIZED</code>, or <code>NOT_AUTHENTIC_NO_RETURN</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:AuthenticityVerificationReasonEnum'>eBay
            API documentation</a>
          type: string
        status:
          description: The value in this field indicates whether the order line item
            has passed or failed the authenticity verification inspection, or if the
            inspection and/or results are still pending. The possible values returned
            here are <code>PENDING</code>, <code>PASSED</code>, <code>FAILED</code>,
            or <code>PASSED_WITH_EXCEPTION</code>. For implementation help, refer
            to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:AuthenticityVerificationStatusEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - outcomeReason
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PaymentSummary:
      description: This type contains information about the various monetary exchanges
        that apply to the net balance due for the order.
      properties:
        payments:
          description: This array consists of payment information for the order, including
            payment status, payment method, payment amount, and payment date. This
            array is always returned, although some of the fields under this container
            will not be returned until payment has been made.
          items:
            $ref: '#/components/schemas/Payment'
          type: array
        refunds:
          description: This array is always returned, but is returned as an empty
            array unless the seller has submitted a partial or full refund to the
            buyer for the order. If a refund has occurred, the refund amount and refund
            date will be shown for each refund.
          items:
            $ref: '#/components/schemas/OrderRefund'
          type: array
        totalDueSeller:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - payments
      - refunds
      - totalDueSeller
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Phone:
      description: This type is used by the <strong>returnAddress</strong field that
        is used by the payment dispute methods. If a buyer is returning the item (under
        payment dispute) to the seller, a primary phone number for the seller must
        be provided.
      example:
        number: number
        countryCode: countryCode
      properties:
        countryCode:
          description: The seller's country calling code. This field is needed if
            the buyer is located in a different country than the seller. It is also
            OK to provide if the buyer and seller are both located in the same country.
            For a full list of calling codes for all countries, see the <a href="https://countrycode.org/"  target="_blank">countrycode.org</a>
            site.
          type: string
        number:
          description: 'The seller''s primary phone number associated with the return
            address. When this number is provided in a <strong>contestPaymentDispute</strong>
            or <strong>contestPaymentDispute</strong> method, it is provided as one
            continuous numeric string, including the area code. So, if the phone number''s
            area code was ''408'', a number in this field may look something like
            this: <br><br><code>"number" : "4088084356"</code><br><br>If the buyer
            is located in a different country than the seller, the seller''s country
            calling code will need to be specified in the <strong>countryCode</strong>
            field.'
          type: string
      type: object
      x-apifox-orders:
      - countryCode
      - number
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PaymentHold:
      description: This type contains information about a hold placed on a payment
        to a seller for an order, including the reason why the buyer's payment for
        the order is being held, the expected release date of the funds into the seller's
        account, the current state of the hold, and the actual release date if the
        payment has been released, and possible actions the seller can take to expedite
        the payout of funds into their account.
      properties:
        expectedReleaseDate:
          description: The date and time that the payment being held is expected to
            be released to the seller. This timestamp is in ISO 8601 format, which
            uses the 24-hour Universal Coordinated Time (UTC) clock. This field will
            be returned if known by eBay. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
          type: string
        holdAmount:
          $ref: '#/components/schemas/Amount'
        holdReason:
          description: The reason that the payment is being held. A seller's payment
            may be held for a number of reasons, including when the seller is new,
            the seller's level is below standard, or if a return case or 'Significantly
            not as described' case is pending against the seller. This field is always
            returned with the <strong>paymentHolds</strong> array.
          type: string
        holdState:
          description: The current stage or condition of the hold. This field is always
            returned with the <strong>paymentHolds</strong> array.<br /><br /><b>Applicable
            values:</b><ul><li><code>HELD</code></li><li><code>HELD_PENDING</code></li><li><code>NOT_HELD</code></li><li><code>RELEASE_CONFIRMED</code></li><li><code>RELEASE_FAILED</code></li><li><code>RELEASE_PENDING</code></li><li><code>RELEASED</code></li></ul>
          type: string
        releaseDate:
          description: The date and time that the payment being held was actually
            released to the seller. This timestamp is in ISO 8601 format, which uses
            the 24-hour Universal Coordinated Time (UTC) clock. This field is not
            returned until the seller's payment is actually released into the seller's
            account.<br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
          type: string
        sellerActionsToRelease:
          description: A list of one or more possible actions that the seller can
            take to expedite the release of the payment hold.
          items:
            $ref: '#/components/schemas/SellerActionsToRelease'
          type: array
      type: object
      x-apifox-orders:
      - expectedReleaseDate
      - holdAmount
      - holdReason
      - holdState
      - releaseDate
      - sellerActionsToRelease
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PaymentDisputeSummary:
      description: This type is used by each payment dispute that is returned with
        the <strong>getPaymentDisputeSummaries</strong> method.
      example:
        buyerUsername: buyerUsername
        reason: reason
        amount:
          currency: currency
          value: value
        closedDate: closedDate
        orderId: orderId
        paymentDisputeId: paymentDisputeId
        paymentDisputeStatus: paymentDisputeStatus
        respondByDate: respondByDate
        openDate: openDate
      properties:
        amount:
          $ref: '#/components/schemas/SimpleAmount'
        buyerUsername:
          description: This is the buyer's eBay user ID. This field is returned for
            all payment disputes returned in the response.
          type: string
        closedDate:
          description: 'The timestamp in this field shows the date/time when the payment
            dispute was closed, so this field is only returned for payment disputes
            in the <code>CLOSED</code> state.<br/><br/>The timestamps returned here
            use the ISO-8601 24-hour date and time format, and the time zone used
            is Universal Coordinated Time (UTC), also known as Greenwich Mean Time
            (GMT), or Zulu. The ISO-8601 format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>.
            An example would be <code>2019-08-04T19:09:02.768Z</code>.'
          type: string
        openDate:
          description: 'The timestamp in this field shows the date/time when the payment
            dispute was opened. This field is returned for payment disputes in all
            states.<br/><br/>The timestamps returned here use the ISO-8601 24-hour
            date and time format, and the time zone used is Universal Coordinated
            Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu. The ISO-8601
            format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>. An example
            would be <code>2019-08-04T19:09:02.768Z</code>.'
          type: string
        orderId:
          description: This is the unique identifier of the order involved in the
            payment dispute. <br/><br/><span class="tablenote"><strong>Note:</strong>
            eBay rolled out a new Order ID format in June 2019. The legacy APIs still
            support the old and new order ID format to identify orders, but only the
            new order ID format is supported in REST-based APIs. </span>
          type: string
        paymentDisputeId:
          description: This is the unique identifier of the payment dispute. This
            identifier is automatically created by eBay once the payment dispute comes
            into the eBay system. This identifier is passed in at the end of the <strong>getPaymentDispute</strong>
            call URI to retrieve a specific payment dispute. The <strong>getPaymentDispute</strong>
            method returns more details about a payment dispute than the <strong>getPaymentDisputeSummaries</strong>
            method.
          type: string
        paymentDisputeStatus:
          description: The enumeration value in this field gives the current status
            of the payment dispute. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:DisputeStateEnum'>eBay
            API documentation</a>
          type: string
        reason:
          description: The enumeration value in this field gives the reason why the
            buyer initiated the payment dispute. See <strong>DisputeReasonEnum</strong>
            type for a description of the supported reasons that buyers can give for
            initiating a payment dispute. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:DisputeReasonEnum'>eBay
            API documentation</a>
          type: string
        respondByDate:
          description: 'The timestamp in this field shows the date/time when the seller
            must response to a payment dispute, so this field is only returned for
            payment disputes in the <code>ACTION_NEEDED</code> state. For payment
            disputes that require action by the seller, that same seller must call
            <strong>getPaymentDispute</strong> to see the next action(s) that they
            can take against the payment dispute.<br/><br/>The timestamps returned
            here use the ISO-8601 24-hour date and time format, and the time zone
            used is Universal Coordinated Time (UTC), also known as Greenwich Mean
            Time (GMT), or Zulu. The ISO-8601 format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>.
            An example would be <code>2019-08-04T19:09:02.768Z</code>.'
          type: string
      type: object
      x-apifox-orders:
      - amount
      - buyerUsername
      - closedDate
      - openDate
      - orderId
      - paymentDisputeId
      - paymentDisputeStatus
      - reason
      - respondByDate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PaymentDisputeOutcomeDetail:
      description: This type is used by the <strong>resolution</strong> container
        that is returned for payment disputes that have been resolved.
      example:
        fees:
          currency: currency
          value: value
        totalFeeCredit:
          currency: currency
          value: value
        protectionStatus: protectionStatus
        recoupAmount:
          currency: currency
          value: value
        reasonForClosure: reasonForClosure
        protectedAmount:
          currency: currency
          value: value
      properties:
        fees:
          $ref: '#/components/schemas/SimpleAmount'
        protectedAmount:
          $ref: '#/components/schemas/SimpleAmount'
        protectionStatus:
          description: This enumeration value indicates if the seller is fully protected,
            partially protected, or not protected by eBay for the payment dispute.
            This field is always returned once the payment dispute is resolved. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:ProtectionStatusEnum'>eBay
            API documentation</a>
          type: string
        reasonForClosure:
          description: The enumeration value returned in this field indicates the
            outcome of the payment dispute for the seller. This field is always returned
            once the payment dispute is resolved. For implementation help, refer to
            <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:OutcomeEnum'>eBay
            API documentation</a>
          type: string
        recoupAmount:
          $ref: '#/components/schemas/SimpleAmount'
        totalFeeCredit:
          $ref: '#/components/schemas/SimpleAmount'
      type: object
      x-apifox-orders:
      - fees
      - protectedAmount
      - protectionStatus
      - reasonForClosure
      - recoupAmount
      - totalFeeCredit
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PaymentDisputeActivityHistory:
      description: This type is used by the base response of the <strong>getActivities</strong>
        method, and includes a log of all activities of a payment dispute, from creation
        to resolution.
      example:
        activity:
        - actor: actor
          activityDate: activityDate
          activityType: activityType
        - actor: actor
          activityDate: activityDate
          activityType: activityType
      properties:
        activity:
          description: This array holds all activities of a payment dispute, from
            creation to resolution. For each activity, the activity type, the actor,
            and a timestamp is shown. The <strong>getActivities</strong> response
            is dynamic, and grows with each recorded activity.
          items:
            $ref: '#/components/schemas/PaymentDisputeActivity'
          type: array
      type: object
      x-apifox-orders:
      - activity
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PaymentDisputeActivity:
      description: This type is used by each recorded activity on a payment dispute,
        from creation to resolution.
      example:
        actor: actor
        activityDate: activityDate
        activityType: activityType
      properties:
        activityDate:
          description: 'The timestamp in this field shows the date/time of the payment
            dispute activity.<br/><br/>The timestamps returned here use the ISO-8601
            24-hour date and time format, and the time zone used is Universal Coordinated
            Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu. The ISO-8601
            format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>. An example
            would be <code>2019-08-04T19:09:02.768Z</code>.'
          type: string
        activityType:
          description: This enumeration value indicates the type of activity that
            occured on the payment dispute. For example, a value of <code>DISPUTE_OPENED</code>
            is returned when a payment disute is first created,  a value indicating
            the seller's decision on the dispute, such as <code>SELLER_CONTEST</code>,
            is returned when seller makes a decision to accept or contest dispute,
            and a value of <code>DISPUTE_CLOSED</code> is returned when a payment
            disute is resolved. See <strong>ActivityEnum</strong> for an explanation
            of each of the values that may be returned here. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:ActivityEnum'>eBay
            API documentation</a>
          type: string
        actor:
          description: This enumeration value indicates the actor that performed the
            action. Possible values include the <code>BUYER</code>, <code>SELLER</code>,
            <code>CS_AGENT</code> (eBay customer service), or <code>SYSTEM</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:ActorEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - activityDate
      - activityType
      - actor
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OrderSearchPagedCollection:
      description: This type contains the specifications for the collection of orders
        that match the search or filter criteria of a <b>getOrders</b> call. The collection
        is grouped into a result set, and based on the query parameters that are set
        (including the <strong>limit</strong> and <strong>offset</strong> parameters),
        the result set may included multiple pages, but only one page of the result
        set can be viewed at a time.
      example:
        next: next
        total: 1
        offset: 6
        prev: prev
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        limit: 0
        orders:
        - orderId: orderId
          channel: channel
        - orderId: orderId
          channel: channel
        href: href
      properties:
        href:
          description: The URI of the <b>getOrders</b> call request that produced
            the current page of the result set.
          type: string
        limit:
          description: The maximum number of orders returned per page of the result
            set. The <strong>limit</strong> value can be passed in as a query parameter,
            or if omitted, its value defaults to <code>50</code>. <br /><br /><span
            class="tablenote"><strong>Note:</strong> If this is the last or only page
            of the result set, the page may contain fewer orders than the <strong>limit</strong>
            value.  To determine the number of pages in a result set, divide the <b>total</b>
            value (total number of orders matching input criteria) by this <strong>limit</strong>
            value, and then round up to the next integer. For example, if the <b>total</b>
            value was <code>120</code> (120 total orders) and the <strong>limit</strong>
            value was <code>50</code> (show 50 orders per page), the total number
            of pages in the result set is three, so the seller would have to make
            three separate <strong>getOrders</strong> calls to view all orders matching
            the input criteria. </span><b>Default:</b> <code>50</code>
          format: int32
          type: integer
        next:
          description: 'The <b>getOrders</b> call URI to use if you wish to view the  next
            page of the result set. For example, the following URI returns records
            41 thru 50 from the collection of orders: <br /><br /><code><i>path</i>/order?limit=10&offset=40
            </code><br/><br/>This field is only returned if there is a next page of
            results to view based on the current input criteria.<br />'
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            <b>offset</b> query parameter. <p class="tablenote"><strong>Note: </strong>The
            items in a paginated result set use a zero-based list where the first
            item in the list has an offset of <code>0</code>.</p>'
          format: int32
          type: integer
        orders:
          description: This array contains one or more orders that are part of the
            current result set, that is controlled by the input criteria. The details
            of each order include information about the buyer, order history, shipping
            fulfillments, line items, costs, payments, and order fulfillment status.
            <br /><br />By default, orders are returned according to creation date
            (oldest to newest), but the order will vary according to any filter that
            is set in request.
          items:
            $ref: '#/components/schemas/Order'
          type: array
        prev:
          description: 'The <b>getOrders</b> call URI for the previous result set.
            For example, the following URI returns orders 21 thru 30 from the collection
            of orders: <br /><br /><code><i>path</i>/order?limit=10&offset=20</code><br/><br/>This
            field is only returned if there is a previous page of results to view
            based on the current input criteria.'
          type: string
        total:
          description: The total number of orders in the results set based on the
            current input criteria.<br /><br /><span class="tablenote"><strong>Note:</strong>
            If no orders are found, this field is returned with a value of <code>0</code>.</span>
          format: int32
          type: integer
        warnings:
          description: This array is returned if one or more errors or warnings occur
            with the call request.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - orders
      - prev
      - total
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PaymentDispute:
      description: This type is used by the base response of the <strong>getPaymentDispute</strong>
        method. The <strong>getPaymentDispute</strong> method retrieves detailed information
        on a specific payment dispute.
      example:
        buyerUsername: buyerUsername
        reason: reason
        amount:
          currency: currency
          value: value
        evidence:
        - lineItems:
          - itemId: itemId
            lineItemId: lineItemId
          - itemId: itemId
            lineItemId: lineItemId
          shipmentTracking:
          - shippingCarrierCode: shippingCarrierCode
            shipmentTrackingNumber: shipmentTrackingNumber
          - shippingCarrierCode: shippingCarrierCode
            shipmentTrackingNumber: shipmentTrackingNumber
          evidenceId: evidenceId
          evidenceType: evidenceType
          requestDate: requestDate
          respondByDate: respondByDate
          files:
          - name: name
            uploadedDate: uploadedDate
            fileType: fileType
            fileId: fileId
          - name: name
            uploadedDate: uploadedDate
            fileType: fileType
            fileId: fileId
          providedDate: providedDate
        - lineItems:
          - itemId: itemId
            lineItemId: lineItemId
          - itemId: itemId
            lineItemId: lineItemId
          shipmentTracking:
          - shippingCarrierCode: shippingCarrierCode
            shipmentTrackingNumber: shipmentTrackingNumber
          - shippingCarrierCode: shippingCarrierCode
            shipmentTrackingNumber: shipmentTrackingNumber
          evidenceId: evidenceId
          evidenceType: evidenceType
          requestDate: requestDate
          respondByDate: respondByDate
          files:
          - name: name
            uploadedDate: uploadedDate
            fileType: fileType
            fileId: fileId
          - name: name
            uploadedDate: uploadedDate
            fileType: fileType
            fileId: fileId
          providedDate: providedDate
        sellerResponse: sellerResponse
        orderId: orderId
        paymentDisputeStatus: paymentDisputeStatus
        respondByDate: respondByDate
        availableChoices:
        - availableChoices
        - availableChoices
        monetaryTransactions:
        - date: date
          reason: reason
          amount:
            convertedFromCurrency: convertedFromCurrency
            exchangeRate: exchangeRate
            currency: currency
            convertedFromValue: convertedFromValue
            value: value
          type: type
        - date: date
          reason: reason
          amount:
            convertedFromCurrency: convertedFromCurrency
            exchangeRate: exchangeRate
            currency: currency
            convertedFromValue: convertedFromValue
            value: value
          type: type
        resolution:
          fees:
            currency: currency
            value: value
          totalFeeCredit:
            currency: currency
            value: value
          protectionStatus: protectionStatus
          recoupAmount:
            currency: currency
            value: value
          reasonForClosure: reasonForClosure
          protectedAmount:
            currency: currency
            value: value
        returnAddress:
          country: country
          primaryPhone:
            number: number
            countryCode: countryCode
          stateOrProvince: stateOrProvince
          city: city
          postalCode: postalCode
          county: county
          addressLine1: addressLine1
          fullName: fullName
          addressLine2: addressLine2
        revision: 0
        lineItems:
        - itemId: itemId
          lineItemId: lineItemId
        - itemId: itemId
          lineItemId: lineItemId
        buyerProvided:
          note: note
          returnShipmentTracking:
          - shippingCarrierCode: shippingCarrierCode
            shipmentTrackingNumber: shipmentTrackingNumber
          - shippingCarrierCode: shippingCarrierCode
            shipmentTrackingNumber: shipmentTrackingNumber
        closedDate: closedDate
        paymentDisputeId: paymentDisputeId
        evidenceRequests:
        - lineItems:
          - itemId: itemId
            lineItemId: lineItemId
          - itemId: itemId
            lineItemId: lineItemId
          evidenceId: evidenceId
          evidenceType: evidenceType
          requestDate: requestDate
          respondByDate: respondByDate
        - lineItems:
          - itemId: itemId
            lineItemId: lineItemId
          - itemId: itemId
            lineItemId: lineItemId
          evidenceId: evidenceId
          evidenceType: evidenceType
          requestDate: requestDate
          respondByDate: respondByDate
        openDate: openDate
      properties:
        amount:
          $ref: '#/components/schemas/SimpleAmount'
        availableChoices:
          description: The value(s) returned in this array indicate the choices that
            the seller has when responding to the payment dispute. Once the seller
            has responded to the payment dispute, this field will no longer be shown,
            and instead, the <strong>sellerResponse</strong> field will show the decision
            that the seller made.
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/fulfillment/types/api:SellerDecisionEnum''>eBay
              API documentation</a>'
            type: string
          type: array
        buyerProvided:
          $ref: '#/components/schemas/InfoFromBuyer'
        buyerUsername:
          description: This is the eBay user ID of the buyer that initiated the payment
            dispute.
          type: string
        closedDate:
          description: 'The timestamp in this field shows the date/time when the payment
            dispute was closed, so this field is only returned for payment disputes
            in the <code>CLOSED</code> state.<br/><br/>The timestamps returned here
            use the ISO-8601 24-hour date and time format, and the time zone used
            is Universal Coordinated Time (UTC), also known as Greenwich Mean Time
            (GMT), or Zulu. The ISO-8601 format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>.
            An example would be <code>2019-08-04T19:09:02.768Z</code>.'
          type: string
        evidence:
          description: This container shows any evidence that has been provided by
            the seller to contest the payment dispute. Evidence may include shipment
            tracking information, proof of authentication documentation, image(s)
            to proof that an item is as described, or financial documentation/invoice.<br><br>This
            container is only returned if the seller has provided at least one document
            used as evidence against the payment dispute.
          items:
            $ref: '#/components/schemas/DisputeEvidence'
          type: array
        evidenceRequests:
          description: This container is returned if one or more evidence documents
            are being requested from the seller.
          items:
            $ref: '#/components/schemas/EvidenceRequest'
          type: array
        lineItems:
          description: This array is used to identify one or more order line items
            associated with the payment dispute. There will always be at least one
            <b>itemId</b>/<b>lineItemId</b> pair returned in this array.
          items:
            $ref: '#/components/schemas/OrderLineItems'
          type: array
        monetaryTransactions:
          description: This array provide details about one or more monetary transactions
            that occur as part of a payment dispute. This array is only returned once
            one or more monetary transacations occur with a payment dispute.
          items:
            $ref: '#/components/schemas/MonetaryTransaction'
          type: array
        openDate:
          description: 'The timestamp in this field shows the date/time when the payment
            dispute was opened. This field is returned for payment disputes in all
            states.<br/><br/>The timestamps returned here use the ISO-8601 24-hour
            date and time format, and the time zone used is Universal Coordinated
            Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu. The ISO-8601
            format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>. An example
            would be <code>2019-08-04T19:09:02.768Z</code>.'
          type: string
        orderId:
          description: This is the unique identifier of the order involved in the
            payment dispute. <br/><br/><span class="tablenote"><strong>Note:</strong>
            eBay rolled out a new Order ID format in June 2019. The legacy APIs still
            support the old and new order ID format to identify orders, but only the
            new order ID format is returned in REST-based API responses. </span>
          type: string
        paymentDisputeId:
          description: This is the unique identifier of the payment dispute. This
            is the same identifier that is passed in to the call URI. This identifier
            is automatically created by eBay once the payment dispute comes into the
            eBay system.
          type: string
        paymentDisputeStatus:
          description: The enumeration value in this field gives the current status
            of the payment dispute. The status of a payment dispute partially determines
            other fields that are returned in the response. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:DisputeStateEnum'>eBay
            API documentation</a>
          type: string
        reason:
          description: The enumeration value in this field gives the reason why the
            buyer initiated the payment dispute. See <strong>DisputeReasonEnum</strong>
            type for a description of the supported reasons that buyers can give for
            initiating a payment dispute. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:DisputeReasonEnum'>eBay
            API documentation</a>
          type: string
        resolution:
          $ref: '#/components/schemas/PaymentDisputeOutcomeDetail'
        respondByDate:
          description: 'The timestamp in this field shows the date/time when the seller
            must response to a payment dispute, so this field is only returned for
            payment disputes in the <code>ACTION_NEEDED</code> state. For payment
            disputes that currently require action by the seller, that same seller
            should look at the <strong>availableChoices</strong> array to see the
            available actions.<br/><br/>The timestamps returned here use the ISO-8601
            24-hour date and time format, and the time zone used is Universal Coordinated
            Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu. The ISO-8601
            format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>. An example
            would be <code>2019-08-04T19:09:02.768Z</code>.'
          type: string
        returnAddress:
          $ref: '#/components/schemas/ReturnAddress'
        revision:
          description: This integer value indicates the revision number of the payment
            dispute. Each time an action is taken against a payment dispute, this
            integer value increases by 1.
          format: int32
          type: integer
        sellerResponse:
          description: The enumeration value returned in this field indicates how
            the seller has responded to the payment dispute. The seller has the option
            of accepting the payment dispute and agreeing to issue a refund, accepting
            the payment dispute and agreeing to issue a refund as long as the buyer
            returns the item, or contesting the payment dispute. This field is returned
            as soon as the seller makes an initial decision on the payment dispute.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:SellerResponseEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - amount
      - availableChoices
      - buyerProvided
      - buyerUsername
      - closedDate
      - evidence
      - evidenceRequests
      - lineItems
      - monetaryTransactions
      - openDate
      - orderId
      - paymentDisputeId
      - paymentDisputeStatus
      - reason
      - resolution
      - respondByDate
      - returnAddress
      - revision
      - sellerResponse
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Payment:
      description: This type is used to provide details about the seller payments
        for an order.
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        paymentDate:
          description: The date and time that the payment was received by the seller.
            This field will not be returned if buyer has yet to pay for the order.
            This timestamp is in ISO 8601 format, which uses the 24-hour Universal
            Coordinated Time (UTC) clock. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
          type: string
        paymentHolds:
          description: This container is only returned if eBay is temporarily holding
            the seller's funds for the order. If a payment hold has been placed on
            the order, this container includes the reason for the payment hold, the
            expected release date of the funds into the seller's account, the current
            state of the hold, and as soon as the payment hold has been released,
            the actual release date.
          items:
            $ref: '#/components/schemas/PaymentHold'
          type: array
        paymentMethod:
          description: The payment method used to pay for the order. See the <strong>PaymentMethodTypeEnum</strong>
            type for more information on the payment methods. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:PaymentMethodTypeEnum'>eBay
            API documentation</a>
          type: string
        paymentReferenceId:
          description: This field is only returned if payment has been made by the
            buyer, and the <strong>paymentMethod</strong> is <code>ESCROW</code>.
            This field contains a special ID for ESCROW.
          type: string
        paymentStatus:
          description: The enumeration value returned in this field indicates the
            status of the payment for the order. See the <strong>PaymentStatusEnum</strong>
            type definition for more information on the possible payment states. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:PaymentStatusEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - amount
      - paymentDate
      - paymentHolds
      - paymentMethod
      - paymentReferenceId
      - paymentStatus
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    LineItemProperties:
      description: This type contains information about the eBay programs under which
        a line item was listed and sold.
      properties:
        buyerProtection:
          description: A value of <code>true</code> indicates that the line item is
            covered by eBay's Buyer Protection program.
          type: boolean
        fromBestOffer:
          description: This field is only returned if <code>true</code> and indicates
            that the purchase occurred by the buyer and seller mutually agreeing on
            a Best Offer amount. The Best Offer feature can be set up for any listing
            type, but if this feature is set up for an auction listing, it will no
            longer be available once a bid has been placed on the listing.
          type: boolean
        soldViaAdCampaign:
          description: This field is only returned if <code>true</code> and indicates
            that the line item was sold as a result of a seller's ad campaign.
          type: boolean
      type: object
      x-apifox-orders:
      - buyerProtection
      - fromBestOffer
      - soldViaAdCampaign
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OrderLineItems:
      description: This type is used by the <strong>lineItems</strong> array that
        is used to identify one or more line items in the order with the payment dispute.
      example:
        itemId: itemId
        lineItemId: lineItemId
      properties:
        itemId:
          description: The unique identifier of the eBay listing associated with the
            order.
          type: string
        lineItemId:
          description: The unique identifier of the line item within the order. The
            <strong>lineItemId</strong> value is created once the buyer actually purchases
            the item, or if there is a commitment to buy (such as an auction that
            is won by the buyer, an accepted Best Offer, or other situation that does
            not require immediate payment from the buyer).
          type: string
      type: object
      x-apifox-orders:
      - itemId
      - lineItemId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OrderRefund:
      description: This type contains information about a refund issued for an order.
        This does not include line item level refunds.
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        refundDate:
          description: The date and time that the refund was issued. This timestamp
            is in ISO 8601 format, which uses the 24-hour Universal Coordinated Time
            (UTC) clock. This field is not returned until the refund has been issued.
            <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
          type: string
        refundId:
          description: Unique identifier of a refund that was initiated for an order
            through the <b>issueRefund</b> method. If the <b>issueRefund</b> method
            was used to issue one or more refunds at the line item level, these refund
            identifiers are returned at the line item level instead (<b>lineItems.refunds.refundId</b>
            field).<br/><br/> A <b>refundId</b> value is returned in the response
            of the <b>issueRefund</b> method, and this same value will be returned
            in the <b>getOrders</b> and <b>getOrders</b> responses for pending and
            completed refunds. For other refunds, see the <b>refundReferenceId</b>
            field.
          type: string
        refundReferenceId:
          description: The eBay-generated unique identifier for the refund. This field
            is not returned until the refund has been issued.
          type: string
        refundStatus:
          description: This enumeration value indicates the current status of the
            refund to the buyer. This container is always returned for each refund.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:RefundStatusEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - amount
      - refundDate
      - refundId
      - refundReferenceId
      - refundStatus
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    LineItemReference:
      description: This type identifies the line item and quantity of that line item
        that comprises one fulfillment, such as a shipping package.
      example:
        quantity: 0
        lineItemId: lineItemId
      properties:
        lineItemId:
          description: This is the unique identifier of the eBay order line item that
            is part of the shipping fulfillment. The line item ID is created as soon
            as there is a commitment to buy from the seller.
          type: string
        quantity:
          description: This field is reserved for internal or future use.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - lineItemId
      - quantity
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    MonetaryTransaction:
      description: This type is used to provide details about one or more monetary
        transactions that occur as part of a payment dispute.
      example:
        date: date
        reason: reason
        amount:
          convertedFromCurrency: convertedFromCurrency
          exchangeRate: exchangeRate
          currency: currency
          convertedFromValue: convertedFromValue
          value: value
        type: type
      properties:
        date:
          description: 'This timestamp indicates when the monetary transaction occurred.
            A date is returned for all monetary transactions.<br><br> The following
            format is used: <code>YYYY-MM-DDTHH:MM:SS.SSSZ</code>. For example, <code>2015-08-04T19:09:02.768Z</code>.'
          type: string
        type:
          description: This enumeration value indicates whether the monetary transaction
            is a charge or a credit to the seller. For implementation help, refer
            to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:MonetaryTransactionTypeEnum'>eBay
            API documentation</a>
          type: string
        reason:
          description: This enumeration value indicates the reason for the monetary
            transaction. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:MonetaryTransactionReasonEnum'>eBay
            API documentation</a>
          type: string
        amount:
          $ref: '#/components/schemas/DisputeAmount'
      type: object
      x-apifox-orders:
      - date
      - type
      - reason
      - amount
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    LineItemRefund:
      description: This type contains refund information for a line item.
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        refundDate:
          description: The date and time that the refund was issued for the line item.
            This timestamp is in ISO 8601 format, which uses the 24-hour Universal
            Coordinated Time (UTC) clock. This field is not returned until the refund
            has been issued. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
          type: string
        refundId:
          description: Unique identifier of a refund that was initiated for an order's
            line item through the <b>issueRefund</b> method. If the <b>issueRefund</b>
            method was used to issue a refund at the order level, this identifier
            is returned at the order level instead (<b>paymentSummary.refunds.refundId</b>
            field).<br/><br/> A <b>refundId</b> value is returned in the response
            of the <b>issueRefund</b> method, and this same value will be returned
            in the <b>getOrder</b> and <b>getOrders</b> responses for pending and
            completed refunds.
          type: string
        refundReferenceId:
          description: This field is reserved for internal or future use.
          type: string
      type: object
      x-apifox-orders:
      - amount
      - refundDate
      - refundId
      - refundReferenceId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    IssueRefundRequest:
      description: The base type used by the request payload of the <b>issueRefund</b>
        method.
      example:
        reasonForRefund: reasonForRefund
        refundItems:
        - lineItemId: lineItemId
          refundAmount:
            currency: currency
            value: value
          legacyReference:
            legacyTransactionId: legacyTransactionId
            legacyItemId: legacyItemId
        - lineItemId: lineItemId
          refundAmount:
            currency: currency
            value: value
          legacyReference:
            legacyTransactionId: legacyTransactionId
            legacyItemId: legacyItemId
        orderLevelRefundAmount:
          currency: currency
          value: value
        comment: comment
      properties:
        reasonForRefund:
          description: The enumeration value passed into this field indicates the
            reason for the refund. One of the defined enumeration values in the <b>ReasonForRefundEnum</b>
            type must be used.<br/><br/>This field is required, and it is highly recommended
            that sellers use the correct refund reason, especially in the case of
            a buyer-requested cancellation or 'buyer remorse' return to indicate that
            there was nothing wrong with the item(s) or with the shipment of the order.<br/><br/><span
            class="tablenote"><strong>Note:</strong> If issuing refunds for more than
            one order line item, keep in mind that the refund reason must be the same
            for each of the order line items. If the refund reason is different for
            one or more order line items in an order, the seller would need to make
            separate <b>issueRefund</b> calls, one for each refund reason. </span>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:ReasonForRefundEnum'>eBay
            API documentation</a>
          type: string
        comment:
          description: 'This free-text field allows the seller to clarify why the
            refund is being issued to the buyer.<br/><br/><b>Max Length</b>: 100'
          type: string
        refundItems:
          description: The <b>refundItems</b> array is only required if the seller
            is issuing a refund for one or more individual order line items in a multiple
            line item order. Otherwise, the seller just uses the <b>orderLevelRefundAmount</b>
            container to specify the amount of the refund for the entire order.
          items:
            $ref: '#/components/schemas/RefundItem'
          type: array
        orderLevelRefundAmount:
          $ref: '#/components/schemas/SimpleAmount'
      type: object
      x-apifox-orders:
      - reasonForRefund
      - comment
      - refundItems
      - orderLevelRefundAmount
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InfoFromBuyer:
      description: This container is returned if the buyer is returning one or more
        line items in an order that is associated with the payment dispute, and that
        buyer has provided return shipping tracking information and/or a note about
        the return.
      example:
        note: note
        returnShipmentTracking:
        - shippingCarrierCode: shippingCarrierCode
          shipmentTrackingNumber: shipmentTrackingNumber
        - shippingCarrierCode: shippingCarrierCode
          shipmentTrackingNumber: shipmentTrackingNumber
      properties:
        note:
          description: This field shows any note that was left by the buyer for in
            regards to the dispute.
          type: string
        returnShipmentTracking:
          description: This array shows shipment tracking information for one or more
            shipping packages being returned to the buyer after a payment dispute.
          items:
            $ref: '#/components/schemas/TrackingInfo'
          type: array
      type: object
      x-apifox-orders:
      - note
      - returnShipmentTracking
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    LineItem:
      description: This type contains the details of each line item in an order.
      properties:
        appliedPromotions:
          description: This array contains information about one or more sales promotions
            or discounts applied to the line item. It is always returned, but will
            be returned as an empty array if no special sales promotions or discounts
            apply to the order line item.
          items:
            $ref: '#/components/schemas/AppliedPromotion'
          type: array
        deliveryCost:
          $ref: '#/components/schemas/DeliveryCost'
        discountedLineItemCost:
          $ref: '#/components/schemas/Amount'
        ebayCollectAndRemitTaxes:
          description: This container will be returned if the order line item is subject
            to a 'Collect and Remit' tax that eBay will collect and remit to the proper
            taxing authority on the buyer's behalf.<br/><br/>'Collect and Remit' tax
            includes:<ul><li>US state-mandated sales tax</li><li>Federal and Provincial
            Sales Tax in Canada</li><li>'Goods and Services' tax in Canada, Australia,
            and New Zealand</li><li>VAT collected for the UK and EU countries</li></ul>The
            amount of this tax is shown in the <strong>amount</strong> field, and
            the type of tax is shown in the <strong>taxType</strong> field.<br/><br/>eBay
            will display the tax type and amount during checkout in accordance with
            the buyer's address, and handle collection and remittance of the tax without
            requiring the seller to take any action.
          items:
            $ref: '#/components/schemas/EbayCollectAndRemitTax'
          type: array
        giftDetails:
          $ref: '#/components/schemas/GiftDetails'
        itemLocation:
          $ref: '#/components/schemas/ItemLocation'
        legacyItemId:
          description: The eBay-generated legacy listing item ID of the listing. Note
            that the unique identifier of a listing in REST-based APIs is called the
            <strong>listingId</strong> instead.
          type: string
        legacyVariationId:
          description: The unique identifier of a single variation within a multiple-variation
            listing. This field is only returned if the line item purchased was from
            a multiple-variation listing.
          type: string
        lineItemCost:
          $ref: '#/components/schemas/Amount'
        lineItemFulfillmentInstructions:
          $ref: '#/components/schemas/LineItemFulfillmentInstructions'
        lineItemFulfillmentStatus:
          description: This enumeration value indicates the current fulfillment status
            of the line item. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:LineItemFulfillmentStatusEnum'>eBay
            API documentation</a>
          type: string
        lineItemId:
          description: This is the unique identifier of an eBay order line item. This
            field is created as soon as there is a commitment to buy from the seller.
          type: string
        listingMarketplaceId:
          description: The unique identifier of the eBay marketplace where the line
            item was listed. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        properties:
          $ref: '#/components/schemas/LineItemProperties'
        purchaseMarketplaceId:
          description: The unique identifier of the eBay marketplace where the line
            item was listed. Often, the <strong>listingMarketplaceId</strong> and
            the <strong>purchaseMarketplaceId</strong> identifier are the same, but
            there are occasions when an item will surface on multiple eBay marketplaces.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        quantity:
          description: The number of units of the line item in the order. These are
            represented as a group by a single <b>lineItemId</b>.
          format: int32
          type: integer
        refunds:
          description: This array is always returned, but is returned as an empty
            array unless the seller has submitted a partial or full refund to the
            buyer for the order. If a refund has occurred, the refund amount and refund
            date will be shown for each refund.
          items:
            $ref: '#/components/schemas/LineItemRefund'
          type: array
        sku:
          description: Seller-defined Stock-Keeping Unit (SKU). This inventory identifier
            must be unique within the seller's eBay inventory. SKUs are optional when
            listing in the legacy/Trading API system, but SKUs are required when listing
            items through the Inventory API model.
          type: string
        soldFormat:
          description: The eBay listing type of the line item. The most common listing
            types are <code>AUCTION</code> and <code>FIXED_PRICE</code>. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:SoldFormatEnum'>eBay
            API documentation</a>
          type: string
        taxes:
          description: Contains a list of taxes applied to the line item, if any.
            This array is always returned, but will be returned as empty if no taxes
            are applicable to the line item.
          items:
            $ref: '#/components/schemas/Tax'
          type: array
        title:
          description: The title of the listing.
          type: string
        total:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - appliedPromotions
      - deliveryCost
      - discountedLineItemCost
      - ebayCollectAndRemitTaxes
      - giftDetails
      - itemLocation
      - legacyItemId
      - legacyVariationId
      - lineItemCost
      - lineItemFulfillmentInstructions
      - lineItemFulfillmentStatus
      - lineItemId
      - listingMarketplaceId
      - properties
      - purchaseMarketplaceId
      - quantity
      - refunds
      - sku
      - soldFormat
      - taxes
      - title
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ItemLocation:
      description: This type describes the physical location of an order.
      properties:
        countryCode:
          description: The two-letter <a href="https://www.iso.org/iso-3166-country-codes.html
            " title="https://www.iso.org " target="_blank">ISO 3166</a> code representing
            the country of the address. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum'>eBay
            API documentation</a>
          type: string
        location:
          description: Indicates the geographical location of the item (along with
            the value in the <strong>countryCode</strong> field). This field provides
            city, province, state, or similar information.
          type: string
        postalCode:
          description: The postal code of the address.
          type: string
      type: object
      x-apifox-orders:
      - countryCode
      - location
      - postalCode
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    LineItemFulfillmentInstructions:
      description: This type contains the specifications for processing the fulfillment
        of a line item, including the handling window and the delivery window. These
        fields provide guidance for <i>eBay Guaranteed Delivery</i> as well as for
        non-guaranteed delivery.
      properties:
        guaranteedDelivery:
          description: This field is returned as <code>true</code> if the order line
            item is qualified for eBay Guaranteed Delivery, or <code>false</code>
            if it is not eligible. Only domestic shipments are available for eBay
            Guaranteed Delivery. At this time, eBay Guaranteed Delivery is only available
            to a select number of sellers on the US and Australia sites, but this
            feature will be enabled on more eBay sites in 2019.<br/><br/>  There are
            two different eBay Guaranteed Delivery options - 'Handling time' option
            and 'Door-to-Door' option. With both options, the seller is commiting
            to getting the order delivered to the buyer within three business days
            after purchase. <br/><br/> With the 'Handling time' option, the seller's
            stated handling time for a listing must be 'same-day' or '1-day', and
            at least one of the available shipping service options should have a shipping
            time that guarantees that the buyer receives the order on time. With this
            option, eBay will set the 'ship-by date' and expected delivery window
            for the seller, and the seller should just make sure they physically ship
            the order by the <strong>shipToDate</strong>.<br/><br/> With the 'Door-to-door'
            option, the seller must create regional shipping rate tables (with shipping
            costs and delivery times based on destination regions), and then apply
            these regional shipping rates/delivery times to the listing. <br/><br/>
            If a 'Door-to-door' order does not arrive on time, the seller must refund
            the buyer the full shipping cost (if any), and the buyer also has the
            option of returning the item for a full refund, and the seller will also
            have to pay the return shipping cost. With 'Handling time' option, as
            long as the seller meets the stated handling time, and ships using the
            correct shipping service option, eBay will refund the buyer the shipping
            cost and pay for return shipping label (if buyer wants to return item)
            if the order arrives after the expected delivery time. <br/><br/> For
            more information on the details and requirements of eBay Guaranteed Delivery,
            see the <a href="https://www.ebay.com/help/selling/shipping-items/offering-ebay-guaranteed-delivery?id=4645
            " target="_blank">Offering eBay Guaranteed Delivery</a> help topic.<br/><br/>
            This field will always be returned regardless of whether the listing site
            offers eBay Guaranteed Delivery or if the seller is opted in to the feature.
          type: boolean
        maxEstimatedDeliveryDate:
          description: The estimated latest date and time that the buyer can expect
            to receive the line item based on the seller's stated handling time and
            the transit times of the available shipping service options. If the listing
            is eligible for eBay Guaranteed Delivery (value of <b>guaranteedDelivery</b>
            field is <code>true</code>, the seller must pay extra attention to this
            date, as a failure to deliver by this date/time can result in a 'Late
            shipment' seller defect, and can affect seller level and Top-Rated Seller
            status. In addition to the seller defect, buyers will be eligible for
            a shipping cost refund, and will also be eligible to return the item for
            a full refund (with no return shipping charge) if they choose. <br /><br
            /><span class="tablenote"><strong>Note:</strong> This timestamp is in
            ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC)
            clock. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code></span>
          type: string
        minEstimatedDeliveryDate:
          description: The estimated earliest date and time that the buyer can expect
            to receive the line item based on the seller's stated handling time and
            the transit times of the available shipping service options.<br /><br
            /><span class="tablenote"><strong>Note:</strong> This timestamp is in
            ISO 8601 format, which uses the 24-hour Universal Coordinated Time (UTC)
            clock. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code></span>
          type: string
        shipByDate:
          description: The latest date and time by which the seller should ship line
            item in order to meet the expected delivery window. This timestamp will
            be set by eBay based on time of purchase and the seller's stated handling
            time. If the listing is eligible for eBay Guaranteed Delivery (value of
            <b>guaranteedDelivery</b> field is <code>true</code>, the seller must
            pay extra attention to this date, as a failure to physically ship the
            line item by this date/time can result in a 'Late shipment' seller defect,
            and can affect seller level and Top-Rated Seller status. In addition to
            the seller defect, buyers will be eligible for a shipping cost refund,
            and will also be eligible to return the item for a full refund (with no
            return shipping charge) if they choose. <br /><br /><span class="tablenote"><strong>Note:</strong>
            This timestamp is in ISO 8601 format, which uses the 24-hour Universal
            Coordinated Time (UTC) clock. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code></span>
          type: string
      type: object
      x-apifox-orders:
      - guaranteedDelivery
      - maxEstimatedDeliveryDate
      - minEstimatedDeliveryDate
      - shipByDate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    LegacyReference:
      description: Type defining the <b>legacyReference</b> container. This container
        is needed if the seller is issuing a refund for an individual order line item,
        and wishes to use an item ID and transaction ID to identify the order line
        item.
      example:
        legacyTransactionId: legacyTransactionId
        legacyItemId: legacyItemId
      properties:
        legacyItemId:
          description: The unique identifier of a listing in legacy/Trading API format.
            <br/><br/><span class="tablenote"><strong>Note:</strong> Both <b>legacyItemId</b>
            and <b>legacyTransactionId</b> are needed to identify an order line item.
            </span>
          type: string
        legacyTransactionId:
          description: The unique identifier of a sale/transaction in legacy/Trading
            API format. A 'transaction ID' is created once a buyer purchases a 'Buy
            It Now' item or if an auction listing ends with a winning bidder. <br/><br/><span
            class="tablenote"><strong>Note:</strong> Both <b>legacyItemId</b> and
            <b>legacyTransactionId</b> are needed to identify an order line item.
            </span>
          type: string
      type: object
      x-apifox-orders:
      - legacyItemId
      - legacyTransactionId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    GiftDetails:
      description: This type contains information about a digital gift card line item
        that was purchased as a gift, and sent to the recipient by email.
      properties:
        message:
          description: This field contains the gift message from the buyer to the
            gift recipient. This field is only returned if the buyer of the gift included
            a message for the gift.
          type: string
        recipientEmail:
          description: The email address of the gift recipient. The seller will send
            the digital gift card to this email address.
          type: string
        senderName:
          description: The name of the buyer, which will appear on the email that
            is sent to the gift recipient.
          type: string
      type: object
      x-apifox-orders:
      - message
      - recipientEmail
      - senderName
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FulfillmentStartInstruction:
      description: This type contains a set of specifications for processing a fulfillment
        of an order, including the type of fulfillment, shipping carrier and service,
        addressing details, and estimated delivery window. These instructions are
        derived from the buyer's and seller's eBay account preferences, the listing
        parameters, and the buyer's checkout selections. The seller can use them as
        a starting point for packaging, addressing, and shipping the order.
      properties:
        ebaySupportedFulfillment:
          description: This field is only returned if its value is <code>true</code>
            and indicates that the fulfillment will be shipped via eBay's Global Shipping
            Program. <br /><br />For more information, see the <a href="https://www.ebay.com/help/selling/shipping-items/setting-shipping-options/global-shipping-program?id=4646
            " target="_blank">Global Shipping Program</a> help topic.
          type: boolean
        finalDestinationAddress:
          $ref: '#/components/schemas/Address'
        fulfillmentInstructionsType:
          description: The enumeration value returned in this field indicates the
            method of fulfillment that will be used to deliver this set of line items
            (this package) to the buyer. This field will have a value of <code>SHIP_TO</code>
            if the <b>ebaySupportedFulfillment</b> field is returned with a value
            of <code>true</code>. See the <strong>FulfillmentInstructionsType</strong>
            definition for more information about different fulfillment types. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:FulfillmentInstructionsType'>eBay
            API documentation</a>
          type: string
        maxEstimatedDeliveryDate:
          description: This is the estimated latest date that the fulfillment will
            be completed. This timestamp is in ISO 8601 format, which uses the 24-hour
            Universal Coordinated Time (UTC) clock. This field is not returned ifthe
            value of the <b>fulfillmentInstructionsType</b> field is <code>DIGITAL</code>
            or <code>PREPARE_FOR_PICKUP</code>.  <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
          type: string
        minEstimatedDeliveryDate:
          description: This is the estimated earliest date that the fulfillment will
            be completed. This timestamp is in ISO 8601 format, which uses the 24-hour
            Universal Coordinated Time (UTC) clock. This field is not returned if  the
            value of the <b>fulfillmentInstructionsType</b> field is <code>DIGITAL</code>
            or <code>PREPARE_FOR_PICKUP</code>.  <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
          type: string
        pickupStep:
          $ref: '#/components/schemas/PickupStep'
        shippingStep:
          $ref: '#/components/schemas/ShippingStep'
      type: object
      x-apifox-orders:
      - ebaySupportedFulfillment
      - finalDestinationAddress
      - fulfillmentInstructionsType
      - maxEstimatedDeliveryDate
      - minEstimatedDeliveryDate
      - pickupStep
      - shippingStep
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FileInfo:
      description: This type is used by the <strong>files</strong> array, which shows
        the name, ID, file type, and upload date for each provided evidential file.
      example:
        name: name
        uploadedDate: uploadedDate
        fileType: fileType
        fileId: fileId
      properties:
        fileId:
          description: The unique identifier of the evidence file.
          type: string
        fileType:
          description: The type of file uploaded. Supported file extensions are .JPEG,
            .JPG, and .PNG., and maximum file size allowed is 1.5 MB.
          type: string
        name:
          description: The seller-provided name of the evidence file.
          type: string
        uploadedDate:
          description: 'The timestamp in this field shows the date/time when the seller
            uploaded the evidential document to eBay. <br/><br/>The timestamps returned
            here use the ISO-8601 24-hour date and time format, and the time zone
            used is Universal Coordinated Time (UTC), also known as Greenwich Mean
            Time (GMT), or Zulu. The ISO-8601 format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>.
            An example would be <code>2019-08-04T19:09:02.768Z</code>.'
          type: string
      type: object
      x-apifox-orders:
      - fileId
      - fileType
      - name
      - uploadedDate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FileEvidence:
      description: This type is used to store the unique identifier of an evidence
        file. Evidence files are used by seller to contest a payment dispute.
      example:
        fileId: fileId
      properties:
        fileId:
          description: If an <strong>uploadEvidenceFile</strong> call is successful,
            a unique identifier of this evidence file will be returned in the <strong>uploadEvidenceFile</strong>
            response payload.  This unique <strong>fileId</strong> value is then used
            to either add this evidence file to a new evidence set using the <strong>addEvidence</strong>
            method, or to add this file to an existing evidence set using the <strong>updateEvidence</strong>
            method.<br><br>Note that if an evidence set already exists for a payment
            dispute, the <strong>getPaymentDispute</strong> method will return both
            the <strong>evidenceId</strong> (unique identifier of evidence set) value,
            and the <strong>fileId</strong> (unique identifier of a file within that
            evidence set) value(s).
          type: string
      type: object
      x-apifox-orders:
      - fileId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    EvidenceRequest:
      description: This type is used by the <strong>evidenceRequests</strong> array
        that is returned in the <strong>getPaymentDispute</strong> response if one
        or more evidential documents are being requested to help resolve the payment
        dispute.
      example:
        lineItems:
        - itemId: itemId
          lineItemId: lineItemId
        - itemId: itemId
          lineItemId: lineItemId
        evidenceId: evidenceId
        evidenceType: evidenceType
        requestDate: requestDate
        respondByDate: respondByDate
      properties:
        evidenceId:
          description: Unique identifier of the evidential file set. Potentially,
            each evidential file set can have more than one file, that is why there
            is this file set identifier, and then an identifier for each file within
            this file set.
          type: string
        evidenceType:
          description: This enumeration value shows the type of evidential document
            provided. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:EvidenceTypeEnum'>eBay
            API documentation</a>
          type: string
        lineItems:
          description: This array shows one or more order line items associated with
            the evidential document that has been provided.
          items:
            $ref: '#/components/schemas/OrderLineItems'
          type: array
        requestDate:
          description: 'The timestamp in this field shows the date/time when eBay
            requested the evidential document from the seller in response to a payment
            dispute. <br/><br/>The timestamps returned here use the ISO-8601 24-hour
            date and time format, and the time zone used is Universal Coordinated
            Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu. The ISO-8601
            format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>. An example
            would be <code>2019-08-04T19:09:02.768Z</code>.'
          type: string
        respondByDate:
          description: 'The timestamp in this field shows the date/time when the seller
            is expected to provide a requested evidential document to eBay.  <br/><br/>The
            timestamps returned here use the ISO-8601 24-hour date and time format,
            and the time zone used is Universal Coordinated Time (UTC), also known
            as Greenwich Mean Time (GMT), or Zulu. The ISO-8601 format looks like
            this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>. An example would be <code>2019-08-04T19:09:02.768Z</code>.'
          type: string
      type: object
      x-apifox-orders:
      - evidenceId
      - evidenceType
      - lineItems
      - requestDate
      - respondByDate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ExtendedContact:
      description: This type contains shipping and contact information for a buyer
        or an eBay shipping partner.
      properties:
        companyName:
          description: The company name associated with the buyer or eBay shipping
            partner. This field is only returned if defined/applicable to the buyer
            or eBay shipping partner.
          type: string
        contactAddress:
          $ref: '#/components/schemas/Address'
        email:
          description: This field contains the email address of the buyer. This address
            will be returned for up to 14 days from order creation. If an order is
            more than 14 days old, no address is returned. <br /><br /> <span class="tablenote">
            <strong>Note:</strong> If returned, this field contains the email address
            of the buyer, even for Global Shipping Program shipments.</span>
          type: string
        fullName:
          description: The full name of the buyer or eBay shipping partner.
          type: string
        primaryPhone:
          $ref: '#/components/schemas/PhoneNumber'
      type: object
      x-apifox-orders:
      - companyName
      - contactAddress
      - email
      - fullName
      - primaryPhone
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DisputeSummaryResponse:
      description: This type defines the base response payload of the <strong>getPaymentDisputeSummaries</strong>
        method. Each payment dispute that matches the input criteria is returned under
        the <strong>paymentDisputeSummaries</strong> array.
      example:
        next: next
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
        paymentDisputeSummaries:
        - buyerUsername: buyerUsername
          reason: reason
          amount:
            currency: currency
            value: value
          closedDate: closedDate
          orderId: orderId
          paymentDisputeId: paymentDisputeId
          paymentDisputeStatus: paymentDisputeStatus
          respondByDate: respondByDate
          openDate: openDate
        - buyerUsername: buyerUsername
          reason: reason
          amount:
            currency: currency
            value: value
          closedDate: closedDate
          orderId: orderId
          paymentDisputeId: paymentDisputeId
          paymentDisputeStatus: paymentDisputeStatus
          respondByDate: respondByDate
          openDate: openDate
      properties:
        href:
          description: The URI of the <strong>getPaymentDisputeSummaries</strong>
            call request that produced the current page of the result set.
          type: string
        limit:
          description: 'This value shows the maximum number of payment disputes that
            will appear on one page of the result set. The <strong>limit</strong>
            value can be passed in as a query parameter in the request, or if it is
            not used, it defaults to <code>200</code>. If the value in the <strong>total</strong>
            field exceeds this <strong>limit</strong> value, there are multiple pages
            in the current result set.<br><br><b>Min</b>: 1; <b>Max</b>: 200; <b>Default</b>:
            200'
          format: int32
          type: integer
        next:
          description: The <strong>getPaymentDisputeSummaries</strong> call URI to
            use if you wish to view the next page of the result set. For example,
            the following URI returns records 11 thru 20 from the collection of payment
            disputes:<br/><br/><code>path/payment_dispute_summary?limit=10&offset=10</code><br/><br/>This
            field is only returned if there is a next page of results to view based
            on the current input criteria.
          type: string
        offset:
          description: This integer value indicates the number of payment disputes
            skipped before listing the first payment dispute from the result set.
            The <strong>offset</strong> value can be passed in as a query parameter
            in the request, or if it is not used, it defaults to <code>0</code> and
            the first payment dispute of the result set is shown at the top of the
            response.
          format: int32
          type: integer
        paymentDisputeSummaries:
          description: Each payment dispute that matches the input criteria is returned
            under this array. If no payment disputes are found, an empty array is
            returned.
          items:
            $ref: '#/components/schemas/PaymentDisputeSummary'
          type: array
        prev:
          description: The <strong>getPaymentDisputeSummaries</strong> call URI to
            use if you wish to view the previous page of the result set. For example,
            the following URI returns records 1 thru 10 from the collection of payment
            disputes:<br/><br/><code>path/payment_dispute_summary?limit=10&offset=0</code><br/><br/>This
            field is only returned if there is a previous page of results to view
            based on the current input criteria.
          type: string
        total:
          description: This integer value is the total number of payment disputes
            that matched the input criteria. If the total number of entries exceeds
            the value that was set for <strong>limit</strong> in the request payload,
            you will have to make multiple API calls to see all pages of the results
            set. This field is returned even if it is <code>0</code>.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - paymentDisputeSummaries
      - prev
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    EbayTaxReference:
      description: This type describes the VAT tax details. The eBay VAT tax type
        and the eBay VAT identifier number will be returned if a VAT tax is applicable
        for the order. <p> <span class="tablenote"><b>Note:</b> On January 31, 2022,
        the <strong>orders.fulfillmentStartInstructions.shippingStep.shipTo.contactAddress.addressLine2</strong>
        will stop being used to return VAT information, so developers should make
        sure they integrate with the new fields before that time.</span></p>
      properties:
        name:
          description: 'This field value is returned to indicate the VAT tax type,
            which will vary by country/region. This string value will be one of the
            following:<ul><li><code>ABN</code>: if this string is returned, the ID
            in the <strong>value</strong> field is an Australia tax ID</li><li><code>DDG</code>:
            if this string is returned, it indicates that tax has been collected and
            remitted for Digitally Delivered Goods (DDG)</li><li><code>IOSS</code>:
            if this string is returned, the ID in the <strong>value</strong> field
            is an eBay EU or UK IOSS number</li><li><code>IRD</code>: if this string
            is returned, the ID in the <strong>value</strong> field is an eBay New
            Zealand tax ID</li><li><code>OSS</code>: if this string is returned, the
            ID in the <strong>value</strong> field is an  eBay Germany VAT ID</li><li><code>VOEC</code>:
            if this string is returned, the ID in the <strong>value</strong> field
            is an eBay Norway tax ID</li></ul>'
          type: string
        value:
          description: 'The value returned in this field is the VAT identifier number
            (VATIN), which will vary by country/region. This field will be returned
            if VAT tax is applicable for the order. The <strong>name</strong> field
            indicates the VAT tax type, which will vary by country/region: <ul><li><strong>ABN</strong>:
            <em>eBay AU tax ID</em></li><li><strong>IOSS</strong>: <em>eBay EU IOSS
            number</em> / <em>eBay UK IOSS number</em></li><li><strong>IRD</strong>:
            <em>eBay NZ tax ID</em></li><li><strong>OSS</strong>: <em>eBay DE VAT
            ID</em></li><li><strong>VOEC</strong>: <em>eBay NO number</em></li></ul>'
          type: string
      type: object
      x-apifox-orders:
      - name
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    EbayVaultProgram:
      properties:
        fulfillmentType:
          description: 'This field specifies how an eBay vault order will be fulfilled.
            Supported options are:<ul><li><b>Seller to Vault</b>: the order will be
            shipped by the seller to an authenticator.</li><li><b>Vault to Vault</b>:
            the order will be shipped from an eBay vault to the buyer''s vault.</li><li><b>Vault
            to Buyer</b>: the order will be shipped from an eBay vault to the buyer''s
            shipping address.</li></ul> For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:EbayVaultFulfillmentTypeEnum''>eBay
            API documentation</a>'
          type: string
      type: object
      x-apifox-orders:
      - fulfillmentType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    EbayCollectAndRemitTax:
      description: This type contains information about the type and amount of tax
        that eBay will collect and remit to the state, province, country, or other
        taxing authority in the buyer's location, as required by that taxing authority.<br/><br/>'Collect
        and Remit' tax includes:<ul><li>US state-mandated sales tax</li><li>Federal
        and Provincial Sales Tax in Canada</li><li>'Goods and Services' tax in Canada,
        Australia, and New Zealand</li><li>VAT collected for the UK and EU countries</li></ul>
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        ebayReference:
          $ref: '#/components/schemas/EbayTaxReference'
        taxType:
          description: The type of tax and fees that eBay will collect and remit to
            the taxing or fee authority. See the <strong>TaxTypeEnum</strong> type
            definition for more information about each tax or fee type. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:TaxTypeEnum'>eBay
            API documentation</a>
          type: string
        collectionMethod:
          description: This field indicates the collection method used to collect
            the 'Collect and Remit' tax for the order. This field is always returned
            for orders subject to 'Collect and Remit' tax, and its value is always
            <code>NET</code>.<br /><br /><span class="tablenote"><strong>Note:</strong>
            Although the <strong>collectionMethod</strong> field is returned for all
            orders subject to 'Collect and Remit' tax, the <strong>collectionMethod</strong>
            field and the <strong>CollectionMethodEnum</strong> type are not currently
            of any practical use, although this field may have use in the future.
            If and when the logic of this field is changed, this note will be updated
            and a note will also be added to the Release Notes.</span> For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:CollectionMethodEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - amount
      - ebayReference
      - taxType
      - collectionMethod
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    EbayFulfillmentProgram:
      description: This type is used to provide details about an order line item being
        fulfilled by eBay or an eBay fulfillment partner.
      properties:
        fulfilledBy:
          description: 'The value returned in this field indicates the party that
            is handling fulfillment of the order line item. <br /><br />Valid value:
            <code>EBAY</code>'
          type: string
      type: object
      x-apifox-orders:
      - fulfilledBy
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DisputeAmount:
      description: This type defines the monetary value of an amount. It can provide
        the amount in both the currency used on the eBay site where an item is being
        offered and the conversion of that value into another currency, if applicable.
      example:
        convertedFromCurrency: convertedFromCurrency
        exchangeRate: exchangeRate
        currency: currency
        convertedFromValue: convertedFromValue
        value: value
      properties:
        convertedFromCurrency:
          description: The three-letter <a href="https://www.iso.org/iso-4217-currency-codes.html"
            target="_blank">ISO 4217</a> code representing the currency of the amount
            in the <b> convertedFromValue</b> field. This value is the pre-conversion
            currency.<br><br>This field is only returned if/when currency conversion
            was applied by eBay. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CurrencyCodeEnum'>eBay
            API documentation</a>
          type: string
        convertedFromValue:
          description: The monetary amount before any conversion is performed, in
            the currency specified by the <b> convertedFromCurrency</b> field. This
            value is the pre-conversion amount. The <b> value</b> field contains the
            converted amount of this value, in the currency specified by the <b> currency</b>
            field.<br><br>This field is only returned if/when currency conversion
            was applied by eBay.
          type: string
        currency:
          description: 'A three-letter ISO 4217 code that indicates the currency of
            the amount in the <b>value</b> field. This field is always returned with
            any container using <b>Amount</b> type. <br /><br /><b>Default</b>: The
            currency of the authenticated user''s country. For implementation help,
            refer to <a href=''https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CurrencyCodeEnum''>eBay
            API documentation</a>'
          type: string
        exchangeRate:
          description: The exchange rate used for the monetary conversion. This field
            shows the exchange rate used to convert the dollar value in the <b>value</b>
            field from the dollar value in the <b>convertedFromValue</b> field.<br><br>This
            field is only returned if/when currency conversion was applied by eBay.
          type: string
        value:
          description: The monetary amount, in the currency specified by the <b>currency</b>
            field. This field is always returned with any container using <b>Amount</b>
            type.
          type: string
      type: object
      x-apifox-orders:
      - convertedFromCurrency
      - convertedFromValue
      - currency
      - exchangeRate
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AddEvidencePaymentDisputeResponse:
      description: This type is used by the response payload of the <strong>addEvidence</strong>
        method. Its only field is an unique identifier of an evidence set.
      example:
        evidenceId: evidenceId
      properties:
        evidenceId:
          description: The value returned in this field is the unique identifier of
            the newly-created evidence set. Upon a successful call, this value is
            automatically genererated. This new evidence set for the payment dispute
            includes the evidence file(s) that were passed in to the <strong>fileId</strong>
            array in the request payload. The <strong>evidenceId</strong> value will
            be needed if the seller wishes to add to the evidence set by using the
            <strong>updateEvidence</strong> method, or if they want to retrieve a
            specific evidence file within the evidence set by using the <strong>fetchEvidenceContent</strong>
            method.
          type: string
      type: object
      x-apifox-orders:
      - evidenceId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ContestPaymentDisputeRequest:
      description: This type is used by the request payload of the <strong>contestPaymentDispute</strong>
        method.
      example:
        returnAddress:
          country: country
          primaryPhone:
            number: number
            countryCode: countryCode
          stateOrProvince: stateOrProvince
          city: city
          postalCode: postalCode
          county: county
          addressLine1: addressLine1
          fullName: fullName
          addressLine2: addressLine2
        revision: 0
      properties:
        returnAddress:
          $ref: '#/components/schemas/ReturnAddress'
        revision:
          description: This integer value indicates the revision number of the payment
            dispute. This field is required. The current <strong>revision</strong>
            number for a payment dispute can be retrieved with the <strong>getPaymentDispute</strong>
            method. Each time an action is taken against a payment dispute, this integer
            value increases by 1.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - returnAddress
      - revision
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DisputeEvidence:
      description: 'This type is used by the <strong>evidence</strong> array that
        is returned in the <strong>getPaymentDispute</strong> response if one or more
        evidential documents are associated with the payment dispute. '
      example:
        lineItems:
        - itemId: itemId
          lineItemId: lineItemId
        - itemId: itemId
          lineItemId: lineItemId
        shipmentTracking:
        - shippingCarrierCode: shippingCarrierCode
          shipmentTrackingNumber: shipmentTrackingNumber
        - shippingCarrierCode: shippingCarrierCode
          shipmentTrackingNumber: shipmentTrackingNumber
        evidenceId: evidenceId
        evidenceType: evidenceType
        requestDate: requestDate
        respondByDate: respondByDate
        files:
        - name: name
          uploadedDate: uploadedDate
          fileType: fileType
          fileId: fileId
        - name: name
          uploadedDate: uploadedDate
          fileType: fileType
          fileId: fileId
        providedDate: providedDate
      properties:
        evidenceId:
          description: Unique identifier of the evidential file set. Potentially,
            each evidential file set can have more than one file, that is why there
            is this file set identifier, and then an identifier for each file within
            this file set.
          type: string
        evidenceType:
          description: This enumeration value shows the type of evidential file provided.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:EvidenceTypeEnum'>eBay
            API documentation</a>
          type: string
        files:
          description: This array shows the name, ID, file type, and upload date for
            each provided file.
          items:
            $ref: '#/components/schemas/FileInfo'
          type: array
        lineItems:
          description: This array shows one or more order line items associated with
            the evidential document that has been provided.
          items:
            $ref: '#/components/schemas/OrderLineItems'
          type: array
        providedDate:
          description: 'The timestamp in this field shows the date/time when the seller
            provided a requested evidential document to eBay. <br/><br/>The timestamps
            returned here use the ISO-8601 24-hour date and time format, and the time
            zone used is Universal Coordinated Time (UTC), also known as Greenwich
            Mean Time (GMT), or Zulu. The ISO-8601 format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>.
            An example would be <code>2019-08-04T19:09:02.768Z</code>.'
          type: string
        requestDate:
          description: 'The timestamp in this field shows the date/time when eBay
            requested the evidential document from the seller in response to a payment
            dispute. <br/><br/>The timestamps returned here use the ISO-8601 24-hour
            date and time format, and the time zone used is Universal Coordinated
            Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu. The ISO-8601
            format looks like this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>. An example
            would be <code>2019-08-04T19:09:02.768Z</code>.'
          type: string
        respondByDate:
          description: 'The timestamp in this field shows the date/time when the seller
            was expected to provide a requested evidential document to eBay.  <br/><br/>The
            timestamps returned here use the ISO-8601 24-hour date and time format,
            and the time zone used is Universal Coordinated Time (UTC), also known
            as Greenwich Mean Time (GMT), or Zulu. The ISO-8601 format looks like
            this: <em>yyyy-MM-ddThh:mm.ss.sssZ</em>. An example would be <code>2019-08-04T19:09:02.768Z</code>.'
          type: string
        shipmentTracking:
          description: This array shows the shipping carrier and shipment tracking
            number associated with each shipment package of the order. This array
            is returned if the seller has provided shipment tracking information as
            evidence to support <code>PROOF_OF_DELIVERY</code>.
          items:
            $ref: '#/components/schemas/TrackingInfo'
          type: array
      type: object
      x-apifox-orders:
      - evidenceId
      - evidenceType
      - files
      - lineItems
      - providedDate
      - requestDate
      - respondByDate
      - shipmentTracking
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CancelStatus:
      description: This type contains information about any requests that have been
        made to cancel an order.
      properties:
        cancelledDate:
          description: The date and time the order was cancelled, if applicable. This
            timestamp is in ISO 8601 format, which uses the 24-hour Universal Coordinated
            Time (UTC) clock. <br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
          type: string
        cancelRequests:
          description: This array contains details of one or more buyer requests to
            cancel the order. <br /><br /><b>For the getOrders call:</b>  This array
            is returned but is always empty.<br /><b>For the getOrder call:</b> This
            array is returned fully populated with information about any cancellation
            requests.
          items:
            $ref: '#/components/schemas/CancelRequest'
          type: array
        cancelState:
          description: The state of the order with regard to cancellation. This field
            is always returned, and if there are no cancellation requests, a value
            of <code>NONE_REQUESTED</code> is returned.  For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:CancelStateEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - cancelledDate
      - cancelRequests
      - cancelState
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DeliveryCost:
      description: This type contains a breakdown of all costs associated with the
        fulfillment of a line item.
      properties:
        importCharges:
          $ref: '#/components/schemas/Amount'
        shippingCost:
          $ref: '#/components/schemas/Amount'
        shippingIntermediationFee:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - importCharges
      - shippingCost
      - shippingIntermediationFee
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Address:
      description: This type contains the details of a geographical address.
      example:
        country: country
        stateOrProvince: stateOrProvince
        city: city
        postalCode: postalCode
        county: county
        addressLine1: addressLine1
        addressLine2: addressLine2
      properties:
        addressLine1:
          description: The first line of the street address.
          type: string
        addressLine2:
          description: The second line of the street address. This field can be used
            for additional address information, such as a suite or apartment number.
            This field will be returned if defined for the shipping address.
          type: string
        city:
          description: The city of the shipping destination.
          type: string
        country:
          description: The country of the shipping destination, represented as a two-letter
            ISO 3166-1 alpha-2 country code. For example, <code>US</code> represents
            the United States, and <code>DE</code> represents Germany. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:CountryCodeEnum'>eBay
            API documentation</a>
          type: string
        county:
          description: The county of the shipping destination. Counties typically,
            but not always, contain multiple cities or towns. This field is returned
            if known/available.
          type: string
        postalCode:
          description: The postal code of the shipping destination. Usually referred
            to as Zip codes in the US. Most countries have postal codes, but not all.
            The postal code will be returned if applicable.
          type: string
        stateOrProvince:
          description: The state or province of the shipping destination. Most countries
            have states or provinces, but not all. The state or province will be returned
            if applicable.
          type: string
      type: object
      x-apifox-orders:
      - addressLine1
      - addressLine2
      - city
      - country
      - county
      - postalCode
      - stateOrProvince
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CancelRequest:
      description: This type contains information about a buyer request to cancel
        an order.
      properties:
        cancelCompletedDate:
          description: The date and time that the order cancellation was completed,
            if applicable. This timestamp is in ISO 8601 format, which uses the 24-hour
            Universal Coordinated Time (UTC) clock. This field is not returned until
            the cancellation request has actually been approved by the seller.<br
            /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
          type: string
        cancelInitiator:
          description: This string value indicates the party who made the initial
            cancellation request. Typically, either the 'Buyer' or 'Seller'. If a
            cancellation request has been made, this field should be returned.
          type: string
        cancelReason:
          description: The reason why the <b>cancelInitiator</b> initiated the cancellation
            request. Cancellation reasons for a buyer might include 'order placed
            by mistake' or 'order won't arrive in time'. For a seller, a typical cancellation
            reason is 'out of stock'. If a cancellation request has been made, this
            field should be returned.
          type: string
        cancelRequestedDate:
          description: The date and time that the order cancellation was requested.
            This timestamp is in ISO 8601 format, which uses the 24-hour Universal
            Coordinated Time (UTC) clock. This field is returned for each cancellation
            request.<br /><br /><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z</code>
            <br /><b>Example:</b> <code>2015-08-04T19:09:02.768Z</code>
          type: string
        cancelRequestId:
          description: The unique identifier of the order cancellation request. This
            field is returned for each cancellation request.
          type: string
        cancelRequestState:
          description: The current stage or condition of the cancellation request.
            This field is returned for each cancellation request. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:CancelRequestStateEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - cancelCompletedDate
      - cancelInitiator
      - cancelReason
      - cancelRequestedDate
      - cancelRequestId
      - cancelRequestState
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AppliedPromotion:
      description: This type contains information about a sales promotion that is
        applied to a line item.
      properties:
        description:
          description: A description of the applied sales promotion.
          type: string
        discountAmount:
          $ref: '#/components/schemas/Amount'
        promotionId:
          description: An eBay-generated unique identifier of the sales promotion.<br/><br/>
            Multiple types of sales promotions are available to eBay Store owners,
            including order size/volume discounts, shipping discounts, special coupons,
            and price markdowns. Sales promotions can be managed through the Marketing
            tab of Seller Hub in My eBay, or by using the Trading API's <b>SetPromotionalSale</b>
            call or the Marketing API's <b>createItemPromotion</b> method.
          type: string
      type: object
      x-apifox-orders:
      - description
      - discountAmount
      - promotionId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AddEvidencePaymentDisputeRequest:
      description: This type is used by the request payload of the <strong>addEvidence</strong>
        method. The <strong>addEvidence</strong> method is used to create a new evidence
        set against a payment dispute with one or more evidence files.
      example:
        lineItems:
        - itemId: itemId
          lineItemId: lineItemId
        - itemId: itemId
          lineItemId: lineItemId
        evidenceType: evidenceType
        files:
        - fileId: fileId
        - fileId: fileId
      properties:
        evidenceType:
          description: This field is used to indicate the type of evidence being provided
            through one or more evidence files. All evidence files (if more than one)
            should be associated with the evidence type passed in this field. See
            the <strong>EvidenceTypeEnum</strong> type for the supported evidence
            types. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:EvidenceTypeEnum'>eBay
            API documentation</a>
          type: string
        files:
          description: This array is used to specify one or more evidence files that
            will become part of a new evidence set associated with a payment dispute.
            At least one evidence file must be specified in the <strong>files</strong>
            array.<br><br> The unique identifier of an evidence file is returned in
            the response payload of the <strong>uploadEvidence</strong> method.
          items:
            $ref: '#/components/schemas/FileEvidence'
          type: array
        lineItems:
          description: This required array identifies the order line item(s) for which
            the evidence file(s) will be applicable. Both the <strong>itemId</strong>
            and <strong>lineItemID</strong> fields are needed to identify each order
            line item, and both of these values are returned under the <strong>evidenceRequests.lineItems</strong>
            array in the <strong>getPaymentDispute</strong> response.
          items:
            $ref: '#/components/schemas/OrderLineItems'
          type: array
      type: object
      x-apifox-orders:
      - evidenceType
      - files
      - lineItems
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AcceptPaymentDisputeRequest:
      description: This type is used by base request of the <strong>acceptPaymentDispute</strong>
        method.
      example:
        returnAddress:
          country: country
          primaryPhone:
            number: number
            countryCode: countryCode
          stateOrProvince: stateOrProvince
          city: city
          postalCode: postalCode
          county: county
          addressLine1: addressLine1
          fullName: fullName
          addressLine2: addressLine2
        revision: 0
      properties:
        returnAddress:
          $ref: '#/components/schemas/ReturnAddress'
        revision:
          description: This integer value indicates the revision number of the payment
            dispute. This field is required. The current <strong>revision</strong>
            number for a payment dispute can be retrieved with the <strong>getPaymentDispute</strong>
            method. Each time an action is taken against a payment dispute, this integer
            value increases by 1.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - returnAddress
      - revision
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TransferDetail:
      description: This type is used by the <b>transferDetail</b> container, which
        provides more details about the transfer and the charge(s) associated with
        the transfer.
      example:
        charges:
        - chargeNetAmount:
            currency: currency
            value: value
          inquiryId: inquiryId
          orderId: orderId
          paymentDisputeId: paymentDisputeId
          caseId: caseId
          returnId: returnId
          cancellationId: cancellationId
          refundId: refundId
        - chargeNetAmount:
            currency: currency
            value: value
          inquiryId: inquiryId
          orderId: orderId
          paymentDisputeId: paymentDisputeId
          caseId: caseId
          returnId: returnId
          cancellationId: cancellationId
          refundId: refundId
        balanceAdjustment:
          adjustmentType: adjustmentType
          adjustmentAmount:
            currency: currency
            value: value
        totalChargeNetAmount:
          currency: currency
          value: value
      properties:
        balanceAdjustment:
          $ref: '#/components/schemas/BalanceAdjustment'
        charges:
          description: This container is an array of one or more charges related to
            the transfer. Charges can be related to an order cancellation, order return,
            case, payment dispute, etc.
          items:
            $ref: '#/components/schemas/Charge'
          type: array
        totalChargeNetAmount:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - balanceAdjustment
      - charges
      - totalChargeNetAmount
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TransactionSummaryResponse:
      description: This type is the base response type of the <strong>getTransactionSummary</strong>
        method, and based on the filters that are used in the <strong>getTransactionSummary</strong>
        call URI, the response may include  total count and amount of the seller's
        sales and credits, total count and amount of buyer refunds, and total count
        and amount of seller payment holds.
      example:
        refundCount: 7
        transferAmount:
          currency: currency
          value: value
        creditCount: 1
        withdrawalCount: 2
        transferCount: 3
        disputeBookingEntry: disputeBookingEntry
        shippingLabelBookingEntry: shippingLabelBookingEntry
        disputeAmount:
          currency: currency
          value: value
        balanceTransferCount: 6
        withdrawalAmount:
          currency: currency
          value: value
        balanceTransferBookingEntry: balanceTransferBookingEntry
        shippingLabelAmount:
          currency: currency
          value: value
        adjustmentCount: 0
        onHoldAmount:
          currency: currency
          value: value
        nonSaleChargeBookingEntry: nonSaleChargeBookingEntry
        transferBookingEntry: transferBookingEntry
        refundAmount:
          currency: currency
          value: value
        refundBookingEntry: refundBookingEntry
        nonSaleChargeAmount:
          currency: currency
          value: value
        onHoldBookingEntry: onHoldBookingEntry
        balanceTransferAmount:
          currency: currency
          value: value
        creditBookingEntry: creditBookingEntry
        disputeCount: 5
        onHoldCount: 2
        withdrawalBookingEntry: withdrawalBookingEntry
        nonSaleChargeCount: 5
        shippingLabelCount: 9
        adjustmentBookingEntry: adjustmentBookingEntry
        creditAmount:
          currency: currency
          value: value
        adjustmentAmount:
          currency: currency
          value: value
      properties:
        adjustmentAmount:
          $ref: '#/components/schemas/Amount'
        adjustmentBookingEntry:
          description: The credit debit sign indicator for adjustment. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay
            API documentation</a>
          type: string
        adjustmentCount:
          description: Total adjustment count for given payee within a specified period.
          format: int32
          type: integer
        balanceTransferAmount:
          $ref: '#/components/schemas/Amount'
        balanceTransferBookingEntry:
          description: The credit debit sign indicator for the balance transfer. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay
            API documentation</a>
          type: string
        balanceTransferCount:
          description: The total balance transfer count for given payee within the
            specified period.
          format: int32
          type: integer
        creditAmount:
          $ref: '#/components/schemas/Amount'
        creditBookingEntry:
          description: The enumeration value indicates whether the dollar amount in
            the <strong>creditAmount</strong> field is a charge (debit) to the seller
            or a credit. Typically, the enumeration value returned here will be <code>CREDIT</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay
            API documentation</a>
          type: string
        creditCount:
          description: This integer value indicates the total number of the seller's
            sales and/or credits that match the input criteria. <br/><br/><span class="tablenote"><strong>Note:</strong>
            Unless the <b>transactionType</b> filter is used in the request to retrieve
            a specific type of monetary transaction (sale, buyer refund, or seller
            credit), the <b>creditCount</b> and <b>creditAmount</b> fields account
            for both order sales and seller credits (the count and value is not distinguished
            between the two monetary transaction types).</span><br><br>This field
            is generally returned, even if <code>0</code>, but it will not be returned
            if a <strong>transactionType</strong> filter is used, and its value is
            set to either <code>REFUND</code>, <code>DISPUTE</code>, or <code>SHIPPING_LABEL</code>.
          format: int32
          type: integer
        disputeAmount:
          $ref: '#/components/schemas/Amount'
        disputeBookingEntry:
          description: The enumeration value indicates whether the dollar amount in
            the <strong>disputeAmount</strong> field is a charge (debit) to the seller
            or a credit. Typically, the enumeration value returned here will be <code>DEBIT</code>,
            but its possible that <code>CREDIT</code> could be returned if the seller
            contested one or more payment disputes and won the dispute. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay
            API documentation</a>
          type: string
        disputeCount:
          description: This integer value indicates the total number of payment disputes
            that have been initiated by one or more buyers. Only the orders that match
            the input criteria are considered. The Payment Disputes methods in the
            Fulfillment API can be used by the seller to retrieve more information
            about any payment disputes. <br><br>This field is generally returned,
            even if <code>0</code>, but it will not be returned if a <strong>transactionType</strong>
            filter is used, and its value is set to any value other than <code>DISPUTE</code>.
          format: int32
          type: integer
        nonSaleChargeAmount:
          $ref: '#/components/schemas/Amount'
        nonSaleChargeBookingEntry:
          description: The credit/debit sign indicator for the non-sale charge. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay
            API documentation</a>
          type: string
        nonSaleChargeCount:
          description: The total non-sale charge count for given payee within a specified
            period.
          format: int32
          type: integer
        onHoldAmount:
          $ref: '#/components/schemas/Amount'
        onHoldBookingEntry:
          description: The enumeration value indicates whether the dollar amount in
            the <strong>onHoldAmount</strong> field is a charge (debit) to the seller
            or a credit. Typically, the enumeration value returned here will be <code>CREDIT</code>,
            since on-hold funds should eventually be released as part of a payout
            to the seller once the hold is cleared. For implementation help, refer
            to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay
            API documentation</a>
          type: string
        onHoldCount:
          description: This integer value indicates the total number of order sales
            where the associated funds are on hold. Only the orders that match the
            input criteria are considered.<br><br>This field is generally returned,
            even if <code>0</code>, but it will not be returned if a <strong>transactionStatus</strong>
            filter is used, and its value is set to any value other than <code>FUNDS_ON_HOLD</code>.
          format: int32
          type: integer
        refundAmount:
          $ref: '#/components/schemas/Amount'
        refundBookingEntry:
          description: The enumeration value indicates whether the dollar amount in
            the <strong>refundAmount</strong> field is a charge (debit) to the seller
            or a credit. Typically, the enumeration value returned here will be <code>DEBIT</code>
            since this a refund from the seller to the buyer. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay
            API documentation</a>
          type: string
        refundCount:
          description: This integer value indicates the total number of buyer refunds
            that match the input criteria. <br><br>This field is generally returned,
            even if <code>0</code>, but it will not be returned if a <strong>transactionType</strong>
            filter is used, and its value is set to any value other than <code>REFUND</code>.
          format: int32
          type: integer
        shippingLabelAmount:
          $ref: '#/components/schemas/Amount'
        shippingLabelBookingEntry:
          description: The enumeration value indicates whether the dollar amount in
            the <strong>shippingLabelAmount</strong> field is a charge (debit) to
            the seller or a credit. Typically, the enumeration value returned here
            will be <code>DEBIT</code>, as eBay will charge the seller when eBay shipping
            labels are purchased, but it can be <code>CREDIT</code> if the seller
            was refunded for a shipping label or was possibly overcharged for a shipping
            label. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay
            API documentation</a>
          type: string
        shippingLabelCount:
          description: This is the total number of eBay shipping labels purchased
            by the seller. The count returned here may depend on the specified input
            criteria.
          format: int32
          type: integer
        transferAmount:
          $ref: '#/components/schemas/Amount'
        transferBookingEntry:
          description: The enumeration value indicates whether the dollar amount in
            the <strong>transferAmount</strong> field is a charge (debit) to the seller
            or a credit. Typically, the enumeration value returned here will be <code>DEBIT</code>
            since this a seller reimbursement to eBay for buyer refunds. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay
            API documentation</a>
          type: string
        transferCount:
          description: This integer value indicates the total number of buyer refund
            transfers that match the input criteria. <br><br>This field is generally
            returned, even if <code>0</code>, but it will not be returned if a <strong>transactionType</strong>
            filter is used, and its value is set to any value other than <code>TRANSFER</code>.
          format: int32
          type: integer
        withdrawalAmount:
          $ref: '#/components/schemas/Amount'
        withdrawalBookingEntry:
          description: The enumeration value indicates whether the dollar amount in
            the <strong>withdrawalAmount</strong> field is a charge (debit) to the
            seller or a credit. Typically, the enumeration value returned here will
            be <code>DEBIT</code> since this transaction involves a debit to the seller's
            available payout funds. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay
            API documentation</a>
          type: string
        withdrawalCount:
          description: This integer value indicates the total number of on-demand
            payouts (withdrawals) that match the input criteria. <br><br>This field
            is generally returned, even if <code>0</code>, but it will not be returned
            if a <strong>transactionType</strong> filter is used, and its value is
            set to any value other than <code>WITHDRAWAL</code>.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - adjustmentAmount
      - adjustmentBookingEntry
      - adjustmentCount
      - balanceTransferAmount
      - balanceTransferBookingEntry
      - balanceTransferCount
      - creditAmount
      - creditBookingEntry
      - creditCount
      - disputeAmount
      - disputeBookingEntry
      - disputeCount
      - nonSaleChargeAmount
      - nonSaleChargeBookingEntry
      - nonSaleChargeCount
      - onHoldAmount
      - onHoldBookingEntry
      - onHoldCount
      - refundAmount
      - refundBookingEntry
      - refundCount
      - shippingLabelAmount
      - shippingLabelBookingEntry
      - shippingLabelCount
      - transferAmount
      - transferBookingEntry
      - transferCount
      - withdrawalAmount
      - withdrawalBookingEntry
      - withdrawalCount
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Transfer:
      description: This type is the base response type used by <code>TRANSFER</code>
        transaction type that is returned in the response.
      example:
        transferDetail:
          charges:
          - chargeNetAmount:
              currency: currency
              value: value
            inquiryId: inquiryId
            orderId: orderId
            paymentDisputeId: paymentDisputeId
            caseId: caseId
            returnId: returnId
            cancellationId: cancellationId
            refundId: refundId
          - chargeNetAmount:
              currency: currency
              value: value
            inquiryId: inquiryId
            orderId: orderId
            paymentDisputeId: paymentDisputeId
            caseId: caseId
            returnId: returnId
            cancellationId: cancellationId
            refundId: refundId
          balanceAdjustment:
            adjustmentType: adjustmentType
            adjustmentAmount:
              currency: currency
              value: value
          totalChargeNetAmount:
            currency: currency
            value: value
        transferAmount:
          currency: currency
          value: value
        fundingSource:
          memo: memo
          type: type
          brand: brand
        transactionDate: transactionDate
        transferId: transferId
      properties:
        fundingSource:
          $ref: '#/components/schemas/FundingSource'
        transactionDate:
          description: 'This timestamp indicates the date/time of the transfer. The
            following (UTC) format is used: <code>YYYY-MM-DDTHH:MM:SS.SSSZ</code>.
            For example, <code>2020-08-04T19:09:02.768Z</code>'
          type: string
        transferAmount:
          $ref: '#/components/schemas/Amount'
        transferDetail:
          $ref: '#/components/schemas/TransferDetail'
        transferId:
          description: The unique identifier of the <code>TRANSFER</code> transaction
            type. This is the same value that was passed into the end of the call
            URI.
          type: string
      type: object
      x-apifox-orders:
      - fundingSource
      - transactionDate
      - transferAmount
      - transferDetail
      - transferId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Transactions:
      description: 'This is the base response type of the <b>getTransactions</b> method.
        The <b>getTransactions</b> response includes details on one or more monetary
        transactions that match the input criteria, as well as pagination data. '
      example:
        next: next
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
        transactions:
        - amount:
            currency: currency
            value: value
          references:
          - referenceType: referenceType
            referenceId: referenceId
          - referenceType: referenceType
            referenceId: referenceId
          orderId: orderId
          transactionStatus: transactionStatus
          salesRecordReference: salesRecordReference
          totalFeeAmount:
            currency: currency
            value: value
          totalFeeBasisAmount:
            currency: currency
            value: value
          feeType: feeType
          payoutId: payoutId
          transactionDate: transactionDate
          paymentsEntity: paymentsEntity
          transactionId: transactionId
          buyer:
            username: username
          bookingEntry: bookingEntry
          transactionType: transactionType
          feeJurisdiction:
            regionType: regionType
            regionName: regionName
          orderLineItems:
          - marketplaceFees:
            - amount:
                currency: currency
                value: value
              feeJurisdiction:
                regionType: regionType
                regionName: regionName
              feeMemo: feeMemo
              feeType: feeType
            - amount:
                currency: currency
                value: value
              feeJurisdiction:
                regionType: regionType
                regionName: regionName
              feeMemo: feeMemo
              feeType: feeType
            feeBasisAmount:
              currency: currency
              value: value
            lineItemId: lineItemId
          - marketplaceFees:
            - amount:
                currency: currency
                value: value
              feeJurisdiction:
                regionType: regionType
                regionName: regionName
              feeMemo: feeMemo
              feeType: feeType
            - amount:
                currency: currency
                value: value
              feeJurisdiction:
                regionType: regionType
                regionName: regionName
              feeMemo: feeMemo
              feeType: feeType
            feeBasisAmount:
              currency: currency
              value: value
            lineItemId: lineItemId
          transactionMemo: transactionMemo
        - amount:
            currency: currency
            value: value
          references:
          - referenceType: referenceType
            referenceId: referenceId
          - referenceType: referenceType
            referenceId: referenceId
          orderId: orderId
          transactionStatus: transactionStatus
          salesRecordReference: salesRecordReference
          totalFeeAmount:
            currency: currency
            value: value
          totalFeeBasisAmount:
            currency: currency
            value: value
          feeType: feeType
          payoutId: payoutId
          transactionDate: transactionDate
          paymentsEntity: paymentsEntity
          transactionId: transactionId
          buyer:
            username: username
          bookingEntry: bookingEntry
          transactionType: transactionType
          feeJurisdiction:
            regionType: regionType
            regionName: regionName
          orderLineItems:
          - marketplaceFees:
            - amount:
                currency: currency
                value: value
              feeJurisdiction:
                regionType: regionType
                regionName: regionName
              feeMemo: feeMemo
              feeType: feeType
            - amount:
                currency: currency
                value: value
              feeJurisdiction:
                regionType: regionType
                regionName: regionName
              feeMemo: feeMemo
              feeType: feeType
            feeBasisAmount:
              currency: currency
              value: value
            lineItemId: lineItemId
          - marketplaceFees:
            - amount:
                currency: currency
                value: value
              feeJurisdiction:
                regionType: regionType
                regionName: regionName
              feeMemo: feeMemo
              feeType: feeType
            - amount:
                currency: currency
                value: value
              feeJurisdiction:
                regionType: regionType
                regionName: regionName
              feeMemo: feeMemo
              feeType: feeType
            feeBasisAmount:
              currency: currency
              value: value
            lineItemId: lineItemId
          transactionMemo: transactionMemo
      properties:
        href:
          description: The URI of the <b>getTransactions</b> method request that produced
            the current page of the result set.
          type: string
        limit:
          description: The maximum number of monetary transactions that may be returned
            per page of the result set. The <strong>limit</strong> value can be passed
            in as a query parameter, or if omitted, its value defaults to <code>20</code>.
            <br /><br /><span class="tablenote"><strong>Note:</strong> If this is
            the last or only page of the result set, the page may contain fewer monetary
            transactions than the <strong>limit</strong> value.  To determine the
            number of pages in a result set, divide the <b>total</b> value (total
            number of monetary transactions matching input criteria) by this <strong>limit</strong>
            value, and then round up to the next integer. For example, if the <b>total</b>
            value was <code>120</code> (120 total monetary transactions) and the <strong>limit</strong>
            value was <code>50</code> (show 50 monetary transactions per page), the
            total number of pages in the result set is three, so the seller would
            have to make three separate <strong>getTransactions</strong> calls to
            view all monetary transactions matching the input criteria. </span><br/><br/><b>Maximum:</b>
            <code>200</code> <br /> <b>Default:</b> <code>20</code>
          format: int32
          type: integer
        next:
          description: The <b>getTransactions</b> method URI to use if you wish to
            view the next page of the result set. <br/><br/>This field is only returned
            if there is a next page of results to view based on the current input
            criteria.
          type: string
        offset:
          description: This integer value indicates the actual position that the first
            monetary transaction returned on the current page has in the results set.
            So, if you wanted to view the 11th monetary transaction of the result
            set, you would set the <strong>offset</strong> value in the request to
            <code>10</code>. <br><br>In the request, you can use the <b>offset</b>
            parameter in conjunction with the <b>limit</b> parameter to control the
            pagination of the output. For example, if <b>offset</b> is set to <code>30</code>
            and <b>limit</b> is set to <code>10</code>, the method retrieves monetary
            transactions 31 thru 40 from the resulting collection of monetary transactions.
            <br /><br /> <span class="tablenote"><strong>Note:</strong> This feature
            employs a zero-based list, where the first item in the list has an offset
            of <code>0</code>.</span><br/><br/><b>Default:</b> <code>0</code> (zero)
          format: int32
          type: integer
        prev:
          description: The <b>getTransactions</b> method URI to use if you wish to
            view the previous page of the result set. <br/><br/>This field is only
            returned if there is a previous page of results to view based on the current
            input criteria.
          type: string
        total:
          description: This integer value is the total amount of monetary transactions
            in the result set based on the current input criteria. Based on the total
            number of monetary transactions that match the criteria, and on the <strong>limit</strong>
            and <strong>offset</strong> values, there may be additional pages in the
            results set.
          format: int32
          type: integer
        transactions:
          description: An array of one or more monetary transactions that match the
            input criteria. Details for each monetary transaction may include the
            unique identifier of the order associated with the monetary transaction,
            the status of the transaction, the amount of the order, the order's buyer,
            and the unique identifier of the payout (if a payout has been initiated/issued
            for the order).
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - prev
      - total
      - transactions
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Transaction:
      description: 'This type is used to express the details of one of the following
        monetary transactions: a buyer''s payment for an order, a refund to the buyer
        for a returned item or cancelled order, or a credit issued by eBay to the
        seller''s account.'
      example:
        amount:
          currency: currency
          value: value
        references:
        - referenceType: referenceType
          referenceId: referenceId
        - referenceType: referenceType
          referenceId: referenceId
        orderId: orderId
        transactionStatus: transactionStatus
        salesRecordReference: salesRecordReference
        totalFeeAmount:
          currency: currency
          value: value
        totalFeeBasisAmount:
          currency: currency
          value: value
        feeType: feeType
        payoutId: payoutId
        transactionDate: transactionDate
        paymentsEntity: paymentsEntity
        transactionId: transactionId
        buyer:
          username: username
        bookingEntry: bookingEntry
        transactionType: transactionType
        feeJurisdiction:
          regionType: regionType
          regionName: regionName
        orderLineItems:
        - marketplaceFees:
          - amount:
              currency: currency
              value: value
            feeJurisdiction:
              regionType: regionType
              regionName: regionName
            feeMemo: feeMemo
            feeType: feeType
          - amount:
              currency: currency
              value: value
            feeJurisdiction:
              regionType: regionType
              regionName: regionName
            feeMemo: feeMemo
            feeType: feeType
          feeBasisAmount:
            currency: currency
            value: value
          lineItemId: lineItemId
        - marketplaceFees:
          - amount:
              currency: currency
              value: value
            feeJurisdiction:
              regionType: regionType
              regionName: regionName
            feeMemo: feeMemo
            feeType: feeType
          - amount:
              currency: currency
              value: value
            feeJurisdiction:
              regionType: regionType
              regionName: regionName
            feeMemo: feeMemo
            feeType: feeType
          feeBasisAmount:
            currency: currency
            value: value
          lineItemId: lineItemId
        transactionMemo: transactionMemo
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        bookingEntry:
          description: The enumeration value returned in this field indicates if the
            monetary transaction amount is a (<code>CREDIT</code>) or a (<code>DEBIT</code>)
            to the seller's account. Typically, the <code>SALE</code> and <code>CREDIT</code>
            transaction types are credits to the seller's account, and the <code>REFUND</code>,
            <code>DISPUTE</code>, <code>SHIPPING_LABEL</code>, and <code>TRANSFER</code>
            transaction types are debits to the seller's account. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay
            API documentation</a>
          type: string
        buyer:
          $ref: '#/components/schemas/Buyer'
        feeJurisdiction:
          $ref: '#/components/schemas/FeeJurisdiction'
        feeType:
          description: The type of fee. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/api:FeeTypeEnum'>eBay
            API documentation</a>
          type: string
        orderId:
          description: The unique identifier of the eBay order associated with the
            monetary transaction.
          type: string
        orderLineItems:
          description: This array shows the fees that are deducted from a seller payout
            for each line item in an order.<br /><br /><span class="tablenote"><strong>Note:</strong>
            In some cases, a transaction fee might be returned asynchronously from
            the associated order. In such cases, you can determine the order to which
            the fee applies by examining the referenceID value of the fee, which should
            match the ID of the order.
          items:
            $ref: '#/components/schemas/OrderLineItem'
          type: array
        paymentsEntity:
          description: This string value indicates the entity that is processing  the
            payment.
          type: string
        payoutId:
          description: The unique identifier of the seller payout associated with
            the monetary transaction. This identifier is generated once eBay begins
            processing the payout for the corresponding order. This field will not
            be returned if eBay has not yet begun processing the payout for an order.
          type: string
        references:
          description: This field contains reference information for the transaction
            fee. This includes an ID and the type of ID provided (such as item ID).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        salesRecordReference:
          description: The Sales Record Number associated with a sales order. Sales
            Record Numbers are Selling Manager/Selling Manager Pro identifiers that
            are created at order checkout.<br/><br/><span class="tablenote"><strong>Note:</strong>
            For all orders originating after February 1, 2020, a value of <code>0</code>
            will be returned in this field. The Sales Record Number field has also
            been removed from Seller Hub. Instead of <strong>salesRecordReference</strong>,
            depend on <strong>orderId</strong> instead as the identifier of the order.
            The <strong>salesRecordReference</strong> field has been scheduled for
            deprecation, and a date for when this field will no longer be returned
            at all will be announced soon.</span>
          type: string
        totalFeeAmount:
          $ref: '#/components/schemas/Amount'
        totalFeeBasisAmount:
          $ref: '#/components/schemas/Amount'
        transactionDate:
          description: 'This timestamp indicates when the monetary transaction (order
            purchase, buyer refund, seller credit) occurred. The following (UTC) format
            is used: <code>YYYY-MM-DDTHH:MM:SS.SSSZ</code>. For example, <code>2015-08-04T19:09:02.768Z</code>.'
          type: string
        transactionId:
          description: The unique identifier of the monetary transaction. A monetary
            transaction can be a sales order, an order refund to the buyer, a credit
            to the seller's account, a debit to the seller for the purchase of a shipping
            label, or a transaction where eBay recouped money from the seller if the
            seller lost a buyer-initiated payment dispute.
          type: string
        transactionMemo:
          description: This field provides more details on shipping label transactions
            and transactions where the funds are being held by eBay. For shipping
            label transactions, the <b>transactionMemo</b> gives details about a purchase,
            a refund, or a price adjustment to the cost of the shipping label. For
            on-hold transactions, the <b>transactionMemo</b> provides information
            on the reason for the hold or when the hold will be released (e.g., "Funds
            on hold. Estimated release on Jun 1").<br/><br/>This field is only returned
            if applicable/available.
          type: string
        transactionStatus:
          description: This enumeration value indicates the current status of the
            seller payout associated with the monetary transaction. See the <code>TransactionStatusEnum</code>
            type for more information on the different states. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:TransactionStatusEnum'>eBay
            API documentation</a>
          type: string
        transactionType:
          description: This enumeration value indicates the type of monetary transaction.
            Examples of monetary transactions include a buyer's payment for an order,
            a refund to the buyer for a returned item or cancelled order, or a credit
            issued by eBay to the seller's account. For a complete list of monetary
            transaction types within the <strong>Finances API</strong>, see the <a
            href="/api-docs/sell/finances/types/pay:TransactionTypeEnum">TransactionTypeEnum</a>
            type. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:TransactionTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - amount
      - bookingEntry
      - buyer
      - feeJurisdiction
      - feeType
      - orderId
      - orderLineItems
      - paymentsEntity
      - payoutId
      - references
      - salesRecordReference
      - totalFeeAmount
      - totalFeeBasisAmount
      - transactionDate
      - transactionId
      - transactionMemo
      - transactionStatus
      - transactionType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SellerFundsSummaryResponse:
      description: This type is used by the response payload of the <strong>getSellerFundsSummary</strong>
        method. All of the funds returned in  <strong>getSellerFundsSummary</strong>
        are funds that have not yet been paid to the seller through a seller payout.
        If there are no funds that are pending, on hold, or being processed for the
        seller's account, no response payload is returned, and an http status code
        of <code>204 - No Content</code> is returned instead.
      example:
        availableFunds:
          currency: currency
          value: value
        processingFunds:
          currency: currency
          value: value
        fundsOnHold:
          currency: currency
          value: value
        totalFunds:
          currency: currency
          value: value
      properties:
        availableFunds:
          $ref: '#/components/schemas/Amount'
        fundsOnHold:
          $ref: '#/components/schemas/Amount'
        processingFunds:
          $ref: '#/components/schemas/Amount'
        totalFunds:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - availableFunds
      - fundsOnHold
      - processingFunds
      - totalFunds
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Reference:
      description: This field is returned for NON_SALE_CHARGE transactions that contain
        non-transactional seller fees.
      example:
        referenceType: referenceType
        referenceId: referenceId
      properties:
        referenceId:
          description: The identifier of the transaction as specified by the <strong>referenceType</strong>.
            For example, with a <strong>referenceType</strong> of <strong>item_id</strong>,
            the <strong>referenceId</strong> refers to a unique item. This item may
            have several <code>NON_SALE_CHARGE</code> transactions.
          type: string
        referenceType:
          description: An enumeration value that identifies the reference type associated
            with the <strong>referenceId</strong>. For implementation help, refer
            to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:ReferenceTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - referenceId
      - referenceType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PayoutSummaryResponse:
      description: This type is the base response type of the <strong>getPayoutSummary</strong>
        method, and contains the total count of seller payouts (that match the input
        criteria), the total count of monetary transactions (order payment, buyer
        refunds, or seller credits) associated with those payouts, and the total value
        of those seller payouts.
      example:
        amount:
          currency: currency
          value: value
        payoutCount: 0
        transactionCount: 6
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        payoutCount:
          description: This integer value indicates the total count of payouts to
            the seller that match the input criteria. This field is always returned,
            even if there are no payouts that match the input criteria (its value
            will show <code>0</code>).
          format: int32
          type: integer
        transactionCount:
          description: This integer value indicates the total count of monetary transactions
            (order payments, buyer refunds, and seller credits) associated with the
            payouts that match the input criteria. This field is always returned,
            even if there are no payouts that match the input criteria (its value
            will show <code>0</code>). If there is at least one payout that matches
            the input criteria, the value in this field will be at least <code>1</code>.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - amount
      - payoutCount
      - transactionCount
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Payouts:
      description: This type is the base response type of the <strong>getPayouts</strong>
        method, and contains an array of one or more payouts (that match the input
        criteria), the total count of payouts in the response, and various pagination
        data for the results set.
      example:
        next: next
        payouts:
        - amount:
            currency: currency
            value: value
          bankReference: bankReference
          payoutInstrument:
            instrumentType: instrumentType
            accountLastFourDigits: accountLastFourDigits
            nickname: nickname
          payoutStatusDescription: payoutStatusDescription
          lastAttemptedPayoutDate: lastAttemptedPayoutDate
          payoutStatus: payoutStatus
          transactionCount: 0
          payoutId: payoutId
          payoutDate: payoutDate
          payoutMemo: payoutMemo
        - amount:
            currency: currency
            value: value
          bankReference: bankReference
          payoutInstrument:
            instrumentType: instrumentType
            accountLastFourDigits: accountLastFourDigits
            nickname: nickname
          payoutStatusDescription: payoutStatusDescription
          lastAttemptedPayoutDate: lastAttemptedPayoutDate
          payoutStatus: payoutStatus
          transactionCount: 0
          payoutId: payoutId
          payoutDate: payoutDate
          payoutMemo: payoutMemo
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
      properties:
        href:
          description: The URI of the <b>getPayouts</b> call request that produced
            the current page of the result set.
          type: string
        limit:
          description: The maximum number of payouts that may be returned per page
            of the result set. The <strong>limit</strong> value can be passed in as
            a query parameter, or if omitted, its value defaults to <code>20</code>.
            <br /><br /><span class="tablenote"><strong>Note:</strong> If this is
            the last or only page of the result set, the page may contain fewer payouts
            than the <strong>limit</strong> value.  To determine the number of pages
            in a result set, divide the <b>total</b> value (total number of payouts
            matching input criteria) by this <strong>limit</strong> value, and then
            round up to the next integer. For example, if the <b>total</b> value was
            <code>120</code> (120 total payouts) and the <strong>limit</strong> value
            was <code>50</code> (show 50 payouts per page), the total number of pages
            in the result set is three, so the seller would have to make three separate
            <strong>getPayouts</strong> calls to view all payouts matching the input
            criteria. </span><br/><br/><b>Maximum:</b> <code>200</code> <br /> <b>Default:</b>
            <code>20</code>
          format: int32
          type: integer
        next:
          description: The <b>getPayouts</b> call URI to use if you wish to view the
            next page of the result set. <br/><br/>This field is only returned if
            there is a next page of results to view based on the current input criteria.
          type: string
        offset:
          description: This integer value indicates the actual position that the first
            payout returned on the current page has in the results set. So, if you
            wanted to view the 11th payout of the result set, you would set the <strong>offset</strong>
            value in the request to <code>10</code>. <br><br>In the request, you can
            use the <b>offset</b> parameter in conjunction with the <b>limit</b> parameter
            to control the pagination of the output. For example, if <b>offset</b>
            is set to <code>30</code> and <b>limit</b> is set to <code>10</code>,
            the call retrieves payouts 31 thru 40 from the resulting collection of
            payouts. <br /><br /> <span class="tablenote"><strong>Note:</strong> This
            feature employs a zero-based list, where the first item in the list has
            an offset of <code>0</code>.</span><br/><br/><b>Default:</b> <code>0</code>
            (zero)
          format: int32
          type: integer
        payouts:
          description: An array of one or more payouts that match the input criteria.
            Details for each payout include the unique identifier of the payout, the
            status of the payout, the amount of the payout, and the number of monetary
            transactions associated with the payout.
          items:
            $ref: '#/components/schemas/Payout'
          type: array
        prev:
          description: The <b>getPayouts</b> call URI to use if you wish to view the
            previous page of the result set. <br/><br/>This field is only returned
            if there is a previous page of results to view based on the current input
            criteria.
          type: string
        total:
          description: This integer value is the total number of payouts in the results
            set based on the current input criteria. Based on the total number of
            payouts that match the criteria, and on the <strong>limit</strong> and
            <strong>offset</strong> values, there may be additional pages in the results
            set.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - payouts
      - prev
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Payout:
      description: This type is used to express the details of one seller payout that
        is returned with the <strong>getPayout</strong> or <strong>getPayouts</strong>
        methods.
      example:
        amount:
          currency: currency
          value: value
        bankReference: bankReference
        payoutInstrument:
          instrumentType: instrumentType
          accountLastFourDigits: accountLastFourDigits
          nickname: nickname
        payoutStatusDescription: payoutStatusDescription
        lastAttemptedPayoutDate: lastAttemptedPayoutDate
        payoutStatus: payoutStatus
        transactionCount: 0
        payoutId: payoutId
        payoutDate: payoutDate
        payoutMemo: payoutMemo
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        bankReference:
          description: This field contains additional information provided by the
            bank and passed on by the payment processor; e.g., the manner in which
            the transaction will appear on the seller's bank statement. The field
            is returned only when provided by the bank and processor.
          type: string
        lastAttemptedPayoutDate:
          description: This timestamp indicates the date/time when eBay last attempted
            to process a seller payout but it failed. This field is only returned
            if a seller payout fails, and the <strong>payoutStatus</strong> value
            shows <code>RETRYABLE_FAILED</code> or <code>TERMINAL_FAILED</code>. A
            seller can filter on the <b>lastAttemptedPayoutDate</b> in a <b>getPayouts</b>
            request.
          type: string
        payoutDate:
          description: 'This timestamp indicates when the seller payout began processing.
            The following format is used: <code>YYYY-MM-DDTHH:MM:SS.SSSZ</code>. For
            example, <code>2015-08-04T19:09:02.768Z</code>. This field is still returned
            even if the payout was pending but failed (<strong>payoutStatus</strong>
            value shows <code>RETRYABLE_FAILED</code> or <code>TERMINAL_FAILED</code>).'
          type: string
        payoutId:
          description: The unique identifier of the seller payout. This identifier
            is generated once eBay begins processing the payout to the seller's bank
            account.
          type: string
        payoutInstrument:
          $ref: '#/components/schemas/PayoutInstrument'
        payoutMemo:
          description: This field contains information provided by upstream components,
            based on internal and external commitments. A typical message would contain
            the expected arrival time of the payout.
          type: string
        payoutStatus:
          description: This enumeration value indicates the current status of the
            seller payout. For a successful payout, the value returned will be <code>SUCCEEDED</code>.
            See the <strong>PayoutStatusEnum</strong> type for more details on each
            payout status value. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:PayoutStatusEnum'>eBay
            API documentation</a>
          type: string
        payoutStatusDescription:
          description: 'This field provides more details about the current status
            of payout. The description returned here will correspond with enumeration
            value returned in the <strong>payoutStatus</strong> field. The following
            shows what description text might appear based on the different <strong>payoutStatus</strong>
            values:<ul><li><code>INITIATED</code>: <em>Preparing to send</em></li><li><code>SUCCEEDED</code>:
            <em>Funds sent</em></li><li><code>REVERSED</code>: <em>Waiting to retry
            : Money rejected by seller''s bank</em></li><li><code>RETRYABLE_FAILED</code>:
            <em>Waiting to retry</em></li><li><code>TERMINAL_FAILED</code>: <em>Payout
            failed</em></li></ul>'
          type: string
        transactionCount:
          description: This integer value indicates the number of monetary transactions
            (all orders, refunds, and credits, etc.) that have occurred with the corresponding
            payout. Its value should always be at least <code>1</code>, since there
            is at least one order per seller payout.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - amount
      - bankReference
      - lastAttemptedPayoutDate
      - payoutDate
      - payoutId
      - payoutInstrument
      - payoutMemo
      - payoutStatus
      - payoutStatusDescription
      - transactionCount
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FeeJurisdiction:
      description: This container returns jurisdiction information about region-specific
        fees that are charged to sellers.
      example:
        regionType: regionType
        regionName: regionName
      properties:
        regionName:
          description: String value that indicates the name of the region to which
            a region-specific fee applies.<br/><br/>The set of valid <b>regionName</b>
            values that may be returned is determined by the <b>regionType</b> value.<br/><br/><span
            class="tablenote"><strong>Note:</strong> Currently, supported <b>regionName</b>
            values that may be returned are standard two-character country codes.<br/><br/>Typical
            examples include:<ul><li><b>MX</b> [Mexico]</li><li><b>IN</b> [India]</li><li><b>US</b>
            [United States]</li></ul></span>
          type: string
        regionType:
          description: The enumeration value returned here indicates the type of region
            that is collecting the corresponding fee.<br/><span class="tablenote"><strong>Note:</strong>
            Currently, the only supported <b>regionType</b> is <code>COUNTRY</code>.</span>
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:RegionTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - regionName
      - regionType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FundingSource:
      description: This type provided details on the funding source for the transfer.
      example:
        memo: memo
        type: type
        brand: brand
      properties:
        brand:
          description: The brand name of the credit card or the name of the financial
            institution that is the source of payment. This field may not be populated
            for other funding sources.
          type: string
        memo:
          description: This field provides a note about the funding source. If the
            seller's credit card or bank account is the funding source, this field
            might contain the last four digits of the credit card or bank account.
            This field may also be returned as null.
          type: string
        type:
          description: 'The string value returned here indicates the funding source.
            Possible values include the following:<ul><li><code>AVAILABLE_FUNDS</code>:
            transfer is funded with seller payout funds</li><li><code>CREDIT_CARD</code>:
            transfer is funded with seller''s credit card</li><li><code>BANK</code>:
            transfer is funded with a direct debit to seller''s bank account on file
            with eBay</li><li><code>PAY_UPON_INVOICE</code>: eBay will bill the seller
            for the transfer on the monthly invoice</li></ul>'
          type: string
      type: object
      x-apifox-orders:
      - brand
      - memo
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PayoutInstrument:
      description: This type provides details about the seller's account that received
        (or is scheduled to receive) a payout.
      example:
        instrumentType: instrumentType
        accountLastFourDigits: accountLastFourDigits
        nickname: nickname
      properties:
        accountLastFourDigits:
          description: This value is the last four digits of the account that the
            seller uses to receive the payout. This may be the last four digits of
            a bank account or of a payment processor account such as Payoneer.
          type: string
        instrumentType:
          description: This value indicates the type of account that received the
            payout. The value returned in this field is <code>BANK</code> if the payout
            is going to a seller's bank account. Alternatively, the value can be the
            name of a digital wallet provider or payment processor such as <code>PAYONEER</code>.
          type: string
        nickname:
          description: If the payout instrument type is a bank, this value is a seller-provided
            nickname that the seller uses to represent the bank account that receives
            the payout. If the payout instrument is a provider of digital wallet or
            payment processing services, the value returned is the name of the service
            provider (for example, 'PAYONEER').
          type: string
      type: object
      x-apifox-orders:
      - accountLastFourDigits
      - instrumentType
      - nickname
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OrderLineItem:
      description: This type is used to show the fees that are deducted from a seller
        payout for each line item in an order.
      example:
        marketplaceFees:
        - amount:
            currency: currency
            value: value
          feeJurisdiction:
            regionType: regionType
            regionName: regionName
          feeMemo: feeMemo
          feeType: feeType
        - amount:
            currency: currency
            value: value
          feeJurisdiction:
            regionType: regionType
            regionName: regionName
          feeMemo: feeMemo
          feeType: feeType
        feeBasisAmount:
          currency: currency
          value: value
        lineItemId: lineItemId
      properties:
        feeBasisAmount:
          $ref: '#/components/schemas/Amount'
        lineItemId:
          description: The unique identifier of an order line item.
          type: string
        marketplaceFees:
          description: An array of all fees accrued for the order line item and deducted
            from a seller payout.
          items:
            $ref: '#/components/schemas/Fee'
          type: array
      type: object
      x-apifox-orders:
      - feeBasisAmount
      - lineItemId
      - marketplaceFees
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Charge:
      description: This type is used by the <b>charge</b> container, which is an array
        of one or more charges related to the transfer.
      example:
        chargeNetAmount:
          currency: currency
          value: value
        inquiryId: inquiryId
        orderId: orderId
        paymentDisputeId: paymentDisputeId
        caseId: caseId
        returnId: returnId
        cancellationId: cancellationId
        refundId: refundId
      properties:
        cancellationId:
          description: The unique identifier of an order cancellation. This field
            is only applicable and returned if the charge is related to an order  cancellation.
          type: string
        caseId:
          description: The unique identifier of a case filed against an order. This
            field is only applicable and returned if the charge is related to a case
            filed against an order.
          type: string
        chargeNetAmount:
          $ref: '#/components/schemas/Amount'
        inquiryId:
          description: The unique identifier of an Item Not Received (INR) inquiry
            filed against an order. This field is only applicable and returned if
            the charge is related to has an INR inquiry filed against the order.
          type: string
        orderId:
          description: The unique identifier of the order that is associated with
            the charge.
          type: string
        paymentDisputeId:
          description: The unique identifier of a third-party payment dispute filed
            against an order. This occurs when the buyer files a dispute against the
            order with their payment provider, and then the dispute comes into eBay's
            system. This field is only applicable and returned if the charge is related
            to a third-party payment dispute filed against an order.
          type: string
        refundId:
          description: The unique identifier of a buyer refund associated with the
            charge.
          type: string
        returnId:
          description: The unique identifier of an order return. This field is only
            applicable and returned if the charge is related to an order that was
            returned by the buyer.
          type: string
      type: object
      x-apifox-orders:
      - cancellationId
      - caseId
      - chargeNetAmount
      - inquiryId
      - orderId
      - paymentDisputeId
      - refundId
      - returnId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Fee:
      description: This type is used to display fees that are automatically deducted
        from seller payouts.
      example:
        amount:
          currency: currency
          value: value
        feeJurisdiction:
          regionType: regionType
          regionName: regionName
        feeMemo: feeMemo
        feeType: feeType
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        feeJurisdiction:
          $ref: '#/components/schemas/FeeJurisdiction'
        feeMemo:
          description: A description of the fee that was deducted from the seller
            payout.
          type: string
        feeType:
          description: The enumeration value returned here indicates the type of fee
            that was deducted from the seller payout. For implementation help, refer
            to <a href='https://developer.ebay.com/api-docs/sell/finances/types/api:FeeTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - amount
      - feeJurisdiction
      - feeMemo
      - feeType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Buyer:
      description: This type is used to express details about the buyer associated
        with an order. At this time, the only field in this type is the eBay user
        ID of the buyer, but more fields may get added at a later date.
      example:
        username: username
      properties:
        username:
          description: The eBay user ID of the order's buyer.
          type: string
      type: object
      x-apifox-orders:
      - username
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BalanceAdjustment:
      description: This type is used by the <b>balanceAdjustment</b> container, which
        shows the seller payout balance that will be applied toward the charges outlined
        in the <b>charges</b> array.
      example:
        adjustmentType: adjustmentType
        adjustmentAmount:
          currency: currency
          value: value
      properties:
        adjustmentAmount:
          $ref: '#/components/schemas/Amount'
        adjustmentType:
          description: The enumeration value returned here indicates if the charge
            is a <code>DEBIT</code> or a <code>CREDIT</code> to the seller. Generally,
            all transfer transaction types are going to be <code>DEBIT</code>, since
            the money is being tranferred from the seller to eBay. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - adjustmentAmount
      - adjustmentType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UpdateUserScheduleRequest:
      description: The type that defines the fields for a schedule update to a schedule
        generated with the Feed API.
      example:
        preferredTriggerDayOfWeek: preferredTriggerDayOfWeek
        scheduleName: scheduleName
        schemaVersion: schemaVersion
        scheduleEndDate: scheduleEndDate
        scheduleStartDate: scheduleStartDate
        preferredTriggerHour: preferredTriggerHour
        preferredTriggerDayOfMonth: 0
      properties:
        preferredTriggerDayOfMonth:
          description: 'The preferred day of the month to trigger the schedule. This
            field can be used with <strong>preferredTriggerHour</strong> for monthly
            schedules. The last day of the month is used for numbers larger than the
            actual number of days in the month. <br /><br />This field is available
            as specified by the template (<strong>scheduleTemplateId</strong>). The
            template can specify this field as optional or required, and optionally
            provides a default value. <br /><br /><b>Minimum: </b>1<b><br /><br /><b>Maximum:
            </b>31'
          format: int32
          type: integer
        preferredTriggerDayOfWeek:
          description: The preferred day of the week to trigger the schedule. This
            field can be used with <strong>preferredTriggerHour</strong> for weekly
            schedules. <br /><br />This field is available as specified by the template
            (<strong>scheduleTemplateId</strong>). The template can specify this field
            as optional or required, and optionally provides a default value. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:DayOfWeekEnum'>eBay
            API documentation</a>
          type: string
        preferredTriggerHour:
          description: 'The preferred two-digit hour of the day to trigger the schedule.
            <br /><br />This field is available as specified by the template (<strong>scheduleTemplateId</strong>).
            The template can specify this field as optional or required, and optionally
            provides a default value. <br /><br /><b>Format:</b> UTC <code>hhZ</code><br
            /><br />For example, the following represents 11:00 am UTC:<code> 11Z</code><br
            /><br /><b>Minimum: </b><code>00Z</code><b><br /><br /><b>Maximum: </b><code>23Z</code>'
          type: string
        scheduleEndDate:
          description: The timestamp on which the schedule (report generation) ends.
            After this date, the schedule status becomes <code>INACTIVE</code>. <br
            /><br />Use this field, if available, to end the schedule in the future.
            This value must be later than <strong>scheduleStartDate</strong> (if supplied).
            This field is available as specified by the template (<strong>scheduleTemplateId</strong>).
            The template can specify this field as optional or required, and optionally
            provides a default value.<br /><br /><b>Format:</b> UTC <code>yyyy-MM-dd<strong>T</strong>HH<strong>Z</strong></code><br
            /><br />For example, the following represents UTC October 10, 2021 at
            10:00 AM:<br /><code> 2021-10-10T10Z</code>
          type: string
        scheduleName:
          description: The schedule name assigned by the user for the created schedule.
          type: string
        scheduleStartDate:
          description: The timestamp to start generating the report. After this timestamp,
            the schedule status becomes active until either the <strong>scheduleEndDate</strong>
            occurs or the <strong>scheduleTemplateId</strong> becomes inactive. <br
            /><br />Use this field, if available, to start the schedule in the future
            but before the <strong>scheduleEndDate</strong> (if supplied). This field
            is available as specified by the template <strong>(scheduleTemplateId)</strong>.  The
            template can specify this field as optional or required, and optionally
            provides a default value.<br /><br /><b>Format:</b> UTC <code>yyyy-MM-dd<strong>T</strong>HH<strong>Z</strong></code><br
            /><br />For example, the following represents a schedule start date of
            UTC October 01, 2020 at 12:00 PM:<br /><code> 2020-01-01T12Z</code>
          type: string
        schemaVersion:
          description: The schema version of the feedType for the schedule. This field
            is required if the <strong>feedType</strong> has a schema version. <br
            /><br />This field is available as specified by the template (<strong>scheduleTemplateId</strong>).
            The template can specify this field as optional or required, and optionally
            provides a default value.
          type: string
      type: object
      x-apifox-orders:
      - preferredTriggerDayOfMonth
      - preferredTriggerDayOfWeek
      - preferredTriggerHour
      - scheduleEndDate
      - scheduleName
      - scheduleStartDate
      - schemaVersion
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UserScheduleResponse:
      description: The type that defines the fields for a paginated result set of
        available schedules. The response consists of 0 or more sequenced <em> pages</em>
        where each page has 0 or more items.
      example:
        preferredTriggerDayOfWeek: preferredTriggerDayOfWeek
        scheduleName: scheduleName
        schemaVersion: schemaVersion
        scheduleTemplateId: scheduleTemplateId
        lastModifiedDate: lastModifiedDate
        preferredTriggerHour: preferredTriggerHour
        creationDate: creationDate
        statusReason: statusReason
        scheduleEndDate: scheduleEndDate
        scheduleStartDate: scheduleStartDate
        feedType: feedType
        preferredTriggerDayOfMonth: 0
        scheduleId: scheduleId
        status: status
      properties:
        scheduleId:
          description: The ID of the schedule. This ID is generated when the schedule
            was created by the <strong>createSchedule</strong> method.
          type: string
        creationDate:
          description: The creation date of the schedule in hours based on the 24-hour
            Coordinated Universal Time (UTC) clock.
          type: string
        feedType:
          description: The <strong>feedType</strong> associated with the schedule.
          type: string
        lastModifiedDate:
          description: The date the schedule was last modified.
          type: string
        preferredTriggerDayOfMonth:
          description: The preferred day of the month to trigger the schedule. This
            field can be used with <strong>preferredTriggerHour</strong> for monthly
            schedules. The last day of the month is used for numbers larger than the
            number of days in the month.
          format: int32
          type: integer
        preferredTriggerDayOfWeek:
          description: The preferred day of the week to trigger the schedule. This
            field can be used with <strong>preferredTriggerHour</strong> for weekly
            schedules. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:DayOfWeekEnum'>eBay
            API documentation</a>
          type: string
        preferredTriggerHour:
          description: The preferred two-digit hour of the day to trigger the schedule.
            <br /><br /><b>Format:</b> UTC <code>hhZ</code><br /><br />For example,
            the following represents 11:00 am UTC:<br /><br /><code>11Z</code><br
            /><br />
          type: string
        scheduleEndDate:
          description: The timestamp on which the report generation (subscription)
            ends. After this date, the schedule status becomes <code>INACTIVE</code>.
          type: string
        scheduleName:
          description: The schedule name assigned by the user for the created schedule.
            Users assign this name for their reference.
          type: string
        scheduleStartDate:
          description: The timestamp that indicates the start of the report generation.
          type: string
        scheduleTemplateId:
          description: The ID of the template used to create this schedule.
          type: string
        schemaVersion:
          description: The schema version of the feedType for the schedule.
          type: string
        status:
          description: The enumeration value that indicates the state of the schedule.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:StatusEnum'>eBay
            API documentation</a>
          type: string
        statusReason:
          description: The reason the schedule is inactive. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:StatusReasonEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - scheduleId
      - creationDate
      - feedType
      - lastModifiedDate
      - preferredTriggerDayOfMonth
      - preferredTriggerDayOfWeek
      - preferredTriggerHour
      - scheduleEndDate
      - scheduleName
      - scheduleStartDate
      - scheduleTemplateId
      - schemaVersion
      - status
      - statusReason
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UploadSummary:
      description: This container provides summary information on an upload feed (not
        applicable for download feed types).
      example:
        successCount: 5
        failureCount: 1
      properties:
        failureCount:
          description: The number of records, such as the number of listings created
            or the number of pictures uploaded to a listing, that failed to process
            during the upload feed. Check the response file and correct any issues
            mentioned. If the feed fails before processing, no response file is provided.
            In this case check the REST output response.
          format: int32
          type: integer
        successCount:
          description: The number of records that were successfully processed during
            the upload feed.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - failureCount
      - successCount
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    UserScheduleCollection:
      description: The type that defines the fields for a paginated result set of
        user schedules. The response consists of 0 or more sequenced <em> pages</em>
        where each page has 0 or more items.
      example:
        next: next
        total: 1
        offset: 6
        prev: prev
        schedules:
        - preferredTriggerDayOfWeek: preferredTriggerDayOfWeek
          scheduleName: scheduleName
          schemaVersion: schemaVersion
          scheduleTemplateId: scheduleTemplateId
          lastModifiedDate: lastModifiedDate
          preferredTriggerHour: preferredTriggerHour
          creationDate: creationDate
          statusReason: statusReason
          scheduleEndDate: scheduleEndDate
          scheduleStartDate: scheduleStartDate
          feedType: feedType
          preferredTriggerDayOfMonth: 0
          scheduleId: scheduleId
          status: status
        - preferredTriggerDayOfWeek: preferredTriggerDayOfWeek
          scheduleName: scheduleName
          schemaVersion: schemaVersion
          scheduleTemplateId: scheduleTemplateId
          lastModifiedDate: lastModifiedDate
          preferredTriggerHour: preferredTriggerHour
          creationDate: creationDate
          statusReason: statusReason
          scheduleEndDate: scheduleEndDate
          scheduleStartDate: scheduleStartDate
          feedType: feedType
          preferredTriggerDayOfMonth: 0
          scheduleId: scheduleId
          status: status
        limit: 0
        href: href
      properties:
        href:
          description: The path to the call URI that produced the current page of
            results.
          type: string
        limit:
          description: The value of the <strong>limit</strong> parameter submitted
            in the request, which is the maximum number of schedules to return per
            page, from the result set. A result set is the complete set of schedules
            returned by the method. <p> <span class="tablenote"><strong>Note:</strong>
            Though this parameter is not required to be submitted in the request,
            the parameter defaults to 10 if omitted.<p> <span class="tablenote"><strong>Note:</strong>
            If this is the last or only page of the result set, the page may contain
            fewer tasks than the <strong>limit</strong> value. To determine the number
            of pages in a result set, divide the total value (total number of tasks
            matching input criteria) by this limit value, and then round up to the
            next integer. For example, if the <strong>total</strong> value was <code>120</code>
            (120 total tasks) and the <strong>limit</strong> value was <code>50</code>
            (show 50 tasks per page), the total number of pages in the result set
            is three, so the seller would have to make three separate <strong>getSchedules</strong>
            calls to view all tasks matching the input criteria.</span></p></span></p>
          format: int32
          type: integer
        next:
          description: The path to the call URI for the next page of results. This
            value is returned if there is an additional page of results to return
            from the result set.
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            <b>offset</b> query parameter. <p class="tablenote"><strong>Note: </strong>The
            items in a paginated result set use a zero-based list where the first
            item in the list has an offset of <code>0</code>.</p>'
          format: int32
          type: integer
        prev:
          description: The path to the call URI for the previous page of results.
            This is returned if there is a previous page of results from the result
            set.
          type: string
        schedules:
          description: An array of the schedules on this page. An empty array is returned
            if the filter criteria excludes all tasks.
          items:
            $ref: '#/components/schemas/UserScheduleResponse'
          type: array
        total:
          description: The total number of schedules that match the input criteria.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - prev
      - schedules
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TaskCollection:
      description: The type that defines the fields for a paginated result set of
        tasks. The response consists of 0 or more sequenced <em> pages</em> where
        each page has 0 or more items.
      example:
        next: next
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
        tasks:
        - schemaVersion: schemaVersion
          uploadSummary:
            successCount: 5
            failureCount: 1
          feedType: feedType
          detailHref: detailHref
          completionDate: completionDate
          creationDate: creationDate
          taskId: taskId
          status: status
        - schemaVersion: schemaVersion
          uploadSummary:
            successCount: 5
            failureCount: 1
          feedType: feedType
          detailHref: detailHref
          completionDate: completionDate
          creationDate: creationDate
          taskId: taskId
          status: status
      properties:
        href:
          description: 'The path to the call URI that produced the current page of
            results. '
          type: string
        limit:
          description: The value of the <strong>limit</strong> parameter submitted
            in the request, which is the maximum number of tasks to return per page,
            from the result set. A result set is the complete set of tasks returned
            by the method. <p> <span class="tablenote"><strong>Note:</strong> Though
            this parameter is not required to be submitted in the request, the parameter
            defaults to 10 if omitted.</span></p><p> <span class="tablenote"><strong>Note:</strong>
            If this is the last or only page of the result set, the page may contain
            fewer tasks than the <strong>limit</strong> value. To determine the number
            of pages in a result set, divide the total value (total number of tasks
            matching input criteria) by this limit value, and then round up to the
            next integer. For example, if the <strong>total</strong> value was <code>120</code>
            (120 total tasks) and the <strong>limit</strong> value was <code>50</code>
            (show 50 tasks per page), the total number of pages in the result set
            is three, so the seller would have to make three separate <strong>getTasks</strong>
            calls to view all tasks matching the input criteria.</span></p>
          format: int32
          type: integer
        next:
          description: The path to the call URI for the next page of results. This
            value is returned if there is an additional page of results to return
            from the result set.
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            <b>offset</b> query parameter. <p class="tablenote"><strong>Note: </strong>The
            items in a paginated result set use a zero-based list where the first
            item in the list has an offset of <code>0</code>.</p>'
          format: int32
          type: integer
        prev:
          description: The path to the call URI for the previous page of results.
            This is returned if there is a previous page of results from the result
            set.
          type: string
        tasks:
          description: 'An array of the tasks on this page. The tasks are sorted by
            creation date. An empty array is returned if the filter criteria excludes
            all tasks. '
          items:
            $ref: '#/components/schemas/Task'
          type: array
        total:
          description: The total number of tasks that match the input criteria.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - prev
      - tasks
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Task:
      description: The type that defines the fields for the task details.
      example:
        schemaVersion: schemaVersion
        uploadSummary:
          successCount: 5
          failureCount: 1
        feedType: feedType
        detailHref: detailHref
        completionDate: completionDate
        creationDate: creationDate
        taskId: taskId
        status: status
      properties:
        completionDate:
          description: The timestamp when the task went into the <code>COMPLETED</code>
            or <code>COMPLETED_WITH_ERROR</code> state. This state means that eBay
            has compiled the report for the seller based on the seller’s filter criteria,
            and the seller can run a <strong>getResultFile</strong> call to download
            the report.
          type: string
        creationDate:
          description: The date the task was created.
          type: string
        detailHref:
          description: The path to the call URI used to retrieve the task. This field
            points to the GetOrderTask URI if the task is for <code>LMS_ORDER_REPORT</code>
            or will be null if this task is for <code>LMS_ORDER_ACK</code>.
          type: string
        feedType:
          description: The feed type associated with the task.
          type: string
        schemaVersion:
          description: The schema version number associated with the task.
          type: string
        status:
          description: The enumeration value that indicates the state of the task
            that was submitted in the request. See <strong>FeedStatusEnum</strong>
            for information. <p>The values <code>COMPLETED </code>and<code> COMPLETED_WITH_ERROR</code>
            indicate the Order Report file is ready to download.</p> For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:FeedStatusEnum'>eBay
            API documentation</a>
          type: string
        taskId:
          description: The ID of the task that was submitted in the request.
          type: string
        uploadSummary:
          $ref: '#/components/schemas/UploadSummary'
      type: object
      x-apifox-orders:
      - completionDate
      - creationDate
      - detailHref
      - feedType
      - schemaVersion
      - status
      - taskId
      - uploadSummary
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SupportedConfiguration:
      description: An array that defines the configuration supported by this template.
        This includes specified properties and usage (whether the property is REQUIRED
        or OPTIONAL), and an optional default value.
      example:
        defaultValue: defaultValue
        usage: usage
        property: property
      properties:
        defaultValue:
          description: The default value for the property. If a value is omitted from
            the schedule and a default value is supplied, the default value is used.
          type: string
        property:
          description: 'Properties supported by the template. Properties can include
            the following: <ul><li><b>scheduleStartDate:</b> The timestamp that the
            report generation (subscription) begins. After this timestamp, the schedule
            status becomes active until either the scheduleEndDate occurs or the scheduleTemplate
            becomes inactive. Format: UTC <code>yyyy-MM-dd<strong>T</strong>HH<strong>Z</strong></code></li><li><b>scheduleEndDate:</b>
            The timestamp that the report generation (subscription) ends. After this
            date, the schedule status becomes INACTIVE. Format: UTC <code>yyyy-MM-dd<strong>T</strong>HH<strong>Z</strong></code></li><li><b>schemaVersion:</b>
            The schema version of the schedule templates feedType. This field is required
            if the feedType has a schema version.</li><li><b>preferredTriggerDayOfMonth:</b>
            The preferred day of the month to trigger the schedule. </li><li><b>preferredTriggerDayOfWeek:</b>
            The preferred day of the week to trigger the schedule. </li><li><b>preferredTriggerHour:</b>
            The preferred two-digit hour of the day to trigger the schedule. Format:
            UTC <code>hhZ</code></li><ul>'
          type: string
        usage:
          description: Whether the specified property is REQUIRED or OPTIONAL. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:ConfigurationsUsageEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - defaultValue
      - property
      - usage
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    StreamingOutput:
      description: File stream
      properties: {}
      type: object
      x-apifox-orders: []
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ScheduleTemplateResponse:
      description: The type that defines the fields for a paginated result set of
        available schedule templates. The response consists of 0 or more sequenced
        <em> pages</em> where each page has 0 or more items.
      example:
        scheduleTemplateId: scheduleTemplateId
        feedType: feedType
        name: name
        supportedConfigurations:
        - defaultValue: defaultValue
          usage: usage
          property: property
        - defaultValue: defaultValue
          usage: usage
          property: property
        frequency: frequency
        status: status
      properties:
        feedType:
          description: The feed type of the schedule template. <p> <span class="tablenote"><strong>Note:</strong>
            When calling <strong>createSchedule</strong> and <strong>updateSchedule</strong>
            methods you must match the feed type specified by the schedule template
            (this feedType).</span></p>
          type: string
        frequency:
          description: This field specifies how often the schedule is generated. If
            set to <code>HALF_HOUR</code> or <code>ONE_HOUR</code>, you cannot set
            a <strong>preferredTriggerHour</strong> using <strong>createSchedule</strong>
            or <strong>updateSchedule</strong>. For implementation help, refer to
            <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:FrequencyEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: The template name provided by the template.
          type: string
        scheduleTemplateId:
          description: The ID of the template. Use this ID to create a schedule based
            on the properties of this schedule template.
          type: string
        status:
          description: The present status of the template. You cannot create or modify
            a schedule using a template with an <code>INACTIVE</code> status.  For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:StatusEnum'>eBay
            API documentation</a>
          type: string
        supportedConfigurations:
          description: An array of the configuration supported by this template.
          items:
            $ref: '#/components/schemas/SupportedConfiguration'
          type: array
      type: object
      x-apifox-orders:
      - feedType
      - frequency
      - name
      - scheduleTemplateId
      - status
      - supportedConfigurations
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ServiceMetricsTask:
      example:
        filterCriteria:
          shippingRegions:
          - shippingRegions
          - shippingRegions
          customerServiceMetricType: customerServiceMetricType
          evaluationMarketplaceId: evaluationMarketplaceId
          listingCategories:
          - listingCategories
          - listingCategories
        schemaVersion: schemaVersion
        feedType: feedType
        detailHref: detailHref
        completionDate: completionDate
        creationDate: creationDate
        taskId: taskId
        status: status
      properties:
        completionDate:
          description: The timestamp when the customer service metrics task went into
            the <code>COMPLETED</code> or <code>COMPLETED_WITH_ERROR</code> state.
            This field is only returned if the status is one of the two completed
            values. This state means that eBay has compiled the report for the seller
            based on the seller’s filter criteria, and the seller can run a <strong>getResultFile</strong>
            call to download the report.
          type: string
        creationDate:
          description: The date the customer service metrics task was created.
          type: string
        detailHref:
          description: The relative <strong>getCustomerServiceMetricTask</strong>
            call URI path to retrieve the corresponding task.
          type: string
        feedType:
          description: The feed type associated with the task.
          type: string
        filterCriteria:
          $ref: '#/components/schemas/CustomerServiceMetricsFilterCriteria'
        schemaVersion:
          description: 'The schema version number of the file format. If omitted,
            the default value is used. <p><b>Default value: </b><code>1.0</code><p>'
          type: string
        status:
          description: An enumeration value that indicates the state of the task.
            See <strong>FeedStatusEnum</strong> for values. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:FeedStatusEnum'>eBay
            API documentation</a>
          type: string
        taskId:
          description: The unique eBay-assigned ID of the task.
          type: string
      type: object
      x-apifox-orders:
      - completionDate
      - creationDate
      - detailHref
      - feedType
      - filterCriteria
      - schemaVersion
      - status
      - taskId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OrderTask:
      description: The type that defines the fields for the <b> getOrderTask</b> response.
      example:
        filterCriteria:
          creationDateRange:
            from: from
            to: to
          orderStatus: orderStatus
          modifiedDateRange:
            from: from
            to: to
        schemaVersion: schemaVersion
        uploadSummary:
          successCount: 5
          failureCount: 1
        feedType: feedType
        detailHref: detailHref
        completionDate: completionDate
        creationDate: creationDate
        taskId: taskId
        status: status
      properties:
        completionDate:
          description: The timestamp when the task went into the <code>COMPLETED</code>
            or <code>COMPLETED_WITH_ERROR</code> state. This state means that eBay
            has compiled the report for the seller based on the seller’s filter criteria,
            and the seller can run a <strong>getResultFile</strong> call to download
            the report.
          type: string
        creationDate:
          description: The date the task was created.
          type: string
        detailHref:
          description: The path to the call URI used to retrieve the task.
          type: string
        feedType:
          description: The feed type associated with the task.
          type: string
        filterCriteria:
          $ref: '#/components/schemas/OrderFilterCriteria'
        schemaVersion:
          description: The schema version number associated with the create task.
          type: string
        status:
          description: The enumeration value that indicates the state of the task
            that was submitted in the request. See <strong>FeedStatusEnum</strong>
            for information. <p>The values <code>COMPLETED </code>and<code> COMPLETED_WITH_ERROR</code>
            indicate the Order Report file is ready to download.</p> For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:FeedStatusEnum'>eBay
            API documentation</a>
          type: string
        taskId:
          description: The ID of the task that was submitted in the request.
          type: string
        uploadSummary:
          $ref: '#/components/schemas/UploadSummary'
      type: object
      x-apifox-orders:
      - completionDate
      - creationDate
      - detailHref
      - feedType
      - filterCriteria
      - schemaVersion
      - status
      - taskId
      - uploadSummary
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ScheduleTemplateCollection:
      description: The type that defines the fields for a paginated result set of
        schedule templates. The response consists of 0 or more sequenced <em> pages</em>
        where each page has 0 or more items.
      example:
        next: next
        scheduleTemplates:
        - scheduleTemplateId: scheduleTemplateId
          feedType: feedType
          name: name
          supportedConfigurations:
          - defaultValue: defaultValue
            usage: usage
            property: property
          - defaultValue: defaultValue
            usage: usage
            property: property
          frequency: frequency
          status: status
        - scheduleTemplateId: scheduleTemplateId
          feedType: feedType
          name: name
          supportedConfigurations:
          - defaultValue: defaultValue
            usage: usage
            property: property
          - defaultValue: defaultValue
            usage: usage
            property: property
          frequency: frequency
          status: status
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
      properties:
        href:
          description: The path to the call URI that produced the current page of
            results.
          type: string
        limit:
          description: The value of the <strong>limit</strong> parameter submitted
            in the request, which is the maximum number of schedule templates to return
            per page, from the result set. A result set is the complete set of schedule
            templates returned by the method. <p> <span class="tablenote"><strong>Note:</strong>
            Though this parameter is not required to be submitted in the request,
            the parameter defaults to 10 if omitted.</span></p><p> <span class="tablenote"><strong>Note:</strong>
            If this is the last or only page of the result set, the page may contain
            fewer tasks than the <strong>limit</strong> value. To determine the number
            of pages in a result set, divide the total value (total number of tasks
            matching input criteria) by this limit value, and then round up to the
            next integer. For example, if the <strong>total</strong> value was <code>120</code>
            (120 total tasks) and the <strong>limit</strong> value was <code>50</code>
            (show 50 tasks per page), the total number of pages in the result set
            is three, so the seller would have to make three separate <strong>getScheduleTemplates</strong>
            calls to view all tasks matching the input criteria.</span></p>
          format: int32
          type: integer
        next:
          description: The path to the call URI for the next page of results. This
            value is returned if there is an additional page of results to return
            from the result set.
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            <b>offset</b> query parameter. <p class="tablenote"><strong>Note: </strong>The
            items in a paginated result set use a zero-based list where the first
            item in the list has an offset of <code>0</code>.</p>'
          format: int32
          type: integer
        prev:
          description: The path to the call URI for the previous page of results.
            This is returned if there is a previous page of results from the result
            set.
          type: string
        scheduleTemplates:
          description: An array of the schedule templates on this page. An empty array
            is returned if the filter criteria excludes all tasks.
          items:
            $ref: '#/components/schemas/ScheduleTemplateResponse'
          type: array
        total:
          description: The total number of schedule templates that match the input
            criteria.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - prev
      - scheduleTemplates
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OrderTaskCollection:
      description: The type that defines the fields for a paginated result set of
        orders. The response consists of 0 or more sequenced <em> pages</em> where
        each page has 0 or more items.
      example:
        next: next
        total: 5
        offset: 6
        prev: prev
        limit: 0
        href: href
        tasks:
        - filterCriteria:
            creationDateRange:
              from: from
              to: to
            orderStatus: orderStatus
            modifiedDateRange:
              from: from
              to: to
          schemaVersion: schemaVersion
          uploadSummary:
            successCount: 5
            failureCount: 1
          feedType: feedType
          detailHref: detailHref
          completionDate: completionDate
          creationDate: creationDate
          taskId: taskId
          status: status
        - filterCriteria:
            creationDateRange:
              from: from
              to: to
            orderStatus: orderStatus
            modifiedDateRange:
              from: from
              to: to
          schemaVersion: schemaVersion
          uploadSummary:
            successCount: 5
            failureCount: 1
          feedType: feedType
          detailHref: detailHref
          completionDate: completionDate
          creationDate: creationDate
          taskId: taskId
          status: status
      properties:
        href:
          description: The path to the call URI that produced the current page of
            results.
          type: string
        limit:
          description: The value of the <strong>limit</strong> parameter submitted
            in the request, which is the maximum number of order tasks to return per
            page, from the result set. A result set is the complete set of tasks returned
            by the method. <p> <span class="tablenote"><strong>Note:</strong> Though
            this parameter is not required to be submitted in the request, the parameter
            defaults to <code>10</code> if omitted.</span></p><p> <span class="tablenote"><strong>Note:</strong>
            If this is the last or only page of the result set, the page may contain
            fewer tasks than the <strong>limit</strong> value. To determine the number
            of pages in a result set, divide the total value (total number of tasks
            matching input criteria) by this limit value, and then round up to the
            next integer. For example, if the <strong>total</strong> value was <code>120</code>
            (120 total tasks) and the <strong>limit</strong> value was <code>50</code>
            (show 50 tasks per page), the total number of pages in the result set
            is three, so the seller would have to make three separate <strong>getOrderTasks</strong>
            calls to view all tasks matching the input criteria.</span></p>
          format: int32
          type: integer
        next:
          description: The path to the call URI for the next page of results. This
            value is returned if there is an additional page of results to return
            from the result set.
          type: string
        offset:
          description: 'The number of results skipped in the result set before listing
            the first returned result. This value can be set in the request with the
            <b>offset</b> query parameter. <p class="tablenote"><strong>Note: </strong>The
            items in a paginated result set use a zero-based list where the first
            item in the list has an offset of <code>0</code>.</p>'
          format: int32
          type: integer
        prev:
          description: The path to the call URI for the previous page of results.
            This is returned if there is a previous page of results from the result
            set.
          type: string
        tasks:
          description: An array of the order tasks on this page. The tasks are sorted
            by creation date. An empty array is returned if the filter criteria excludes
            all tasks.
          items:
            $ref: '#/components/schemas/OrderTask'
          type: array
        total:
          description: The total number of order tasks that match the input criteria.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - prev
      - tasks
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    OrderFilterCriteria:
      description: The type that defines the fields for the order filters.
      example:
        creationDateRange:
          from: from
          to: to
        orderStatus: orderStatus
        modifiedDateRange:
          from: from
          to: to
      properties:
        creationDateRange:
          $ref: '#/components/schemas/DateRange'
        modifiedDateRange:
          $ref: '#/components/schemas/DateRange'
        orderStatus:
          description: The order status of the orders returned. If the filter is omitted
            from createOrderTask call, orders that are in both <code>ACTIVE </code>and<code>
            COMPLETED</code> states are returned. For implementation help, refer to
            <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:OrderStatusEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - creationDateRange
      - modifiedDateRange
      - orderStatus
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryTaskCollection:
      example:
        next: next
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
        tasks:
        - filterCriteria:
            creationDateRange:
              from: from
              to: to
            listingStatus: listingStatus
            listingFormat: listingFormat
            modifiedDateRange:
              from: from
              to: to
          schemaVersion: schemaVersion
          uploadSummary:
            successCount: 5
            failureCount: 1
          feedType: feedType
          inventoryFileTemplate: inventoryFileTemplate
          detailHref: detailHref
          completionDate: completionDate
          creationDate: creationDate
          taskId: taskId
          status: status
        - filterCriteria:
            creationDateRange:
              from: from
              to: to
            listingStatus: listingStatus
            listingFormat: listingFormat
            modifiedDateRange:
              from: from
              to: to
          schemaVersion: schemaVersion
          uploadSummary:
            successCount: 5
            failureCount: 1
          feedType: feedType
          inventoryFileTemplate: inventoryFileTemplate
          detailHref: detailHref
          completionDate: completionDate
          creationDate: creationDate
          taskId: taskId
          status: status
      properties:
        href:
          description: The path to the call URI that produced the current page of
            results.
          type: string
        limit:
          description: The value of the <strong>limit</strong> parameter submitted
            in the request, which is the maximum number of inventory tasks to return
            per page, from the result set. A result set is the complete set of tasks
            returned by the method.<br /><br /><span class="tablenote"><strong>Note:</strong>
            Though this parameter is not required to be submitted in the request,
            the parameter defaults to <code>10</code> if omitted. Additionally, if
            this is the last or only page of the result set, the page may contain
            fewer tasks than the <strong>limit</strong> value submitted in the request.</span><br
            /><br />To determine the number of pages in a result set, divide the total
            value (total number of tasks matching the input criteria) by this limit
            value, and then round up to the next integer. For example, if the <strong>total</strong>
            value was <code>120</code> (120 total tasks) and the <strong>limit</strong>
            value was <code>50</code> (show 50 tasks per page), the total number of
            pages in the result set is three, so the seller would have to make three
            separate <strong>getInventoryTasks</strong> calls to view all tasks matching
            the input criteria.
          format: int32
          type: integer
        next:
          description: The path to the call URI for the next page of results. This
            value is returned if there is an additional page of results to return
            from the result set.
          type: string
        offset:
          description: The number of results skipped in the result set before listing
            the first returned result. This value can be specified in the request
            with the <strong>offset</strong> query parameter.<br /><br /><span class="tablenote"><strong>Note:</strong>
            The items in a paginated result set use a zero-based list, where the first
            item in the list has an offset of <code>0</code>.</span>
          format: int32
          type: integer
        prev:
          description: The path to the call URI for the previous page of results.
            This is returned if there is a previous page of results from the result
            set.
          type: string
        tasks:
          description: An array of the inventory tasks on this page. The tasks are
            sorted by creation date.<br /><br /><span class="tablenote"><strong>Note:</strong>
            An empty array is returned if the filter criteria excludes all tasks.</span>
          items:
            $ref: '#/components/schemas/InventoryTask'
          type: array
        total:
          description: The total number of inventory tasks that match the input criteria.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - prev
      - tasks
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CustomerServiceMetricsFilterCriteria:
      description: A complex data type that filters data for report creation. See
        <strong>CustomerServiceMetricsFilterCriteria</strong> for fields and descriptions.
      example:
        shippingRegions:
        - shippingRegions
        - shippingRegions
        customerServiceMetricType: customerServiceMetricType
        evaluationMarketplaceId: evaluationMarketplaceId
        listingCategories:
        - listingCategories
        - listingCategories
      properties:
        customerServiceMetricType:
          description: An enumeration value that specifies the customer service metric
            that eBay tracks to measure seller performance. See <strong>CustomerServiceMetricTypeEnum</strong>
            for values. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:CustomerServiceMetricTypeEnum'>eBay
            API documentation</a>
          type: string
        evaluationMarketplaceId:
          description: An enumeration value that specifies the eBay marketplace where
            the evaluation occurs. See <strong>MarketplaceIdEnum</strong> for values.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/bas:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        listingCategories:
          description: 'A list of listing category IDs on which the service metric
            is measured. A seller can use one or more L1 (top-level) eBay categories
            to get metrics specific to those L1 categories. The Category IDs for each
            L1 category are required. Category ID values for L1 categories can be
            retrieved using the Taxonomy API.<p> <span class="tablenote"><strong>Note:
            </strong>Pass this attribute to narrow down your filter results for the
            <code>ITEM_NOT_AS_DESCRIBED</code> customerServiceMetricType.</span></p>
            <p>Supported categories include:</p><p><code>primary(L1) category Id</code></p>'
          items:
            type: string
          type: array
        shippingRegions:
          description: 'A list of shipping region enumeration values on which the
            service metric is measured. This comma delimited array allows the seller
            to customize the report to focus on domestic or international shipping.
            <p> <span class="tablenote"><strong>Note: </strong>Pass this attribute
            to narrow down your filter results for the <code>ITEM_NOT_RECEIVED</code>
            customerServiceMetricType.</span></p> <p>Supported categories include:</p><p><code>primary(L1)
            category Id</code></p>See <strong>ShippingRegionTypeEnum</strong> for
            values'
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/feed/types/api:ShippingRegionTypeEnum''>eBay
              API documentation</a>'
            type: string
          type: array
      type: object
      x-apifox-orders:
      - customerServiceMetricType
      - evaluationMarketplaceId
      - listingCategories
      - shippingRegions
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateOrderTaskRequest:
      description: The type that defines the fields for the <b> createOrderTask</b>
        request.
      example:
        filterCriteria:
          creationDateRange:
            from: from
            to: to
          orderStatus: orderStatus
          modifiedDateRange:
            from: from
            to: to
        schemaVersion: schemaVersion
        feedType: feedType
      properties:
        feedType:
          description: The feed type associated with the task. The only presently
            supported value is <code>LMS_ORDER_REPORT</code>. See <a href="/api-docs/sell/static/feed/lms-feeds-quick-reference.html#merchant-data-reports-download-feed-types"
            target="_blank">Report download feed types</a> for more information.
          type: string
        filterCriteria:
          $ref: '#/components/schemas/OrderFilterCriteria'
        schemaVersion:
          description: 'The schema version of the LMS OrderReport. For the <code>LMS_ORDER_REPORT</code>
            feed type, see the <a href="/devzone/merchant-data/CallRef/OrderReport.html#OrderReport">OrderReport</a>
            reference page to see the present schema version. The <b> schemaVersion</b>
            value is the version number shown at the top of the <b> OrderReport</b>
            page. <br /><br /><b>Restriction: </b> This value must be 1113 or higher.
            The OrderReport schema version is updated about every two weeks. All version
            numbers are odd numbers (even numbers are skipped). For example, the next
            release version after ''1113'' is ''1115''.'
          type: string
      type: object
      x-apifox-orders:
      - feedType
      - filterCriteria
      - schemaVersion
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FormDataContentDisposition:
      description: The metadata for the file.
      properties:
        creationDate:
          description: 'The file creation date. <br /><br /><b> Format: </b> UTC <code>yyyy-MM-ddThh:mm:ss.SSSZ</code><p><b>For
            example:</b><p>Created on September 8, 2019</p><p><code>2019-09-08T00:00:00.000Z</code></p>'
          type: string
        fileName:
          description: The name of the file including its extension (for example,
            xml or csv) to be uploaded.
          type: string
        modificationDate:
          description: 'The file modified date. <br /><br /><b> Format: </b> UTC <code>yyyy-MM-ddThh:mm:ss.SSSZ</code><p><b>For
            example:</b><p>Created on September 9, 2019</p><p><code>2019-09-09T00:00:00.000Z</code></p>'
          type: string
        name:
          description: A content identifier. The only presently supported name is
            <code>file</code>.
          type: string
        parameters:
          additionalProperties:
            type: string
          description: The parameters you want associated with the file.
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
        readDate:
          description: 'The date you read the file. <br /><br /><b> Format: </b> UTC
            <code>yyyy-MM-ddThh:mm:ss.SSSZ</code><p><b>For example:</b><p>Created
            on September 10, 2019</p><p><code>2019-09-10T00:00:00.000Z</code></p>'
          type: string
        size:
          description: The size of the file.
          format: int32
          type: integer
        type:
          description: The file type. The only presently supported type is <code>form-data</code>.
          type: string
      type: object
      x-apifox-orders:
      - creationDate
      - fileName
      - modificationDate
      - name
      - parameters
      - readDate
      - size
      - type
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryTask:
      example:
        filterCriteria:
          creationDateRange:
            from: from
            to: to
          listingStatus: listingStatus
          listingFormat: listingFormat
          modifiedDateRange:
            from: from
            to: to
        schemaVersion: schemaVersion
        uploadSummary:
          successCount: 5
          failureCount: 1
        feedType: feedType
        inventoryFileTemplate: inventoryFileTemplate
        detailHref: detailHref
        completionDate: completionDate
        creationDate: creationDate
        taskId: taskId
        status: status
      properties:
        taskId:
          description: The ID of the task. This ID is generated when the task was
            created by the <strong>createInventoryTask</strong> method.
          type: string
        status:
          description: The status of the task. Users must wait until status is complete
            before moving on to the next step (such as uploading/downloading a file).
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:FeedStatusEnum'>eBay
            API documentation</a>
          type: string
        feedType:
          description: The feed type associated with the inventory task.
          type: string
        creationDate:
          description: The date the task was created.
          type: string
        completionDate:
          description: The timestamp when the task <strong>status</strong> went into
            the <code>COMPLETED</code>, <code>COMPLETED_WITH_ERROR</code>, or <code>PARTIALLY_PROCESSED</code>
            state. This field is only returned if the status is one of the three completed
            values.
          type: string
        schemaVersion:
          description: The schema version number associated with the task.
          type: string
        detailHref:
          description: The path to the call URI used to retrieve the task. This field
            points to the <strong>getInventoryTask</strong> URI.
          type: string
        uploadSummary:
          $ref: '#/components/schemas/UploadSummary'
        filterCriteria:
          $ref: '#/components/schemas/InventoryFilterCriteria'
        inventoryFileTemplate:
          description: The inventory file template used to return specific types of
            inventory tasks, if set in the <strong>createInventoryTask</strong> method.
            This field does not apply to <code>LMS_ACTIVE_INVENTORY_REPORT</code>
            feed types. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:InventoryFileTemplateEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - taskId
      - status
      - feedType
      - creationDate
      - completionDate
      - schemaVersion
      - detailHref
      - uploadSummary
      - filterCriteria
      - inventoryFileTemplate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InventoryFilterCriteria:
      description: The container for the filter fields. This container is used to
        set the filter criteria for the order report. A seller can set date range
        filters and/or can retrieve orders in a specific state.
      example:
        creationDateRange:
          from: from
          to: to
        listingStatus: listingStatus
        listingFormat: listingFormat
        modifiedDateRange:
          from: from
          to: to
      properties:
        creationDateRange:
          $ref: '#/components/schemas/DateRange'
        modifiedDateRange:
          $ref: '#/components/schemas/DateRange'
        listingFormat:
          description: The type of buying option for the order. Supports <code>LMS_ACTIVE_INVENTORY_REPORT</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:ListingFormatEnum'>eBay
            API documentation</a>
          type: string
        listingStatus:
          description: The status of the listing (whether the listing was unsold or
            is active). The <strong>UNSOLD</strong> value does not apply to <code>LMS_ACTIVE_INVENTORY_REPORT</code>
            feed types. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:ListingStatusEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - creationDateRange
      - modifiedDateRange
      - listingFormat
      - listingStatus
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DateRange:
      description: The type that defines the fields for a date range.
      example:
        from: from
        to: to
      properties:
        from:
          description: 'The beginning date in the range. If the parent type is included,
            both the <strong>from</strong> and/or the <strong>to</strong> fields become
            conditionally required.<br /><br /><b>Format: </b>UTC <code>yyyy-MM-ddThh:mm:ss.SSSZ
            </code> <br /><br /> <b> For example: </b> Tasks within a range  <br />
            <code>yyyy-MM-ddThh:mm:ss.SSSZ..yyyy-MM-ddThh:mm:ss.SSSZ </code> <br /><br
            /> Tasks created on March 31, 2021  <br /><code>2021-03-31T00:00:00.000Z..2021-03-31T00:00:00.000Z</code>    '
          type: string
        to:
          description: 'The end date for the date range, which is inclusive. If the
            parent type is included, both the <strong>from</strong> and/or the <strong>to</strong>
            fields become conditionally required.  <br /><br /> <b> For example: </b>
            <br /><br />Tasks within a range  <br /> <code>yyyy-MM-ddThh:mm:ss.SSSZ..yyyy-MM-ddThh:mm:ss.SSSZ
            </code> <br /><br /> Tasks created on March 31, 2021 <br /> <code>2021-03-31T00:00:00.000Z..2021-03-31T00:00:00.000Z</code>  '
          type: string
      type: object
      x-apifox-orders:
      - from
      - to
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CustomerServiceMetricTaskCollection:
      example:
        next: next
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
        tasks:
        - filterCriteria:
            shippingRegions:
            - shippingRegions
            - shippingRegions
            customerServiceMetricType: customerServiceMetricType
            evaluationMarketplaceId: evaluationMarketplaceId
            listingCategories:
            - listingCategories
            - listingCategories
          schemaVersion: schemaVersion
          feedType: feedType
          detailHref: detailHref
          completionDate: completionDate
          creationDate: creationDate
          taskId: taskId
          status: status
        - filterCriteria:
            shippingRegions:
            - shippingRegions
            - shippingRegions
            customerServiceMetricType: customerServiceMetricType
            evaluationMarketplaceId: evaluationMarketplaceId
            listingCategories:
            - listingCategories
            - listingCategories
          schemaVersion: schemaVersion
          feedType: feedType
          detailHref: detailHref
          completionDate: completionDate
          creationDate: creationDate
          taskId: taskId
          status: status
      properties:
        href:
          description: The URI of the current page of results.
          type: string
        limit:
          description: The value of the <strong>limit</strong> parameter submitted
            in the request, which is the maximum number of tasks to return per page,
            from the result set. A result set is the complete set of tasks returned
            by the method. <p> <span class="tablenote"><strong>Note:</strong> Even
            though this parameter is not required to be submitted in the request,
            the parameter defaults to 10 if omitted.</span></p><p> <span class="tablenote"><strong>Note:</strong>
            If this is the last or only page of the result set, the page may contain
            fewer tasks than the limit value. To determine the number of pages in
            a result set, divide the total value (total number of tasks matching input
            criteria) by this limit value, and then round up to the next integer.
            For example, if the <strong>total</strong> value was <code>120</code>
            (120 total tasks) and the <strong>limit</strong> value was <code>50</code>
            (show 50 tasks per page), the total number of pages in the result set
            is three, so the seller would have to make three separate <strong>getCustomerServiceMetricTasks</strong>
            calls to view all tasks matching the input criteria.</span></p>
          format: int32
          type: integer
        next:
          description: The relative path to the call URI for the next page of results.
            This value is returned if there is an additional page of results to return
            from the result set.
          type: string
        offset:
          description: 'The number of results skipped in the result set before returning
            the first result. This value can be set in the request with the <b>offset</b>
            query parameter. <p class="tablenote"><strong>Note: </strong>The items
            in a paginated result set use a zero-based list where the first item in
            the list has an offset of <code>0</code>.</p>'
          format: int32
          type: integer
        prev:
          description: The URI for the previous page of results. This parameter is
            returned if a previous page of results from the result set exists.
          type: string
        tasks:
          description: An array of the customer service tasks on this page. The tasks
            are sorted by creation date. An empty array is returned if the filter
            criteria excludes all tasks.
          items:
            $ref: '#/components/schemas/ServiceMetricsTask'
          type: array
        total:
          description: The total number of tasks that match the criteria.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - prev
      - tasks
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateInventoryTaskRequest:
      example:
        filterCriteria:
          creationDateRange:
            from: from
            to: to
          listingStatus: listingStatus
          listingFormat: listingFormat
          modifiedDateRange:
            from: from
            to: to
        schemaVersion: schemaVersion
        feedType: feedType
        inventoryFileTemplate: inventoryFileTemplate
      properties:
        schemaVersion:
          description: The schemaVersion/version number of the file format (use the
            schema version of the API to which you are programming):<ul><li><a href="/api-docs/sell/static/lms-migration/lms-to-feed-version-details-schema-version.html"
            target="_blank">LMS Version Details / Schema Version</a></li><li><a href="/api-docs/sell/static/feed/fx-feeds-quick-reference.html#schema"
            target="_blank">Seller Hub feed schema version</a></li></ul>
          type: string
        feedType:
          description: The feed type associated with the inventory task you are about
            to create. Use a <strong>feedType</strong> that is available for your
            API. Presently, only one feed type is available:<ul><li><code>LMS_ACTIVE_INVENTORY_REPORT</code></li></ul><br/><br/>See
            <a href="/api-docs/sell/static/feed/lms-feeds-quick-reference.html#merchant-data-reports-download-feed-types"
            target="_blank">Report download feed types</a> for more information.
          type: string
        filterCriteria:
          $ref: '#/components/schemas/InventoryFilterCriteria'
        inventoryFileTemplate:
          description: The inventory file template used to return specific types of
            inventory tasks. Presently not applicable for <code>LMS_ACTIVE_INVENTORY_REPORT</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:InventoryFileTemplateEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - schemaVersion
      - feedType
      - filterCriteria
      - inventoryFileTemplate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateTaskRequest:
      description: The type that defines the fields for the <b> createTask</b> method.
      example:
        schemaVersion: schemaVersion
        feedType: feedType
      properties:
        feedType:
          description: The feed type associated with the task. Only use a <strong>feedType</strong>
            that is available for your API. Available feed types:<ul><li><a href="/api-docs/sell/static/feed/lms-feeds-quick-reference.html#trading-upload-feed-types"
            target="_blank">Inventory upload feed types</a></li><li><a href="/api-docs/sell/static/feed/lms-feeds-quick-reference.html#merchant-data-upload-feed-types"
            target="_blank">Fulfillment upload feed types</a></li><li><a href="/api-docs/sell/static/feed/fx-feeds-quick-reference.html#availabl"
            target="_blank">Seller Hub feed types</a></li></ul>
          type: string
        schemaVersion:
          description: The schemaVersion/version number of the file format (use the
            schema version of the API to which you are programming):<ul><li><a href="/api-docs/sell/static/lms-migration/lms-to-feed-version-details-schema-version.html"
            target="_blank">LMS Version Details / Schema Version</a></li><li><a href="/api-docs/sell/static/feed/fx-feeds-quick-reference.html#schema"
            target="_blank">Seller Hub feed schema version</a></li></ul>
          type: string
      type: object
      x-apifox-orders:
      - feedType
      - schemaVersion
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateUserScheduleRequest:
      description: The type that defines the fields for the <strong>createSchedule</strong>
        method.
      example:
        preferredTriggerDayOfWeek: preferredTriggerDayOfWeek
        scheduleName: scheduleName
        schemaVersion: schemaVersion
        scheduleTemplateId: scheduleTemplateId
        scheduleEndDate: scheduleEndDate
        scheduleStartDate: scheduleStartDate
        feedType: feedType
        preferredTriggerHour: preferredTriggerHour
        preferredTriggerDayOfMonth: 0
      properties:
        feedType:
          description: The name of the feed type for the created schedule. Match the
            <strong>feed_type</strong> from the schedule template associated with
            this schedule.
          type: string
        preferredTriggerDayOfMonth:
          description: 'The preferred day of the month to trigger the schedule. This
            field can be used with <strong>preferredTriggerHour</strong> for monthly
            schedules. The last day of the month is used for numbers larger than the
            actual number of days in the month. <br /><br />This field is available
            as specified by the template (<strong>scheduleTemplateId</strong>). The
            template can specify this field as optional or required, and optionally
            provides a default value.<br /><br /><b>Minimum: </b>1<br /><br /><b>Maximum:
            </b>31'
          format: int32
          type: integer
        preferredTriggerDayOfWeek:
          description: The preferred day of the week to trigger the schedule. This
            field can be used with <strong>preferredTriggerHour</strong> for weekly
            schedules. <br /><br />This field is available as specified by the template
            (<strong>scheduleTemplateId</strong>). The template can specify this field
            as optional or required, and optionally provides a default value. For
            implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:DayOfWeekEnum'>eBay
            API documentation</a>
          type: string
        preferredTriggerHour:
          description: The preferred two-digit hour of the day to trigger the schedule.
            <br /><br />This field is available as specified by the template (<strong>scheduleTemplateId</strong>).
            The template can specify this field as optional or required, and optionally
            provides a default value.<br /><br /><b>Format:</b> UTC <code>hhZ</code><br
            /><br />For example, the following represents 11:00 am UTC:<code> 11Z</code>
          type: string
        scheduleEndDate:
          description: The timestamp on which the report generation (subscription)
            ends. After this date, the schedule status becomes <code>INACTIVE</code>.
            <br /><br />Use this field, if available, to end the schedule in the future.
            This value must be later than <strong>scheduleStartDate</strong> (if supplied).
            This field is available as specified by the template (<strong>scheduleTemplateId</strong>).
            The template can specify this field as optional or required, and optionally
            provides a default value.<br /><br /><b>Format:</b> UTC <code>yyyy-MM-dd<strong>T</strong>HH<strong>Z</strong></code><br
            /><br />For example, the following represents UTC October 10, 2021 at
            10:00 AM:<br /><code>2021-10-10T10Z</code>
          type: string
        scheduleName:
          description: The schedule name assigned by the user for the created schedule.
          type: string
        scheduleStartDate:
          description: The timestamp to start generating the report. After this timestamp,
            the schedule status becomes active until either the <strong>scheduleEndDate</strong>
            occurs or the <strong>scheduleTemplateId</strong> becomes inactive. <br
            /><br />Use this field, if available, to start the schedule in the future
            but before the <strong>scheduleEndDate</strong> (if supplied). This field
            is available as specified by the template <strong>(scheduleTemplateId)</strong>.  The
            template can specify this field as optional or required, and optionally
            provides a default value.<br /><br /><b>Format:</b> UTC <code>yyyy-MM-dd<strong>T</strong>HH<strong>Z</strong></code><br
            /><br />For example, the following represents a schedule start date of
            UTC October 01, 2020 at 12:00 PM:<br /><code> 2020-01-01T12Z</code>
          type: string
        scheduleTemplateId:
          description: The ID of the template associated with the schedule ID. You
            can get this ID from the documentation or by calling the <strong>getScheduleTemplates</strong>
            method. This method requires a schedule template ID that is <code>ACTIVE</code>.
          type: string
        schemaVersion:
          description: The schema version of the schedule feedType. This field is
            required if the <strong>feedType</strong> has a schema version.<br /><br
            />This field is available as specified by the template (<strong>scheduleTemplateId</strong>).
            The template can specify this field as optional or required, and optionally
            provides a default value.
          type: string
      type: object
      x-apifox-orders:
      - feedType
      - preferredTriggerDayOfMonth
      - preferredTriggerDayOfWeek
      - preferredTriggerHour
      - scheduleEndDate
      - scheduleName
      - scheduleStartDate
      - scheduleTemplateId
      - schemaVersion
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateServiceMetricsTaskRequest:
      description: The type that defines the fields for the Customer Service Metric
        reports generated with the Feed API.
      example:
        filterCriteria:
          shippingRegions:
          - shippingRegions
          - shippingRegions
          customerServiceMetricType: customerServiceMetricType
          evaluationMarketplaceId: evaluationMarketplaceId
          listingCategories:
          - listingCategories
          - listingCategories
        schemaVersion: schemaVersion
        feedType: feedType
      properties:
        feedType:
          description: The <strong>feedType</strong> specified for the task. The report
            lists the transaction details that contribute to the service metrics evaluation.
            Supported types include:<p><code>CUSTOMER_SERVICE_METRICS_REPORT</code></p>
          type: string
        filterCriteria:
          $ref: '#/components/schemas/CustomerServiceMetricsFilterCriteria'
        schemaVersion:
          description: 'The version number of the file format. <p><b>Valid value:
            </b><code>1.0</code><p>'
          type: string
      type: object
      x-apifox-orders:
      - feedType
      - filterCriteria
      - schemaVersion
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SuppressViolationRequest:
      description: This is the base request type of the suppressViolation method,
        and is used to identify the listing violation that the seller wishes to suppress.
      example:
        listingId: listingId
        complianceType: complianceType
      properties:
        complianceType:
          description: 'The compliance type of the listing violation to suppress is
            specified in this field. The compliance type for each listing violation
            is found in the complianceType field under the listingViolations array
            in a getListingViolations response. Note: At this time, the suppressViolation
            method is only used to suppress aspect adoption listing violations in
            the ''at-risk'' state, so ASPECTS_ADOPTION is currently the only supported
            value for this field. For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/compliance/types/com:ComplianceTypeEnum''>eBay
            API documentation</a>'
          type: string
        listingId:
          description: 'The unique identifier of the listing with the violation(s)
            is specified in this field. The unique identifier of the listing with
            the listing violation(s) is found in the listingId field under the listingViolations
            array in a getListingViolations response. Note: At this time, the suppressViolation
            method is only used to suppress aspect adoption listing violations in
            the ''at-risk'' state, so the listing specified in this field should be
            a listing with an ASPECTS_ADOPTION violation in the ''at-risk'' state.'
          type: string
      type: object
      x-apifox-orders:
      - complianceType
      - listingId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    NameValueList:
      description: This type is used to provide a name-value pair, including the identifying
        aspects of a product variation through the variationAspects container.
      example:
        name: name
        value: value
      properties:
        name:
          description: This is the name of the variation aspect, or the name of the
            category of information that is returned through the name-value pair.
            The type of information that appears here will vary based on the compliance
            type and type of violation.
          type: string
        value:
          description: This is the value of the variation aspect (in name field),
            or the value of the category of information that is returned through the
            name-value pair. The type of information that appears here will vary based
            on the compliance type and type of violation.
          type: string
      type: object
      x-apifox-orders:
      - name
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ComplianceSummary:
      description: This type is the base type for the getListingViolationsSummary
        response. The violationSummaries container contains an array of policy violation
        counts for each unique eBay marketplace and compliance type violation.
      properties:
        violationSummaries:
          description: This container is an array of one or more policy violation
            counts. A policy violation count is returned for each unique eBay marketplace
            and compliance type violation. As long as there is at least one non-compliant
            listing for the specified compliance type(s), this container will be returned.
            If no non-compliant listings are found for the specified compliance type(s),
            an HTTP status code of 204 No Content is returned, and there is no response
            body.
          items:
            $ref: '#/components/schemas/ComplianceSummaryInfo'
          type: array
      type: object
      x-apifox-orders:
      - violationSummaries
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    VariationDetails:
      description: This type is used to identify the product variation that has the
        listing violation.
      properties:
        sku:
          description: The seller-defined SKU value of the variation within the multiple-variation
            listing with the violation{s). This field is only returned if a seller-defined
            SKU value is defined for the variation. SKU values are optional in listing
            except when creating listings using the Inventory API.
          type: string
        variationAspects:
          description: An array of one or more variation aspects that define a variation
            within a multiple-variation listing. The aspect{s) returned here define
            the individual variation, because these aspects will differ for each variation.
            Common varying aspects include color and size.
          items:
            $ref: '#/components/schemas/NameValueList'
          type: array
      type: object
      x-apifox-orders:
      - sku
      - variationAspects
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ProductRecommendation:
      description: 'This type is used by the productRecommendation container, which
        is returned if eBay has found an eBay catalog product that may be a match
        for the product (or product variation) that has a listing violation. Note:
        eBay catalog product adoption is not enforced at this time, so product adoption
        violations are no longer returned. Due to this fact, this type and productRecommendation
        container are not currently applicable.'
      properties:
        epid:
          description: 'This field will return the eBay Product ID {ePID) of an eBay
            Catalog product that eBay recommends that the seller use to make their
            listing compliant. Note: Product Adoption is not enforced at this time.
            Product Adoption violations are no longer returned.'
          type: string
      type: object
      x-apifox-orders:
      - epid
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ComplianceViolation:
      description: This type is used by each listing violation that is returned under
        the listingViolations container.
      properties:
        complianceType:
          description: This enumeration value indicates the compliance type of listing
            violation. See ComplianceTypeEnum for more information on each compliance
            type. This will always be returned for each listing violation that is
            found. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/compliance/types/com:ComplianceTypeEnum'>eBay
            API documentation</a>
          type: string
        listingId:
          description: The unique identifier of the eBay listing that currently has
            the corresponding listing violation{s). This field will always be returned
            for each listing that has one or more violations.
          type: string
        sku:
          description: The seller-defined SKU value of the product in the listing
            with the violation{s). This field is only returned if defined in the listing.
            SKU values are optional in listings except when creating listings using
            the Inventory API model.
          type: string
        offerId:
          description: 'Note: This field is for future use, and will not be returned,
            even for listings created through the Inventory API. The unique identifier
            of the offer. This field is only applicable and returned for listings
            that were created through the Inventory API. To convert an Inventory Item
            object into an eBay listing, an Offer object must be created and published.'
          type: string
        violations:
          description: This container consists of an array of one or more listing
            violations applicable to the eBay listing specified in the listingId field.
            This array is returned for each eBay listing that has one or more violations.
            For each returned violation, the fields that are returned and the details
            that are given will depend on the listing violation.
          items:
            $ref: '#/components/schemas/ComplianceDetail'
          type: array
      type: object
      x-apifox-orders:
      - complianceType
      - listingId
      - sku
      - offerId
      - violations
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CorrectiveRecommendations:
      description: This type is used by the correctiveRecommendations container, which
        is returned if eBay has suggestions for how to correct the given violation.
      properties:
        productRecommendation:
          $ref: '#/components/schemas/ProductRecommendation'
        aspectRecommendations:
          description: This container is returned for ASPECTS_ADOPTION violations
            if eBay has found one or more item aspect name-value pairs that may be
            appropriate for the seller's product. In many cases, the missing or invalid
            item aspect(s) shown under the corresponding violationData array, will
            also show up under this array with suggested value(s).
          items:
            $ref: '#/components/schemas/AspectRecommendations'
          type: array
      type: object
      x-apifox-orders:
      - productRecommendation
      - aspectRecommendations
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ComplianceSummaryInfo:
      description: This type is used by each unique eBay marketplace and compliance
        type combination that is returned in the getListingViolationsSummary response
        to indicate the total number of listing violations in regards to that eBay
        marketplace and compliance type.
      properties:
        complianceType:
          description: This enumeration value indicates the type of compliance. See
            ComplianceTypeEnum for more information on each compliance type. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/compliance/types/com:ComplianceTypeEnum'>eBay
            API documentation</a>
          type: string
        marketplaceId:
          description: This enumeration value indicates the eBay marketplace where
            the listing violations exist. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/compliance/types/bas:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        listingCount:
          description: This integer value indicates the number of eBay listings that
            are currently violating the compliance type indicated in the complianceType
            field, for the eBay marketplace indicated in the marketplaceId field.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - complianceType
      - marketplaceId
      - listingCount
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ComplianceDetail:
      description: This type is used by each listing violation that is returned under
        the violations container.
      properties:
        reasonCode:
          description: 'This value states the nature of the listing violation. A reasonCode
            value is returned for each listing violation, and each compliance type
            can have several reason codes and related messages. The reasonCode values
            vary by compliance type. The reason codes for each compliance type are
            summarized below. Aspects adoption The reason codes for ASPECTS_ADOPTION
            compliance indicate that for the given violation, aspects listed in the
            violationData container are either missing from the listing or they have
            invalid values. The reason codes specify whether the violation is for
            required aspects, recommended (preferred) aspects, or soon to be required
            aspects. MISSING_OR_INVALID_REQUIRED_ASPECTS MISSING_OR_INVALID_PREFERRED_ASPECTS
            MISSING_OR_INVALID_SOON_TO_BE_REQUIRED_ASPECTS HTTPS The reason codes
            for HTTPS compliance identify where in the listing the violation occurs.
            For HTTPS policy violations, the seller will just need to remove the HTTP
            link (or update to HTTPS) from the listing details or product details:
            NON_SECURE_HTTP_LINK_IN_LISTING NON_SECURE_HTTP_LINK_IN_PRODUCT Non-eBay
            links The reason codes for OUTSIDE_EBAY_BUYING_AND_SELLING compliance
            identify the specific type of data (e.g., telephone number) that violated
            the policy. For each of these violations, the seller will just need to
            revise the listing, removing this information: UNAPPROVED_DOMAIN_WEBLINK_IN_LISTING
            PHONE_NUMBER_IN_LISTING EMAIL_ADDRESS_IN_LISTING Product adoption Product
            Adoption is not enforced at this time. Product adoption conformance Product
            Adoption is not enforced at this time. Returns policy The only RETURNS_POLICY
            reason code is UNSUPPORTED_RETURNS_PERIOD. The seller will have to revise
            their listing (or return business policy) with a supported return period
            for the site and category. The GetCategoryFeatures call of the Trading
            API can be used to verify the supported return periods for a particular
            category. For most eBay categories, the minimum return period that can
            be stated in a Returns Policy is 14 days for domestic and international
            sales, but some categories require a minimum 30-day return period.'
          type: string
        message:
          description: This field provides a textual summary of the listing violation.
            A message field is returned for each listing violation. This message will
            vary widely based on the compliance type and corresponding reason code.
          type: string
        variation:
          $ref: '#/components/schemas/VariationDetails'
        violationData:
          description: This container provides more information about the listing
            violation, if applicable. The type of information that appears here will
            vary based on the compliance type and type of violation. For example,
            for ASPECTS_ADOPTION violations, this container lists the missing aspect(s)
            or aspect(s) with invalid values.
          items:
            $ref: '#/components/schemas/NameValueList'
          type: array
        correctiveRecommendations:
          $ref: '#/components/schemas/CorrectiveRecommendations'
        complianceState:
          description: 'The enumeration value returned in this field indicates if
            the listing violation is considered to be OUT_OF_COMPLIANCE with an eBay
            listing policy, or the listing is considered to be AT_RISK of becoming
            non-compliant against an eBay listing policy. Generally, OUT_OF_COMPLIANCE
            policy violations can prevent the seller from revising a listing until
            the underlying violation(s) can be remedied. When the compliance state
            is AT_RISK, the seller is not blocked from revising the listing, but the
            seller should correct the violation to prevent the listing from being
            blocked for revisions in the future. Note: This field is returned for
            most violations, but not all. In the case that this field is not returned,
            it can be assumed that the state of the listing violation is OUT_OF_COMPLIANCE.
            For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/compliance/types/com:ComplianceStateEnum''>eBay
            API documentation</a>'
          type: string
      type: object
      x-apifox-orders:
      - reasonCode
      - message
      - variation
      - violationData
      - correctiveRecommendations
      - complianceState
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PagedComplianceViolationCollection:
      description: This type is the base response type of the getListingViolations
        method.
      properties:
        offset:
          description: 'This integer value shows the offset of the current page of
            results. The offset value controls the first listing violation in the
            result set that will be displayed at the top of the response. The offset
            and limit query parameters are used to control the pagination of the output.
            For example, if offset is set to 10 and limit is set to 10, the call retrieves
            listing violations 11 thru 20 from the resulting collection of violations.
            Note: This feature employs a zero-based index, where the first item in
            the list has an offset of 0. Default: 0 {zero)'
          format: int32
          type: integer
        href:
          description: The URI of the getListingViolations call request that produced
            the current page of the result set.
          type: string
        total:
          description: The total number of listing violations in the result set. If
            this value is higher than the limit value, there are multiple pages in
            the result set to view.
          format: int32
          type: integer
        next:
          description: 'The getListingViolations call URI to use to view the next
            page of the result set. For example, the following URI returns listing
            violations 21 thru 30 from the collection of policy violations: path/listing_violation?limit=10&amp;offset=20
            This field is only returned if an additional page of listing violations
            exists.'
          type: string
        prev:
          description: 'The getListingViolations call URI to use to view the previous
            page of the result set. For example, the following URI returns listing
            violations 1 thru 10 from the collection of policy violations: path/listing_violation?limit=10&amp;offset=0
            This field is only returned if an previous page of listing violations
            exists.'
          type: string
        limit:
          description: 'The maximum number of listing violations returned per page
            of the result set. The limit and offset query parameters are used to control
            the pagination of the output. Note: If this is the last or only page in
            the result set, it may contain fewer listing violations than the limit
            value. To determine the number of pages in the result set, divide this
            value into the value of total and round up to the next integer. Default:
            50 Max: 200'
          format: int32
          type: integer
        listingViolations:
          description: An array of listing violations that match the criteria in the
            call request, including pagination control {if set). As long as there
            is at least one listing violation that matches the input criteria, this
            container will be returned. If no listing violations are found for the
            seller, an HTTP status code of 204 No Content is returned, and there is
            no response body.
          items:
            $ref: '#/components/schemas/ComplianceViolation'
          type: array
      type: object
      x-apifox-orders:
      - offset
      - href
      - total
      - next
      - prev
      - limit
      - listingViolations
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AspectRecommendations:
      description: This type is used by the aspectsRecommendation container, which
        is returned if eBay has found a listing with missing or invalid item aspects
        (ASPECTS_ADOPTION compliance type).
      properties:
        localizedAspectName:
          description: 'The name of the item aspect for which eBay has a recommendation.
            In many cases, the same item aspect(s) that are returned under the violationData
            array for ASPECTS_ADOPTION listing violations are also returned here Note:
            This name is always localized for the specified marketplace.'
          type: string
        suggestedValues:
          description: One or more valid values for the corresponding item aspect
            (in localizedAspectName) are returned here. These suggested values for
            the item aspect depend on the listing category and on the information
            specified in the listing. Sellers should confirm accuracy of the values
            before applying them to the listing. Please use getItemAspectsForCategory
            in the Taxonomy API or GetCategorySpecifics in the Trading API to get
            a comprehensive list of required and recommended aspects for a given category
            and a list of supported aspect values for each.
          items:
            type: string
          type: array
      type: object
      x-apifox-orders:
      - localizedAspectName
      - suggestedValues
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Value:
      description: A complex type that contains a value, plus the veracity of that
        value.
      example:
        applicable: true
        value: '{}'
      properties:
        applicable:
          description: 'If set to true, this flag indicates the value in the value
            field is valid as computed. A value of false indicates one or more of
            the values used to calculate the value was invalid. The occurrence of
            this is a rare, however consider this case: suppose a buyer navigates
            to a View Item page at 11:59 pm (the end of the day) and purchases the
            item at 12:05am the next day. In this case, the item would have been purchased
            with 0 views for the day.'
          type: boolean
        value:
          description: The value of the report data.
          properties: {}
          type: object
          x-apifox-orders: []
          x-apifox-ignore-properties: []
      type: object
      x-apifox-orders:
      - applicable
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    StandardsProfile:
      description: A complex type that defines a seller profile.
      example:
        defaultProgram: true
        standardsLevel: standardsLevel
        evaluationReason: evaluationReason
        metrics:
        - metricKey: metricKey
          value: value
          benchmark:
            metadata:
              average: average
            rating: rating
            adjustment: adjustment
            basis: basis
          distributions:
          - data:
            - name: name
              value: value
            - name: name
              value: value
            basis: basis
          - data:
            - name: name
              value: value
            - name: name
              value: value
            basis: basis
        - metricKey: metricKey
          value: value
          benchmark:
            metadata:
              average: average
            rating: rating
            adjustment: adjustment
            basis: basis
          distributions:
          - data:
            - name: name
              value: value
            - name: name
              value: value
            basis: basis
          - data:
            - name: name
              value: value
            - name: name
              value: value
            basis: basis
        program: program
        cycle:
          cycleType: cycleType
          evaluationMonth: evaluationMonth
          evaluationDate: evaluationDate
      properties:
        cycle:
          $ref: '#/components/schemas/Cycle'
        defaultProgram:
          description: If set to true, this flag indicates this is the default program
            for the seller. Except for sellers in China, a seller's default program
            is the marketplace where they registered with eBay. Seller's in China
            select their default program when they register.
          type: boolean
        evaluationReason:
          description: Specifies how the overall seller level was calculated. In the
            event of special circumstances (as determined by eBay), eBay may override
            the calculated seller level. In general, such overrides protect a seller's
            level. The usual value for both cycle types is &quot;Seller level generated
            by standards monthly evaluation cycle.&quot;
          type: string
        metrics:
          description: A list of the metrics upon which a seller's profile is evaluated.
            Each program's applicable metrics and requirements are listed at eBay
            Top Rated seller program standards.
          items:
            $ref: '#/components/schemas/Metric'
          type: array
        program:
          description: Indicates the program used to generate the profile data. Values
            can be PROGRAM_DE, PROGRAM_UK, PROGRAM_US, or PROGRAM_GLOBAL. For implementation
            help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/analytics/types/ProgramEnum.html'>eBay
            API documentation</a>
          type: string
        standardsLevel:
          description: The overall standards level of the seller, one of TOP_RATED,
            ABOVE_STANDARD, or BELOW_STANDARD. For implementation help, refer to <a
            href='https://developer.ebay.com/devzone/rest/api-ref/analytics/types/StandardsLevelEnum.html'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - cycle
      - defaultProgram
      - evaluationReason
      - metrics
      - program
      - standardsLevel
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    MetricBenchmark:
      description: This complex type defines the benchmark data, which includes the
        average value of the metric for the group (the benchmark) and the seller's
        overall rating when compared to the benchmark.
      example:
        metadata:
          average: average
        rating: rating
        adjustment: adjustment
        basis: basis
      properties:
        adjustment:
          description: If this field is present, it indicates that the rating given
            to the seller was &quot;adjusted&quot; for one reason or another. If eBay
            determines that the normal rating of a seller is impacted by circumstances
            beyond their control, they can issue an override to adjust the rating
            given to the seller. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/analytics/types/RatingAdjustmentTypeEnum.html'>eBay
            API documentation</a>
          type: string
        basis:
          description: This field returns the &quot;basis&quot; by which the benchmark
            is calculated for the customer service metric type. Currently, the only
            supported basis is PEER_BENCHMARK. For implementation help, refer to <a
            href='https://developer.ebay.com/devzone/rest/api-ref/analytics/types/BenchmarkTypeEnum.html'>eBay
            API documentation</a>
          type: string
        metadata:
          $ref: '#/components/schemas/BenchmarkMetadata'
        rating:
          description: This field returns seller's rating for the customer service
            metric. The rating is set to a value that equals the relative deviation
            between the seller's metric value and the benchmark value for the customer
            service metric. Deviation values range from LOW to VERY HIGH, and the
            lower the deviation, the better the seller rating. For implementation
            help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/analytics/types/RatingTypeEnum.html'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - adjustment
      - basis
      - metadata
      - rating
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Metric:
      description: This complex data type defines the details of the customer service
        metric and benchmark data related to the associated dimension.
      example:
        metricKey: metricKey
        value: value
        benchmark:
          metadata:
            average: average
          rating: rating
          adjustment: adjustment
          basis: basis
        distributions:
        - data:
          - name: name
            value: value
          - name: name
            value: value
          basis: basis
        - data:
          - name: name
            value: value
          - name: name
            value: value
          basis: basis
      properties:
        benchmark:
          $ref: '#/components/schemas/MetricBenchmark'
        distributions:
          description: Returned when metricKey equals COUNT, this field returns an
            array of seller data where each set of data is grouped according by an
            overarching basis. When the seller distribution is returned, the numeric
            value of the associated value container equals the sum of the transactions
            where the seller meets the criteria of the customer service metric type
            for the given dimension during the evaluationCycle.
          items:
            $ref: '#/components/schemas/MetricDistribution'
          type: array
        metricKey:
          description: 'This field indicates the customer service metric being returned
            in the associated metrics container. The field is set as follows: TRANSACTION_COUNT
            &ndash; When set to this value, the associated value field equals the
            total number of transactions completed in the seller group for the metric
            in the given dimension during the associated evaluationCycle. COUNT &ndash;
            When set to this value, the associated value field is set to the total
            number of transactions the seller completed that meet the criteria of
            the customer service metric type for the given dimension that occurred
            during the evaluationCycle. RATE &ndash; When set to this value, the value
            of the associated value field is the rate of the customer service metric
            type in the given dimension during the associated evaluationCycle. Specifically,
            when metricKey is set to RATE, the associated value field is set to the
            value of metricKey TRANSACTION_COUNT divided by the value of metricKey
            COUNT. The returned benchmark.rating for the seller is based on this calculated
            value.'
          type: string
        value:
          description: This field is set to the seller's numeric rating for the associated
            metricKey for the given dimension during the evaluationCycle. To determine
            the seller's rating for this metric, the value of this field is compared
            to the average metric value of the group.
          type: string
      type: object
      x-apifox-orders:
      - benchmark
      - distributions
      - metricKey
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    MetadataRecord:
      description: A complex type that defines the data records returned in the report.
      example:
        metadataValues:
        - applicable: true
          value: '{}'
        - applicable: true
          value: '{}'
        value:
          applicable: true
          value: '{}'
      properties:
        metadataValues:
          description: A list of data in a row returned in the traffic report. The
            data in each of the cells match the labels in headers of the report.
          items:
            $ref: '#/components/schemas/Value'
          type: array
        value:
          $ref: '#/components/schemas/Value'
      type: object
      x-apifox-orders:
      - metadataValues
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Metadata:
      description: Type the defines the metadata information of the report. This includes
        the headers and the individual metadata records.
      example:
        metadataRecords:
        - metadataValues:
          - applicable: true
            value: '{}'
          - applicable: true
            value: '{}'
          value:
            applicable: true
            value: '{}'
        - metadataValues:
          - applicable: true
            value: '{}'
          - applicable: true
            value: '{}'
          value:
            applicable: true
            value: '{}'
        metadataHeader:
          metadataKeys:
          - localizedName: localizedName
            dataType: dataType
            key: key
          - localizedName: localizedName
            dataType: dataType
            key: key
          key: key
      properties:
        metadataHeader:
          $ref: '#/components/schemas/MetadataHeader'
        metadataRecords:
          description: A list of the individual report records.
          items:
            $ref: '#/components/schemas/MetadataRecord'
          type: array
      type: object
      x-apifox-orders:
      - metadataHeader
      - metadataRecords
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Report:
      description: The complex type that defines that defines the report.
      example:
        lastUpdatedDate: lastUpdatedDate
        endDate: endDate
        records:
        - dimensionValues:
          - applicable: true
            value: '{}'
          - applicable: true
            value: '{}'
          metricValues:
          - applicable: true
            value: '{}'
          - applicable: true
            value: '{}'
        - dimensionValues:
          - applicable: true
            value: '{}'
          - applicable: true
            value: '{}'
          metricValues:
          - applicable: true
            value: '{}'
          - applicable: true
            value: '{}'
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        header:
          dimensionKeys:
          - localizedName: localizedName
            dataType: dataType
            key: key
          - localizedName: localizedName
            dataType: dataType
            key: key
          metrics:
          - localizedName: localizedName
            dataType: dataType
            key: key
          - localizedName: localizedName
            dataType: dataType
            key: key
        startDate: startDate
        dimensionMetadata:
        - metadataRecords:
          - metadataValues:
            - applicable: true
              value: '{}'
            - applicable: true
              value: '{}'
            value:
              applicable: true
              value: '{}'
          - metadataValues:
            - applicable: true
              value: '{}'
            - applicable: true
              value: '{}'
            value:
              applicable: true
              value: '{}'
          metadataHeader:
            metadataKeys:
            - localizedName: localizedName
              dataType: dataType
              key: key
            - localizedName: localizedName
              dataType: dataType
              key: key
            key: key
        - metadataRecords:
          - metadataValues:
            - applicable: true
              value: '{}'
            - applicable: true
              value: '{}'
            value:
              applicable: true
              value: '{}'
          - metadataValues:
            - applicable: true
              value: '{}'
            - applicable: true
              value: '{}'
            value:
              applicable: true
              value: '{}'
          metadataHeader:
            metadataKeys:
            - localizedName: localizedName
              dataType: dataType
              key: key
            - localizedName: localizedName
              dataType: dataType
              key: key
            key: key
      properties:
        dimensionMetadata:
          description: A complex type containing the header of the report and the
            type of data containted in the rows of the report.
          items:
            $ref: '#/components/schemas/Metadata'
          type: array
        endDate:
          description: 'The time stamp is formatted as an ISO 8601 string, which is
            based on the 24-hour Universal Coordinated Time (UTC) clock. If you specify
            an end date that is beyond the lastUpdatedDate value, eBay returns a report
            that contains data only up to the lastUpdateDate date. Format: [YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z
            Example: 2018-08-20T07:09:00.000Z'
          type: string
        header:
          $ref: '#/components/schemas/Header'
        lastUpdatedDate:
          description: The date and time, in ISO 8601 format, that indicates the last
            time the data returned in the report was updated.
          type: string
        records:
          description: A complex type containing the individual data records for the
            traffic report.
          items:
            $ref: '#/components/schemas/Record'
          type: array
        startDate:
          description: The start date of the date range used to calculate the report,
            in ISO 8601 format.
          type: string
        warnings:
          description: An array of any process errors or warnings that were generated
            during the processing of the call processing.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - dimensionMetadata
      - endDate
      - header
      - lastUpdatedDate
      - records
      - startDate
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    EvaluationCycle:
      description: This complex type describes the start and end dates of the of the
        time period over which the associated benchmark is computed. All timestamps
        are based on Mountain Standard Time (MST). The timestamp is formatted as an
        ISO 8601 string, which is based on the 24-hour Coordinated Universal Time
        (UTC) clock.
      example:
        evaluationType: evaluationType
        evaluationDate: evaluationDate
        endDate: endDate
        startDate: startDate
      properties:
        endDate:
          description: End date and time of the transaction lookback range. All timestamps
            are based on Mountain Standard Time (MST). The timestamp is formatted
            as an ISO 8601 string, which is based on the 24-hour Coordinated Universal
            Time (UTC) clock.
          type: string
        evaluationDate:
          description: The ISO-8601 date and time at which the seller was evaluated
            for this customer service metric rating.
          type: string
        evaluationType:
          description: 'This field specifies the transaction lookback period used
            for the evaluation. The evaluation_type value specified in the request
            is returned in this field. There are two possible values: CURRENT &ndash;
            A monthly evaluation that occurs on the 20th of every month. PROJECTED
            &ndash; A daily evaluation that provides a projection of how the seller
            is currently performing with regards to the upcoming evaluation period.
            For implementation help, refer to <a href=''https://developer.ebay.com/devzone/rest/api-ref/analytics/types/EvaluationTypeEnum.html''>eBay
            API documentation</a>'
          type: string
        startDate:
          description: 'The start date and time of the transaction lookback range.
            All timestamps are based on Mountain Standard Time (MST). The timestamp
            is formatted as an ISO 8601 string, which is based on the 24-hour Coordinated
            Universal Time (UTC) clock. Format: [YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z
            Example: 2018-08-04T07:09:00.000Z'
          type: string
      type: object
      x-apifox-orders:
      - endDate
      - evaluationDate
      - evaluationType
      - startDate
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Distribution:
      description: This complex type defines of a piece of data that is grouped by
        the associated basis. It contains the name for the data set and its associated
        value.
      example:
        name: name
        value: value
      properties:
        name:
          description: The name of a distribution in which the seller is active.
          type: string
        value:
          description: This field contains the number of transactions the seller had
            in the distribution (identified by the associated name field) during the
            metric evaluationCycle.
          type: string
      type: object
      x-apifox-orders:
      - name
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    MetricDistribution:
      description: This complex data type describes the metric distribution by basis.
      example:
        data:
        - name: name
          value: value
        - name: name
          value: value
        basis: basis
      properties:
        basis:
          description: This field returns the basis, or the method, by which the metric
            rating is calculated.
          type: string
        data:
          description: This field returns a list of name/value pairs, where the name
            indicates the distribution being rated and the value indicates the count
            of seller transactions that meet the distribution criteria.
          items:
            $ref: '#/components/schemas/Distribution'
          type: array
      type: object
      x-apifox-orders:
      - basis
      - data
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    MetadataHeader:
      description: Type that defines the metadata header fields.
      example:
        metadataKeys:
        - localizedName: localizedName
          dataType: dataType
          key: key
        - localizedName: localizedName
          dataType: dataType
          key: key
        key: key
      properties:
        key:
          description: 'The key value used for the report. For example: &quot;key&quot;:
            &quot;LISTING_ID&quot;'
          type: string
        metadataKeys:
          description: 'The list of dimension key values used for the report header.
            Each list element contains the key name, its data type, and its localized
            name. For example: &quot;metadataKeys&quot;: [ &nbsp;&nbsp;&quot;key&quot;:
            &quot;LISTING_TITLE&quot;, &nbsp;&nbsp;&quot;localizedName&quot;: &quot;Listing
            title&quot;, &nbsp;&nbsp;&quot;dataType&quot;: &quot;STRING&quot;'
          items:
            $ref: '#/components/schemas/Definition'
          type: array
      type: object
      x-apifox-orders:
      - key
      - metadataKeys
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    GetCustomerServiceMetricResponse:
      description: This complex data type defines the response data that is returned
        from a request to getCustomerServiceMetric. The dimensionMetrics object contains
        the details of the dimension being measured and the calculated customer service
        metric values. The evaluationCycle defines the period used to calculate the
        metric values. The marketplaceId is the eBay marketplace for which the metrics
        are being considered.
      example:
        marketplaceId: marketplaceId
        evaluationCycle:
          evaluationType: evaluationType
          evaluationDate: evaluationDate
          endDate: endDate
          startDate: startDate
        dimensionMetrics:
        - metrics:
          - metricKey: metricKey
            value: value
            benchmark:
              metadata:
                average: average
              rating: rating
              adjustment: adjustment
              basis: basis
            distributions:
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
          - metricKey: metricKey
            value: value
            benchmark:
              metadata:
                average: average
              rating: rating
              adjustment: adjustment
              basis: basis
            distributions:
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
          dimension:
            name: name
            dimensionKey: dimensionKey
            value: value
        - metrics:
          - metricKey: metricKey
            value: value
            benchmark:
              metadata:
                average: average
              rating: rating
              adjustment: adjustment
              basis: basis
            distributions:
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
          - metricKey: metricKey
            value: value
            benchmark:
              metadata:
                average: average
              rating: rating
              adjustment: adjustment
              basis: basis
            distributions:
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
          dimension:
            name: name
            dimensionKey: dimensionKey
            value: value
      properties:
        dimensionMetrics:
          description: 'This container provides a seller''s customer service metric
            performance for a given dimension. In the getCustomerServiceMetric request,
            specify values for the following request parameters to control the returned
            dimension and the associated metric values: customer_service_metric_type
            evaluation_type evaluation_marketplace_id'
          items:
            $ref: '#/components/schemas/DimensionMetric'
          type: array
        evaluationCycle:
          $ref: '#/components/schemas/EvaluationCycle'
        marketplaceId:
          description: The eBay marketplace ID of the marketplace upon which the customer
            service metric evaluation is based. The customer_service_metric resource
            supports a limited set of marketplaces. For a complete list of the supported
            marketplaces, please see the Service metrics policy page. For implementation
            help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/analytics/types/MarketplaceIdEnum.html'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - dimensionMetrics
      - evaluationCycle
      - marketplaceId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FindSellerStandardsProfilesResponse:
      description: The response container for a list of seller profiles.
      example:
        standardsProfiles:
        - defaultProgram: true
          standardsLevel: standardsLevel
          evaluationReason: evaluationReason
          metrics:
          - metricKey: metricKey
            value: value
            benchmark:
              metadata:
                average: average
              rating: rating
              adjustment: adjustment
              basis: basis
            distributions:
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
          - metricKey: metricKey
            value: value
            benchmark:
              metadata:
                average: average
              rating: rating
              adjustment: adjustment
              basis: basis
            distributions:
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
          program: program
          cycle:
            cycleType: cycleType
            evaluationMonth: evaluationMonth
            evaluationDate: evaluationDate
        - defaultProgram: true
          standardsLevel: standardsLevel
          evaluationReason: evaluationReason
          metrics:
          - metricKey: metricKey
            value: value
            benchmark:
              metadata:
                average: average
              rating: rating
              adjustment: adjustment
              basis: basis
            distributions:
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
          - metricKey: metricKey
            value: value
            benchmark:
              metadata:
                average: average
              rating: rating
              adjustment: adjustment
              basis: basis
            distributions:
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
            - data:
              - name: name
                value: value
              - name: name
                value: value
              basis: basis
          program: program
          cycle:
            cycleType: cycleType
            evaluationMonth: evaluationMonth
            evaluationDate: evaluationDate
      properties:
        standardsProfiles:
          description: A list of the seller's standards profiles. A &quot;standards
            profile&quot; is a set of eBay seller standards categories and the values
            related to the associated seller. Profiles are distinguished by a combination
            of cycle and program values. The &quot;program&quot; value specifies the
            region to which the data is from. The &quot;cycle&quot; value specifies
            whether the values were determined just now, or if the values are from
            the last official eBay seller standards evaluation.
          items:
            $ref: '#/components/schemas/StandardsProfile'
          type: array
      type: object
      x-apifox-orders:
      - standardsProfiles
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    DimensionMetric:
      description: This complex type defines a the customer service metrics and seller
        benchmark performance related to a given dimension.
      example:
        metrics:
        - metricKey: metricKey
          value: value
          benchmark:
            metadata:
              average: average
            rating: rating
            adjustment: adjustment
            basis: basis
          distributions:
          - data:
            - name: name
              value: value
            - name: name
              value: value
            basis: basis
          - data:
            - name: name
              value: value
            - name: name
              value: value
            basis: basis
        - metricKey: metricKey
          value: value
          benchmark:
            metadata:
              average: average
            rating: rating
            adjustment: adjustment
            basis: basis
          distributions:
          - data:
            - name: name
              value: value
            - name: name
              value: value
            basis: basis
          - data:
            - name: name
              value: value
            - name: name
              value: value
            basis: basis
        dimension:
          name: name
          dimensionKey: dimensionKey
          value: value
      properties:
        dimension:
          $ref: '#/components/schemas/Dimension'
        metrics:
          description: This is a list of Metric elements where each element contains
            data and information related to the transactions grouped by the associated
            dimension.
          items:
            $ref: '#/components/schemas/Metric'
          type: array
      type: object
      x-apifox-orders:
      - dimension
      - metrics
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Header:
      description: Type that defines the headers for the dimension keys and metrics
        returned in the report.
      example:
        dimensionKeys:
        - localizedName: localizedName
          dataType: dataType
          key: key
        - localizedName: localizedName
          dataType: dataType
          key: key
        metrics:
        - localizedName: localizedName
          dataType: dataType
          key: key
        - localizedName: localizedName
          dataType: dataType
          key: key
      properties:
        dimensionKeys:
          description: A list of the dimension or metric keys returned in the report.
            The values for each are is returned in the associated key fields.
          items:
            $ref: '#/components/schemas/Definition'
          type: array
        metrics:
          description: The list of metrics returned in the report. The values for
            each are is returned in the associated key fields.
          items:
            $ref: '#/components/schemas/Definition'
          type: array
      type: object
      x-apifox-orders:
      - dimensionKeys
      - metrics
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Dimension:
      description: The fields in this complex type define the dimension, or attributes,
        by which the associated customer service metric and benchmark data is measured.
        The value of dimensionKey gets set according to the configuration of the input
        request. The name and value pair further define dimension under the key.
      example:
        name: name
        dimensionKey: dimensionKey
        value: value
      properties:
        dimensionKey:
          description: 'dimensionKey defines the basis against which the seller''s
            customer service metric is measured. The value of this field gets set
            according to the value of the customer_service_metric_type input parameter.
            The following input configurations return the responses shown: ITEM_NOT_AS_DESCRIBED
            &ndash; Returns benchmark ratings based on L1 listing categories, so the
            result shows metrics where the dimensionKey is set to LISTING_CATEGORY.
            ITEM_NOT_RECEIVED &ndash; Returns benchmark ratings based on world shipping
            regions, so the result shows metrics where the dimensionKey is set to
            SHIPPING_REGION. The shipping region is indicated by the associated value
            field. For specifics on world shipping regions, see the FAQ section on
            the following page: Monitor your service metrics For implementation help,
            refer to <a href=''https://developer.ebay.com/devzone/rest/api-ref/analytics/types/DimensionTypeEnum.html''>eBay
            API documentation</a>'
          type: string
        name:
          description: 'The dimension name returned in this field depends on the dimensionKey:
            If dimensionKey is set to SHIPPING_REGION, this field is set to one of
            following values, which represent established shipping corridors: Domestic
            International: Mature region International: Emerging region If dimensionKey
            is set to LISTING_CATEGORY, this field is set to the name of the primary
            (L1) category in which the items being rated were listed.'
          type: string
        value:
          description: 'The value returned in this field depends on the dimensionKey.
            If dimensionKey equals LISTING_CATEGORY, the value returned in this field
            is the category ID of the primary (L1) category in which the items being
            rated were listed. If dimensionKey equals SHIPPING_REGION, one of the
            following values is returned: DOMESTIC INTERNATIONAL_MATURED_REGION INTERNATIONAL_EMERGING_REGION'
          type: string
      type: object
      x-apifox-orders:
      - dimensionKey
      - name
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Record:
      description: Type that defines the fields of the individual record of the report.
      example:
        dimensionValues:
        - applicable: true
          value: '{}'
        - applicable: true
          value: '{}'
        metricValues:
        - applicable: true
          value: '{}'
        - applicable: true
          value: '{}'
      properties:
        dimensionValues:
          description: A list where each element contains either the string DAY (if
            the dimension is DAY), or the listing ID for which the record's metric
            data is computed. A second array member, applicable, is always true for
            dimension values.
          items:
            $ref: '#/components/schemas/Value'
          type: array
        metricValues:
          description: A list where each element contains a value field that indicates
            the record's value for the metric. Each element also contains an applicable
            field that indicates the veracity of the computed value. Note that there
            are no metric names or IDs associated with the values returned in this
            array. The metadata to which these values relate can be found in the key
            values . The order of the metric values in this array equals the order
            of the key values in metadataHeader.
          items:
            $ref: '#/components/schemas/Value'
          type: array
      type: object
      x-apifox-orders:
      - dimensionValues
      - metricValues
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Cycle:
      description: A complex type that describes a program cycle.
      example:
        cycleType: cycleType
        evaluationMonth: evaluationMonth
        evaluationDate: evaluationDate
      properties:
        cycleType:
          description: The cycle type, either CURRENT or PROJECTED. CURRENT means
            the profile's metrics values are from the most recent official eBay monthly
            standards evaluation. PROJECTED means the profile values were determined
            when the profile was requested. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/analytics/types/CycleTypeEnum.html'>eBay
            API documentation</a>
          type: string
        evaluationDate:
          description: 'The date and time at which the standard compliance values
            were determined for the profile. The time stamp is formatted as an ISO
            8601 string, which is based on the 24-hour Universal Coordinated Time
            (UTC) clock. Format: [YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z Example: 2018-08-04T07:09:00.000Z'
          type: string
        evaluationMonth:
          description: The month in which the currently effective seller level was
            computed. The value is always formatted as YYYY-MM. If the cycle is CURRENT,
            this value is the month and year the of the last eBay compliance evaluation.
            If this is for a PROJECTED cycle, the value is the month and year of the
            next scheduled evaluation. Because eBay does official evaluations around
            the 20th of each month, a PROJECTED value may indicate either the current
            or the next month.
          type: string
      type: object
      x-apifox-orders:
      - cycleType
      - evaluationDate
      - evaluationMonth
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Definition:
      description: A complex type that defines a dimension key and metrics in a traffic
        report.
      example:
        localizedName: localizedName
        dataType: dataType
        key: key
      properties:
        dataType:
          description: Indicates the data type of the returned dimension. For example,
            if the dimension is day, the data type is DATE. For implementation help,
            refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/analytics/types/DataTypeEnum.html'>eBay
            API documentation</a>
          type: string
        key:
          description: The value the dimension or metric parameter as submitted in
            the request.
          type: string
        localizedName:
          description: The localized name of the metric or dimension (translated into
            the language specified in the Accept-Language HTTP request header). For
            example, if Accept-Language is set to de-DE, the value &quot;day&quot;
            in the dimension container is returned as &quot;tag&quot;, and a metric
            of TRANSACTION is returned as &quot;Transaktionsanzahl&quot;.
          type: string
      type: object
      x-apifox-orders:
      - dataType
      - key
      - localizedName
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    BenchmarkMetadata:
      description: This complex type defines the fields that comprise the benchmark
        against which the seller's performance is compared. The comparison determines
        the seller's rating for the metric.
      example:
        average: average
      properties:
        average:
          description: This field returns the average value for the group, as defined
            by the specified basis. When the benchmark basis is set to PEER_BENCHMARK,
            the value returned in this field is the benchmark value to which the seller's
            metric value is compared to determine the seller's rating for the customer
            service metric.
          type: string
      type: object
      x-apifox-orders:
      - average
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RateUpdate:
      description: This container defines the updated shipping cost information for
        a rate object identified by <b>rateId</b>.<br/><br/>To view a list of all
        rate objects and corresponding <b>rateID</b> values, issue <b>getRateTable</b>
        for the rate table identified by <b>rateTableId</b>.
      example:
        shippingCost:
          currency: currency
          value: value
        additionalCost:
          currency: currency
          value: value
        rateId: rateId
      properties:
        additionalCost:
          $ref: '#/components/schemas/Amount'
        rateId:
          description: The identifier for the rate object.<br/><br/><span class="tablenote"><strong>Note:</strong>
            This is a string automatically assigned by the system when the rate object
            is created. It cannot be changed or updated.</span>
          type: string
        shippingCost:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - additionalCost
      - rateId
      - shippingCost
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RateTableDetails:
      description: This container includes all information pertaining to a shipping
        rate table. A successful call returns the requested shipping rate information.
      example:
        marketplaceId: marketplaceId
        shippingOptionType: shippingOptionType
        rateTableId: rateTableId
        rates:
        - minEstimatedDeliveryDate: minEstimatedDeliveryDate
          maxEstimatedDeliveryDate: maxEstimatedDeliveryDate
          pickupSlots:
          - pickupSlotEndTime: pickupSlotEndTime
            pickupSlotTimeZone: pickupSlotTimeZone
            pickupSlotId: pickupSlotId
            pickupSlotStartTime: pickupSlotStartTime
          - pickupSlotEndTime: pickupSlotEndTime
            pickupSlotTimeZone: pickupSlotTimeZone
            pickupSlotId: pickupSlotId
            pickupSlotStartTime: pickupSlotStartTime
          destinationTimeZone: destinationTimeZone
          shippingServiceCode: shippingServiceCode
          pickupType: pickupType
          rateRecommendation:
          - rateRecommendation
          - rateRecommendation
          rateId: rateId
          shippingServiceName: shippingServiceName
          additionalOptions:
          - optionType: optionType
            additionalCost:
              currency: currency
              value: value
          - optionType: optionType
            additionalCost:
              currency: currency
              value: value
          pickupNetworks:
          - pickupNetworks
          - pickupNetworks
          shippingCarrierCode: shippingCarrierCode
          baseShippingCost:
            currency: currency
            value: value
          shippingCarrierName: shippingCarrierName
        - minEstimatedDeliveryDate: minEstimatedDeliveryDate
          maxEstimatedDeliveryDate: maxEstimatedDeliveryDate
          pickupSlots:
          - pickupSlotEndTime: pickupSlotEndTime
            pickupSlotTimeZone: pickupSlotTimeZone
            pickupSlotId: pickupSlotId
            pickupSlotStartTime: pickupSlotStartTime
          - pickupSlotEndTime: pickupSlotEndTime
            pickupSlotTimeZone: pickupSlotTimeZone
            pickupSlotId: pickupSlotId
            pickupSlotStartTime: pickupSlotStartTime
          destinationTimeZone: destinationTimeZone
          shippingServiceCode: shippingServiceCode
          pickupType: pickupType
          rateRecommendation:
          - rateRecommendation
          - rateRecommendation
          rateId: rateId
          shippingServiceName: shippingServiceName
          additionalOptions:
          - optionType: optionType
            additionalCost:
              currency: currency
              value: value
          - optionType: optionType
            additionalCost:
              currency: currency
              value: value
          pickupNetworks:
          - pickupNetworks
          - pickupNetworks
          shippingCarrierCode: shippingCarrierCode
          baseShippingCost:
            currency: currency
            value: value
          shippingCarrierName: shippingCarrierName
        rateTableBasis: rateTableBasis
        name: name
      properties:
        marketplaceId:
          description: Identifies the eBay marketplace to which the shipping rate
            table applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: The seller-defined name for the shipping rate table. Names
            must be unique for each table assigned to the same seller, shippingOptionType,
            and eBay marketplace.<br/><br/><b>Max length:</b> 50
          type: string
        rates:
          description: An array of rate objects associated with the specified shipping
            rate table. Each rate object is identified by a unique system-generated
            ID and defines specific shipping rate information.
          items:
            $ref: '#/components/schemas/Rate'
          type: array
        rateTableBasis:
          description: 'The rate calculation type provides three methods of calculating
            the shipping cost based on the seller''s selection/input:<ul><li><b>ITEM</b>:
            Specifies the flat rate shipping cost that buyers in the specified shipping
            region will pay. When this option is selected, information specified in
            the rate table overrides all shipping options/costs that are specified
            at the listing level. Buyers in the specified regions will only see the
            services provided in the rate table. Buyers in other regions that are
            not specified in the rate table will see the shipping services associated
            with the listing.</li><li><b>WEIGHT</b>: Seller can provide minimum shipping
            cost and an additional shipping cost per pound. The additional cost will
            be calculated based on the weight the seller provide at the time of listing.
            Buyers will see the total shipping cost and won’t see these calculations.  Buyers
            in the specified regions will only see the services provided in the rate
            table. Buyers in other regions that were not specified in the rate table,
            will see the shipping services associated with the listing.</li><li><b>SURCHARGE</b>:
            Lists surcharges for buyers within specified regions, or indicates a flat
            amount added to the shipping cost specified within an item''s listing.
            Buyers will see only the total shipping cost as well as shipping services
            associated with the item''s listing. If a SURCHARGE is specified in the
            rate table for certain regions, buyers in those regions will see the (shipping
            cost + SURCHARGE) total.</li></ul> For implementation help, refer to <a
            href=''https://developer.ebay.com/api-docs/sell/account/types/api:ShippingRateCalculationEnum''>eBay
            API documentation</a>'
          type: string
        rateTableId:
          description: A unique, system-generated ID assigned to the shipping rate
            table when it is initially created.
          type: string
        shippingOptionType:
          description: 'The region serviced by the shipping rate table. Valid values
            are:<ul><li><b>DOMESTIC</b>: Indicates that the shipping rate table applies
            to shipping destinations within the country in which an item has been
            listed (i.e., the <i>source</i> country).</li><li><b>INTERNATIONAL</b>:
            Indicates that the shipping rate table applies to shipping destinations
            outside of the country in which an item has been listed.</li></ul> For
            implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/account/types/api:ShippingOptionTypeEnum''>eBay
            API documentation</a>'
          type: string
      type: object
      x-apifox-orders:
      - marketplaceId
      - name
      - rates
      - rateTableBasis
      - rateTableId
      - shippingOptionType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RateTableUpdate:
      description: This type is used by the request payload of the <b>updateShippingCost</b>
        method to pass updated shipping cost information for a rate table identified
        by <b>rateTableId</b>.
      example:
        rates:
        - shippingCost:
            currency: currency
            value: value
          additionalCost:
            currency: currency
            value: value
          rateId: rateId
        - shippingCost:
            currency: currency
            value: value
          additionalCost:
            currency: currency
            value: value
          rateId: rateId
      properties:
        rates:
          description: An array of rate objects for which <b>shippingCost</b> and/or
            <b>additionalCost</b> are to be updated.
          items:
            $ref: '#/components/schemas/RateUpdate'
          type: array
      type: object
      x-apifox-orders:
      - rates
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ShippingOption:
      description: This type is used by the <b>shippingOptions</b> array, which is
        used to provide detailed information on the domestic and international shipping
        options available for the policy. A separate <b>ShippingOption</b> object
        covers domestic shipping service options and international shipping service
        options (if the seller ships to international locations).
      example:
        optionType: optionType
        insuranceFee:
          currency: currency
          value: value
        rateTableId: rateTableId
        costType: costType
        insuranceOffered: true
        packageHandlingCost:
          currency: currency
          value: value
        shippingServices:
        - surcharge:
            currency: currency
            value: value
          buyerResponsibleForPickup: true
          buyerResponsibleForShipping: true
          shippingCost:
            currency: currency
            value: value
          additionalShippingCost:
            currency: currency
            value: value
          freeShipping: true
          shippingCarrierCode: shippingCarrierCode
          sortOrder: 6
          shippingServiceCode: shippingServiceCode
          shipToLocations:
            regionIncluded:
            - regionType: regionType
              regionName: regionName
            - regionType: regionType
              regionName: regionName
            regionExcluded:
            - regionType: regionType
              regionName: regionName
            - regionType: regionType
              regionName: regionName
          cashOnDeliveryFee:
            currency: currency
            value: value
        - surcharge:
            currency: currency
            value: value
          buyerResponsibleForPickup: true
          buyerResponsibleForShipping: true
          shippingCost:
            currency: currency
            value: value
          additionalShippingCost:
            currency: currency
            value: value
          freeShipping: true
          shippingCarrierCode: shippingCarrierCode
          sortOrder: 6
          shippingServiceCode: shippingServiceCode
          shipToLocations:
            regionIncluded:
            - regionType: regionType
              regionName: regionName
            - regionType: regionType
              regionName: regionName
            regionExcluded:
            - regionType: regionType
              regionName: regionName
            - regionType: regionType
              regionName: regionName
          cashOnDeliveryFee:
            currency: currency
            value: value
      properties:
        costType:
          description: This field defines whether the shipping cost model is <code>FLAT_RATE</code>
            (the same rate for all buyers, or buyers within a region if shipping rate
            tables are used) or <code>CALCULATED</code> (the shipping rate varies
            by the ship-to location and size and weight of the package). <br/><br/>This
            field is conditionally required if any shipping service options are specified
            (domestic and/or international). For implementation help, refer to <a
            href='https://developer.ebay.com/api-docs/sell/account/types/api:ShippingCostTypeEnum'>eBay
            API documentation</a>
          type: string
        insuranceFee:
          $ref: '#/components/schemas/Amount'
        insuranceOffered:
          description: This field has been deprecated. <br/><br/>Shipping insurance
            is offered only via a shipping carrier's shipping services and is no longer
            available via eBay shipping policies.
          type: boolean
        optionType:
          description: This field is used to indicate if the corresponding shipping
            service options (under <b>shippingServices</b> array) are domestic or
            international shipping service options. This field is conditionally required
            if any shipping service options are specified (domestic and/or international).
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ShippingOptionTypeEnum'>eBay
            API documentation</a>
          type: string
        packageHandlingCost:
          $ref: '#/components/schemas/Amount'
        rateTableId:
          description: This field is used if the seller wants to associate a domestic
            or international shipping rate table to the fulfillment business policy.
            The <a href="/api-docs/sell/account/resources/rate_table/methods/getRateTables">getRateTables</a>
            method can be used to retrieve shipping rate table IDs.<br/><br/>With
            domestic and international shipping rate tables, the seller can set different
            shipping costs based on shipping regions and shipping speed/level of service
            (one-day, expedited, standard, economy). There are also options to additional
            per-weight and handling charges.<br/><br/>Sellers need to be careful that
            shipping rate tables match the corresponding shipping service options.
            In other words, a domestic shipping rate table must not be specified in
            the same container where international shipping service options are being
            specified, and vice versa, and the shipping speed/level of service of
            the provided shipping service options should match the shipping speed/level
            of service options that are defined in the shipping rate tables. For example,
            if the corresponding shipping rate table defines costs for one-day shipping
            services, there should be at least one one-day shipping service option
            specified under the <b>shippingServices</b> array.<br/><br/>This field
            is returned if set.
          type: string
        shippingServices:
          description: This array consists of the domestic or international shipping
            services options that are defined for the policy. The shipping service
            options defined under this array should match what is set in the corresponding
            <b>shippingOptions.optionType</b> field (which controls whether domestic
            or international shipping service options are being defined). If a shipping
            rate table is being used, the specified shipping service options should
            also match the shipping rate table settings (domestic or international,
            shipping speed/level of service, etc.) <br/><br/>Sellers can specify up
            to four domestic shipping services and up to five international shipping
            service options by using separate <b>shippingService</b> containers for
            each. If the seller is using the Global Shipping Program as an international
            option, only a total of four international shipping service options (including
            GSP) can be offered. <br/><br/> See <a href="/api-docs/sell/static/seller-accounts/ht_shipping-setting-shipping-carrier-and-service-values.html"
            target="_blank">How to set up shipping carrier and shipping service values</a>.
            <br /><br />To use the eBay standard envelope service (eSE), see <a href="/api-docs/sell/static/seller-accounts/using-the-ebay-standard-envelope-service.html"
            target="_blank">Using eBay standard envelope (eSE) service</a>.<br /><br
            />This array is conditionally required if the seller is offering one or
            more domestic and/or international shipping service options.
          items:
            $ref: '#/components/schemas/ShippingService'
          type: array
      type: object
      x-apifox-orders:
      - costType
      - insuranceFee
      - insuranceOffered
      - optionType
      - packageHandlingCost
      - rateTableId
      - shippingServices
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ShippingService:
      description: This type is used by the <b>shippingServices</b> array, an array
        that provides details about every domestic and international shipping service
        option that is defined for the policy.
      example:
        surcharge:
          currency: currency
          value: value
        buyerResponsibleForPickup: true
        buyerResponsibleForShipping: true
        shippingCost:
          currency: currency
          value: value
        additionalShippingCost:
          currency: currency
          value: value
        freeShipping: true
        shippingCarrierCode: shippingCarrierCode
        sortOrder: 6
        shippingServiceCode: shippingServiceCode
        shipToLocations:
          regionIncluded:
          - regionType: regionType
            regionName: regionName
          - regionType: regionType
            regionName: regionName
          regionExcluded:
          - regionType: regionType
            regionName: regionName
          - regionType: regionType
            regionName: regionName
        cashOnDeliveryFee:
          currency: currency
          value: value
      properties:
        additionalShippingCost:
          $ref: '#/components/schemas/Amount'
        buyerResponsibleForPickup:
          description: 'This field should be included and set to <code>true</code>
            for a motor vehicle listing if it will be the buyer''s responsibility
            to pick up the purchased motor vehicle after full payment is made. This
            field is only applicable to motor vehicle listings. In the majority of
            motor vehicle listings, the seller does make the buyer responsible for
            pickup or shipment of the vehicle. <br/><br/>This field is returned if
            set.<br/><br/><b>Default</b>: false'
          type: boolean
        buyerResponsibleForShipping:
          description: 'This field should be included and set to <code>true</code>
            for a motor vehicle listing if it will be the buyer''s responsibility
            to arrange for shipment of a purchased motor vehicle after full payment
            is made. This field is only applicable to motor vehicle listings. In the
            majority of motor vehicle listings, the seller does make the buyer responsible
            for pickup or shipment of the vehicle. <br/><br/>This field is returned
            if set.<br/><br/><b>Default</b>: false'
          type: boolean
        cashOnDeliveryFee:
          $ref: '#/components/schemas/Amount'
        freeShipping:
          description: This field is included and set to <code>true</code> if the
            seller offers a free shipping option to the buyer. This field can only
            be included and set to <code>true</code> for the first domestic shipping
            service option specified in the <b>shippingServices</b> container (it
            is ignored if set for subsequent shipping services or for any international
            shipping service option). The first specified shipping service option
            has a <b>sortOrder</b> value of <code>1</code> or if the <b>sortOrderId</b>
            field is not used, it is the shipping service option that's specified
            first in the <b>shippingServices</b> container.<br/><br/>This container
            is returned if set.
          type: boolean
        shippingCarrierCode:
          description: This field sets/indicates the shipping carrier, such as <code>USPS</code>,
            <code>FedEx</code>, or <code>UPS</code>. Although this field uses the
            <b>string</b> type, the seller must pass in a pre-defined enumeration
            value here. For a full list of shipping carrier enum values for a specified
            eBay marketplace, the <b>GeteBayDetails</b> call of the <b>Trading API</b>
            can be used, and the <b>DetailName</b> field's value should be set to
            <code>ShippingCarrierDetails</code>. The enum values for each shipping
            carriers can be found in each <b>ShippingCarrierDetails.ShippingCarrier</b>
            field in the response payload.<br/><br/> This field is actually optional,
            as the shipping carrier is also tied into the <b>shippingServiceCode</b>
            enum value, and that field is required for every specified shipping service
            option.<br/><br/>This field is returned if set.
          type: string
        shippingCost:
          $ref: '#/components/schemas/Amount'
        shippingServiceCode:
          description: This field sets/indicates the domestic or international shipping
            service option, such as <code>USPSPriority</code>, <code>FedEx2Day</code>,
            or <code>UPS3rdDay</code>. Although this field uses the <b>string</b>
            type, the seller must pass in a pre-defined enumeration value here. For
            a full list of shipping service option enum values for a specified eBay
            marketplace, the <b>GeteBayDetails</b> call of the <b>Trading API</b>
            can be used, and the <b>DetailName</b> field's value should be set to
            <code>ShippingServiceDetails</code>. The enum values for each shipping
            service option can be found in each <b>ShippingServiceDetails.ShippingService</b>
            field in the response payload. The seller must make sure that the shipping
            service option is still valid, which is indicated by a <code>true</code>
            value in the corresponding <b>ValidForSellingFlow</b> boolean field. International
            shipping service options are typically returned at the top of the response
            payload, and are indicated by an <b>InternationalService</b> boolean field
            that reads <code>true</code>. The <b>InternationalService</b> boolean
            field is not returned at all for domestic shipping service options. <br/><br/>
            This field is required for every specified shipping service option.<br/><br/>This
            field is returned if set.
          type: string
        shipToLocations:
          $ref: '#/components/schemas/RegionSet'
        sortOrder:
          description: 'The integer value set in this field controls the order of
            the corresponding domestic or international shipping service option in
            the View Item and Checkout pages. <br/><br/>Sellers can specify up to
            four domestic shipping services (in four separate <b>shippingService</b>
            containers), so valid values are 1, 2, 3, and 4. A shipping service option
            with a <b>sortOrder</b> value of <code>1</code> appears at the top of
            View Item and Checkout pages. Conversely, a shipping service option with
            a <b>sortOrder</b> value of <code>1</code> appears at the bottom of the
            list. <br/><br/>Sellers can specify up to five international shipping
            services (in five separate <b>shippingService</b> containers), so valid
            values for international shipping services are 1, 2, 3, 4, and 5. Similarly
            to domestic shipping service options, the <b>sortOrder</b> value of a
            international shipping service option controls the placement of that shipping
            service option in the View Item and Checkout pages. <br/><br/>If the <b>sortOrder</b>
            field is not supplied, the order of domestic and international shipping
            service options is determined by the order in which they are listed in
            the API call. <br/><br/><b>Min</b>: 1. <b>Max</b>: 4 (for domestic shipping
            service) or 5 (for international shipping service).'
          format: int32
          type: integer
        surcharge:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - additionalShippingCost
      - buyerResponsibleForPickup
      - buyerResponsibleForShipping
      - cashOnDeliveryFee
      - freeShipping
      - shippingCarrierCode
      - shippingCost
      - shippingServiceCode
      - shipToLocations
      - sortOrder
      - surcharge
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    TimeDuration:
      description: A type used to specify a period of time using a specified time-measurement
        unit. Payment, return, and fulfillment business policies all use this type
        to specify time windows.<br/><br/>Whenever a container that uses this type
        is used in a request, both of these fields are required. Similarly, whenever
        a container that uses this type is returned in a response, both of these fields
        are always returned.
      example:
        unit: unit
        value: 0
      properties:
        unit:
          description: These enum values represent the time measurement unit, such
            as <code>DAY</code>. A span of time is defined when you apply the value
            specified in the <b>value</b> field to the value specified for <b>unit</b>.
            <br/><br/>See <b>TimeDurationUnitEnum</b> for a complete list of possible
            time-measurement units. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:TimeDurationUnitEnum'>eBay
            API documentation</a>
          type: string
        value:
          description: An integer that represents an amount of time, as measured by
            the time-measurement unit specified in the <b>unit</b> field.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - unit
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SetPaymentPolicyResponse:
      description: Complex type that that gets populated with a response containing
        a payment policy.
      example:
        marketplaceId: marketplaceId
        categoryTypes:
        - default: true
          name: name
        - default: true
          name: name
        paymentMethods:
        - recipientAccountReference:
            referenceType: referenceType
            referenceId: referenceId
          brands:
          - brands
          - brands
          paymentMethodType: paymentMethodType
        - recipientAccountReference:
            referenceType: referenceType
            referenceId: referenceId
          brands:
          - brands
          - brands
          paymentMethodType: paymentMethodType
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        name: name
        paymentInstructions: paymentInstructions
        deposit:
          amount:
            currency: currency
            value: value
          paymentMethods:
          - recipientAccountReference:
              referenceType: referenceType
              referenceId: referenceId
            brands:
            - brands
            - brands
            paymentMethodType: paymentMethodType
          - recipientAccountReference:
              referenceType: referenceType
              referenceId: referenceId
            brands:
            - brands
            - brands
            paymentMethodType: paymentMethodType
          dueIn:
            unit: unit
            value: 0
        description: description
        immediatePay: true
        paymentPolicyId: paymentPolicyId
        fullPaymentDueIn:
          unit: unit
          value: 0
      properties:
        categoryTypes:
          description: This container indicates whether the payment business policy
            applies to motor vehicle listings, or if it applies to non-motor vehicle
            listings.
          items:
            $ref: '#/components/schemas/CategoryType'
          type: array
        deposit:
          $ref: '#/components/schemas/Deposit'
        description:
          description: 'A seller-defined description of the payment business policy.
            This description is only for the seller''s use, and is not exposed on
            any eBay pages. This field is returned if set for the policy. <br/><br/><b>Max
            length</b>: 250'
          type: string
        fullPaymentDueIn:
          $ref: '#/components/schemas/TimeDuration'
        immediatePay:
          description: 'The value returned in this field will reflect the value set
            by the seller in the <b>immediatePay</b> request field. A value of <code>true</code>
            indicates that immediate payment is required from the buyer for: <ul><li>A
            fixed-price item</li><li>An auction item where the buyer is using the
            ''Buy it Now'' option</li><li>A deposit for a motor vehicle listing</li></ul><br
            />It is possible for the seller to set this field as <code>true</code>
            in the payment business policy, but it will not apply in some scenarios.
            For example, immediate payment is not applicable for auction listings
            that have a winning bidder, for buyer purchases that involve the Best
            Offer feature, or for transactions that happen offline between the buyer
            and seller.'
          type: boolean
        marketplaceId:
          description: The ID of the eBay marketplace to which this payment business
            policy applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: A seller-defined name for this payment business policy. Names
            must be unique for policies assigned to the same marketplace.<br /><br
            /><b>Max length:</b> 64
          type: string
        paymentInstructions:
          description: <p class="tablenote"><b>Note:</b> NO LONGER SUPPORTED. Although
            this field may be returned for some older payment business policies, payment
            instructions are no longer supported by payment business policies. If
            this field is returned, it can be ignored and these payment instructions
            will not appear in any listings that use the corresponding business policy.</p>A
            free-form string field that allows sellers to add detailed payment instructions
            to their listings.
          type: string
        paymentMethods:
          description: This array shows the available payment methods that the seller
            has set for the payment business policy.<br /><br />Sellers do not have
            to specify any electronic payment methods for listings, so this array
            will often be returned empty unless the payment business policy is intended
            for motor vehicle listings or other items in categories where offline
            payments are required or supported.
          items:
            $ref: '#/components/schemas/PaymentMethod'
          type: array
        paymentPolicyId:
          description: A unique eBay-assigned ID for a payment business policy. This
            ID is generated when the policy is created.
          type: string
        warnings:
          description: An array of one or more errors or warnings that were generated
            during the processing of the request. If there were no issues with the
            request, this array will return empty.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - categoryTypes
      - deposit
      - description
      - fullPaymentDueIn
      - immediatePay
      - marketplaceId
      - name
      - paymentInstructions
      - paymentMethods
      - paymentPolicyId
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SetReturnPolicyResponse:
      description: Complex type that that gets populated with a response containing
        a return policy.
      example:
        returnShippingCostPayer: returnShippingCostPayer
        categoryTypes:
        - default: true
          name: name
        - default: true
          name: name
        refundMethod: refundMethod
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        description: description
        restockingFeePercentage: restockingFeePercentage
        returnInstructions: returnInstructions
        returnPeriod:
          unit: unit
          value: 0
        marketplaceId: marketplaceId
        internationalOverride:
          returnShippingCostPayer: returnShippingCostPayer
          returnMethod: returnMethod
          returnsAccepted: true
          returnPeriod:
            unit: unit
            value: 0
        returnMethod: returnMethod
        returnPolicyId: returnPolicyId
        name: name
        returnsAccepted: true
        extendedHolidayReturnsOffered: true
      properties:
        categoryTypes:
          description: This field always returns <code>ALL_EXCLUDING_MOTORS_VEHICLES</code>
            for return business policies, since return business policies are not applicable
            to motor vehicle listings.
          items:
            $ref: '#/components/schemas/CategoryType'
          type: array
        description:
          description: 'A seller-defined description of the return business policy.
            This description is only for the seller''s use, and is not exposed on
            any eBay pages. This field is returned if set for the policy. <br/><br/><b>Max
            length</b>: 250'
          type: string
        extendedHolidayReturnsOffered:
          description: '<p class="tablenote"><span  style="color: #dd1e31;"><b>Important!</b></span>
            This field is deprecated, since eBay no longer supports extended holiday
            returns. This field should no longer be returned.</p> '
          type: boolean
        internationalOverride:
          $ref: '#/components/schemas/InternationalReturnOverrideType'
        marketplaceId:
          description: The ID of the eBay marketplace to which this return business
            policy applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: A seller-defined name for this return business policy. Names
            must be unique for policies assigned to the same marketplace.<br /><br
            /><b>Max length:</b> 64
          type: string
        refundMethod:
          description: This value indicates the refund method that will be used by
            the seller for buyer returns. In most cases, buyers will get their money
            back for returns, but for sellers who offer the 'Click and Collect' and
            'Buy Online, Pick up in Store' option, the seller is able to offer a store/merchandise
            credit in addition to the 'money back' option. The buyer recieving money
            back for a return is always an option available to the buyer, even if
            this field is set to <code>MERCHANDISE_CREDIT</code>, or if this field
            is not returned at all. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:RefundMethodEnum'>eBay
            API documentation</a>
          type: string
        restockingFeePercentage:
          description: '<p class="tablenote"><span  style="color: #dd1e31;"><b>Important!</b></span>
            This field is deprecated, since eBay no longer allows sellers to charge
            a restocking fee for buyer remorse returns.</p>'
          type: string
        returnInstructions:
          description: 'This text-based field provides more details on seller-specified
            return instructions. <p class="tablenote"><span  style="color: #dd1e31;"><b>Important!</b></span>
            This field is no longer supported on many eBay marketplaces. To see if
            a marketplace and eBay category does support this field, call <a href="/api-docs/sell/metadata/resources/marketplace/methods/getReturnPolicies">getReturnPolicies</a>
            method of the <b>Metadata API</b>. Then you will look for the <b>policyDescriptionEnabled</b>
            field with a value of <code>true</code> for the eBay category.</span></p><br/><b>Max
            length</b>: 5000 (8000 for DE)'
          type: string
        returnMethod:
          description: This field will be returned if the seller is willing and able
            to offer an alternative return method other than 'money back', such as
            an exchange or replacement item. For implementation help, refer to <a
            href='https://developer.ebay.com/api-docs/sell/account/types/api:ReturnMethodEnum'>eBay
            API documentation</a>
          type: string
        returnPeriod:
          $ref: '#/components/schemas/TimeDuration'
        returnPolicyId:
          description: A unique eBay-assigned ID for a return business policy. This
            ID is generated when the policy is created.
          type: string
        returnsAccepted:
          description: If set to <code>true</code>, the seller accepts returns. If
            set to <code>false</code>, this field indicates that the seller does not
            accept returns.
          type: boolean
        returnShippingCostPayer:
          description: This field indicates who is responsible for paying for the
            shipping charges for returned items. The field can be set to either <code>BUYER</code>
            or <code>SELLER</code>.  <br/><br/>Note that the seller is always responsible
            for return shipping costs for SNAD-related issues.  <br/><br/>This container
            will be returned unless the business policy states that the seller does
            not accept returns. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ReturnShippingCostPayerEnum'>eBay
            API documentation</a>
          type: string
        warnings:
          description: An array of one or more errors or warnings that were generated
            during the processing of the request. If there were no issues with the
            request, this array will return empty.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - categoryTypes
      - description
      - extendedHolidayReturnsOffered
      - internationalOverride
      - marketplaceId
      - name
      - refundMethod
      - restockingFeePercentage
      - returnInstructions
      - returnMethod
      - returnPeriod
      - returnPolicyId
      - returnsAccepted
      - returnShippingCostPayer
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SetFulfillmentPolicyResponse:
      description: Complex type that that gets populated with a response containing
        a fulfillment policy.
      example:
        handlingTime:
          unit: unit
          value: 0
        categoryTypes:
        - default: true
          name: name
        - default: true
          name: name
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        description: description
        globalShipping: true
        localPickup: true
        marketplaceId: marketplaceId
        name: name
        pickupDropOff: true
        fulfillmentPolicyId: fulfillmentPolicyId
        freightShipping: true
        shippingOptions:
        - optionType: optionType
          insuranceFee:
            currency: currency
            value: value
          rateTableId: rateTableId
          costType: costType
          insuranceOffered: true
          packageHandlingCost:
            currency: currency
            value: value
          shippingServices:
          - surcharge:
              currency: currency
              value: value
            buyerResponsibleForPickup: true
            buyerResponsibleForShipping: true
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            freeShipping: true
            shippingCarrierCode: shippingCarrierCode
            sortOrder: 6
            shippingServiceCode: shippingServiceCode
            shipToLocations:
              regionIncluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
              regionExcluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
            cashOnDeliveryFee:
              currency: currency
              value: value
          - surcharge:
              currency: currency
              value: value
            buyerResponsibleForPickup: true
            buyerResponsibleForShipping: true
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            freeShipping: true
            shippingCarrierCode: shippingCarrierCode
            sortOrder: 6
            shippingServiceCode: shippingServiceCode
            shipToLocations:
              regionIncluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
              regionExcluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
            cashOnDeliveryFee:
              currency: currency
              value: value
        - optionType: optionType
          insuranceFee:
            currency: currency
            value: value
          rateTableId: rateTableId
          costType: costType
          insuranceOffered: true
          packageHandlingCost:
            currency: currency
            value: value
          shippingServices:
          - surcharge:
              currency: currency
              value: value
            buyerResponsibleForPickup: true
            buyerResponsibleForShipping: true
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            freeShipping: true
            shippingCarrierCode: shippingCarrierCode
            sortOrder: 6
            shippingServiceCode: shippingServiceCode
            shipToLocations:
              regionIncluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
              regionExcluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
            cashOnDeliveryFee:
              currency: currency
              value: value
          - surcharge:
              currency: currency
              value: value
            buyerResponsibleForPickup: true
            buyerResponsibleForShipping: true
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            freeShipping: true
            shippingCarrierCode: shippingCarrierCode
            sortOrder: 6
            shippingServiceCode: shippingServiceCode
            shipToLocations:
              regionIncluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
              regionExcluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
            cashOnDeliveryFee:
              currency: currency
              value: value
        shipToLocations:
          regionIncluded:
          - regionType: regionType
            regionName: regionName
          - regionType: regionType
            regionName: regionName
          regionExcluded:
          - regionType: regionType
            regionName: regionName
          - regionType: regionType
            regionName: regionName
      properties:
        categoryTypes:
          description: This container indicates whether the fulfillment business policy
            applies to motor vehicle listings, or if it applies to non-motor vehicle
            listings.
          items:
            $ref: '#/components/schemas/CategoryType'
          type: array
        description:
          description: 'A seller-defined description of the fulfillment policy. This
            description is only for the seller''s use, and is not exposed on any eBay
            pages. This field is returned if set for the policy. <br/><br/><b>Max
            length</b>: 250'
          type: string
        freightShipping:
          description: If returned as <code>true</code>, the seller offers freight
            shipping. Freight shipping can be used for large items over 150 lbs.
          type: boolean
        fulfillmentPolicyId:
          description: A unique eBay-assigned ID for a fulfillment business policy.
            This ID is generated when the policy is created.
          type: string
        globalShipping:
          description: 'If returned as <code>true</code>, the eBay Global Shipping
            Program will be used by the seller to ship items to international locations.<br
            /><br /><span class="tablenote"><b>Note</b>: On the US marketplace, the
            <em><b>Global Shipping Program</b></em> is scheduled to be replaced by
            a new intermediated international shipping program called <em><b>eBay
            International Shipping</b></em>. US sellers who are opted in to the Global
            Shipping Program will be automatically opted in to eBay International
            Shipping when it becomes available to them. All US sellers will be migrated
            by March 31, 2023. <br /><br />eBay International Shipping is an account
            level setting, and no field needs to be set in a Fulfillment business
            policy to enable it. As long as the US seller''s account is opted in to
            eBay International Shipping, this shipping option will be enabled automatically
            for all listings where international shipping is available. A US seller
            who is opted in to eBay International Shipping can also specify individual
            international shipping service options for a Fulfillment business policy.</span>'
          type: boolean
        handlingTime:
          $ref: '#/components/schemas/TimeDuration'
        localPickup:
          description: If returned as <code>true</code>, local pickup is available
            for this policy.
          type: boolean
        marketplaceId:
          description: The ID of the eBay marketplace to which this fulfillment business
            policy applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: 'A seller-defined name for this fulfillment business policy.
            Names must be unique for policies assigned to the same marketplace. <br/><br/><b>Max
            length</b>: 64'
          type: string
        pickupDropOff:
          description: If returned as <code>true</code>, the seller offers the "Click
            and Collect" option. <br/><br/>Currently, "Click and Collect" is available
            only to large retail merchants the eBay AU and UK marketplaces.
          type: boolean
        shippingOptions:
          description: This array is used to provide detailed information on the domestic
            and international shipping options available for the policy. A separate
            <b>ShippingOption</b> object covers domestic shipping service options
            and international shipping service options (if the seller ships to international
            locations). The <b>optionType</b> field indicates whether the <b>ShippingOption</b>
            object applies to domestic or international shipping, and the <b>costType</b>
            field indicates whether flat-rate shipping or calculated shipping will
            be used. <p>A separate <b>ShippingServices</b> object is used to specify
            cost and other details for every available domestic and international
            shipping service option. </p>
          items:
            $ref: '#/components/schemas/ShippingOption'
          type: array
        shipToLocations:
          $ref: '#/components/schemas/RegionSet'
        warnings:
          description: An array of one or more errors or warnings that were generated
            during the processing of the request. If there were no issues with the
            request, this array will return empty.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - categoryTypes
      - description
      - freightShipping
      - fulfillmentPolicyId
      - globalShipping
      - handlingTime
      - localPickup
      - marketplaceId
      - name
      - pickupDropOff
      - shippingOptions
      - shipToLocations
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RegionSet:
      description: This type consists of the <b>regionIncluded</b> and <b>regionExcluded</b>
        arrays, which indicate the areas to where the seller does and doesn't ship.
      example:
        regionIncluded:
        - regionType: regionType
          regionName: regionName
        - regionType: regionType
          regionName: regionName
        regionExcluded:
        - regionType: regionType
          regionName: regionName
        - regionType: regionType
          regionName: regionName
      properties:
        regionExcluded:
          description: An array of one or more <b>regionName</b> values that specify
            the areas to where a seller does not ship. A <b>regionExcluded</b> list
            should only be set in the top-level <b>shipToLocations</b> container and
            not within the <b>shippingServices.shipToLocations</b> container used
            to specify which shipping regions are serviced by each available shipping
            service option. <p>Many sellers are willing to ship to many international
            locations, but they may want to exclude some world regions or some countries
            as places they are willing to ship to.<br/><br/>This array will be returned
            as empty if no shipping regions are excluded with the fulfillment business
            policy.
          items:
            $ref: '#/components/schemas/Region'
          type: array
        regionIncluded:
          description: An array of one or more <b>regionName</b> fields that specify
            the areas to where a seller ships. <br><br>Each eBay marketplace supports
            its own set of allowable shipping locations.
          items:
            $ref: '#/components/schemas/Region'
          type: array
      type: object
      x-apifox-orders:
      - regionExcluded
      - regionIncluded
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SalesTaxes:
      description: This type is used by the root response of the <b>getSalesTaxes</b>
        method.
      example:
        salesTaxes:
        - countryCode: countryCode
          salesTaxJurisdictionId: salesTaxJurisdictionId
          salesTaxPercentage: salesTaxPercentage
          shippingAndHandlingTaxed: true
        - countryCode: countryCode
          salesTaxJurisdictionId: salesTaxJurisdictionId
          salesTaxPercentage: salesTaxPercentage
          shippingAndHandlingTaxed: true
      properties:
        salesTaxes:
          description: An array of one or more sales tax rate entries for a specific
            marketplace (or all applicable marketplaces if the <b>country_code</b>
            query parameter is not used.<br><br>If no sales tax rate entries are set
            up, no response payload is returned, but only an HTTP status code of <code>204
            No Content</code>.
          items:
            $ref: '#/components/schemas/SalesTax'
          type: array
      type: object
      x-apifox-orders:
      - salesTaxes
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SalesTax:
      description: This type is used to provide sales tax settings for a specific
        tax jurisdiction.
      example:
        countryCode: countryCode
        salesTaxJurisdictionId: salesTaxJurisdictionId
        salesTaxPercentage: salesTaxPercentage
        shippingAndHandlingTaxed: true
      properties:
        countryCode:
          description: The country code enumeration value identifies the country to
            which this sales tax rate applies. For implementation help, refer to <a
            href='https://developer.ebay.com/api-docs/sell/account/types/ba:CountryCodeEnum'>eBay
            API documentation</a>
          type: string
        salesTaxJurisdictionId:
          description: A unique ID that identifies the sales tax jurisdiction to which
            the salest tax rate applies (for example, a state within the United States).
          type: string
        salesTaxPercentage:
          description: The sales tax rate that will be applied to sales price. The
            <b>shippingAndHandlingTaxed</b> value will indicate whether or not sales
            tax is also applied to shipping and handling charges<br><br>Although it
            is a string, a percentage value is returned here, such as <code>7.75</code>
          type: string
        shippingAndHandlingTaxed:
          description: If returned as <code>true</code>, sales tax is also applied
            to shipping and handling charges, and not just the total sales price of
            the order.
          type: boolean
      type: object
      x-apifox-orders:
      - countryCode
      - salesTaxJurisdictionId
      - salesTaxPercentage
      - shippingAndHandlingTaxed
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SellingLimit:
      description: Type used by the <b>sellingLimit</b> container, a container that
        lists the monthly cap for the quantity of items sold and total sales amount
        allowed for the seller's account.
      example:
        amount:
          currency: currency
          value: value
        quantity: 0
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        quantity:
          description: This field shows the monthly cap for total quantity sold allowed
            for the seller's account. This container may not be returned if a seller
            does not have a monthly cap for total quantity sold.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - amount
      - quantity
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SellingPrivileges:
      description: This type is used by the base response of the <b>getPrivileges</b>
        method.
      example:
        sellerRegistrationCompleted: true
        sellingLimit:
          amount:
            currency: currency
            value: value
          quantity: 0
      properties:
        sellerRegistrationCompleted:
          description: If this field is returned as <code>true</code>, the seller's
            registration is completed. If this field is returned as <code>false</code>,
            the registration process is not complete.
          type: boolean
        sellingLimit:
          $ref: '#/components/schemas/SellingLimit'
      type: object
      x-apifox-orders:
      - sellerRegistrationCompleted
      - sellingLimit
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReturnPolicy:
      description: This type is used by the <b>returnPolicy</b> response container,
        a container which defines a seller's return business policy for a specific
        marketplace.
      example:
        returnShippingCostPayer: returnShippingCostPayer
        categoryTypes:
        - default: true
          name: name
        - default: true
          name: name
        refundMethod: refundMethod
        description: description
        restockingFeePercentage: restockingFeePercentage
        returnInstructions: returnInstructions
        returnPeriod:
          unit: unit
          value: 0
        marketplaceId: marketplaceId
        internationalOverride:
          returnShippingCostPayer: returnShippingCostPayer
          returnMethod: returnMethod
          returnsAccepted: true
          returnPeriod:
            unit: unit
            value: 0
        returnMethod: returnMethod
        returnPolicyId: returnPolicyId
        name: name
        returnsAccepted: true
        extendedHolidayReturnsOffered: true
      properties:
        categoryTypes:
          description: 'This container indicates which category group that the return
            policy applies to.<br/><br/><span class="tablenote"><b>Note</b>: Return
            business policies are not applicable to motor vehicle listings, so the
            <b>categoryTypes.name</b> value will always be <code>ALL_EXCLUDING_MOTORS_VEHICLES</code>
            for return business policies.</span>'
          items:
            $ref: '#/components/schemas/CategoryType'
          type: array
        description:
          description: 'A seller-defined description of the return business policy.
            This description is only for the seller''s use, and is not exposed on
            any eBay pages.  <br/><br/><b>Max length</b>: 250'
          type: string
        extendedHolidayReturnsOffered:
          description: '<p class="tablenote"><span  style="color: #dd1e31;"><b>Important!</b></span>
            This field is deprecated, since eBay no longer supports extended holiday
            returns. Any value supplied in this field is neither read nor returned.</p> '
          type: boolean
        internationalOverride:
          $ref: '#/components/schemas/InternationalReturnOverrideType'
        marketplaceId:
          description: The ID of the eBay marketplace to which this return business
            policy applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: A seller-defined name for this payment business policy. Names
            must be unique for policies assigned to the same marketplace.<br /><br
            /><b>Max length:</b> 64
          type: string
        refundMethod:
          description: This value indicates the refund method that will be used by
            the seller for buyer returns. In most cases, this value is going to be
            <code>MONEY_BACK</code>, except for 'Click and Collect' and 'Buy Online,
            Pick up in Store' orders where the seller is able to offer a store/merchandise
            credit in addition to the 'money back' option. The buyer recieving money
            back for a return is always an option available to the buyer, even if
            this field returns <code>MERCHANDISE_CREDIT</code>. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:RefundMethodEnum'>eBay
            API documentation</a>
          type: string
        restockingFeePercentage:
          description: '<p class="tablenote"><span  style="color: #dd1e31;"><b>Important!</b></span>
            This field is deprecated, since eBay no longer allows sellers to charge
            a restocking fee for buyer remorse returns. If this field is included,
            it is ignored and it is no longer returned.</p>'
          type: string
        returnInstructions:
          description: 'This text-based field provides more details on seller-specified
            return instructions. This field is only returned if set for the return
            business policy. <p class="tablenote"><span  style="color: #dd1e31;"><b>Important!</b></span>
            This field is no longer supported on many eBay marketplaces. To see if
            a marketplace and eBay category does support this field, call <a href="/api-docs/sell/metadata/resources/marketplace/methods/getReturnPolicies">getReturnPolicies</a>
            method of the <b>Metadata API</b>. Then you will look for the <b>policyDescriptionEnabled</b>
            field with a value of <code>true</code> for the eBay category.</span></p><br/><b>Max
            length</b>: 5000 (8000 for DE)'
          type: string
        returnMethod:
          description: This field is only returned if the seller wants to offer an
            alternative return method other than 'money back', such as an exchange
            or replacement item. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ReturnMethodEnum'>eBay
            API documentation</a>
          type: string
        returnPeriod:
          $ref: '#/components/schemas/TimeDuration'
        returnPolicyId:
          description: A unique eBay-assigned ID for a return business policy. This
            ID is generated when the policy is created.
          type: string
        returnsAccepted:
          description: If this field is returned as <code>true</code>, the seller
            accepts returns. <br/><br/><span class="tablenote"><strong>Note:</strong>Top-Rated
            sellers must accept item returns and the <b>handlingTime</b> should be
            set to zero days or one day for a listing to receive a Top-Rated Plus
            badge on the View Item or search result pages. For more information on
            eBay's Top-Rated seller program, see <a href="https://pages.ebay.com/help/sell/top-rated.html">Becoming
            a Top Rated Seller and qualifying for Top Rated Plus benefits</a>.</span>
          type: boolean
        returnShippingCostPayer:
          description: This field indicates who is responsible for paying for the
            shipping charges for returned items. The field can be set to either <code>BUYER</code>
            or <code>SELLER</code>.  <br/><br/>Depending on the return policy and
            specifics of the return, either the buyer or the seller can be responsible
            for the return shipping costs. Note that the seller is always responsible
            for return shipping costs for SNAD-related issues. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ReturnShippingCostPayerEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - categoryTypes
      - description
      - extendedHolidayReturnsOffered
      - internationalOverride
      - marketplaceId
      - name
      - refundMethod
      - restockingFeePercentage
      - returnInstructions
      - returnMethod
      - returnPeriod
      - returnPolicyId
      - returnsAccepted
      - returnShippingCostPayer
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SellerEligibilityResponse:
      description: A type that is used to provide the seller's eligibility status
        for an eBay advertising program.
      example:
        reason: reason
        programType: programType
        status: status
      properties:
        programType:
          description: The eBay advertising program for which a seller may be eligible.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/plser:AdvertisingProgramEnum'>eBay
            API documentation</a>
          type: string
        reason:
          description: The reason why a seller is ineligible for the specified eBay
            advertising program.<br /><br />This field is only returned if the seller
            is ineligible for the eBay advertising program. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/plser:SellerIneligibleReasonEnum'>eBay
            API documentation</a>
          type: string
        status:
          description: The seller elibibilty status for the specified eBay advertising
            program. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/cmlib:SellerEligibilityEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - programType
      - reason
      - status
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SellerEligibilityMultiProgramResponse:
      description: The base response of the <b>getAdvertisingEligibility</b> method
        that contains the seller eligibility information for one or more advertising
        programs.
      example:
        advertisingEligibility:
        - reason: reason
          programType: programType
          status: status
        - reason: reason
          programType: programType
          status: status
      properties:
        advertisingEligibility:
          description: An array of response fields that define the seller eligibility
            for eBay adverstising programs.
          items:
            $ref: '#/components/schemas/SellerEligibilityResponse'
          type: array
      type: object
      x-apifox-orders:
      - advertisingEligibility
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReturnPolicyResponse:
      description: 'The response payload for the <b>getReturnPolicies</b> method.
        <br /><br /><span class="tablenote"><b>Note</b>: Pagination has not yet been
        enabled for <b>getReturnPolicies</b>, so all of the pagination-related fields
        are for future use.</span>'
      example:
        next: next
        total: 1
        offset: 6
        prev: prev
        limit: 0
        returnPolicies:
        - returnShippingCostPayer: returnShippingCostPayer
          categoryTypes:
          - default: true
            name: name
          - default: true
            name: name
          refundMethod: refundMethod
          description: description
          restockingFeePercentage: restockingFeePercentage
          returnInstructions: returnInstructions
          returnPeriod:
            unit: unit
            value: 0
          marketplaceId: marketplaceId
          internationalOverride:
            returnShippingCostPayer: returnShippingCostPayer
            returnMethod: returnMethod
            returnsAccepted: true
            returnPeriod:
              unit: unit
              value: 0
          returnMethod: returnMethod
          returnPolicyId: returnPolicyId
          name: name
          returnsAccepted: true
          extendedHolidayReturnsOffered: true
        - returnShippingCostPayer: returnShippingCostPayer
          categoryTypes:
          - default: true
            name: name
          - default: true
            name: name
          refundMethod: refundMethod
          description: description
          restockingFeePercentage: restockingFeePercentage
          returnInstructions: returnInstructions
          returnPeriod:
            unit: unit
            value: 0
          marketplaceId: marketplaceId
          internationalOverride:
            returnShippingCostPayer: returnShippingCostPayer
            returnMethod: returnMethod
            returnsAccepted: true
            returnPeriod:
              unit: unit
              value: 0
          returnMethod: returnMethod
          returnPolicyId: returnPolicyId
          name: name
          returnsAccepted: true
          extendedHolidayReturnsOffered: true
        href: href
      properties:
        href:
          description: This field is for future use.
          type: string
        limit:
          description: This field is for future use.
          format: int32
          type: integer
        next:
          description: This field is for future use.
          type: string
        offset:
          description: This field is for future use.
          format: int32
          type: integer
        prev:
          description: This field is for future use.
          type: string
        returnPolicies:
          description: A list of all of the seller's return business policies defined
            for the specified marketplace. This array will be returned as empty if
            no return business policies are defined for the specified marketplace.
          items:
            $ref: '#/components/schemas/ReturnPolicy'
          type: array
        total:
          description: The total number of return business policies retrieved in the
            result set.  <br/><br/>If no return business policies are defined for
            the specified marketplace, this field is returned with a value of <code>0</code>.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - prev
      - returnPolicies
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    SalesTaxBase:
      description: 'This type is used by the base request of the <b>createOrReplaceSalesTax</b>. '
      example:
        salesTaxPercentage: salesTaxPercentage
        shippingAndHandlingTaxed: true
      properties:
        salesTaxPercentage:
          description: This field is used to set the sales tax rate for the tax jurisdiction
            set in the call URI. When applicable to an order, this sales tax rate
            will be applied to sales price. The <b>shippingAndHandlingTaxed</b> value
            will indicate whether or not sales tax is also applied to shipping and
            handling charges<br><br>Although it is a string, a percentage value is
            set here, such as <code>7.75</code>.
          type: string
        shippingAndHandlingTaxed:
          description: This field is set to <code>true</code> if the seller wishes
            to apply sales tax to shipping and handling charges, and not just the
            total sales price of the order. Otherwise, this field's value should be
            set to <code>false</code>.
          type: boolean
      type: object
      x-apifox-orders:
      - salesTaxPercentage
      - shippingAndHandlingTaxed
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ReturnPolicyRequest:
      description: This root container defines a seller's return business policy for
        a specific marketplace and category group. This type is used when creating
        or updating a return business policy.
      example:
        returnShippingCostPayer: returnShippingCostPayer
        categoryTypes:
        - default: true
          name: name
        - default: true
          name: name
        refundMethod: refundMethod
        description: description
        restockingFeePercentage: restockingFeePercentage
        returnInstructions: returnInstructions
        returnPeriod:
          unit: unit
          value: 0
        marketplaceId: marketplaceId
        internationalOverride:
          returnShippingCostPayer: returnShippingCostPayer
          returnMethod: returnMethod
          returnsAccepted: true
          returnPeriod:
            unit: unit
            value: 0
        returnMethod: returnMethod
        name: name
        returnsAccepted: true
        extendedHolidayReturnsOffered: true
      properties:
        categoryTypes:
          description: 'This container indicates which category group that the return
            policy applies to.<br/><br/><span class="tablenote"><b>Note</b>: Return
            business policies are not applicable to motor vehicle listings, so the
            <b>categoryTypes.name</b> value must be set to <code>ALL_EXCLUDING_MOTORS_VEHICLES</code>
            for return business policies.</span>'
          items:
            $ref: '#/components/schemas/CategoryType'
          type: array
        description:
          description: 'A seller-defined description of the return business policy.
            This description is only for the seller''s use, and is not exposed on
            any eBay pages.  <br/><br/><b>Max length</b>: 250'
          type: string
        extendedHolidayReturnsOffered:
          description: '<p class="tablenote"><span  style="color: #dd1e31;"><b>Important!</b></span>
            This field is deprecated, since eBay no longer supports extended holiday
            returns. Any value supplied in this field is neither read nor returned.</p> '
          type: boolean
        internationalOverride:
          $ref: '#/components/schemas/InternationalReturnOverrideType'
        marketplaceId:
          description: The ID of the eBay marketplace to which this return business
            policy applies.  For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: 'A seller-defined name for this return business policy. Names
            must be unique for policies assigned to the same marketplace. <br/><br/><b>Max
            length</b>: 64'
          type: string
        refundMethod:
          description: 'This value indicates the refund method that will be used by
            the seller for buyer returns. In most cases, buyers will get their money
            back for returns, but for sellers who offer the ''Click and Collect''
            and ''Buy Online, Pick up in Store'' option, the seller is able to offer
            a store/merchandise credit in addition to the ''money back'' option. The
            buyer recieving money back for a return is always an option available
            to the buyer, even if this field is set to <code>MERCHANDISE_CREDIT</code>.<p
            class="tablenote"><span  style="color: #dd1e31;"><b>Important!</b></span>
            If this field is not included in a return business policy, the seller
            will still have the money back option in the case of a return.</p> For
            implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/account/types/api:RefundMethodEnum''>eBay
            API documentation</a>'
          type: string
        restockingFeePercentage:
          description: '<p class="tablenote"><span  style="color: #dd1e31;"><b>Important!</b></span>
            This field is deprecated, since eBay no longer allows sellers to charge
            a restocking fee for buyer remorse returns. If this field is included,
            it is ignored.</p>'
          type: string
        returnInstructions:
          description: 'This text-based field provides more details on seller-specified
            return instructions. <p class="tablenote"><span  style="color: #dd1e31;"><b>Important!</b></span>
            This field is no longer supported on many eBay marketplaces. To see if
            a marketplace and eBay category does support this field, call <a href="/api-docs/sell/metadata/resources/marketplace/methods/getReturnPolicies">getReturnPolicies</a>
            method of the <b>Metadata API</b>. Then you will look for the <b>policyDescriptionEnabled</b>
            field with a value of <code>true</code> for the eBay category.</span></p><br/><b>Max
            length</b>: 5000 (8000 for DE)'
          type: string
        returnMethod:
          description: This field can be used if the seller is willing and able to
            offer an alternative return method other than 'money back', such as an
            exchange or replacement item. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ReturnMethodEnum'>eBay
            API documentation</a>
          type: string
        returnPeriod:
          $ref: '#/components/schemas/TimeDuration'
        returnsAccepted:
          description: If set to <code>true</code>, the seller accepts returns. <p><span
            class="tablenote"><strong>Note:</strong>Top-Rated sellers must accept
            item returns and the <b>handlingTime</b> should be set to zero days or
            one day for a listing to receive a Top-Rated Plus badge on the View Item
            or search result pages. For more information on eBay's Top-Rated seller
            program, see <a href="http://pages.ebay.com/help/sell/top-rated.html">Becoming
            a Top Rated Seller and qualifying for Top Rated Plus benefits</a>.</span></p>
          type: boolean
        returnShippingCostPayer:
          description: This field indicates who is responsible for paying for the
            shipping charges for returned items. The field can be set to either <code>BUYER</code>
            or <code>SELLER</code>.  <br/><br/>Depending on the return policy and
            specifics of the return, either the buyer or the seller can be responsible
            for the return shipping costs. Note that the seller is always responsible
            for return shipping costs for SNAD-related issues.  <br/><br/>This field
            is conditionally required if <b>returnsAccepted</b> is set to <code>true</code>.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ReturnShippingCostPayerEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - categoryTypes
      - description
      - extendedHolidayReturnsOffered
      - internationalOverride
      - marketplaceId
      - name
      - refundMethod
      - restockingFeePercentage
      - returnInstructions
      - returnMethod
      - returnPeriod
      - returnsAccepted
      - returnShippingCostPayer
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RecipientAccountReference:
      description: '<span class="tablenote"><b>Note</b>: This type is no longer applicable.
        eBay now controls all electronic payment methods available for a marketplace,
        and a seller never has to specify any electronic payment methods.</span>'
      example:
        referenceType: referenceType
        referenceId: referenceId
      properties:
        referenceId:
          description: '<span class="tablenote"><b>Note</b>: DO NOT USE THIS FIELD.
            eBay now controls all electronic payment methods available for a marketplace,
            and a seller never has to specify any electronic payment methods.</span>'
          type: string
        referenceType:
          description: '<span class="tablenote"><b>Note</b>: DO NOT USE THIS FIELD.
            eBay now controls all electronic payment methods available for a marketplace,
            and a seller never has to specify any electronic payment methods.</span>
            For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/account/types/api:RecipientAccountReferenceTypeEnum''>eBay
            API documentation</a>'
          type: string
      type: object
      x-apifox-orders:
      - referenceId
      - referenceType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Region:
      description: This type is used to define specific shipping regions. There are
        four 'levels' of shipping regions, including large geographical regions (like
        'Asia', 'Europe', or 'Middle East'), individual countries, US states or Canadian
        provinces, and special locations/domestic regions within a country (like 'Alaska/Hawaii'
        or 'PO Box').
      example:
        regionType: regionType
        regionName: regionName
      properties:
        regionName:
          description: A string that indicates the name of a region, as defined by
            eBay. A "region" can be either a 'world region' (e.g., the "Middle East"
            or "Southeast Asia"), a country (represented with a two-letter country
            code), a state or province (represented with a two-letter code), or a
            special domestic region within a country. The <b>GeteBayDetails</b> call
            in the Trading API can be used to retrieve the world regions and special
            domestic regions within a specific country. To get these enumeration values,
            call <b>GeteBayDetails</b>with the <b>DetailName</b> value set to <b>ExcludeShippingLocationDetails</b>.
          type: string
        regionType:
          description: 'Reserved for future use. <!--The region''s type, which can
            be one of the following: ''COUNTRY'', ''COUNTRY_REGION'', ''STATE_OR_PROVINCE'',
            ''WORLD_REGION'', or ''WORLDWIDE''.--> For implementation help, refer
            to <a href=''https://developer.ebay.com/api-docs/sell/account/types/ba:RegionTypeEnum''>eBay
            API documentation</a>'
          type: string
      type: object
      x-apifox-orders:
      - regionName
      - regionType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RateTableResponse:
      description: This type is the base response of the <b>getRateTables</b> method.
      example:
        rateTables:
        - rateTableId: rateTableId
          countryCode: countryCode
          locality: locality
          name: name
        - rateTableId: rateTableId
          countryCode: countryCode
          locality: locality
          name: name
      properties:
        rateTables:
          description: An array of all shipping rate tables defined for a marketplace
            (or all marketplaces if no <b>country_code</b> query parameter is used).
            This array will be returned as empty if the seller has no defined shipping
            rate tables for the specified marketplace.
          items:
            $ref: '#/components/schemas/RateTable'
          type: array
      type: object
      x-apifox-orders:
      - rateTables
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Programs:
      description: The base response type of the <b>getOptedInPrograms</b> method.
      example:
        programs:
        - programType: programType
        - programType: programType
      properties:
        programs:
          description: An array of seller programs that the seller's account is opted
            in to.
          items:
            $ref: '#/components/schemas/Program'
          type: array
      type: object
      x-apifox-orders:
      - programs
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    RateTable:
      description: This type is used to provide details about each shipping rate table
        that is returned in the <b>getRateTables</b> response.
      example:
        rateTableId: rateTableId
        countryCode: countryCode
        locality: locality
        name: name
      properties:
        countryCode:
          description: A two-letter <a href="https://www.iso.org/iso-3166-country-codes.html"
            title="https://www.iso.org" target="_blank">ISO 3166</a> country code
            representing the eBay marketplace where the shipping rate table is defined.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:CountryCodeEnum'>eBay
            API documentation</a>
          type: string
        locality:
          description: This enumeration value returned here indicates whether the
            shipping rate table is a domestic or international shipping rate table.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ShippingOptionTypeEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: The seller-defined name for the shipping rate table.
          type: string
        rateTableId:
          description: A unique eBay-assigned ID for a seller's shipping rate table.
            These <b>rateTableId</b> values are used to associate shipping rate tables
            to fulfillment business policies or directly to listings through an add/revise/relist
            call in the Trading API.
          type: string
      type: object
      x-apifox-orders:
      - countryCode
      - locality
      - name
      - rateTableId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Program:
      description: A seller program in to which a seller can opt-in.
      example:
        programType: programType
      properties:
        programType:
          description: A seller program in to which a seller can opt-in. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ProgramTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - programType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PaymentsProgramResponse:
      description: The response object containing the sellers status with regards
        to the specified payment program.
      example:
        marketplaceId: marketplaceId
        wasPreviouslyOptedIn: true
        paymentsProgramType: paymentsProgramType
        status: status
      properties:
        marketplaceId:
          description: The ID of the eBay marketplace to which the payment program
            applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        paymentsProgramType:
          description: This parameter specifies the payment program whose status is
            returned by the call.  <br><br>Currently the only supported payments program
            is <code>EBAY_PAYMENTS</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:PaymentsProgramType'>eBay
            API documentation</a>
          type: string
        status:
          description: The enumeration value returned in this field indicates whether
            or not the seller's account is enabled for the payments program. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:PaymentsProgramStatus'>eBay
            API documentation</a>
          type: string
        wasPreviouslyOptedIn:
          description: If returned as <code>true</code>, the seller was at one point
            opted-in to the associated payment program, but they later opted out of
            the program. A value of <code>false</code> indicates the seller never
            opted-in to the program or if they did opt-in to the program, they never
            opted-out of it.  <br><br>It's important to note that the setting of this
            field does not indicate the seller's current status regarding the payment
            program. It is possible for this field to return <code>true</code> while
            the <b>status</b> field returns <code>OPTED_IN</code>.
          type: boolean
      type: object
      x-apifox-orders:
      - marketplaceId
      - paymentsProgramType
      - status
      - wasPreviouslyOptedIn
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PaymentsProgramOnboardingSteps:
      description: The payments program onboarding steps, status, and link.
      example:
        webUrl: webUrl
        name: name
        status: status
      properties:
        name:
          description: 'The name of the step in the steps array. Over time, these
            names are subject to change as processes change. The output sample contains
            example step names. Review an actual call response for updated step names. '
          type: string
        status:
          description: This enumeration value indicates the status of the associated
            step. <p> <span class="tablenote"><strong>Note:</strong> Only one step
            can be <code>IN_PROGRESS</code> at a time.</span></p> For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:PaymentsProgramOnboardingStepStatus'>eBay
            API documentation</a>
          type: string
        webUrl:
          description: This URL provides access to the <code>IN_PROGRESS</code> step.
          type: string
      type: object
      x-apifox-orders:
      - name
      - status
      - webUrl
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PaymentsProgramOnboardingResponse:
      description: Type used by the payments program onboarding response
      example:
        onboardingStatus: onboardingStatus
        steps:
        - webUrl: webUrl
          name: name
          status: status
        - webUrl: webUrl
          name: name
          status: status
      properties:
        onboardingStatus:
          description: This enumeration value indicates the eligibility of payment
            onboarding for the registered site. For implementation help, refer to
            <a href='https://developer.ebay.com/api-docs/sell/account/types/api:PaymentsProgramOnboardingStatus'>eBay
            API documentation</a>
          type: string
        steps:
          description: 'An array of the active process steps for payment onboarding
            and the status of each step. This array includes the step <strong>name</strong>,
            step <strong>status</strong>, and a <strong>webUrl</strong> to the <code>IN_PROGRESS</code>
            step. The step names are returned in sequential order. '
          items:
            $ref: '#/components/schemas/PaymentsProgramOnboardingSteps'
          type: array
      type: object
      x-apifox-orders:
      - onboardingStatus
      - steps
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PaymentPolicyResponse:
      description: 'The response payload for the <b>getPaymentPolicies</b> method.
        <br /><br /><span class="tablenote"><b>Note</b>: Pagination has not yet been
        enabled for <b>getPaymentPolicies</b>, so all of the pagination-related fields
        are for future use.</span>'
      example:
        next: next
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
        paymentPolicies:
        - marketplaceId: marketplaceId
          categoryTypes:
          - default: true
            name: name
          - default: true
            name: name
          paymentMethods:
          - recipientAccountReference:
              referenceType: referenceType
              referenceId: referenceId
            brands:
            - brands
            - brands
            paymentMethodType: paymentMethodType
          - recipientAccountReference:
              referenceType: referenceType
              referenceId: referenceId
            brands:
            - brands
            - brands
            paymentMethodType: paymentMethodType
          name: name
          paymentInstructions: paymentInstructions
          deposit:
            amount:
              currency: currency
              value: value
            paymentMethods:
            - recipientAccountReference:
                referenceType: referenceType
                referenceId: referenceId
              brands:
              - brands
              - brands
              paymentMethodType: paymentMethodType
            - recipientAccountReference:
                referenceType: referenceType
                referenceId: referenceId
              brands:
              - brands
              - brands
              paymentMethodType: paymentMethodType
            dueIn:
              unit: unit
              value: 0
          description: description
          immediatePay: true
          paymentPolicyId: paymentPolicyId
          fullPaymentDueIn:
            unit: unit
            value: 0
        - marketplaceId: marketplaceId
          categoryTypes:
          - default: true
            name: name
          - default: true
            name: name
          paymentMethods:
          - recipientAccountReference:
              referenceType: referenceType
              referenceId: referenceId
            brands:
            - brands
            - brands
            paymentMethodType: paymentMethodType
          - recipientAccountReference:
              referenceType: referenceType
              referenceId: referenceId
            brands:
            - brands
            - brands
            paymentMethodType: paymentMethodType
          name: name
          paymentInstructions: paymentInstructions
          deposit:
            amount:
              currency: currency
              value: value
            paymentMethods:
            - recipientAccountReference:
                referenceType: referenceType
                referenceId: referenceId
              brands:
              - brands
              - brands
              paymentMethodType: paymentMethodType
            - recipientAccountReference:
                referenceType: referenceType
                referenceId: referenceId
              brands:
              - brands
              - brands
              paymentMethodType: paymentMethodType
            dueIn:
              unit: unit
              value: 0
          description: description
          immediatePay: true
          paymentPolicyId: paymentPolicyId
          fullPaymentDueIn:
            unit: unit
            value: 0
      properties:
        href:
          description: This field is for future use.
          type: string
        limit:
          description: This field is for future use.
          format: int32
          type: integer
        next:
          description: This field is for future use.
          type: string
        offset:
          description: This field is for future use.
          format: int32
          type: integer
        paymentPolicies:
          description: A list of all of the seller's payment business policies defined
            for the specified marketplace. This array will be returned as empty if
            no payment business policies are defined for the specified marketplace.
          items:
            $ref: '#/components/schemas/PaymentPolicy'
          type: array
        prev:
          description: This field is for future use.
          type: string
        total:
          description: The total number of payment business policies retrieved in
            the result set.  <br/><br/>If no payment business policies are defined
            for the specified marketplace, this field is returned with a value of
            <code>0</code>.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - href
      - limit
      - next
      - offset
      - paymentPolicies
      - prev
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PaymentPolicyRequest:
      description: This root container defines a seller's payment business policy
        for a specific marketplace and category group. This type is used when creating
        or updating a payment business policy.
      example:
        marketplaceId: marketplaceId
        categoryTypes:
        - default: true
          name: name
        - default: true
          name: name
        paymentMethods:
        - recipientAccountReference:
            referenceType: referenceType
            referenceId: referenceId
          brands:
          - brands
          - brands
          paymentMethodType: paymentMethodType
        - recipientAccountReference:
            referenceType: referenceType
            referenceId: referenceId
          brands:
          - brands
          - brands
          paymentMethodType: paymentMethodType
        name: name
        paymentInstructions: paymentInstructions
        deposit:
          amount:
            currency: currency
            value: value
          paymentMethods:
          - recipientAccountReference:
              referenceType: referenceType
              referenceId: referenceId
            brands:
            - brands
            - brands
            paymentMethodType: paymentMethodType
          - recipientAccountReference:
              referenceType: referenceType
              referenceId: referenceId
            brands:
            - brands
            - brands
            paymentMethodType: paymentMethodType
          dueIn:
            unit: unit
            value: 0
        description: description
        immediatePay: true
        fullPaymentDueIn:
          unit: unit
          value: 0
      properties:
        categoryTypes:
          description: This container is used to specify whether the payment business
            policy applies to motor vehicle listings, or if it applies to non-motor
            vehicle listings.
          items:
            $ref: '#/components/schemas/CategoryType'
          type: array
        deposit:
          $ref: '#/components/schemas/Deposit'
        description:
          description: 'A seller-defined description of the payment business policy.
            This description is only for the seller''s use, and is not exposed on
            any eBay pages.  <br/><br/><b>Max length</b>: 250'
          type: string
        fullPaymentDueIn:
          $ref: '#/components/schemas/TimeDuration'
        immediatePay:
          description: 'This field should be included and set to <code>true</code>
            if the seller wants to require immediate payment from the buyer for: <ul><li>A
            fixed-price item</li><li>An auction item where the buyer is using the
            ''Buy it Now'' option</li><li>A deposit for a motor vehicle listing</li></ul><br
            /><b>Default:</b> False'
          type: boolean
        marketplaceId:
          description: The ID of the eBay marketplace to which this payment business
            policy applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: A seller-defined name for this payment business policy. Names
            must be unique for policies assigned to the same marketplace.<br /><br
            /><b>Max length:</b> 64
          type: string
        paymentInstructions:
          description: <p class="tablenote"><b>Note:</b> DO NOT USE THIS FIELD. Payment
            instructions are no longer supported by payment business policies.</p>A
            free-form string field that allows sellers to add detailed payment instructions
            to their listings.
          type: string
        paymentMethods:
          description: <p class="tablenote"><b>Note:</b> This field applies only when
            the seller needs to specify one or more offline payment methods. eBay
            now manages the electronic payment options available to buyers to pay
            for the item.</p>This array is used to specify one or more offline payment
            methods that will be accepted for payment that occurs off of eBay's platform.
          items:
            $ref: '#/components/schemas/PaymentMethod'
          type: array
      type: object
      x-apifox-orders:
      - categoryTypes
      - deposit
      - description
      - fullPaymentDueIn
      - immediatePay
      - marketplaceId
      - name
      - paymentInstructions
      - paymentMethods
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PaymentPolicy:
      description: This type is used by the <b>paymentPolicy</b> response container,
        a container which defines a seller's payment business policy for a specific
        marketplace.
      example:
        marketplaceId: marketplaceId
        categoryTypes:
        - default: true
          name: name
        - default: true
          name: name
        paymentMethods:
        - recipientAccountReference:
            referenceType: referenceType
            referenceId: referenceId
          brands:
          - brands
          - brands
          paymentMethodType: paymentMethodType
        - recipientAccountReference:
            referenceType: referenceType
            referenceId: referenceId
          brands:
          - brands
          - brands
          paymentMethodType: paymentMethodType
        name: name
        paymentInstructions: paymentInstructions
        deposit:
          amount:
            currency: currency
            value: value
          paymentMethods:
          - recipientAccountReference:
              referenceType: referenceType
              referenceId: referenceId
            brands:
            - brands
            - brands
            paymentMethodType: paymentMethodType
          - recipientAccountReference:
              referenceType: referenceType
              referenceId: referenceId
            brands:
            - brands
            - brands
            paymentMethodType: paymentMethodType
          dueIn:
            unit: unit
            value: 0
        description: description
        immediatePay: true
        paymentPolicyId: paymentPolicyId
        fullPaymentDueIn:
          unit: unit
          value: 0
      properties:
        categoryTypes:
          description: This container indicates whether the fulfillment policy applies
            to motor vehicle listings, or if it applies to non-motor vehicle listings.
          items:
            $ref: '#/components/schemas/CategoryType'
          type: array
        deposit:
          $ref: '#/components/schemas/Deposit'
        description:
          description: 'A seller-defined description of the payment policy. This description
            is only for the seller''s use, and is not exposed on any eBay pages.  <br/><br/><b>Max
            length</b>: 250'
          type: string
        fullPaymentDueIn:
          $ref: '#/components/schemas/TimeDuration'
        immediatePay:
          description: 'If this field is returned as <code>true</code>, immediate
            payment is required from the buyer for: <ul><li>A fixed-price item</li><li>An
            auction item where the buyer uses the ''Buy it Now'' option</li><li>A
            deposit for a motor vehicle listing</li></ul><br />It is possible for
            the seller to set this field as <code>true</code> in the payment business
            policy, but it will not apply in some scenarios. For example, immediate
            payment is not applicable for auction listings that have a winning bidder,
            for buyer purchases that involve the Best Offer feature, or for transactions
            that happen offline between the buyer and seller.'
          type: boolean
        marketplaceId:
          description: The ID of the eBay marketplace to which the payment business
            policy applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: 'A seller-defined name for this fulfillment policy. Names must
            be unique for policies assigned to the same marketplace. <br/><br/><b>Max
            length</b>: 64'
          type: string
        paymentInstructions:
          description: 'Although this field may be returned for some older payment
            business policies, payment instructions are no longer supported by payment
            business policies. If this field is returned, it can be ignored and these
            payment instructions will not appear in any listings that use the corresponding
            business policy. <br/><br/><b>Max length</b>: 1000'
          type: string
        paymentMethods:
          description: 'This container is returned to show the payment methods that
            are accepted for the payment business policy.  <br><br>Sellers do not
            have to specify any electronic payment methods for listings, so this array
            will often be returned empty unless the payment business policy is intended
            for motor vehicle listings or other items in categories where offline
            payments are required or supported. '
          items:
            $ref: '#/components/schemas/PaymentMethod'
          type: array
        paymentPolicyId:
          description: A unique eBay-assigned ID for a payment business policy. This
            ID is generated when the policy is created.
          type: string
      type: object
      x-apifox-orders:
      - categoryTypes
      - deposit
      - description
      - fullPaymentDueIn
      - immediatePay
      - marketplaceId
      - name
      - paymentInstructions
      - paymentMethods
      - paymentPolicyId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CustomPolicy:
      description: This container defines a seller's custom policy identified by policy
        ID for the selected eBay marketplace. A successful call returns the requested
        policy information.
      example:
        policyType: policyType
        name: name
        description: description
        customPolicyId: customPolicyId
        label: label
      properties:
        customPolicyId:
          description: The unique custom policy identifier for a policy.<br/><br/><span
            class="tablenote"><strong>Note:</strong> This value is automatically assigned
            by the system when the policy is created.</span>
          type: string
        description:
          description: Details of the seller's specific policy and terms associated
            with the policy. Buyers access this information from the View Item page
            for items to which the policy has been applied.<br/><br/><b>Max length:</b>
            15,000
          type: string
        label:
          description: Customer-facing label shown on View Item pages for items to
            which the policy applies. This seller-defined string is displayed as a
            system-generated hyperlink pointing to detailed policy information.<br/><br/><b>Max
            length:</b> 65
          type: string
        name:
          description: The seller-defined name for the custom policy. Names must be
            unique for policies assigned to the same seller, policy type, and eBay
            marketplace.<br /><span class="tablenote"><strong>Note:</strong> This
            field is visible only to the seller. </span><br/><br/><b>Max length:</b>
            65
          type: string
        policyType:
          description: 'Specifies the type of Custom Policy. <br/><br/>Two Custom
            Policy types are supported: <ul><li>Product Compliance (PRODUCT_COMPLIANCE)</li>
            <li>Takeback (TAKE_BACK)</li></ul> For implementation help, refer to <a
            href=''https://developer.ebay.com/api-docs/sell/account/types/api:CustomPolicyTypeEnum''>eBay
            API documentation</a>'
          type: string
      type: object
      x-apifox-orders:
      - customPolicyId
      - description
      - label
      - name
      - policyType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PaymentMethod:
      description: 'This type is used by the <b>paymentMethods</b> container, which
        is used by the seller to specify one or more offline payment methods. <br
        /><br /> <span class="tablenote"><b>Note</b>: eBay now controls all electronic
        payment methods available for a marketplace, so a seller will no longer use
        this type to specify any electronic payment methods.</span>'
      example:
        recipientAccountReference:
          referenceType: referenceType
          referenceId: referenceId
        brands:
        - brands
        - brands
        paymentMethodType: paymentMethodType
      properties:
        brands:
          description: '<span class="tablenote"><b>Note</b>: This array is no longer
            applicable and should not be used. eBay now controls all electronic payment
            methods available for a marketplace, and a seller never has to specify
            any electronic payment methods, including any credit card brands accepted.
            </span>'
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/account/types/api:PaymentInstrumentBrandEnum''>eBay
              API documentation</a>'
            type: string
          type: array
        paymentMethodType:
          description: eBay now controls all electronic payment methods available
            for a marketplace, so only offline payment method enum values may be used
            in this field, and offline payment methods will only be applicable to
            listings that require or support offline payments. See the <b>PaymentMethodTypeEnum</b>
            type for supported offline payment method enum values. </p> For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:PaymentMethodTypeEnum'>eBay
            API documentation</a>
          type: string
        recipientAccountReference:
          $ref: '#/components/schemas/RecipientAccountReference'
      type: object
      x-apifox-orders:
      - brands
      - paymentMethodType
      - recipientAccountReference
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Deposit:
      description: This type is used to specify/indicate that an initial deposit is
        required for a motor vehicle listing.
      example:
        amount:
          currency: currency
          value: value
        paymentMethods:
        - recipientAccountReference:
            referenceType: referenceType
            referenceId: referenceId
          brands:
          - brands
          - brands
          paymentMethodType: paymentMethodType
        - recipientAccountReference:
            referenceType: referenceType
            referenceId: referenceId
          brands:
          - brands
          - brands
          paymentMethodType: paymentMethodType
        dueIn:
          unit: unit
          value: 0
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        dueIn:
          $ref: '#/components/schemas/TimeDuration'
        paymentMethods:
          description: This array is no longer applicable and should not be used since
            eBay now manages the electronic payment options available to buyers to
            pay the deposit.
          items:
            $ref: '#/components/schemas/PaymentMethod'
          type: array
      type: object
      x-apifox-orders:
      - amount
      - dueIn
      - paymentMethods
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CustomPolicyCreateRequest:
      description: This type is used by the request payload of the createCustomPolicy
        method to define a new custom policy for a specific marketplace.
      example:
        policyType: policyType
        name: name
        description: description
        label: label
      properties:
        description:
          description: Details of the seller's specific policy and terms for this
            policy.<br/><br/><b>Max length:</b> 15,000
          type: string
        label:
          description: Customer-facing label shown on View Item pages for items to
            which the policy applies. This seller-defined string is displayed as a
            system-generated hyperlink pointing to detailed policy information.<br/><br/><b>Max
            length:</b> 65
          type: string
        name:
          description: The seller-defined name for the custom policy. Names must be
            unique for policies assigned to the same seller, policy type, and eBay
            marketplace.<br /><span class="tablenote"><strong>Note:</strong> This
            field is visible only to the seller. </span><br/><br/><b>Max length:</b>
            65
          type: string
        policyType:
          description: 'Specifies the type of custom policy being created. <br/><br/>Two
            Custom Policy types are supported: <ul><li>Product Compliance (PRODUCT_COMPLIANCE)</li>
            <li>Takeback (TAKE_BACK)</li></ul> For implementation help, refer to <a
            href=''https://developer.ebay.com/api-docs/sell/account/types/api:CustomPolicyTypeEnum''>eBay
            API documentation</a>'
          type: string
      type: object
      x-apifox-orders:
      - description
      - label
      - name
      - policyType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CustomPolicyRequest:
      example:
        name: name
        description: description
        label: label
      properties:
        description:
          description: Details of the seller's specific policy and terms for this
            policy.<br/><br/><b>Max length:</b> 15,000
          type: string
        label:
          description: Customer-facing label shown on View Item pages for items to
            which the policy applies. This seller-defined string is displayed as a
            system-generated hyperlink pointing to detailed policy information.<br/><br/><b>Max
            length:</b> 65
          type: string
        name:
          description: The seller-defined name for the custom policy. Names must be
            unique for policies assigned to the same seller, policy type, and eBay
            marketplace.<br /><span class="tablenote"><strong>Note:</strong> This
            field is visible only to the seller. </span><br/><br/><b>Max length:</b>
            65
          type: string
      type: object
      x-apifox-orders:
      - description
      - label
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    KycResponse:
      description: This is the base response type of the <b>getKYC</b> method.
      example:
        kycChecks:
        - dataRequired: dataRequired
          remedyUrl: remedyUrl
          alert: alert
          dueDate: dueDate
          detailMessage: detailMessage
        - dataRequired: dataRequired
          remedyUrl: remedyUrl
          alert: alert
          dueDate: dueDate
          detailMessage: detailMessage
      properties:
        kycChecks:
          description: This array contains one or more KYC checks required from a
            managed payments seller. The seller may need to provide more documentation
            and/or information about themselves, their company, or the bank account
            they are using for seller payouts.<br/><br/>If no KYC checks are currently
            required from the seller, this array is not returned, and the seller only
            receives a <code>204 No Content</code> HTTP status code.
          items:
            $ref: '#/components/schemas/KycCheck'
          type: array
      type: object
      x-apifox-orders:
      - kycChecks
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    InternationalReturnOverrideType:
      description: 'This type defines the fields for a seller''s international return
        policy. Sellers have the ability to set separate domestic and international
        return policies, but if an international return policy is not set, the same
        return policy settings specified for the domestic return policy are also used
        for returns for international buyers. '
      example:
        returnShippingCostPayer: returnShippingCostPayer
        returnMethod: returnMethod
        returnsAccepted: true
        returnPeriod:
          unit: unit
          value: 0
      properties:
        returnMethod:
          description: This field sets/indicates if the seller offers replacement
            or exchange items to the buyer in the case of an international return.
            The buyer must be willing to accept a replacement or exchange item; otherwise,
            the seller will need to issue a refund for a return. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ReturnMethodEnum'>eBay
            API documentation</a>
          type: string
        returnPeriod:
          $ref: '#/components/schemas/TimeDuration'
        returnsAccepted:
          description: If set to <code>true</code>, the seller accepts international
            returns. If set to <code>false</code>, the seller does not accept international
            returns.  <br/><br/>This field is conditionally required if the seller
            chooses to have a separate international return policy.
          type: boolean
        returnShippingCostPayer:
          description: This field indicates who is responsible for paying for the
            shipping charges for returned items. The field can be set to either <code>BUYER</code>
            or <code>SELLER</code>.  <br/><br/>Depending on the return policy and
            specifics of the return, either the buyer or the seller can be responsible
            for the return shipping costs. Note that the seller is always responsible
            for return shipping costs for 'significantly not as described' (SNAD)
            issues.  <br/><br/>This field is conditionally required if the <b>internationalOverride.returnsAccepted</b>
            field is set to <code>true</code>. For implementation help, refer to <a
            href='https://developer.ebay.com/api-docs/sell/account/types/api:ReturnShippingCostPayerEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - returnMethod
      - returnPeriod
      - returnsAccepted
      - returnShippingCostPayer
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FulfillmentPolicy:
      description: This type is used by the <b>fulfillmentPolicy</b> response container,
        a container which defines a seller's fulfillment policy for a specific marketplace.
      example:
        handlingTime:
          unit: unit
          value: 0
        localPickup: true
        marketplaceId: marketplaceId
        categoryTypes:
        - default: true
          name: name
        - default: true
          name: name
        name: name
        description: description
        pickupDropOff: true
        fulfillmentPolicyId: fulfillmentPolicyId
        globalShipping: true
        freightShipping: true
        shippingOptions:
        - optionType: optionType
          insuranceFee:
            currency: currency
            value: value
          rateTableId: rateTableId
          costType: costType
          insuranceOffered: true
          packageHandlingCost:
            currency: currency
            value: value
          shippingServices:
          - surcharge:
              currency: currency
              value: value
            buyerResponsibleForPickup: true
            buyerResponsibleForShipping: true
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            freeShipping: true
            shippingCarrierCode: shippingCarrierCode
            sortOrder: 6
            shippingServiceCode: shippingServiceCode
            shipToLocations:
              regionIncluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
              regionExcluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
            cashOnDeliveryFee:
              currency: currency
              value: value
          - surcharge:
              currency: currency
              value: value
            buyerResponsibleForPickup: true
            buyerResponsibleForShipping: true
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            freeShipping: true
            shippingCarrierCode: shippingCarrierCode
            sortOrder: 6
            shippingServiceCode: shippingServiceCode
            shipToLocations:
              regionIncluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
              regionExcluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
            cashOnDeliveryFee:
              currency: currency
              value: value
        - optionType: optionType
          insuranceFee:
            currency: currency
            value: value
          rateTableId: rateTableId
          costType: costType
          insuranceOffered: true
          packageHandlingCost:
            currency: currency
            value: value
          shippingServices:
          - surcharge:
              currency: currency
              value: value
            buyerResponsibleForPickup: true
            buyerResponsibleForShipping: true
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            freeShipping: true
            shippingCarrierCode: shippingCarrierCode
            sortOrder: 6
            shippingServiceCode: shippingServiceCode
            shipToLocations:
              regionIncluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
              regionExcluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
            cashOnDeliveryFee:
              currency: currency
              value: value
          - surcharge:
              currency: currency
              value: value
            buyerResponsibleForPickup: true
            buyerResponsibleForShipping: true
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            freeShipping: true
            shippingCarrierCode: shippingCarrierCode
            sortOrder: 6
            shippingServiceCode: shippingServiceCode
            shipToLocations:
              regionIncluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
              regionExcluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
            cashOnDeliveryFee:
              currency: currency
              value: value
        shipToLocations:
          regionIncluded:
          - regionType: regionType
            regionName: regionName
          - regionType: regionType
            regionName: regionName
          regionExcluded:
          - regionType: regionType
            regionName: regionName
          - regionType: regionType
            regionName: regionName
      properties:
        categoryTypes:
          description: This container indicates whether the fulfillment policy applies
            to motor vehicle listings, or if it applies to non-motor vehicle listings.
          items:
            $ref: '#/components/schemas/CategoryType'
          type: array
        description:
          description: 'A seller-defined description of the fulfillment policy. This
            description is only for the seller''s use, and is not exposed on any eBay
            pages. This field is returned if set for the policy. <br/><br/><b>Max
            length</b>: 250'
          type: string
        freightShipping:
          description: If returned as <code>true</code>, the seller offers freight
            shipping. Freight shipping can be used for large items over 150 lbs.
          type: boolean
        fulfillmentPolicyId:
          description: A unique eBay-assigned ID for the fulfillment policy. This
            ID is generated when the policy is created.
          type: string
        globalShipping:
          description: 'If returned as <code>true</code>, eBay''s Global Shipping
            Program will be used by the seller to ship items to international locations.<br
            /><br /><span class="tablenote"><b>Note</b>: On the US marketplace, the
            <em><b>Global Shipping Program</b></em> is scheduled to be replaced by
            a new intermediated international shipping program called <em><b>eBay
            International Shipping</b></em>. US sellers who are opted in to the Global
            Shipping Program will be automatically opted in to eBay International
            Shipping when it becomes available to them. All US sellers will be migrated
            by March 31, 2023. <br /><br />eBay International Shipping is an account
            level setting, and no field needs to be set in a Fulfillment business
            policy to enable it. As long as the US seller''s account is opted in to
            eBay International Shipping, this shipping option will be enabled automatically
            for all listings where international shipping is available. A US seller
            who is opted in to eBay International Shipping can also specify individual
            international shipping service options for a Fulfillment business policy.</span>'
          type: boolean
        handlingTime:
          $ref: '#/components/schemas/TimeDuration'
        localPickup:
          description: If returned as <code>true</code>, local pickup is available
            for this policy.
          type: boolean
        marketplaceId:
          description: The ID of the eBay marketplace to which this fulfillment policy
            applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: 'A seller-defined name for this fulfillment policy. Names must
            be unique for policies assigned to the same marketplace. <br/><br/><b>Max
            length</b>: 64'
          type: string
        pickupDropOff:
          description: If returned as <code>true</code>, the seller offers the "Click
            and Collect" option. <br/><br/>Currently, "Click and Collect" is available
            only to large retail merchants the eBay AU and UK marketplaces.
          type: boolean
        shippingOptions:
          description: This array is used to provide detailed information on the domestic
            and international shipping options available for the policy. A separate
            <b>ShippingOption</b> object covers domestic shipping service options
            and international shipping service options (if the seller ships to international
            locations). The <b>optionType</b> field indicates whether the <b>ShippingOption</b>
            object applies to domestic or international shipping, and the <b>costType</b>
            field indicates whether flat-rate shipping or calculated shipping will
            be used. <p>A separate <b>ShippingServices</b> object is used to specify
            cost and other details for every available domestic and international
            shipping service option. </p>
          items:
            $ref: '#/components/schemas/ShippingOption'
          type: array
        shipToLocations:
          $ref: '#/components/schemas/RegionSet'
      type: object
      x-apifox-orders:
      - categoryTypes
      - description
      - freightShipping
      - fulfillmentPolicyId
      - globalShipping
      - handlingTime
      - localPickup
      - marketplaceId
      - name
      - pickupDropOff
      - shippingOptions
      - shipToLocations
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CustomPolicyResponse:
      example:
        next: next
        customPolicies:
        - policyType: policyType
          name: name
          customPolicyId: customPolicyId
          label: label
        - policyType: policyType
          name: name
          customPolicyId: customPolicyId
          label: label
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
      properties:
        customPolicies:
          description: This array contains the custom policies that match the input
            criteria.
          items:
            $ref: '#/components/schemas/CompactCustomPolicyResponse'
          type: array
        href:
          description: <i>This field is for future use.</i>
          type: string
        limit:
          description: <i>This field is for future use.</i>
          format: int32
          type: integer
        next:
          description: <i>This field is for future use.</i>
          type: string
        offset:
          description: <i>This field is for future use.</i>
          format: int32
          type: integer
        prev:
          description: <i>This field is for future use.</i>
          type: string
        total:
          description: <i>This field is for future use.</i>
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - customPolicies
      - href
      - limit
      - next
      - offset
      - prev
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    KycCheck:
      description: This type is used to provide details about any KYC check that is
        applicable to the managed payments seller.
      example:
        dataRequired: dataRequired
        remedyUrl: remedyUrl
        alert: alert
        dueDate: dueDate
        detailMessage: detailMessage
      properties:
        dataRequired:
          description: The enumeration value returned in this field categorizes the
            type of details needed for the KYC check. More information about the check
            is shown in the <b>detailMessage</b> and other applicable, corresponding
            fields. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/kyc:DetailsType'>eBay
            API documentation</a>
          type: string
        dueDate:
          description: 'The timestamp in this field indicates the date by which the
            seller should resolve the KYC requirement.<br><br>The timestamp in this
            field uses the UTC date and time format described in the <a href="https://www.iso.org/iso-8601-date-and-time-format.html"
            target="_blank">ISO 8601 Standard</a>. See below for this format and an
            example: <br><br><i>MM-DD-YYYY HH:MM:SS</i><br/><code>06-05-2020 10:34:18</code>'
          type: string
        remedyUrl:
          description: If applicable and available, a URL will be returned in this
            field, and the link will take the seller to an eBay page where they can
            provide the requested information.
          type: string
        alert:
          description: This field gives a short summary of what is required from the
            seller. An example might be, '<code>Upload bank document now.</code>'.
            The <b>detailMessage</b> field will often provide more details on what
            is required of the seller.
          type: string
        detailMessage:
          description: This field gives a detailed message about what is required
            from the seller. An example might be, '<code>Please upload a bank document
            by 2020-08-01 to get your account back in good standing.</code>'.
          type: string
      type: object
      x-apifox-orders:
      - dataRequired
      - dueDate
      - remedyUrl
      - alert
      - detailMessage
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FulfillmentPolicyRequest:
      description: This root container defines a seller's fulfillment policy for a
        specific marketplace and category group. This type is used when creating or
        updating a fulfillment business policy.
      example:
        handlingTime:
          unit: unit
          value: 0
        localPickup: true
        marketplaceId: marketplaceId
        categoryTypes:
        - default: true
          name: name
        - default: true
          name: name
        name: name
        description: description
        pickupDropOff: true
        globalShipping: true
        freightShipping: true
        shippingOptions:
        - optionType: optionType
          insuranceFee:
            currency: currency
            value: value
          rateTableId: rateTableId
          costType: costType
          insuranceOffered: true
          packageHandlingCost:
            currency: currency
            value: value
          shippingServices:
          - surcharge:
              currency: currency
              value: value
            buyerResponsibleForPickup: true
            buyerResponsibleForShipping: true
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            freeShipping: true
            shippingCarrierCode: shippingCarrierCode
            sortOrder: 6
            shippingServiceCode: shippingServiceCode
            shipToLocations:
              regionIncluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
              regionExcluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
            cashOnDeliveryFee:
              currency: currency
              value: value
          - surcharge:
              currency: currency
              value: value
            buyerResponsibleForPickup: true
            buyerResponsibleForShipping: true
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            freeShipping: true
            shippingCarrierCode: shippingCarrierCode
            sortOrder: 6
            shippingServiceCode: shippingServiceCode
            shipToLocations:
              regionIncluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
              regionExcluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
            cashOnDeliveryFee:
              currency: currency
              value: value
        - optionType: optionType
          insuranceFee:
            currency: currency
            value: value
          rateTableId: rateTableId
          costType: costType
          insuranceOffered: true
          packageHandlingCost:
            currency: currency
            value: value
          shippingServices:
          - surcharge:
              currency: currency
              value: value
            buyerResponsibleForPickup: true
            buyerResponsibleForShipping: true
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            freeShipping: true
            shippingCarrierCode: shippingCarrierCode
            sortOrder: 6
            shippingServiceCode: shippingServiceCode
            shipToLocations:
              regionIncluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
              regionExcluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
            cashOnDeliveryFee:
              currency: currency
              value: value
          - surcharge:
              currency: currency
              value: value
            buyerResponsibleForPickup: true
            buyerResponsibleForShipping: true
            shippingCost:
              currency: currency
              value: value
            additionalShippingCost:
              currency: currency
              value: value
            freeShipping: true
            shippingCarrierCode: shippingCarrierCode
            sortOrder: 6
            shippingServiceCode: shippingServiceCode
            shipToLocations:
              regionIncluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
              regionExcluded:
              - regionType: regionType
                regionName: regionName
              - regionType: regionType
                regionName: regionName
            cashOnDeliveryFee:
              currency: currency
              value: value
        shipToLocations:
          regionIncluded:
          - regionType: regionType
            regionName: regionName
          - regionType: regionType
            regionName: regionName
          regionExcluded:
          - regionType: regionType
            regionName: regionName
          - regionType: regionType
            regionName: regionName
      properties:
        categoryTypes:
          description: This container is used to specify whether the fulfillment business
            policy applies to motor vehicle listings, or if it applies to non-motor
            vehicle listings.
          items:
            $ref: '#/components/schemas/CategoryType'
          type: array
        description:
          description: 'A seller-defined description of the fulfillment policy. This
            description is only for the seller''s use, and is not exposed on any eBay
            pages.  <br/><br/><b>Max length</b>: 250'
          type: string
        freightShipping:
          description: 'This field is included and set to <code>true</code> if freight
            shipping is available for the item. Freight shipping can be used for large
            items over 150 lbs.<br/><br/><b>Default</b>: false'
          type: boolean
        globalShipping:
          description: 'This field is included and set to <code>true</code> if the
            seller wants to use the Global Shipping Program for international shipments.
            See the <a href="https://pages.ebay.com/help/sell/shipping-globally.html">Global
            Shipping Program</a> help topic for more details and requirements on the
            Global Shipping Program.<br/><br/>It is possible for a seller to use a
            combination of the Global Shipping Program and other international shipping
            services. <br/><br/>If this value is set to <code>false</code> or if the
            field is omitted, the seller is responsible for manually specifying individual
            international shipping services (if the seller ships internationally).,
            as described in <a href="https://developer.ebay.com/api-docs/sell/static/seller-accounts/ht_shipping-worldwide.html">Setting
            up worldwide shipping</a>. <br/><br/>Sellers can opt in or out of the
            Global Shipping Program through the Shipping preferences in My eBay.<br
            /><br /><span class="tablenote"><b>Note</b>: On the US marketplace, the
            <em><b>Global Shipping Program</b></em> is scheduled to be replaced by
            a new intermediated international shipping program called <em><b>eBay
            International Shipping</b></em>. US sellers who are opted in to the Global
            Shipping Program will be automatically opted in to eBay International
            Shipping when it becomes available to them. All US sellers will be migrated
            by March 31, 2023. <br /><br />eBay International Shipping is an account
            level setting, and no field needs to be set in a Fulfillment business
            policy to enable it. As long as the US seller''s account is opted in to
            eBay International Shipping, this shipping option will be enabled automatically
            for all listings where international shipping is available. A US seller
            who is opted in to eBay International Shipping can also specify individual
            international shipping service options for a Fulfillment business policy.</span><p><b>Default</b>:
            false</p>'
          type: boolean
        handlingTime:
          $ref: '#/components/schemas/TimeDuration'
        localPickup:
          description: 'This field should be included and set to <code>true</code>
            if local pickup is one of the fulfillment options available to the buyer.
            It is possible for the seller to make local pickup and some shipping service
            options available to the buyer.<br/><br/>With local pickup, the buyer
            and seller make arrangements for pickup time and location.<br/><br/><b>Default</b>:
            <code>false</code>'
          type: boolean
        marketplaceId:
          description: The ID of the eBay marketplace to which this fulfillment policy
            applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay
            API documentation</a>
          type: string
        name:
          description: 'A seller-defined name for this fulfillment policy. Names must
            be unique for policies assigned to the same marketplace. <br/><br/><b>Max
            length</b>: 64'
          type: string
        pickupDropOff:
          description: 'This field should be included and set to <code>true</code>
            if the seller offers the "Click and Collect" feature for an item. <p>To
            enable "Click and Collect" on a listing, a seller must be eligible for
            Click and Collect. Currently, Click and Collect is available to only large
            retail merchants selling in the eBay AU and UK marketplaces.</p>  <p>In
            addition to setting this field to <code>true</code>, the merchant must
            also do the following to enable the "Click and Collect" option on a listing:
            <ul><li>Have inventory for the product at one or more physical stores
            tied to the merchant''s account. <p>Sellers can use the <b>createInventoryLocaion</b>
            method in the Inventory API to associate physical stores to their account
            and they can then can add inventory to specific store locations.</p></li><li>Set
            an immediate payment requirement on the item. The immediate payment feature
            requires the seller to: <ul><li>Set the <b>immediatePay</b> flag in the
            payment policy to ''true''.</li><li>Have a valid store location with a
            complete street address.</li></ul></li></ul><p>When a merchant successfully
            lists an item with Click and Collect, prospective buyers within a reasonable
            distance from one of the merchant''s stores (that has stock available)
            will see the "Available for Click and Collect" option on the listing,
            along with information on the closest store that has the item.</p><b>Default</b>:
            false'
          type: boolean
        shippingOptions:
          description: This array is used to provide detailed information on the domestic
            and international shipping options available for the policy. A separate
            <b>ShippingOption</b> object is required for domestic shipping service
            options and for international shipping service options (if the seller
            ships to international locations). The <b>optionType</b> field is used
            to indicate whether the <b>ShippingOption</b> object applies to domestic
            or international shipping, and the <b>costType</b> field is used to indicate
            whether flat-rate shipping or calculated shipping will be used. The <b>rateTableId</b>
            field can be used to associate a defined shipping rate table to the policy,
            and the <b>packageHandlingCost</b> container can be used to set a handling
            charge for the policy. <p>A separate <b>ShippingServices</b> object will
            be used to specify cost and other details for every available domestic
            and international shipping service option. </p>
          items:
            $ref: '#/components/schemas/ShippingOption'
          type: array
        shipToLocations:
          $ref: '#/components/schemas/RegionSet'
      type: object
      x-apifox-orders:
      - categoryTypes
      - description
      - freightShipping
      - globalShipping
      - handlingTime
      - localPickup
      - marketplaceId
      - name
      - pickupDropOff
      - shippingOptions
      - shipToLocations
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CompactCustomPolicyResponse:
      description: The response payload for requests that return a list of custom
        policies.
      example:
        policyType: policyType
        name: name
        customPolicyId: customPolicyId
        label: label
      properties:
        customPolicyId:
          description: The unique custom policy identifier for the policy being returned.<br/><br/><span
            class="tablenote"><strong>Note:</strong> This value is automatically assigned
            by the system when the policy is created.</span>
          type: string
        label:
          description: Customer-facing label shown on View Item pages for items to
            which the policy applies. This seller-defined string is displayed as a
            system-generated hyperlink pointing to detailed policy information.<br/><br/><b>Max
            length:</b> 65
          type: string
        name:
          description: The seller-defined name for the custom policy. Names must be
            unique for policies assigned to the same seller, policy type, and eBay
            marketplace.<br /><span class="tablenote"><strong>Note:</strong> This
            field is visible only to the seller. </span><br /><br /><b>Max length:</b>
            65
          type: string
        policyType:
          description: 'Specifies the type of Custom Policy being returned. <br/><br/>Two
            Custom Policy types are supported: <ul><li>Product Compliance (PRODUCT_COMPLIANCE)</li>
            <li>Takeback (TAKE_BACK)</li></ul> For implementation help, refer to <a
            href=''https://developer.ebay.com/api-docs/sell/account/types/api:CustomPolicyTypeEnum''>eBay
            API documentation</a>'
          type: string
      type: object
      x-apifox-orders:
      - customPolicyId
      - label
      - name
      - policyType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CategoryType:
      description: The category type discerns whether the policy applies to motor
        vehicle listings, or to any other items except motor vehicle listings. <br/><br/>Each
        business policy can be associated with either or both categories ('MOTORS_VEHICLES'
        and 'ALL_EXCLUDING_MOTORS_VEHICLES'); however, return business policies are
        not applicable for motor vehicle listings.
      example:
        default: true
        name: name
      properties:
        default:
          description: <span class="tablenote"><strong>Note:</strong> This field has
            been deprecated and is no longer used.<ul><li>Do not include this field
            in any <b>create</b> or <b>update</b> method.</li><li>This field may be
            returned within the payload of a <b>get</b> method, but it can be ignored.</li></ul></span>
          type: boolean
        name:
          description: The category type to which the policy applies (motor vehicles
            or non-motor vehicles). <br /><br />The <code>MOTORS_VEHICLES</code> category
            type is not valid for return policies. eBay flows do not support the return
            of motor vehicles. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:CategoryTypeEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - default
      - name
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    FulfillmentPolicyResponse:
      description: 'The response payload for the <b>getFulfillmentPolicies</b> method.<br
        /><br /><span class="tablenote"><b>Note</b>: Pagination has not yet been enabled
        for <b>getFulfillmentPolicies</b>, so all of the pagination-related fields
        are for future use.</span>'
      example:
        next: next
        fulfillmentPolicies:
        - handlingTime:
            unit: unit
            value: 0
          localPickup: true
          marketplaceId: marketplaceId
          categoryTypes:
          - default: true
            name: name
          - default: true
            name: name
          name: name
          description: description
          pickupDropOff: true
          fulfillmentPolicyId: fulfillmentPolicyId
          globalShipping: true
          freightShipping: true
          shippingOptions:
          - optionType: optionType
            insuranceFee:
              currency: currency
              value: value
            rateTableId: rateTableId
            costType: costType
            insuranceOffered: true
            packageHandlingCost:
              currency: currency
              value: value
            shippingServices:
            - surcharge:
                currency: currency
                value: value
              buyerResponsibleForPickup: true
              buyerResponsibleForShipping: true
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              freeShipping: true
              shippingCarrierCode: shippingCarrierCode
              sortOrder: 6
              shippingServiceCode: shippingServiceCode
              shipToLocations:
                regionIncluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
                regionExcluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
              cashOnDeliveryFee:
                currency: currency
                value: value
            - surcharge:
                currency: currency
                value: value
              buyerResponsibleForPickup: true
              buyerResponsibleForShipping: true
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              freeShipping: true
              shippingCarrierCode: shippingCarrierCode
              sortOrder: 6
              shippingServiceCode: shippingServiceCode
              shipToLocations:
                regionIncluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
                regionExcluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
              cashOnDeliveryFee:
                currency: currency
                value: value
          - optionType: optionType
            insuranceFee:
              currency: currency
              value: value
            rateTableId: rateTableId
            costType: costType
            insuranceOffered: true
            packageHandlingCost:
              currency: currency
              value: value
            shippingServices:
            - surcharge:
                currency: currency
                value: value
              buyerResponsibleForPickup: true
              buyerResponsibleForShipping: true
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              freeShipping: true
              shippingCarrierCode: shippingCarrierCode
              sortOrder: 6
              shippingServiceCode: shippingServiceCode
              shipToLocations:
                regionIncluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
                regionExcluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
              cashOnDeliveryFee:
                currency: currency
                value: value
            - surcharge:
                currency: currency
                value: value
              buyerResponsibleForPickup: true
              buyerResponsibleForShipping: true
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              freeShipping: true
              shippingCarrierCode: shippingCarrierCode
              sortOrder: 6
              shippingServiceCode: shippingServiceCode
              shipToLocations:
                regionIncluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
                regionExcluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
              cashOnDeliveryFee:
                currency: currency
                value: value
          shipToLocations:
            regionIncluded:
            - regionType: regionType
              regionName: regionName
            - regionType: regionType
              regionName: regionName
            regionExcluded:
            - regionType: regionType
              regionName: regionName
            - regionType: regionType
              regionName: regionName
        - handlingTime:
            unit: unit
            value: 0
          localPickup: true
          marketplaceId: marketplaceId
          categoryTypes:
          - default: true
            name: name
          - default: true
            name: name
          name: name
          description: description
          pickupDropOff: true
          fulfillmentPolicyId: fulfillmentPolicyId
          globalShipping: true
          freightShipping: true
          shippingOptions:
          - optionType: optionType
            insuranceFee:
              currency: currency
              value: value
            rateTableId: rateTableId
            costType: costType
            insuranceOffered: true
            packageHandlingCost:
              currency: currency
              value: value
            shippingServices:
            - surcharge:
                currency: currency
                value: value
              buyerResponsibleForPickup: true
              buyerResponsibleForShipping: true
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              freeShipping: true
              shippingCarrierCode: shippingCarrierCode
              sortOrder: 6
              shippingServiceCode: shippingServiceCode
              shipToLocations:
                regionIncluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
                regionExcluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
              cashOnDeliveryFee:
                currency: currency
                value: value
            - surcharge:
                currency: currency
                value: value
              buyerResponsibleForPickup: true
              buyerResponsibleForShipping: true
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              freeShipping: true
              shippingCarrierCode: shippingCarrierCode
              sortOrder: 6
              shippingServiceCode: shippingServiceCode
              shipToLocations:
                regionIncluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
                regionExcluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
              cashOnDeliveryFee:
                currency: currency
                value: value
          - optionType: optionType
            insuranceFee:
              currency: currency
              value: value
            rateTableId: rateTableId
            costType: costType
            insuranceOffered: true
            packageHandlingCost:
              currency: currency
              value: value
            shippingServices:
            - surcharge:
                currency: currency
                value: value
              buyerResponsibleForPickup: true
              buyerResponsibleForShipping: true
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              freeShipping: true
              shippingCarrierCode: shippingCarrierCode
              sortOrder: 6
              shippingServiceCode: shippingServiceCode
              shipToLocations:
                regionIncluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
                regionExcluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
              cashOnDeliveryFee:
                currency: currency
                value: value
            - surcharge:
                currency: currency
                value: value
              buyerResponsibleForPickup: true
              buyerResponsibleForShipping: true
              shippingCost:
                currency: currency
                value: value
              additionalShippingCost:
                currency: currency
                value: value
              freeShipping: true
              shippingCarrierCode: shippingCarrierCode
              sortOrder: 6
              shippingServiceCode: shippingServiceCode
              shipToLocations:
                regionIncluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
                regionExcluded:
                - regionType: regionType
                  regionName: regionName
                - regionType: regionType
                  regionName: regionName
              cashOnDeliveryFee:
                currency: currency
                value: value
          shipToLocations:
            regionIncluded:
            - regionType: regionType
              regionName: regionName
            - regionType: regionType
              regionName: regionName
            regionExcluded:
            - regionType: regionType
              regionName: regionName
            - regionType: regionType
              regionName: regionName
        total: 1
        offset: 6
        prev: prev
        limit: 0
        href: href
      properties:
        fulfillmentPolicies:
          description: A list of all of the seller's fulfillment policies defined
            for the specified marketplace. This array will be returned as empty if
            no fulfillment policies are defined for the specified marketplace.
          items:
            $ref: '#/components/schemas/FulfillmentPolicy'
          type: array
        href:
          description: This field is for future use.
          type: string
        limit:
          description: This field is for future use.
          format: int32
          type: integer
        next:
          description: This field is for future use.
          type: string
        offset:
          description: This field is for future use.
          format: int32
          type: integer
        prev:
          description: This field is for future use.
          type: string
        total:
          description: The total number of fulfillment policies retrieved in the result
            set.  <br/><br/>If no fulfillment policies are defined for the specified
            marketplace, this field is returned with a value of <code>0</code>.
          format: int32
          type: integer
      type: object
      x-apifox-orders:
      - fulfillmentPolicies
      - href
      - limit
      - next
      - offset
      - prev
      - total
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Weight:
      description: This complex type contains information about the weight of an object
        such as a shipping package.
      example:
        unit: unit
        value: value
      properties:
        unit:
          description: The unit of measurement used to specify the weight of a shipping
            package. Both the <strong>unit</strong> and <strong>value</strong> fields
            are required if the <strong>weight</strong> container is used. If the
            English system of measurement is being used, the applicable values for
            weight units are <code>POUND</code> and <code>OUNCE</CODE>. If the metric
            system of measurement is being used, the applicable values for weight
            units are <code>KILOGRAM</code> and <code>GRAM</code>. The metric system
            is used by most countries outside of the US. For implementation help,
            refer to <a href='https://developer.ebay.com/api-docs/sell/logistics/types/api:WeightUnitOfMeasureEnum'>eBay
            API documentation</a>
          type: string
        value:
          description: The numeric value of the weight of the package, as measured
            by the value of <b>unit</b>.
          type: string
      type: object
      x-apifox-orders:
      - unit
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ShippingQuoteRequest:
      description: This complex type defines the request body for <b>createShippingQuote</b>.
        Sellers <i>request a quote</i> for a shipment by defining the "To" and "From"
        addresses for the package, plus the package's size.  <br><br>Carriers respond
        by offering up a "rate" for the service of theirs that best fits seller's
        needs.
      example:
        packageSpecification:
          weight:
            unit: unit
            value: value
          dimensions:
            unit: unit
            length: length
            width: width
            height: height
        shipFrom:
          primaryPhone:
            phoneNumber: phoneNumber
          companyName: companyName
          fullName: fullName
          contactAddress:
            stateOrProvince: stateOrProvince
            city: city
            countryCode: countryCode
            postalCode: postalCode
            county: county
            addressLine1: addressLine1
            addressLine2: addressLine2
        orders:
        - orderId: orderId
          channel: channel
        - orderId: orderId
          channel: channel
        shipTo:
          primaryPhone:
            phoneNumber: phoneNumber
          companyName: companyName
          fullName: fullName
          contactAddress:
            stateOrProvince: stateOrProvince
            city: city
            countryCode: countryCode
            postalCode: postalCode
            county: county
            addressLine1: addressLine1
            addressLine2: addressLine2
      properties:
        orders:
          description: A seller-defined list that contains information about the orders
            in the package. This allows sellers to include information about the line
            items in the package with the shipment information.  <br><br>A package
            can contain any number of line items from one or more orders, providing
            they all ship in the same package.  <br><br><b>Maximum list size:</b>
            10
          items:
            $ref: '#/components/schemas/Order'
          type: array
        packageSpecification:
          $ref: '#/components/schemas/PackageSpecification'
        shipFrom:
          $ref: '#/components/schemas/Contact'
        shipTo:
          $ref: '#/components/schemas/Contact'
      type: object
      x-apifox-orders:
      - orders
      - packageSpecification
      - shipFrom
      - shipTo
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ShipmentCancellation:
      description: This type defines a shipment cancellation by the date and time
        the cancellation request was made and the current status of the request.
      example:
        cancellationStatus: cancellationStatus
        cancellationRequestedDate: cancellationRequestedDate
      properties:
        cancellationRequestedDate:
          description: The time and date the request was made to cancel the shipment,
            formatted as an <a href="https://www.iso.org/iso-8601-date-and-time-format.html"
            title="https://www.iso.org" target="_blank">ISO 8601</a> UTC string.
          type: string
        cancellationStatus:
          description: This enum specifies the current cancellation status of a shipment,
            if a cancellation request has been made. For implementation help, refer
            to <a href='https://developer.ebay.com/api-docs/sell/logistics/types/api:ShipmentCancellationStatusEnum'>eBay
            API documentation</a>
          type: string
      type: object
      x-apifox-orders:
      - cancellationRequestedDate
      - cancellationStatus
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Shipment:
      description: 'This complex type defines a shipment for a specific package (for
        example, a box or letter). Shipments are always linked to a purchased shipping
        label. '
      example:
        packageSpecification:
          weight:
            unit: unit
            value: value
          dimensions:
            unit: unit
            length: length
            width: width
            height: height
        shipFrom:
          primaryPhone:
            phoneNumber: phoneNumber
          companyName: companyName
          fullName: fullName
          contactAddress:
            stateOrProvince: stateOrProvince
            city: city
            countryCode: countryCode
            postalCode: postalCode
            county: county
            addressLine1: addressLine1
            addressLine2: addressLine2
        labelDownloadUrl: labelDownloadUrl
        creationDate: creationDate
        labelCustomMessage: labelCustomMessage
        cancellation:
          cancellationStatus: cancellationStatus
          cancellationRequestedDate: cancellationRequestedDate
        labelSize: labelSize
        rate:
          minEstimatedDeliveryDate: minEstimatedDeliveryDate
          maxEstimatedDeliveryDate: maxEstimatedDeliveryDate
          pickupSlotId: pickupSlotId
          shippingQuoteId: shippingQuoteId
          totalShippingCost:
            currency: currency
            value: value
          destinationTimeZone: destinationTimeZone
          shippingServiceCode: shippingServiceCode
          pickupType: pickupType
          rateId: rateId
          shippingServiceName: shippingServiceName
          additionalOptions:
          - optionType: optionType
            additionalCost:
              currency: currency
              value: value
          - optionType: optionType
            additionalCost:
              currency: currency
              value: value
          pickupNetworks:
          - pickupNetworks
          - pickupNetworks
          shippingCarrierCode: shippingCarrierCode
          baseShippingCost:
            currency: currency
            value: value
          shippingCarrierName: shippingCarrierName
        shipmentId: shipmentId
        returnTo:
          primaryPhone:
            phoneNumber: phoneNumber
          companyName: companyName
          fullName: fullName
          contactAddress:
            stateOrProvince: stateOrProvince
            city: city
            countryCode: countryCode
            postalCode: postalCode
            county: county
            addressLine1: addressLine1
            addressLine2: addressLine2
        shipmentTrackingNumber: shipmentTrackingNumber
        orders:
        - orderId: orderId
          channel: channel
        - orderId: orderId
          channel: channel
        shipTo:
          primaryPhone:
            phoneNumber: phoneNumber
          companyName: companyName
          fullName: fullName
          contactAddress:
            stateOrProvince: stateOrProvince
            city: city
            countryCode: countryCode
            postalCode: postalCode
            county: county
            addressLine1: addressLine1
            addressLine2: addressLine2
      properties:
        cancellation:
          $ref: '#/components/schemas/ShipmentCancellation'
        creationDate:
          description: The date and time the shipment was created, formatted as an
            <a href="https://www.iso.org/iso-8601-date-and-time-format.html" title="https://www.iso.org"
            target="_blank">ISO 8601</a> string, which is based on the 24-hour Coordinated
            Universal Time (UTC) clock.  <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[HH]:[MM]:[SS].[SSS]Z</code>
            <br><b>Example:</b> <code>2018-08-20T07:09:00.000Z</code>
          type: string
        labelCustomMessage:
          description: If supported by the selected shipping carrier, this field can
            contain optional seller text to be printed on the shipping label.
          type: string
        labelDownloadUrl:
          description: The direct URL the seller can use to download an image of the
            shipping label. By default, the file format is PDF. See <a href="/api-docs/sell/logistics/resources/shipment/methods/downloadLabelFile">downloadLabelFile</a>
            for requesting different response file formats.
          type: string
        labelSize:
          description: 'The seller''s desired label size. The support for multi-sized
            labels is shipping-carrier specific and if the size requested in the <b>creaateFromShippingQuote</b>
            call matches a size the carrier supports, the value will be represented
            here in the shipment. <br><br>Currently, the only valid value is: <code>4"x6"</code>'
          type: string
        orders:
          description: This list value is optionally assigned by the seller. When
            present, each element in the returned list contains seller-assigned information
            about an order (such as an order number). Because a package can contain
            all or part of one or more orders, this field provides a way for sellers
            to identify the packages that contain specific orders.
          items:
            $ref: '#/components/schemas/Order'
          type: array
        packageSpecification:
          $ref: '#/components/schemas/PackageSpecification'
        rate:
          $ref: '#/components/schemas/PurchasedRate'
        returnTo:
          $ref: '#/components/schemas/Contact'
        shipFrom:
          $ref: '#/components/schemas/Contact'
        shipmentId:
          description: The unique eBay-assigned ID for the shipment. The ID is generated
            when the shipment is created by a call to <b>createFromShippingQuote</b>.
          type: string
        shipmentTrackingNumber:
          description: A unique carrier-assigned ID string that can be used to track
            the shipment.
          type: string
        shipTo:
          $ref: '#/components/schemas/Contact'
      type: object
      x-apifox-orders:
      - cancellation
      - creationDate
      - labelCustomMessage
      - labelDownloadUrl
      - labelSize
      - orders
      - packageSpecification
      - rate
      - returnTo
      - shipFrom
      - shipmentId
      - shipmentTrackingNumber
      - shipTo
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ShippingQuote:
      description: This complex type describes a "shipping quote," which contains
        the parameters for a package shipment. The shipping quote contains a list
        of "live quotes" or <i>rates</i> for the shipment. Rates are offerd by a carrier
        for a particular service, of set of services, for shipping the package. Included
        in the shipping quote are the package specifications, the shipment's origin
        and destination addresses, and the shipping parameters specified by the seller.  <br><br>Use
        the <b>rateId</b> value to select the specific service you want when you create
        a shipment by calling <b>createFromShippingQuote</b>.
      example:
        packageSpecification:
          weight:
            unit: unit
            value: value
          dimensions:
            unit: unit
            length: length
            width: width
            height: height
        shipFrom:
          primaryPhone:
            phoneNumber: phoneNumber
          companyName: companyName
          fullName: fullName
          contactAddress:
            stateOrProvince: stateOrProvince
            city: city
            countryCode: countryCode
            postalCode: postalCode
            county: county
            addressLine1: addressLine1
            addressLine2: addressLine2
        rates:
        - minEstimatedDeliveryDate: minEstimatedDeliveryDate
          maxEstimatedDeliveryDate: maxEstimatedDeliveryDate
          pickupSlots:
          - pickupSlotEndTime: pickupSlotEndTime
            pickupSlotTimeZone: pickupSlotTimeZone
            pickupSlotId: pickupSlotId
            pickupSlotStartTime: pickupSlotStartTime
          - pickupSlotEndTime: pickupSlotEndTime
            pickupSlotTimeZone: pickupSlotTimeZone
            pickupSlotId: pickupSlotId
            pickupSlotStartTime: pickupSlotStartTime
          destinationTimeZone: destinationTimeZone
          shippingServiceCode: shippingServiceCode
          pickupType: pickupType
          rateRecommendation:
          - rateRecommendation
          - rateRecommendation
          rateId: rateId
          shippingServiceName: shippingServiceName
          additionalOptions:
          - optionType: optionType
            additionalCost:
              currency: currency
              value: value
          - optionType: optionType
            additionalCost:
              currency: currency
              value: value
          pickupNetworks:
          - pickupNetworks
          - pickupNetworks
          shippingCarrierCode: shippingCarrierCode
          baseShippingCost:
            currency: currency
            value: value
          shippingCarrierName: shippingCarrierName
        - minEstimatedDeliveryDate: minEstimatedDeliveryDate
          maxEstimatedDeliveryDate: maxEstimatedDeliveryDate
          pickupSlots:
          - pickupSlotEndTime: pickupSlotEndTime
            pickupSlotTimeZone: pickupSlotTimeZone
            pickupSlotId: pickupSlotId
            pickupSlotStartTime: pickupSlotStartTime
          - pickupSlotEndTime: pickupSlotEndTime
            pickupSlotTimeZone: pickupSlotTimeZone
            pickupSlotId: pickupSlotId
            pickupSlotStartTime: pickupSlotStartTime
          destinationTimeZone: destinationTimeZone
          shippingServiceCode: shippingServiceCode
          pickupType: pickupType
          rateRecommendation:
          - rateRecommendation
          - rateRecommendation
          rateId: rateId
          shippingServiceName: shippingServiceName
          additionalOptions:
          - optionType: optionType
            additionalCost:
              currency: currency
              value: value
          - optionType: optionType
            additionalCost:
              currency: currency
              value: value
          pickupNetworks:
          - pickupNetworks
          - pickupNetworks
          shippingCarrierCode: shippingCarrierCode
          baseShippingCost:
            currency: currency
            value: value
          shippingCarrierName: shippingCarrierName
        warnings:
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - domain: domain
          subdomain: subdomain
          outputRefIds:
          - outputRefIds
          - outputRefIds
          errorId: 0
          inputRefIds:
          - inputRefIds
          - inputRefIds
          category: category
          longMessage: longMessage
          message: message
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        shippingQuoteId: shippingQuoteId
        orders:
        - orderId: orderId
          channel: channel
        - orderId: orderId
          channel: channel
        creationDate: creationDate
        expirationDate: expirationDate
        shipTo:
          primaryPhone:
            phoneNumber: phoneNumber
          companyName: companyName
          fullName: fullName
          contactAddress:
            stateOrProvince: stateOrProvince
            city: city
            countryCode: countryCode
            postalCode: postalCode
            county: county
            addressLine1: addressLine1
            addressLine2: addressLine2
      properties:
        creationDate:
          description: The date and time this quote was created, expressed as an ISO
            8601 UTC string.
          type: string
        expirationDate:
          description: The last date and time that this quote will be honored, expressed
            as an ISO 8601 UTC string. After this time the quote expires and the expressed
            rates can no longer be purchased.
          type: string
        orders:
          description: This list value is optionally assigned by the seller. When
            present, each element in the returned list contains seller-assigned information
            about an order (such as an order number). Because a package can contain
            all or part of one or more orders, this field provides a way for sellers
            to identify the packages that contain specific orders.
          items:
            $ref: '#/components/schemas/Order'
          type: array
        packageSpecification:
          $ref: '#/components/schemas/PackageSpecification'
        rates:
          description: A list of <i>rates</i> where each rate, as identified by a
            <b>rateId</b>, contains information about a specific shipping service
            offered by a carrier.  Rates include shipping carrier and service, the
            to and from locations, the pickup and delivery windows, the seller's shipping
            parameters, the service constraints, and the cost for the base service
            and a list of additional shipping options.  <br><br>Each rate offered
            is supported by a label service where you can purchase the rate, and associated
            shipping label, via a call to <b>createFromShippingQuote</b>.
          items:
            $ref: '#/components/schemas/Rate'
          type: array
        shipFrom:
          $ref: '#/components/schemas/Contact'
        shippingQuoteId:
          description: The unique eBay-assigned ID for this shipping quote. The value
            of this field is associated with a specific package, based on its origin,
            destination, and size.
          type: string
        shipTo:
          $ref: '#/components/schemas/Contact'
        warnings:
          description: A list of any warnings triggered by the request.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
      x-apifox-orders:
      - creationDate
      - expirationDate
      - orders
      - packageSpecification
      - rates
      - shipFrom
      - shippingQuoteId
      - shipTo
      - warnings
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PurchasedRate:
      description: The "rate" that has been selected and purchased for the shipment,
        as referenced by the <b>rateId</b> value.
      example:
        minEstimatedDeliveryDate: minEstimatedDeliveryDate
        maxEstimatedDeliveryDate: maxEstimatedDeliveryDate
        pickupSlotId: pickupSlotId
        shippingQuoteId: shippingQuoteId
        totalShippingCost:
          currency: currency
          value: value
        destinationTimeZone: destinationTimeZone
        shippingServiceCode: shippingServiceCode
        pickupType: pickupType
        rateId: rateId
        shippingServiceName: shippingServiceName
        additionalOptions:
        - optionType: optionType
          additionalCost:
            currency: currency
            value: value
        - optionType: optionType
          additionalCost:
            currency: currency
            value: value
        pickupNetworks:
        - pickupNetworks
        - pickupNetworks
        shippingCarrierCode: shippingCarrierCode
        baseShippingCost:
          currency: currency
          value: value
        shippingCarrierName: shippingCarrierName
      properties:
        additionalOptions:
          description: An list of additional, optional features that have been purchased
            for the shipment.
          items:
            $ref: '#/components/schemas/AdditionalOption'
          type: array
        baseShippingCost:
          $ref: '#/components/schemas/Amount'
        destinationTimeZone:
          description: The time zone of the destination according to <a href="https://www.iana.org/time-zones"
            target="_blank">Time Zone Database</a>. For example, "America/Los_Angeles".
          type: string
        maxEstimatedDeliveryDate:
          description: A string value representing maximum (latest) estimated delivery
            time, formatted as an <a href="https://www.iso.org/iso-8601-date-and-time-format.html"
            title="https://www.iso.org" target="_blank">ISO 8601</a> string, which
            is based on the 24-hour Coordinated Universal Time (UTC) clock.  <br><br><b>Format:</b>
            <code>[YYYY]-[MM]-[DD]T[HH]:[MM]:[SS].[SSS]Z</code> <br><b>Example:</b>
            <code>2018-08-20T07:09:00.000Z</code>
          type: string
        minEstimatedDeliveryDate:
          description: A string value representing minimum (earliest) estimated delivery
            time, formatted as an <a href="https://www.iso.org/iso-8601-date-and-time-format.html"
            title="https://www.iso.org" target="_blank">ISO 8601</a>ISO 8601</a> UTC
            string.
          type: string
        pickupNetworks:
          description: A list of pickup networks compatible with the shipping service.
          items:
            type: string
          type: array
        pickupSlotId:
          description: This unique eBay-assigned ID value is returned only if the
            shipment has been configured for a scheduled pickup.
          type: string
        pickupType:
          description: The type of pickup or drop off configured for the shipment.
            For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/logistics/types/api:PickupTypeEnum'>eBay
            API documentation</a>
          type: string
        rateId:
          description: The eBay-generated ID of the shipping rate that the seller
            has chosen to purchase for the shipment.
          type: string
        shippingCarrierCode:
          description: The ID code for the carrier that was selected for the package
            shipment.
          type: string
        shippingCarrierName:
          description: The name of the shipping carrier.
          type: string
        shippingQuoteId:
          description: The unique eBay-generated ID of the <i>shipping quote</i> from
            which the seller selected a shipping rate (<b>rateId</b>).
          type: string
        shippingServiceCode:
          description: String ID code for the shipping service selected for the package
            shipment. This is a service that the shipping carrier supplies.
          type: string
        shippingServiceName:
          description: The name of the shipping service.
          type: string
        totalShippingCost:
          $ref: '#/components/schemas/Amount'
      type: object
      x-apifox-orders:
      - additionalOptions
      - baseShippingCost
      - destinationTimeZone
      - maxEstimatedDeliveryDate
      - minEstimatedDeliveryDate
      - pickupNetworks
      - pickupSlotId
      - pickupType
      - rateId
      - shippingCarrierCode
      - shippingCarrierName
      - shippingQuoteId
      - shippingServiceCode
      - shippingServiceName
      - totalShippingCost
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PickupSlot:
      description: This complex type defines a time window for the pickup of a package.
      example:
        pickupSlotEndTime: pickupSlotEndTime
        pickupSlotTimeZone: pickupSlotTimeZone
        pickupSlotId: pickupSlotId
        pickupSlotStartTime: pickupSlotStartTime
      properties:
        pickupSlotEndTime:
          description: The date and time the pickup slot ends, formatted as an <a
            href="https://www.iso.org/iso-8601-date-and-time-format.html" title="https://www.iso.org"
            target="_blank">ISO 8601</a> string, which is based on the 24-hour Coordinated
            Universal Time (UTC) clock.  <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[HH]:[MM]:[SS].[SSS]Z</code>
            <br><b>Example:</b> <code>2018-08-20T07:09:00.000Z</code>
          type: string
        pickupSlotId:
          description: Seller-defined name for the pickup slot. <!-- Max characters?
            -->
          type: string
        pickupSlotStartTime:
          description: The date and time the pickup slot begins, formatted as an <a
            href="https://www.iso.org/iso-8601-date-and-time-format.html" title="https://www.iso.org"
            target="_blank">ISO 8601</a> UTC string.
          type: string
        pickupSlotTimeZone:
          description: The time zone of the pickup location, returned as <a href="https://www.iana.org/time-zones"
            target="_blank">Time Zone Database</a> ID (also know as an Olson time
            zone ID).
          type: string
      type: object
      x-apifox-orders:
      - pickupSlotEndTime
      - pickupSlotId
      - pickupSlotStartTime
      - pickupSlotTimeZone
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Error:
      description: A container that defines the elements of error and warning message.
      example:
        domain: domain
        subdomain: subdomain
        outputRefIds:
        - outputRefIds
        - outputRefIds
        errorId: 0
        inputRefIds:
        - inputRefIds
        - inputRefIds
        category: category
        longMessage: longMessage
        message: message
        parameters:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        category:
          description: 'The category type for this error or warning. It takes a string
            that can have one of three values:<ul><li><code>Application</code>: Indicates
            an exception or error occurred in the application code or at runtime.
            Examples include catching an exception in a service''s business logic,
            system failures, or request errors from a dependency.</li><li><code>Business</code>:
            Used when your service or a dependent service refused to continue processing
            on the resource because of a business rule violation such as "Seller does
            not ship item to Antarctica" or "Buyer ineligible to purchase an alcoholic
            item". Business errors are not syntactical input errors.</li><li><code>Request</code>:
            Used when there is anything wrong with the request, such as authentication,
            syntactical errors, rate limiting or missing headers, bad HTTP header
            values, and so on.</li></ul>'
          type: string
        domain:
          description: Name of the domain containing the service or application.
          type: string
        errorId:
          description: A positive integer that uniquely identifies the specific error
            condition that occurred. Your application can use error codes as identifiers
            in your customized error-handling algorithms.
          format: int32
          type: integer
        inputRefIds:
          description: Identifies specific request elements associated with the error,
            if any. inputRefId's response is format specific. For JSON, use <i>JSONPath</i>
            notation.
          items:
            type: string
          type: array
        longMessage:
          description: An expanded version of message that should be around 100-200
            characters long, but is not required to be such.
          type: string
        message:
          description: An end user and app-developer friendly device agnostic message.
            It explains what the error or warning is, and how to fix it (in a general
            sense). Its value is at most 50 characters long. If applicable, the value
            is localized in the end user's requested locale.
          type: string
        outputRefIds:
          description: Identifies specific response elements associated with the error,
            if any. Path format is the same as <code>inputRefId</code>.
          items:
            type: string
          type: array
        parameters:
          description: This optional complex field type contains a list of one or
            more context-specific <code>ErrorParameter</code> objects, with each item
            in the list entry being a parameter (or input field name) that caused
            an error condition. Each <code>ErrorParameter</code> object consists of
            two fields, a <code>name</code> and a <code>value</code>.
          items:
            $ref: '#/components/schemas/ErrorParameter'
          type: array
        subdomain:
          description: Name of the domain's subsystem or subdivision. For example,
            checkout is a subdomain in the buying domain.
          type: string
      type: object
      x-apifox-orders:
      - category
      - domain
      - errorId
      - inputRefIds
      - longMessage
      - message
      - outputRefIds
      - parameters
      - subdomain
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Rate:
      description: This complex type contains live quote information about a shipping
        service that's available for a given shipping quote request, including the
        shipping carrier and service, delivery window, shipping cost, and additional
        shipping options.
      example:
        minEstimatedDeliveryDate: minEstimatedDeliveryDate
        maxEstimatedDeliveryDate: maxEstimatedDeliveryDate
        pickupSlots:
        - pickupSlotEndTime: pickupSlotEndTime
          pickupSlotTimeZone: pickupSlotTimeZone
          pickupSlotId: pickupSlotId
          pickupSlotStartTime: pickupSlotStartTime
        - pickupSlotEndTime: pickupSlotEndTime
          pickupSlotTimeZone: pickupSlotTimeZone
          pickupSlotId: pickupSlotId
          pickupSlotStartTime: pickupSlotStartTime
        destinationTimeZone: destinationTimeZone
        shippingServiceCode: shippingServiceCode
        pickupType: pickupType
        rateRecommendation:
        - rateRecommendation
        - rateRecommendation
        rateId: rateId
        shippingServiceName: shippingServiceName
        additionalOptions:
        - optionType: optionType
          additionalCost:
            currency: currency
            value: value
        - optionType: optionType
          additionalCost:
            currency: currency
            value: value
        pickupNetworks:
        - pickupNetworks
        - pickupNetworks
        shippingCarrierCode: shippingCarrierCode
        baseShippingCost:
          currency: currency
          value: value
        shippingCarrierName: shippingCarrierName
      properties:
        additionalOptions:
          description: Contains service and pricing information for one or more shipping
            options that are offered by the carrier and can be purchased in addition
            to the base shipping service provided by this rate. Shipping options can
            include items such as <code>INSURANCE</code> and <code>SIGNATURE</code>.
          items:
            $ref: '#/components/schemas/AdditionalOption'
          type: array
        baseShippingCost:
          $ref: '#/components/schemas/Amount'
        destinationTimeZone:
          description: The name of the time zone region, as defined in the <a href="http://www.iana.org/time-zones"  target="_blank">IANA
            Time Zone Database</a>, to which the package is being shipped.  <br><br>Delivery
            dates are calculated relative to this time zone.  <br><br><span class="tablenote"><strong>Note:</strong>
            This is different from a Coordinated Universal Time (UTC) offset. For
            example, the <i>America/Los_Angeles</i> time zone identifies a region
            with the UTC standard time offset of <code>-08:00</code>, but so do several
            other time zones, including <i>America/Tijuana</i>,<i>America/Dawson</i>,
            and <i>Pacific/Pitcairn</i>.</span>
          type: string
        maxEstimatedDeliveryDate:
          description: The latest stated date and time the shipment will be delivered
            at this rate.  <br><br>The time stamp is formatted as an <a href="https://www.iso.org/iso-8601-date-and-time-format.html"
            title="https://www.iso.org" target="_blank">ISO 8601</a> string, which
            is based on the 24-hour Coordinated Universal Time (UTC) clock.  <br><br><b>Format:</b>
            <code>[YYYY]-[MM]-[DD]T[HH]:[MM]:[SS].[SSS]Z</code> <br><b>Example:</b>
            <code>2018-08-20T07:09:00.000Z</code>
          type: string
        minEstimatedDeliveryDate:
          description: The estimated earliest date and time the shipment will be delivered
            at this rate. The time stamp is formatted as an ISO 8601 UTC string.
          type: string
        pickupNetworks:
          description: A list of pickup networks compatible with the shipping service.
          items:
            type: string
          type: array
        pickupSlots:
          description: A list of available pickup slots for the package.
          items:
            $ref: '#/components/schemas/PickupSlot'
          type: array
        pickupType:
          description: The type of pickup or drop-off service associated with the
            <b>pickupSlots</b> time frames. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/logistics/types/api:PickupTypeEnum'>eBay
            API documentation</a>
          type: string
        rateId:
          description: The unique eBay-assigned ID for this shipping rate.
          type: string
        rateRecommendation:
          description: 'A list of reasons this rate is recommended. Available values
            are: <ul> <li><code>BUYER_CHOSEN</code> &mdash; The rate meets or exceeds
            the requirements of the buyer''s preferred shipping option.</li> <li><code>CHEAPEST_ON_TIME</code>
            &mdash; The rate is the cheapest rate available that will provide delivery
            within the seller''s time frame commitment.</li>  <li><code>EBAY_PLUS_OK</code>
            &mdash; The rate complies with the shipping requirements of the eBay Plus
            program.</li> <li><code>FASTEST_ON_TIME</code> &mdash; The rate has the
            fastest shipping time, and will provide delivery within the seller''s
            time frame commitment.</li> <li><code>GUARANTEED_DELIVERY_OK</code> &mdash;
            The rate complies with the shipping requirements of the eBay Guaranteed
            Delivery program.</li></ul>'
          items:
            description: ' For implementation help, refer to <a href=''https://developer.ebay.com/api-docs/sell/logistics/types/api:RateRecommendationEnum''>eBay
              API documentation</a>'
            type: string
          type: array
        shippingCarrierCode:
          description: The code name of the shipping carrier who will provide the
            service identified by <b>shippingServiceCode</b>.
          type: string
        shippingCarrierName:
          description: The common name of the shipping carrier.
          type: string
        shippingServiceCode:
          description: The code name of the shipping service to be provided by the
            carrier identified by <b>shippingCarrierCode</b>.
          type: string
        shippingServiceName:
          description: The common name of the shipping service.
          type: string
      type: object
      x-apifox-orders:
      - additionalOptions
      - baseShippingCost
      - destinationTimeZone
      - maxEstimatedDeliveryDate
      - minEstimatedDeliveryDate
      - pickupNetworks
      - pickupSlots
      - pickupType
      - rateId
      - rateRecommendation
      - shippingCarrierCode
      - shippingCarrierName
      - shippingServiceCode
      - shippingServiceName
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PackageSpecification:
      description: This complex type specifies the dimensions and weight of a package.
      example:
        weight:
          unit: unit
          value: value
        dimensions:
          unit: unit
          length: length
          width: width
          height: height
      properties:
        dimensions:
          $ref: '#/components/schemas/Dimensions'
        weight:
          $ref: '#/components/schemas/Weight'
      type: object
      x-apifox-orders:
      - dimensions
      - weight
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ErrorParameter:
      description: Container for an error parameter.
      example:
        name: name
        value: value
      properties:
        name:
          description: Name of the entity that threw the error.
          type: string
        value:
          description: A description of the error.
          type: string
      type: object
      x-apifox-orders:
      - name
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    PhoneNumber:
      description: This complex type contains a string field representing a telephone
        number.
      example:
        phoneNumber: phoneNumber
      properties:
        phoneNumber:
          description: A telephone number.
          type: string
      type: object
      x-apifox-orders:
      - phoneNumber
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    CreateShipmentFromQuoteRequest:
      description: This complex type contains the request payload for the <b>createFromShippingQuote</b>
        method.
      example:
        labelCustomMessage: labelCustomMessage
        additionalOptions:
        - optionType: optionType
          additionalCost:
            currency: currency
            value: value
        - optionType: optionType
          additionalCost:
            currency: currency
            value: value
        labelSize: labelSize
        returnTo:
          primaryPhone:
            phoneNumber: phoneNumber
          companyName: companyName
          fullName: fullName
          contactAddress:
            stateOrProvince: stateOrProvince
            city: city
            countryCode: countryCode
            postalCode: postalCode
            county: county
            addressLine1: addressLine1
            addressLine2: addressLine2
        shippingQuoteId: shippingQuoteId
        rateId: rateId
      properties:
        additionalOptions:
          description: Supply a list of one or more shipping options that the seller
            wants to purchase for this shipment.  <br><br>The <b>baseShippingCost</b>
            field that's associated with the selected shipping rate is the cost of
            the base service offered in the rate. In addition to the base service,
            sellers can add additional shipping services to the base service. Shipping
            options include things such as shipping insurance or a recipient's signature
            upon delivery. The cost of any added services is summed with the base
            shipping cost to determine the final cost for the shipment. All options
            added to the shipment must be chosen from the set of shipping options
            offered with the selected rate.
          items:
            $ref: '#/components/schemas/AdditionalOption'
          type: array
        labelCustomMessage:
          description: Optional text to be printed on the shipping label if the selected
            shipping carrier supports custom messages on their labels.
          type: string
        labelSize:
          description: 'The seller''s desired label size. Any supplied value is applied
            only if the shipping carrier supports multiple label sizes, otherwise
            the carrier''s default label size is used.  <br><brCurrently, the only
            valid value is: <code>4"x6"</code>'
          type: string
        rateId:
          description: The eBay-assigned ID of the shipping rate that the seller selected
            for the shipment. This value is generated by a call to <b>createShippingQuote</b>
            and is returned in the <b>rates.rateId</b> field.
          type: string
        returnTo:
          $ref: '#/components/schemas/Contact'
        shippingQuoteId:
          description: The unique eBay-assigned ID of the shipping quote that was
            generated by a call to <b>createShippingQuote</b>.
          type: string
      type: object
      x-apifox-orders:
      - additionalOptions
      - labelCustomMessage
      - labelSize
      - rateId
      - returnTo
      - shippingQuoteId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Dimensions:
      description: This complex type defines the dimensions of a package to be shipped.
      example:
        unit: unit
        length: length
        width: width
        height: height
      properties:
        height:
          description: The numeric value of the height of the package.
          type: string
        length:
          description: The numeric value of the length of the package.
          type: string
        unit:
          description: The unit of measure used to express the height, length, and
            width of the package. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/logistics/types/api:LengthUnitOfMeasureEnum'>eBay
            API documentation</a>
          type: string
        width:
          description: The numeric value of the width of the package.
          type: string
      type: object
      x-apifox-orders:
      - height
      - length
      - unit
      - width
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    ContactAddress:
      description: This complex type specifies the details of a geographical address.
      example:
        stateOrProvince: stateOrProvince
        city: city
        countryCode: countryCode
        postalCode: postalCode
        county: county
        addressLine1: addressLine1
        addressLine2: addressLine2
      properties:
        addressLine1:
          description: The first line of the street address.
          type: string
        addressLine2:
          description: The second line of the street address. Use this field for additional
            address information, such as a suite or apartment number.
          type: string
        city:
          description: The city in which the address is located.
          type: string
        countryCode:
          description: The country of the address, represented as two-letter <a href="https://www.iso.org/iso-3166-country-codes.html"
            title="https://www.iso.org" target="_blank">ISO 3166</a> country code.
            For example, <code>US</code> represents the United States and <code>DE</code>
            represents Germany. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/logistics/types/bas:CountryCodeEnum'>eBay
            API documentation</a>
          type: string
        county:
          description: The county (not country) in which the address is located. Counties
            typically contain multiple cities or towns.
          type: string
        postalCode:
          description: The postal code of the address.
          type: string
        stateOrProvince:
          description: The state or province in which the address is located. States
            and provinces often contain multiple counties.
          type: string
      type: object
      x-apifox-orders:
      - addressLine1
      - addressLine2
      - city
      - countryCode
      - county
      - postalCode
      - stateOrProvince
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Contact:
      description: This complex type contains contact information for an individual
        buyer or seller.
      example:
        primaryPhone:
          phoneNumber: phoneNumber
        companyName: companyName
        fullName: fullName
        contactAddress:
          stateOrProvince: stateOrProvince
          city: city
          countryCode: countryCode
          postalCode: postalCode
          county: county
          addressLine1: addressLine1
          addressLine2: addressLine2
      properties:
        companyName:
          description: The company name with which the contact is associated.
          type: string
        contactAddress:
          $ref: '#/components/schemas/ContactAddress'
        fullName:
          description: The contact's full name.
          type: string
        primaryPhone:
          $ref: '#/components/schemas/PhoneNumber'
      type: object
      x-apifox-orders:
      - companyName
      - contactAddress
      - fullName
      - primaryPhone
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Amount:
      description: A complex type that describes the value of a monetary amount as
        represented by a global currency.
      example:
        currency: currency
        value: value
      properties:
        currency:
          description: The base currency applied to the <b>value</b> field to establish
            a monetary amount.  <br><br>The currency is represented as a 3-letter
            <a href="https://www.iso.org/iso-4217-currency-codes.html" title="https://www.iso.org"
            target="_blank">ISO 4217</a> currency code. For example, the code for
            the Canadian Dollar is <code>CAD</code>.  <br><br><b>Default:</b> The
            default currency of the eBay marketplace that hosts the listing. For implementation
            help, refer to <a href='https://developer.ebay.com/api-docs/sell/logistics/types/bas:CurrencyCodeEnum'>eBay
            API documentation</a>
          type: string
        value:
          description: The monetary amount in the specified <b>currency</b>.
          type: string
      type: object
      x-apifox-orders:
      - currency
      - value
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    AdditionalOption:
      description: This complex type contains information about a shipping option
        that can be purchased in addition to the base shipping cost of a recommended
        rate. Additional options for each rate are defined, named, and offered by
        the selected shipping carrier. Examples include shipping insurance or the
        requirement for a recipient signature.
      example:
        optionType: optionType
        additionalCost:
          currency: currency
          value: value
      properties:
        additionalCost:
          $ref: '#/components/schemas/Amount'
        optionType:
          description: The name of a shipping option that can be purchased in addition
            to the base shipping cost of this rate. The value supplied in this field
            must match exactly the option name as supplied by the selected rate.
          type: string
      type: object
      x-apifox-orders:
      - additionalCost
      - optionType
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    Order:
      description: This complex type defines an order from which a seller is including
        one or more line items in a single package to be shipped.
      example:
        orderId: orderId
        channel: channel
      properties:
        channel:
          description: The e-commerce platform or environment where the order was
            created. Use the value <code>EBAY</code> to get the rates available for
            eBay orders.
          type: string
        orderId:
          description: The unique ID of the order supplied by the channel of origin.
            For eBay orders, this would be the <b>orderId</b>.
          type: string
      type: object
      x-apifox-orders:
      - channel
      - orderId
      x-apifox-ignore-properties: []
      x-apifox-folder: Schemas
    inline_object:
      properties:
        creationDate:
          description: 'The file creation date. <br /><br /><b> Format: </b> UTC <code>yyyy-MM-ddThh:mm:ss.SSSZ</code><p><b>For
            example:</b><p>Created on September 8, 2019</p><p><code>2019-09-08T00:00:00.000Z</code></p>'
          type: string
        fileName:
          description: The name of the file including its extension (for example,
            xml or csv) to be uploaded.
          type: string
        modificationDate:
          description: 'The file modified date. <br /><br /><b> Format: </b> UTC <code>yyyy-MM-ddThh:mm:ss.SSSZ</code><p><b>For
            example:</b><p>Created on September 9, 2019</p><p><code>2019-09-09T00:00:00.000Z</code></p>'
          type: string
        name:
          description: A content identifier. The only presently supported name is
            <code>file</code>.
          type: string
        parameters:
          description: The parameters you want associated with the file.
          type: string
        readDate:
          description: 'The date you read the file. <br /><br /><b> Format: </b> UTC
            <code>yyyy-MM-ddThh:mm:ss.SSSZ</code><p><b>For example:</b><p>Created
            on September 10, 2019</p><p><code>2019-09-10T00:00:00.000Z</code></p>'
          type: string
        size:
          description: The size of the file.
          type: integer
        type:
          description: The file type. The only presently supported type is <code>form-data</code>.
          type: string
      type: object

