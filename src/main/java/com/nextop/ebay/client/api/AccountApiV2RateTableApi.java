/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.api;

import com.nextop.ebay.client.ApiCallback;
import com.nextop.ebay.client.ApiClient;
import com.nextop.ebay.client.ApiException;
import com.nextop.ebay.client.ApiResponse;
import com.nextop.ebay.client.Configuration;
import com.nextop.ebay.client.Pair;
import com.nextop.ebay.client.ProgressRequestBody;
import com.nextop.ebay.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;

import javax.validation.constraints.*;

import com.nextop.ebay.client.model.RateTableDetails;
import com.nextop.ebay.client.model.RateTableUpdate;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AccountApiV2RateTableApi {
    private ApiClient localVarApiClient;

    public AccountApiV2RateTableApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AccountApiV2RateTableApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for getRateTable
     * @param rateTableId The unique identifier for the shipping rate table. This identifier is generated by eBay when a shipping rate table is first created.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables\&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables defined for each marketplace and their corresponding &lt;b&gt;rateTableId&lt;/b&gt; values.&lt;/span&gt; (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRateTableCall(String rateTableId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/rate_table/{rate_table_id}"
            .replaceAll("\\{" + "rate_table_id" + "\\}", localVarApiClient.escapeString(rateTableId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRateTableValidateBeforeCall(String rateTableId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'rateTableId' is set
        if (rateTableId == null) {
            throw new ApiException("Missing the required parameter 'rateTableId' when calling getRateTable(Async)");
        }
        

        okhttp3.Call localVarCall = getRateTableCall(rateTableId, _callback);
        return localVarCall;

    }

    /**
     * /rate_table/{rate_table_id}
     * This method retrieves an existing rate table identified by the &lt;b&gt;rate_table_id&lt;/b&gt; path parameter.&lt;br&gt;&lt;br&gt;&lt;b&gt;getRateTable&lt;/b&gt; currently supports the retrieval of rate tables for the following eBay marketplace IDs:&lt;ul&gt;&lt;li&gt;&lt;code&gt;EBAY_AU&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_CA&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_DE&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_ES&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_FR&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_GB&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_IT&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_US&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables \&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables defined for each marketplace and their corresponding &lt;b&gt;rateTableId&lt;/b&gt; values.&lt;/span&gt;&lt;br/&gt;&lt;br/&gt; A successful call returns detailed information for the specified shipping rate table.
     * @param rateTableId The unique identifier for the shipping rate table. This identifier is generated by eBay when a shipping rate table is first created.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables\&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables defined for each marketplace and their corresponding &lt;b&gt;rateTableId&lt;/b&gt; values.&lt;/span&gt; (required)
     * @return RateTableDetails
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public RateTableDetails getRateTable(String rateTableId) throws ApiException {
        ApiResponse<RateTableDetails> localVarResp = getRateTableWithHttpInfo(rateTableId);
        return localVarResp.getData();
    }

    /**
     * /rate_table/{rate_table_id}
     * This method retrieves an existing rate table identified by the &lt;b&gt;rate_table_id&lt;/b&gt; path parameter.&lt;br&gt;&lt;br&gt;&lt;b&gt;getRateTable&lt;/b&gt; currently supports the retrieval of rate tables for the following eBay marketplace IDs:&lt;ul&gt;&lt;li&gt;&lt;code&gt;EBAY_AU&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_CA&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_DE&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_ES&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_FR&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_GB&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_IT&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_US&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables \&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables defined for each marketplace and their corresponding &lt;b&gt;rateTableId&lt;/b&gt; values.&lt;/span&gt;&lt;br/&gt;&lt;br/&gt; A successful call returns detailed information for the specified shipping rate table.
     * @param rateTableId The unique identifier for the shipping rate table. This identifier is generated by eBay when a shipping rate table is first created.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables\&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables defined for each marketplace and their corresponding &lt;b&gt;rateTableId&lt;/b&gt; values.&lt;/span&gt; (required)
     * @return ApiResponse&lt;RateTableDetails&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<RateTableDetails> getRateTableWithHttpInfo( @NotNull String rateTableId) throws ApiException {
        okhttp3.Call localVarCall = getRateTableValidateBeforeCall(rateTableId, null);
        Type localVarReturnType = new TypeToken<RateTableDetails>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * /rate_table/{rate_table_id} (asynchronously)
     * This method retrieves an existing rate table identified by the &lt;b&gt;rate_table_id&lt;/b&gt; path parameter.&lt;br&gt;&lt;br&gt;&lt;b&gt;getRateTable&lt;/b&gt; currently supports the retrieval of rate tables for the following eBay marketplace IDs:&lt;ul&gt;&lt;li&gt;&lt;code&gt;EBAY_AU&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_CA&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_DE&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_ES&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_FR&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_GB&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_IT&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_US&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables \&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables defined for each marketplace and their corresponding &lt;b&gt;rateTableId&lt;/b&gt; values.&lt;/span&gt;&lt;br/&gt;&lt;br/&gt; A successful call returns detailed information for the specified shipping rate table.
     * @param rateTableId The unique identifier for the shipping rate table. This identifier is generated by eBay when a shipping rate table is first created.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables\&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables defined for each marketplace and their corresponding &lt;b&gt;rateTableId&lt;/b&gt; values.&lt;/span&gt; (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getRateTableAsync(String rateTableId, final ApiCallback<RateTableDetails> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRateTableValidateBeforeCall(rateTableId, _callback);
        Type localVarReturnType = new TypeToken<RateTableDetails>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updateShippingCost
     * @param rateTableId The unique identifier for the shipping rate table. This identifier is generated by eBay when a shipping rate table is first created.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables\&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables defined for each marketplace and their corresponding &lt;b&gt;rateTableId&lt;/b&gt; values. (required)
     * @param rateTableUpdate  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Conflict </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateShippingCostCall(String rateTableId, RateTableUpdate rateTableUpdate, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = rateTableUpdate;

        // create path and map variables
        String localVarPath = "/rate_table/{rate_table_id}/update_shipping_cost"
            .replaceAll("\\{" + "rate_table_id" + "\\}", localVarApiClient.escapeString(rateTableId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateShippingCostValidateBeforeCall(String rateTableId, RateTableUpdate rateTableUpdate, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'rateTableId' is set
        if (rateTableId == null) {
            throw new ApiException("Missing the required parameter 'rateTableId' when calling updateShippingCost(Async)");
        }
        

        okhttp3.Call localVarCall = updateShippingCostCall(rateTableId, rateTableUpdate, _callback);
        return localVarCall;

    }

    /**
     * /rate_table/{rate_table_id}/update_shipping_cost
     * This method allows sellers to update &lt;b&gt;shippingCost&lt;/b&gt; and/or &lt;b&gt;additionalCost&lt;/b&gt; information for an existing shipping rate table identified by the &lt;b&gt;rate_table_id&lt;/b&gt; path parameter.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables \&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables and corresponding &lt;b&gt;rateTableId&lt;/b&gt; values.&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;A successful call returns an HTTP status code of &lt;b&gt;204 No Content&lt;/b&gt;.
     * @param rateTableId The unique identifier for the shipping rate table. This identifier is generated by eBay when a shipping rate table is first created.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables\&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables defined for each marketplace and their corresponding &lt;b&gt;rateTableId&lt;/b&gt; values. (required)
     * @param rateTableUpdate  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Conflict </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public Object updateShippingCost(String rateTableId, RateTableUpdate rateTableUpdate) throws ApiException {
        ApiResponse<Object> localVarResp = updateShippingCostWithHttpInfo(rateTableId, rateTableUpdate);
        return localVarResp.getData();
    }

    /**
     * /rate_table/{rate_table_id}/update_shipping_cost
     * This method allows sellers to update &lt;b&gt;shippingCost&lt;/b&gt; and/or &lt;b&gt;additionalCost&lt;/b&gt; information for an existing shipping rate table identified by the &lt;b&gt;rate_table_id&lt;/b&gt; path parameter.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables \&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables and corresponding &lt;b&gt;rateTableId&lt;/b&gt; values.&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;A successful call returns an HTTP status code of &lt;b&gt;204 No Content&lt;/b&gt;.
     * @param rateTableId The unique identifier for the shipping rate table. This identifier is generated by eBay when a shipping rate table is first created.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables\&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables defined for each marketplace and their corresponding &lt;b&gt;rateTableId&lt;/b&gt; values. (required)
     * @param rateTableUpdate  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Conflict </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> updateShippingCostWithHttpInfo( @NotNull String rateTableId,  RateTableUpdate rateTableUpdate) throws ApiException {
        okhttp3.Call localVarCall = updateShippingCostValidateBeforeCall(rateTableId, rateTableUpdate, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * /rate_table/{rate_table_id}/update_shipping_cost (asynchronously)
     * This method allows sellers to update &lt;b&gt;shippingCost&lt;/b&gt; and/or &lt;b&gt;additionalCost&lt;/b&gt; information for an existing shipping rate table identified by the &lt;b&gt;rate_table_id&lt;/b&gt; path parameter.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables \&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables and corresponding &lt;b&gt;rateTableId&lt;/b&gt; values.&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;A successful call returns an HTTP status code of &lt;b&gt;204 No Content&lt;/b&gt;.
     * @param rateTableId The unique identifier for the shipping rate table. This identifier is generated by eBay when a shipping rate table is first created.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables\&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables defined for each marketplace and their corresponding &lt;b&gt;rateTableId&lt;/b&gt; values. (required)
     * @param rateTableUpdate  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Conflict </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateShippingCostAsync(String rateTableId, RateTableUpdate rateTableUpdate, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateShippingCostValidateBeforeCall(rateTableId, rateTableUpdate, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
