/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.api;

import com.nextop.ebay.client.ApiCallback;
import com.nextop.ebay.client.ApiClient;
import com.nextop.ebay.client.ApiException;
import com.nextop.ebay.client.ApiResponse;
import com.nextop.ebay.client.Configuration;
import com.nextop.ebay.client.Pair;
import com.nextop.ebay.client.ProgressRequestBody;
import com.nextop.ebay.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;

import javax.validation.constraints.*;

import com.nextop.ebay.client.model.SellerEligibilityMultiProgramResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AccountApiV1AdvertisingEligibilityApi {
    private ApiClient localVarApiClient;

    public AccountApiV1AdvertisingEligibilityApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AccountApiV1AdvertisingEligibilityApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for getAdvertisingEligibility
     * @param X_EBAY_C_MARKETPLACE_ID The unique identifier of the eBay marketplace for which the seller eligibility status shall be checked.&lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; This value is case-sensitive.&lt;/span&gt; (required)
     * @param programTypes A comma-separated list of eBay advertising programs.&lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Tip:&lt;/b&gt; See the &lt;a href&#x3D;\&quot;/api-docs/sell/account/types/plser:AdvertisingProgramEnum\&quot;&gt; AdvertisingProgramEnum&lt;/a&gt; type for possible values.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;If no programs are specified, the results will be returned for all programs. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAdvertisingEligibilityCall(String X_EBAY_C_MARKETPLACE_ID, String programTypes, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/advertising_eligibility";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (programTypes != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("program_types", programTypes));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (X_EBAY_C_MARKETPLACE_ID != null) {
            localVarHeaderParams.put("X-EBAY-C-MARKETPLACE-ID", localVarApiClient.parameterToString(X_EBAY_C_MARKETPLACE_ID));
        }

        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAdvertisingEligibilityValidateBeforeCall(String X_EBAY_C_MARKETPLACE_ID, String programTypes, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'X_EBAY_C_MARKETPLACE_ID' is set
        if (X_EBAY_C_MARKETPLACE_ID == null) {
            throw new ApiException("Missing the required parameter 'X_EBAY_C_MARKETPLACE_ID' when calling getAdvertisingEligibility(Async)");
        }
        

        okhttp3.Call localVarCall = getAdvertisingEligibilityCall(X_EBAY_C_MARKETPLACE_ID, programTypes, _callback);
        return localVarCall;

    }

    /**
     * /advertising_eligibility
     * This method allows developers to check the seller eligibility status for eBay advertising programs.
     * @param X_EBAY_C_MARKETPLACE_ID The unique identifier of the eBay marketplace for which the seller eligibility status shall be checked.&lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; This value is case-sensitive.&lt;/span&gt; (required)
     * @param programTypes A comma-separated list of eBay advertising programs.&lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Tip:&lt;/b&gt; See the &lt;a href&#x3D;\&quot;/api-docs/sell/account/types/plser:AdvertisingProgramEnum\&quot;&gt; AdvertisingProgramEnum&lt;/a&gt; type for possible values.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;If no programs are specified, the results will be returned for all programs. (optional)
     * @return SellerEligibilityMultiProgramResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public SellerEligibilityMultiProgramResponse getAdvertisingEligibility(String X_EBAY_C_MARKETPLACE_ID, String programTypes) throws ApiException {
        ApiResponse<SellerEligibilityMultiProgramResponse> localVarResp = getAdvertisingEligibilityWithHttpInfo(X_EBAY_C_MARKETPLACE_ID, programTypes);
        return localVarResp.getData();
    }

    /**
     * /advertising_eligibility
     * This method allows developers to check the seller eligibility status for eBay advertising programs.
     * @param X_EBAY_C_MARKETPLACE_ID The unique identifier of the eBay marketplace for which the seller eligibility status shall be checked.&lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; This value is case-sensitive.&lt;/span&gt; (required)
     * @param programTypes A comma-separated list of eBay advertising programs.&lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Tip:&lt;/b&gt; See the &lt;a href&#x3D;\&quot;/api-docs/sell/account/types/plser:AdvertisingProgramEnum\&quot;&gt; AdvertisingProgramEnum&lt;/a&gt; type for possible values.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;If no programs are specified, the results will be returned for all programs. (optional)
     * @return ApiResponse&lt;SellerEligibilityMultiProgramResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<SellerEligibilityMultiProgramResponse> getAdvertisingEligibilityWithHttpInfo( @NotNull String X_EBAY_C_MARKETPLACE_ID,  String programTypes) throws ApiException {
        okhttp3.Call localVarCall = getAdvertisingEligibilityValidateBeforeCall(X_EBAY_C_MARKETPLACE_ID, programTypes, null);
        Type localVarReturnType = new TypeToken<SellerEligibilityMultiProgramResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * /advertising_eligibility (asynchronously)
     * This method allows developers to check the seller eligibility status for eBay advertising programs.
     * @param X_EBAY_C_MARKETPLACE_ID The unique identifier of the eBay marketplace for which the seller eligibility status shall be checked.&lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; This value is case-sensitive.&lt;/span&gt; (required)
     * @param programTypes A comma-separated list of eBay advertising programs.&lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Tip:&lt;/b&gt; See the &lt;a href&#x3D;\&quot;/api-docs/sell/account/types/plser:AdvertisingProgramEnum\&quot;&gt; AdvertisingProgramEnum&lt;/a&gt; type for possible values.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;If no programs are specified, the results will be returned for all programs. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAdvertisingEligibilityAsync(String X_EBAY_C_MARKETPLACE_ID, String programTypes, final ApiCallback<SellerEligibilityMultiProgramResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAdvertisingEligibilityValidateBeforeCall(X_EBAY_C_MARKETPLACE_ID, programTypes, _callback);
        Type localVarReturnType = new TypeToken<SellerEligibilityMultiProgramResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
