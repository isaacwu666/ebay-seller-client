/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.Amount;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type is used by the response payload of the &lt;strong&gt;getSellerFundsSummary&lt;/strong&gt; method. All of the funds returned in  &lt;strong&gt;getSellerFundsSummary&lt;/strong&gt; are funds that have not yet been paid to the seller through a seller payout. If there are no funds that are pending, on hold, or being processed for the seller&#39;s account, no response payload is returned, and an http status code of &lt;code&gt;204 - No Content&lt;/code&gt; is returned instead.
 */
@ApiModel(description = "This type is used by the response payload of the <strong>getSellerFundsSummary</strong> method. All of the funds returned in  <strong>getSellerFundsSummary</strong> are funds that have not yet been paid to the seller through a seller payout. If there are no funds that are pending, on hold, or being processed for the seller's account, no response payload is returned, and an http status code of <code>204 - No Content</code> is returned instead.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class SellerFundsSummaryResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_AVAILABLE_FUNDS = "availableFunds";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_FUNDS)
  private Amount availableFunds;

  public static final String SERIALIZED_NAME_FUNDS_ON_HOLD = "fundsOnHold";
  @SerializedName(SERIALIZED_NAME_FUNDS_ON_HOLD)
  private Amount fundsOnHold;

  public static final String SERIALIZED_NAME_PROCESSING_FUNDS = "processingFunds";
  @SerializedName(SERIALIZED_NAME_PROCESSING_FUNDS)
  private Amount processingFunds;

  public static final String SERIALIZED_NAME_TOTAL_FUNDS = "totalFunds";
  @SerializedName(SERIALIZED_NAME_TOTAL_FUNDS)
  private Amount totalFunds;


  public SellerFundsSummaryResponse availableFunds(Amount availableFunds) {
    
    this.availableFunds = availableFunds;
    return this;
  }

   /**
   * Get availableFunds
   * @return availableFunds
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getAvailableFunds() {
    return availableFunds;
  }


  public void setAvailableFunds(Amount availableFunds) {
    this.availableFunds = availableFunds;
  }


  public SellerFundsSummaryResponse fundsOnHold(Amount fundsOnHold) {
    
    this.fundsOnHold = fundsOnHold;
    return this;
  }

   /**
   * Get fundsOnHold
   * @return fundsOnHold
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getFundsOnHold() {
    return fundsOnHold;
  }


  public void setFundsOnHold(Amount fundsOnHold) {
    this.fundsOnHold = fundsOnHold;
  }


  public SellerFundsSummaryResponse processingFunds(Amount processingFunds) {
    
    this.processingFunds = processingFunds;
    return this;
  }

   /**
   * Get processingFunds
   * @return processingFunds
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getProcessingFunds() {
    return processingFunds;
  }


  public void setProcessingFunds(Amount processingFunds) {
    this.processingFunds = processingFunds;
  }


  public SellerFundsSummaryResponse totalFunds(Amount totalFunds) {
    
    this.totalFunds = totalFunds;
    return this;
  }

   /**
   * Get totalFunds
   * @return totalFunds
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getTotalFunds() {
    return totalFunds;
  }


  public void setTotalFunds(Amount totalFunds) {
    this.totalFunds = totalFunds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SellerFundsSummaryResponse sellerFundsSummaryResponse = (SellerFundsSummaryResponse) o;
    return Objects.equals(this.availableFunds, sellerFundsSummaryResponse.availableFunds) &&
        Objects.equals(this.fundsOnHold, sellerFundsSummaryResponse.fundsOnHold) &&
        Objects.equals(this.processingFunds, sellerFundsSummaryResponse.processingFunds) &&
        Objects.equals(this.totalFunds, sellerFundsSummaryResponse.totalFunds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availableFunds, fundsOnHold, processingFunds, totalFunds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SellerFundsSummaryResponse {\n");
    sb.append("    availableFunds: ").append(toIndentedString(availableFunds)).append("\n");
    sb.append("    fundsOnHold: ").append(toIndentedString(fundsOnHold)).append("\n");
    sb.append("    processingFunds: ").append(toIndentedString(processingFunds)).append("\n");
    sb.append("    totalFunds: ").append(toIndentedString(totalFunds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

