/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.Amount;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type contains a breakdown of all costs associated with the fulfillment of a line item.
 */
@ApiModel(description = "This type contains a breakdown of all costs associated with the fulfillment of a line item.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class DeliveryCost implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_IMPORT_CHARGES = "importCharges";
  @SerializedName(SERIALIZED_NAME_IMPORT_CHARGES)
  private Amount importCharges;

  public static final String SERIALIZED_NAME_SHIPPING_COST = "shippingCost";
  @SerializedName(SERIALIZED_NAME_SHIPPING_COST)
  private Amount shippingCost;

  public static final String SERIALIZED_NAME_SHIPPING_INTERMEDIATION_FEE = "shippingIntermediationFee";
  @SerializedName(SERIALIZED_NAME_SHIPPING_INTERMEDIATION_FEE)
  private Amount shippingIntermediationFee;


  public DeliveryCost importCharges(Amount importCharges) {
    
    this.importCharges = importCharges;
    return this;
  }

   /**
   * Get importCharges
   * @return importCharges
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getImportCharges() {
    return importCharges;
  }


  public void setImportCharges(Amount importCharges) {
    this.importCharges = importCharges;
  }


  public DeliveryCost shippingCost(Amount shippingCost) {
    
    this.shippingCost = shippingCost;
    return this;
  }

   /**
   * Get shippingCost
   * @return shippingCost
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getShippingCost() {
    return shippingCost;
  }


  public void setShippingCost(Amount shippingCost) {
    this.shippingCost = shippingCost;
  }


  public DeliveryCost shippingIntermediationFee(Amount shippingIntermediationFee) {
    
    this.shippingIntermediationFee = shippingIntermediationFee;
    return this;
  }

   /**
   * Get shippingIntermediationFee
   * @return shippingIntermediationFee
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getShippingIntermediationFee() {
    return shippingIntermediationFee;
  }


  public void setShippingIntermediationFee(Amount shippingIntermediationFee) {
    this.shippingIntermediationFee = shippingIntermediationFee;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeliveryCost deliveryCost = (DeliveryCost) o;
    return Objects.equals(this.importCharges, deliveryCost.importCharges) &&
        Objects.equals(this.shippingCost, deliveryCost.shippingCost) &&
        Objects.equals(this.shippingIntermediationFee, deliveryCost.shippingIntermediationFee);
  }

  @Override
  public int hashCode() {
    return Objects.hash(importCharges, shippingCost, shippingIntermediationFee);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeliveryCost {\n");
    sb.append("    importCharges: ").append(toIndentedString(importCharges)).append("\n");
    sb.append("    shippingCost: ").append(toIndentedString(shippingCost)).append("\n");
    sb.append("    shippingIntermediationFee: ").append(toIndentedString(shippingIntermediationFee)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

