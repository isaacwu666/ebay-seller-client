/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.OperatingHours;
import com.nextop.ebay.client.model.SpecialHours;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type is used by the &lt;strong&gt;updateInventoryLocation&lt;/strong&gt; call to update operating hours, special hours, phone number, and other minor details of an inventory location.
 */
@ApiModel(description = "This type is used by the <strong>updateInventoryLocation</strong> call to update operating hours, special hours, phone number, and other minor details of an inventory location.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class InventoryLocation implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_LOCATION_ADDITIONAL_INFORMATION = "locationAdditionalInformation";
  @SerializedName(SERIALIZED_NAME_LOCATION_ADDITIONAL_INFORMATION)
  private String locationAdditionalInformation;

  public static final String SERIALIZED_NAME_LOCATION_INSTRUCTIONS = "locationInstructions";
  @SerializedName(SERIALIZED_NAME_LOCATION_INSTRUCTIONS)
  private String locationInstructions;

  public static final String SERIALIZED_NAME_LOCATION_WEB_URL = "locationWebUrl";
  @SerializedName(SERIALIZED_NAME_LOCATION_WEB_URL)
  private String locationWebUrl;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OPERATING_HOURS = "operatingHours";
  @SerializedName(SERIALIZED_NAME_OPERATING_HOURS)
  private List<OperatingHours> operatingHours = null;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_SPECIAL_HOURS = "specialHours";
  @SerializedName(SERIALIZED_NAME_SPECIAL_HOURS)
  private List<SpecialHours> specialHours = null;


  public InventoryLocation locationAdditionalInformation(String locationAdditionalInformation) {
    
    this.locationAdditionalInformation = locationAdditionalInformation;
    return this;
  }

   /**
   * This text field is used by the merchant to provide/update additional information about an inventory location. Whatever text is passed in this field will replace the current text string defined for this field. If the text will not change, the same text should be passed in once again. &lt;br&gt;&lt;br&gt;&lt;b&gt;Max length&lt;/b&gt;: 256
   * @return locationAdditionalInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This text field is used by the merchant to provide/update additional information about an inventory location. Whatever text is passed in this field will replace the current text string defined for this field. If the text will not change, the same text should be passed in once again. <br><br><b>Max length</b>: 256")

  public String getLocationAdditionalInformation() {
    return locationAdditionalInformation;
  }


  public void setLocationAdditionalInformation(String locationAdditionalInformation) {
    this.locationAdditionalInformation = locationAdditionalInformation;
  }


  public InventoryLocation locationInstructions(String locationInstructions) {
    
    this.locationInstructions = locationInstructions;
    return this;
  }

   /**
   * This text field is generally used by the merchant to provide/update special pickup instructions for a store inventory location. Although this field is optional, it is recommended that merchants provide this field to create a pleasant and easy pickup experience for In-Store Pickup and Click and Collect orders. If this field is not included in the call request payload, eBay will use the default pickup instructions contained in the merchant&#39;s profile (if available). Whatever text is passed in this field will replace the current text string defined for this field. If the text will not change, the same text should be passed in once again. &lt;br&gt;&lt;br&gt;&lt;b&gt;Max length&lt;/b&gt;: 1000
   * @return locationInstructions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This text field is generally used by the merchant to provide/update special pickup instructions for a store inventory location. Although this field is optional, it is recommended that merchants provide this field to create a pleasant and easy pickup experience for In-Store Pickup and Click and Collect orders. If this field is not included in the call request payload, eBay will use the default pickup instructions contained in the merchant's profile (if available). Whatever text is passed in this field will replace the current text string defined for this field. If the text will not change, the same text should be passed in once again. <br><br><b>Max length</b>: 1000")

  public String getLocationInstructions() {
    return locationInstructions;
  }


  public void setLocationInstructions(String locationInstructions) {
    this.locationInstructions = locationInstructions;
  }


  public InventoryLocation locationWebUrl(String locationWebUrl) {
    
    this.locationWebUrl = locationWebUrl;
    return this;
  }

   /**
   * This text field is used by the merchant to provide/update the Website address (URL) associated with the inventory location. The URL that is passed in this field will replace any other URL that may be defined for this field. &lt;br&gt;&lt;br&gt;&lt;b&gt;Max length&lt;/b&gt;: 512
   * @return locationWebUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This text field is used by the merchant to provide/update the Website address (URL) associated with the inventory location. The URL that is passed in this field will replace any other URL that may be defined for this field. <br><br><b>Max length</b>: 512")

  public String getLocationWebUrl() {
    return locationWebUrl;
  }


  public void setLocationWebUrl(String locationWebUrl) {
    this.locationWebUrl = locationWebUrl;
  }


  public InventoryLocation name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * This text field is used by the merchant to update the name of the inventory location. This name should be a human-friendly name as it will be in In-Store Pickup and Click and Collect listings. A name is not required for warehouse inventory locations. For store inventory locations, this field is not immediately required, but will be required before an offer enabled with the In-Store Pickup or Click and Collect capability can be published. So, if the seller omitted this field in the &lt;strong&gt;createInventoryLocation&lt;/strong&gt; call, it is required for an &lt;strong&gt;updateInventoryLocation&lt;/strong&gt; call. The name that is passed in this field will replace any other name that may be defined for this field.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This text field is used by the merchant to update the name of the inventory location. This name should be a human-friendly name as it will be in In-Store Pickup and Click and Collect listings. A name is not required for warehouse inventory locations. For store inventory locations, this field is not immediately required, but will be required before an offer enabled with the In-Store Pickup or Click and Collect capability can be published. So, if the seller omitted this field in the <strong>createInventoryLocation</strong> call, it is required for an <strong>updateInventoryLocation</strong> call. The name that is passed in this field will replace any other name that may be defined for this field.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public InventoryLocation operatingHours(List<OperatingHours> operatingHours) {
    
    this.operatingHours = operatingHours;
    return this;
  }

  public InventoryLocation addOperatingHoursItem(OperatingHours operatingHoursItem) {
    if (this.operatingHours == null) {
      this.operatingHours = new ArrayList<OperatingHours>();
    }
    this.operatingHours.add(operatingHoursItem);
    return this;
  }

   /**
   * This container is used to provide/update the regular operating hours for a store location during the days of the week. A &lt;strong&gt;dayOfWeekEnum&lt;/strong&gt; field and an &lt;strong&gt;intervals&lt;/strong&gt; container will be needed for each day of the week that the store location is open. Note that if operating hours are already set for an inventory location for a specific day of the week, whatever is set through an &lt;strong&gt;updateInventoryLocation&lt;/strong&gt; call will override those existing hours.
   * @return operatingHours
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "This container is used to provide/update the regular operating hours for a store location during the days of the week. A <strong>dayOfWeekEnum</strong> field and an <strong>intervals</strong> container will be needed for each day of the week that the store location is open. Note that if operating hours are already set for an inventory location for a specific day of the week, whatever is set through an <strong>updateInventoryLocation</strong> call will override those existing hours.")

  public List<OperatingHours> getOperatingHours() {
    return operatingHours;
  }


  public void setOperatingHours(List<OperatingHours> operatingHours) {
    this.operatingHours = operatingHours;
  }


  public InventoryLocation phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * This text field is used by the merchant to provide/update the phone number for the inventory location. The phone number that is passed in this field will replace any other phone number that may be defined for this field. &lt;br&gt;&lt;br&gt;&lt;b&gt;Max length&lt;/b&gt;: 36
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This text field is used by the merchant to provide/update the phone number for the inventory location. The phone number that is passed in this field will replace any other phone number that may be defined for this field. <br><br><b>Max length</b>: 36")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    this.phone = phone;
  }


  public InventoryLocation specialHours(List<SpecialHours> specialHours) {
    
    this.specialHours = specialHours;
    return this;
  }

  public InventoryLocation addSpecialHoursItem(SpecialHours specialHoursItem) {
    if (this.specialHours == null) {
      this.specialHours = new ArrayList<SpecialHours>();
    }
    this.specialHours.add(specialHoursItem);
    return this;
  }

   /**
   * This container is used to provide/update the special operating hours for a store location on a specific date, such as a holiday. The special hours specified for the specific date will override the normal operating hours for that particular day of the week. If special hours have already been set up for an inventory location, specifying special hours through an &lt;strong&gt;updateInventoryLocation&lt;/strong&gt; call will only add to the list, unless the date(s) used are the same special date(s) already set up, in which case, the special hours set up through the &lt;strong&gt;updateInventoryLocation&lt;/strong&gt; call will override the existing special hours.
   * @return specialHours
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "This container is used to provide/update the special operating hours for a store location on a specific date, such as a holiday. The special hours specified for the specific date will override the normal operating hours for that particular day of the week. If special hours have already been set up for an inventory location, specifying special hours through an <strong>updateInventoryLocation</strong> call will only add to the list, unless the date(s) used are the same special date(s) already set up, in which case, the special hours set up through the <strong>updateInventoryLocation</strong> call will override the existing special hours.")

  public List<SpecialHours> getSpecialHours() {
    return specialHours;
  }


  public void setSpecialHours(List<SpecialHours> specialHours) {
    this.specialHours = specialHours;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InventoryLocation inventoryLocation = (InventoryLocation) o;
    return Objects.equals(this.locationAdditionalInformation, inventoryLocation.locationAdditionalInformation) &&
        Objects.equals(this.locationInstructions, inventoryLocation.locationInstructions) &&
        Objects.equals(this.locationWebUrl, inventoryLocation.locationWebUrl) &&
        Objects.equals(this.name, inventoryLocation.name) &&
        Objects.equals(this.operatingHours, inventoryLocation.operatingHours) &&
        Objects.equals(this.phone, inventoryLocation.phone) &&
        Objects.equals(this.specialHours, inventoryLocation.specialHours);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationAdditionalInformation, locationInstructions, locationWebUrl, name, operatingHours, phone, specialHours);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InventoryLocation {\n");
    sb.append("    locationAdditionalInformation: ").append(toIndentedString(locationAdditionalInformation)).append("\n");
    sb.append("    locationInstructions: ").append(toIndentedString(locationInstructions)).append("\n");
    sb.append("    locationWebUrl: ").append(toIndentedString(locationWebUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    operatingHours: ").append(toIndentedString(operatingHours)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    specialHours: ").append(toIndentedString(specialHours)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

