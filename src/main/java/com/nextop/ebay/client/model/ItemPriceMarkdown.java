/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.SelectedInventoryDiscount;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type defines the fields used to describe an item price markdown promotion.
 */
@ApiModel(description = "This type defines the fields used to describe an item price markdown promotion.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class ItemPriceMarkdown implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_APPLY_FREE_SHIPPING = "applyFreeShipping";
  @SerializedName(SERIALIZED_NAME_APPLY_FREE_SHIPPING)
  private Boolean applyFreeShipping;

  public static final String SERIALIZED_NAME_AUTO_SELECT_FUTURE_INVENTORY = "autoSelectFutureInventory";
  @SerializedName(SERIALIZED_NAME_AUTO_SELECT_FUTURE_INVENTORY)
  private Boolean autoSelectFutureInventory;

  public static final String SERIALIZED_NAME_BLOCK_PRICE_INCREASE_IN_ITEM_REVISION = "blockPriceIncreaseInItemRevision";
  @SerializedName(SERIALIZED_NAME_BLOCK_PRICE_INCREASE_IN_ITEM_REVISION)
  private Boolean blockPriceIncreaseInItemRevision;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_MARKETPLACE_ID = "marketplaceId";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_ID)
  private String marketplaceId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private String priority;

  public static final String SERIALIZED_NAME_PROMOTION_IMAGE_URL = "promotionImageUrl";
  @SerializedName(SERIALIZED_NAME_PROMOTION_IMAGE_URL)
  private String promotionImageUrl;

  public static final String SERIALIZED_NAME_PROMOTION_STATUS = "promotionStatus";
  @SerializedName(SERIALIZED_NAME_PROMOTION_STATUS)
  private String promotionStatus;

  public static final String SERIALIZED_NAME_SELECTED_INVENTORY_DISCOUNTS = "selectedInventoryDiscounts";
  @SerializedName(SERIALIZED_NAME_SELECTED_INVENTORY_DISCOUNTS)
  private List<SelectedInventoryDiscount> selectedInventoryDiscounts = null;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;


  public ItemPriceMarkdown applyFreeShipping(Boolean applyFreeShipping) {
    
    this.applyFreeShipping = applyFreeShipping;
    return this;
  }

   /**
   * If set to &lt;code&gt;true&lt;/code&gt;, free shipping is applied to the first shipping service specified for the item. The first domestic shipping option is set to \&quot;free shipping,\&quot; regardless if the shipping &lt;b&gt;optionType&lt;/b&gt; for that service is set to &lt;code&gt;FLAT_RATE&lt;/code&gt;, &lt;code&gt;CALCULATED&lt;/code&gt;, or &lt;code&gt;NOT_SPECIFIED&lt;/code&gt; (freight). This flag essentially adds free shipping as a promotional bonus. &lt;br&gt;&lt;br&gt;&lt;b&gt;Default:&lt;/b&gt; &lt;code&gt;false&lt;/code&gt;
   * @return applyFreeShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If set to <code>true</code>, free shipping is applied to the first shipping service specified for the item. The first domestic shipping option is set to \"free shipping,\" regardless if the shipping <b>optionType</b> for that service is set to <code>FLAT_RATE</code>, <code>CALCULATED</code>, or <code>NOT_SPECIFIED</code> (freight). This flag essentially adds free shipping as a promotional bonus. <br><br><b>Default:</b> <code>false</code>")

  public Boolean getApplyFreeShipping() {
    return applyFreeShipping;
  }


  public void setApplyFreeShipping(Boolean applyFreeShipping) {
    this.applyFreeShipping = applyFreeShipping;
  }


  public ItemPriceMarkdown autoSelectFutureInventory(Boolean autoSelectFutureInventory) {
    
    this.autoSelectFutureInventory = autoSelectFutureInventory;
    return this;
  }

   /**
   * If set to &lt;code&gt;true&lt;/code&gt;, eBay will automatically add inventory items to the markdown promotion if they meet the &lt;b&gt;selectedInventoryDiscounts&lt;/b&gt; criteria specified for the markdown promotion.  &lt;br&gt;&lt;br&gt;&lt;b&gt;Default:&lt;/b&gt; &lt;code&gt;false&lt;/code&gt;
   * @return autoSelectFutureInventory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If set to <code>true</code>, eBay will automatically add inventory items to the markdown promotion if they meet the <b>selectedInventoryDiscounts</b> criteria specified for the markdown promotion.  <br><br><b>Default:</b> <code>false</code>")

  public Boolean getAutoSelectFutureInventory() {
    return autoSelectFutureInventory;
  }


  public void setAutoSelectFutureInventory(Boolean autoSelectFutureInventory) {
    this.autoSelectFutureInventory = autoSelectFutureInventory;
  }


  public ItemPriceMarkdown blockPriceIncreaseInItemRevision(Boolean blockPriceIncreaseInItemRevision) {
    
    this.blockPriceIncreaseInItemRevision = blockPriceIncreaseInItemRevision;
    return this;
  }

   /**
   * If set to &lt;code&gt;true&lt;/code&gt;, price increases (including removing the free shipping flag) are blocked and an error message is returned if a seller attempts to adjust the price of an item that&#39;s partaking in this markdown promotion. If set to &lt;code&gt;false&lt;/code&gt;, an item is dropped from the markdown promotion if the seller adjusts the price.  &lt;br&gt;&lt;br&gt;&lt;b&gt;Default:&lt;/b&gt; &lt;code&gt;false&lt;/code&gt;
   * @return blockPriceIncreaseInItemRevision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If set to <code>true</code>, price increases (including removing the free shipping flag) are blocked and an error message is returned if a seller attempts to adjust the price of an item that's partaking in this markdown promotion. If set to <code>false</code>, an item is dropped from the markdown promotion if the seller adjusts the price.  <br><br><b>Default:</b> <code>false</code>")

  public Boolean getBlockPriceIncreaseInItemRevision() {
    return blockPriceIncreaseInItemRevision;
  }


  public void setBlockPriceIncreaseInItemRevision(Boolean blockPriceIncreaseInItemRevision) {
    this.blockPriceIncreaseInItemRevision = blockPriceIncreaseInItemRevision;
  }


  public ItemPriceMarkdown description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * This field is required if you are configuring an MARKDOWN_SALE promotion. &lt;br&gt;&lt;br&gt;This is the seller-defined \&quot;tag line\&quot; for the offer, such as \&quot;Save on designer shoes.\&quot; A tag line appears under the \&quot;offer-type text\&quot; that is generated for the promotion. The text is displayed on the offer tile that is shown on the seller&#39;s &lt;b&gt;All Offers&lt;/b&gt; page and on the event page for the promotion.  &lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; Offer-type text is a teaser that&#39;s presented throughout the buyer&#39;s journey through the sales flow and is generated by eBay. This text is not editable by the seller&amp;mdash;it&#39;s derived from the settings in the &lt;b&gt;discountRules&lt;/b&gt; and &lt;b&gt;discountSpecification&lt;/b&gt; fields&amp;mdash;and can be, for example, \&quot;20% off\&quot;.&lt;/p&gt;  &lt;br&gt;&lt;b&gt;Maximum length:&lt;/b&gt; 50
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field is required if you are configuring an MARKDOWN_SALE promotion. <br><br>This is the seller-defined \"tag line\" for the offer, such as \"Save on designer shoes.\" A tag line appears under the \"offer-type text\" that is generated for the promotion. The text is displayed on the offer tile that is shown on the seller's <b>All Offers</b> page and on the event page for the promotion.  <p class=\"tablenote\"><b>Note:</b> Offer-type text is a teaser that's presented throughout the buyer's journey through the sales flow and is generated by eBay. This text is not editable by the seller&mdash;it's derived from the settings in the <b>discountRules</b> and <b>discountSpecification</b> fields&mdash;and can be, for example, \"20% off\".</p>  <br><b>Maximum length:</b> 50")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ItemPriceMarkdown endDate(String endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * The date and time the promotion ends, in UTC format (&lt;code&gt;yyyy-MM-ddThh:mm:ssZ&lt;/code&gt;). The value supplied for &lt;b&gt;endDate&lt;/b&gt; must be at least 24 hours after the value supplied for the &lt;b&gt;startDate&lt;/b&gt; of the markdown promotion.&lt;br&gt;&lt;br&gt;For display purposes, convert this time into the local time of the seller.  &lt;br&gt;&lt;br&gt;&lt;b&gt;Max value:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;14&lt;/code&gt; days for the AT, CH, DE, ES, FR, IE, IT, and UK, marketplaces.&lt;/li&gt;  &lt;li&gt;&lt;code&gt;45&lt;/code&gt; days for all other marketplaces.&lt;/li&gt;&lt;/ul&gt;
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time the promotion ends, in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>). The value supplied for <b>endDate</b> must be at least 24 hours after the value supplied for the <b>startDate</b> of the markdown promotion.<br><br>For display purposes, convert this time into the local time of the seller.  <br><br><b>Max value:</b><ul><li><code>14</code> days for the AT, CH, DE, ES, FR, IE, IT, and UK, marketplaces.</li>  <li><code>45</code> days for all other marketplaces.</li></ul>")

  public String getEndDate() {
    return endDate;
  }


  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  public ItemPriceMarkdown marketplaceId(String marketplaceId) {
    
    this.marketplaceId = marketplaceId;
    return this;
  }

   /**
   * The eBay marketplace ID of the site where the markdown promotion is hosted. Markdown promotions are supported on all eBay marketplaces. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return marketplaceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The eBay marketplace ID of the site where the markdown promotion is hosted. Markdown promotions are supported on all eBay marketplaces. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum'>eBay API documentation</a>")

  public String getMarketplaceId() {
    return marketplaceId;
  }


  public void setMarketplaceId(String marketplaceId) {
    this.marketplaceId = marketplaceId;
  }


  public ItemPriceMarkdown name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The seller-defined name or &#39;title&#39; of the promotion that the seller can use to identify a promotion. This label is not displayed in end-user flows.  &lt;br&gt;&lt;br&gt;&lt;b&gt;Maximum length:&lt;/b&gt; 90
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The seller-defined name or 'title' of the promotion that the seller can use to identify a promotion. This label is not displayed in end-user flows.  <br><br><b>Maximum length:</b> 90")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ItemPriceMarkdown priority(String priority) {
    
    this.priority = priority;
    return this;
  }

   /**
   * This field is ignored in markdown promotions. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionPriorityEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return priority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field is ignored in markdown promotions. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionPriorityEnum'>eBay API documentation</a>")

  public String getPriority() {
    return priority;
  }


  public void setPriority(String priority) {
    this.priority = priority;
  }


  public ItemPriceMarkdown promotionImageUrl(String promotionImageUrl) {
    
    this.promotionImageUrl = promotionImageUrl;
    return this;
  }

   /**
   * Required for CODED_COUPON, MARKDOWN_SALE, and ORDER_DISCOUNT promotions, populate this field with a URL that points to an image to be used with the promotion. This image is displayed on the seller&#39;s &lt;b&gt;All Offers&lt;/b&gt; page. The URL must point to either JPEG or PNG image and it must be a minimum of 500x500 pixels in dimension and cannot exceed 12Mb in size.
   * @return promotionImageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Required for CODED_COUPON, MARKDOWN_SALE, and ORDER_DISCOUNT promotions, populate this field with a URL that points to an image to be used with the promotion. This image is displayed on the seller's <b>All Offers</b> page. The URL must point to either JPEG or PNG image and it must be a minimum of 500x500 pixels in dimension and cannot exceed 12Mb in size.")

  public String getPromotionImageUrl() {
    return promotionImageUrl;
  }


  public void setPromotionImageUrl(String promotionImageUrl) {
    this.promotionImageUrl = promotionImageUrl;
  }


  public ItemPriceMarkdown promotionStatus(String promotionStatus) {
    
    this.promotionStatus = promotionStatus;
    return this;
  }

   /**
   * The current status of the promotion. When creating a new promotion, you must set this value to either &lt;code&gt;DRAFT&lt;/code&gt; or &lt;code&gt;SCHEDULED&lt;/code&gt;.  &lt;br&gt;&lt;br&gt;Note that you must set this value to &lt;code&gt;SCHEDULED&lt;/code&gt; when you update a &lt;b&gt;RUNNING&lt;/b&gt; promotion. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionStatusEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return promotionStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The current status of the promotion. When creating a new promotion, you must set this value to either <code>DRAFT</code> or <code>SCHEDULED</code>.  <br><br>Note that you must set this value to <code>SCHEDULED</code> when you update a <b>RUNNING</b> promotion. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionStatusEnum'>eBay API documentation</a>")

  public String getPromotionStatus() {
    return promotionStatus;
  }


  public void setPromotionStatus(String promotionStatus) {
    this.promotionStatus = promotionStatus;
  }


  public ItemPriceMarkdown selectedInventoryDiscounts(List<SelectedInventoryDiscount> selectedInventoryDiscounts) {
    
    this.selectedInventoryDiscounts = selectedInventoryDiscounts;
    return this;
  }

  public ItemPriceMarkdown addSelectedInventoryDiscountsItem(SelectedInventoryDiscount selectedInventoryDiscountsItem) {
    if (this.selectedInventoryDiscounts == null) {
      this.selectedInventoryDiscounts = new ArrayList<SelectedInventoryDiscount>();
    }
    this.selectedInventoryDiscounts.add(selectedInventoryDiscountsItem);
    return this;
  }

   /**
   * A list that defines the sets of selected items for the markdown promotion and the discount specified for promotion.
   * @return selectedInventoryDiscounts
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "A list that defines the sets of selected items for the markdown promotion and the discount specified for promotion.")

  public List<SelectedInventoryDiscount> getSelectedInventoryDiscounts() {
    return selectedInventoryDiscounts;
  }


  public void setSelectedInventoryDiscounts(List<SelectedInventoryDiscount> selectedInventoryDiscounts) {
    this.selectedInventoryDiscounts = selectedInventoryDiscounts;
  }


  public ItemPriceMarkdown startDate(String startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * The date and time the promotion starts in UTC format (&lt;code&gt;yyyy-MM-ddThh:mm:ssZ&lt;/code&gt;). For display purposes, convert this time into the local time of the seller.
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time the promotion starts in UTC format (<code>yyyy-MM-ddThh:mm:ssZ</code>). For display purposes, convert this time into the local time of the seller.")

  public String getStartDate() {
    return startDate;
  }


  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemPriceMarkdown itemPriceMarkdown = (ItemPriceMarkdown) o;
    return Objects.equals(this.applyFreeShipping, itemPriceMarkdown.applyFreeShipping) &&
        Objects.equals(this.autoSelectFutureInventory, itemPriceMarkdown.autoSelectFutureInventory) &&
        Objects.equals(this.blockPriceIncreaseInItemRevision, itemPriceMarkdown.blockPriceIncreaseInItemRevision) &&
        Objects.equals(this.description, itemPriceMarkdown.description) &&
        Objects.equals(this.endDate, itemPriceMarkdown.endDate) &&
        Objects.equals(this.marketplaceId, itemPriceMarkdown.marketplaceId) &&
        Objects.equals(this.name, itemPriceMarkdown.name) &&
        Objects.equals(this.priority, itemPriceMarkdown.priority) &&
        Objects.equals(this.promotionImageUrl, itemPriceMarkdown.promotionImageUrl) &&
        Objects.equals(this.promotionStatus, itemPriceMarkdown.promotionStatus) &&
        Objects.equals(this.selectedInventoryDiscounts, itemPriceMarkdown.selectedInventoryDiscounts) &&
        Objects.equals(this.startDate, itemPriceMarkdown.startDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applyFreeShipping, autoSelectFutureInventory, blockPriceIncreaseInItemRevision, description, endDate, marketplaceId, name, priority, promotionImageUrl, promotionStatus, selectedInventoryDiscounts, startDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemPriceMarkdown {\n");
    sb.append("    applyFreeShipping: ").append(toIndentedString(applyFreeShipping)).append("\n");
    sb.append("    autoSelectFutureInventory: ").append(toIndentedString(autoSelectFutureInventory)).append("\n");
    sb.append("    blockPriceIncreaseInItemRevision: ").append(toIndentedString(blockPriceIncreaseInItemRevision)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    marketplaceId: ").append(toIndentedString(marketplaceId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    promotionImageUrl: ").append(toIndentedString(promotionImageUrl)).append("\n");
    sb.append("    promotionStatus: ").append(toIndentedString(promotionStatus)).append("\n");
    sb.append("    selectedInventoryDiscounts: ").append(toIndentedString(selectedInventoryDiscounts)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

