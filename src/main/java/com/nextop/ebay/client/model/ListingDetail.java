/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.Amount;
import com.nextop.ebay.client.model.ItemMarkdownStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type defines the fields that describe a listing that is in a promotion.
 */
@ApiModel(description = "This type defines the fields that describe a listing that is in a promotion.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class ListingDetail implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_CURRENT_PRICE = "currentPrice";
  @SerializedName(SERIALIZED_NAME_CURRENT_PRICE)
  private Amount currentPrice;

  public static final String SERIALIZED_NAME_FREE_SHIPPING = "freeShipping";
  @SerializedName(SERIALIZED_NAME_FREE_SHIPPING)
  private Boolean freeShipping;

  public static final String SERIALIZED_NAME_INVENTORY_REFERENCE_ID = "inventoryReferenceId";
  @SerializedName(SERIALIZED_NAME_INVENTORY_REFERENCE_ID)
  private String inventoryReferenceId;

  public static final String SERIALIZED_NAME_INVENTORY_REFERENCE_TYPE = "inventoryReferenceType";
  @SerializedName(SERIALIZED_NAME_INVENTORY_REFERENCE_TYPE)
  private String inventoryReferenceType;

  public static final String SERIALIZED_NAME_LISTING_CATEGORY_ID = "listingCategoryId";
  @SerializedName(SERIALIZED_NAME_LISTING_CATEGORY_ID)
  private String listingCategoryId;

  public static final String SERIALIZED_NAME_LISTING_CONDITION = "listingCondition";
  @SerializedName(SERIALIZED_NAME_LISTING_CONDITION)
  private String listingCondition;

  public static final String SERIALIZED_NAME_LISTING_CONDITION_ID = "listingConditionId";
  @SerializedName(SERIALIZED_NAME_LISTING_CONDITION_ID)
  private String listingConditionId;

  public static final String SERIALIZED_NAME_LISTING_ID = "listingId";
  @SerializedName(SERIALIZED_NAME_LISTING_ID)
  private String listingId;

  public static final String SERIALIZED_NAME_LISTING_PROMOTION_STATUSES = "listingPromotionStatuses";
  @SerializedName(SERIALIZED_NAME_LISTING_PROMOTION_STATUSES)
  private List<ItemMarkdownStatus> listingPromotionStatuses = null;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_STORE_CATEGORY_ID = "storeCategoryId";
  @SerializedName(SERIALIZED_NAME_STORE_CATEGORY_ID)
  private String storeCategoryId;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;


  public ListingDetail currentPrice(Amount currentPrice) {
    
    this.currentPrice = currentPrice;
    return this;
  }

   /**
   * Get currentPrice
   * @return currentPrice
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getCurrentPrice() {
    return currentPrice;
  }


  public void setCurrentPrice(Amount currentPrice) {
    this.currentPrice = currentPrice;
  }


  public ListingDetail freeShipping(Boolean freeShipping) {
    
    this.freeShipping = freeShipping;
    return this;
  }

   /**
   * If set to &lt;code&gt;true&lt;/code&gt;, the seller pays for the shipping (or that the item is marked for local pickup only) In this case, the listing does not have an associated shipping cost for the first listed domestic-shipping option (even if the first domestic-shipping option specifies a flat-rate or calculated shipping option). If &lt;code&gt;false&lt;/code&gt;, the buyer is required to pay for a flat-rate or calculated cost shipping service.
   * @return freeShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If set to <code>true</code>, the seller pays for the shipping (or that the item is marked for local pickup only) In this case, the listing does not have an associated shipping cost for the first listed domestic-shipping option (even if the first domestic-shipping option specifies a flat-rate or calculated shipping option). If <code>false</code>, the buyer is required to pay for a flat-rate or calculated cost shipping service.")

  public Boolean getFreeShipping() {
    return freeShipping;
  }


  public void setFreeShipping(Boolean freeShipping) {
    this.freeShipping = freeShipping;
  }


  public ListingDetail inventoryReferenceId(String inventoryReferenceId) {
    
    this.inventoryReferenceId = inventoryReferenceId;
    return this;
  }

   /**
   * The seller&#39;s inventory reference ID for a listing. Also known as the \&quot;SKU\&quot; or \&quot;custom label,\&quot; an inventory reference ID is either the ID of the listing or, if the listing has variations (such as a shirt that&#39;s available in multiple sizes and colors), the ID of the parent listing.
   * @return inventoryReferenceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The seller's inventory reference ID for a listing. Also known as the \"SKU\" or \"custom label,\" an inventory reference ID is either the ID of the listing or, if the listing has variations (such as a shirt that's available in multiple sizes and colors), the ID of the parent listing.")

  public String getInventoryReferenceId() {
    return inventoryReferenceId;
  }


  public void setInventoryReferenceId(String inventoryReferenceId) {
    this.inventoryReferenceId = inventoryReferenceId;
  }


  public ListingDetail inventoryReferenceType(String inventoryReferenceType) {
    
    this.inventoryReferenceType = inventoryReferenceType;
    return this;
  }

   /**
   * Indicates the type of the &lt;b&gt;inventoryReferenceId&lt;/b&gt;, which can be either an individual item or a multi-SKU item (&lt;code&gt;INVENTORY_ITEM&lt;/code&gt; and &lt;code&gt;INVENTORY_ITEM_GROUP&lt;/code&gt;, respectively).  &lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; This value is not currently returned in the response.
   * @return inventoryReferenceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the type of the <b>inventoryReferenceId</b>, which can be either an individual item or a multi-SKU item (<code>INVENTORY_ITEM</code> and <code>INVENTORY_ITEM_GROUP</code>, respectively).  <br><br><b>Note:</b> This value is not currently returned in the response.")

  public String getInventoryReferenceType() {
    return inventoryReferenceType;
  }


  public void setInventoryReferenceType(String inventoryReferenceType) {
    this.inventoryReferenceType = inventoryReferenceType;
  }


  public ListingDetail listingCategoryId(String listingCategoryId) {
    
    this.listingCategoryId = listingCategoryId;
    return this;
  }

   /**
   * The ID of the category that listing belongs to. The ID is a numeric and unique identifier for the category that is assigned by eBay.
   * @return listingCategoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the category that listing belongs to. The ID is a numeric and unique identifier for the category that is assigned by eBay.")

  public String getListingCategoryId() {
    return listingCategoryId;
  }


  public void setListingCategoryId(String listingCategoryId) {
    this.listingCategoryId = listingCategoryId;
  }


  public ListingDetail listingCondition(String listingCondition) {
    
    this.listingCondition = listingCondition;
    return this;
  }

   /**
   * An eBay-assigned value that indicates condition of the associated item. For more information, see &lt;a href&#x3D;\&quot;/api-docs/sell/static/metadata/condition-id-values.html\&quot;&gt;Item condition ID and name values&lt;/a&gt;.
   * @return listingCondition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An eBay-assigned value that indicates condition of the associated item. For more information, see <a href=\"/api-docs/sell/static/metadata/condition-id-values.html\">Item condition ID and name values</a>.")

  public String getListingCondition() {
    return listingCondition;
  }


  public void setListingCondition(String listingCondition) {
    this.listingCondition = listingCondition;
  }


  public ListingDetail listingConditionId(String listingConditionId) {
    
    this.listingConditionId = listingConditionId;
    return this;
  }

   /**
   * The ID of the condition associated with the item. For more information, see &lt;a href&#x3D;\&quot;/api-docs/sell/static/metadata/condition-id-values.html\&quot;&gt;Item condition ID and name values&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note: &lt;/b&gt; This value is not currently returned in the response.&lt;/span&gt;
   * @return listingConditionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the condition associated with the item. For more information, see <a href=\"/api-docs/sell/static/metadata/condition-id-values.html\">Item condition ID and name values</a>.<br /><br /><span class=\"tablenote\"><b>Note: </b> This value is not currently returned in the response.</span>")

  public String getListingConditionId() {
    return listingConditionId;
  }


  public void setListingConditionId(String listingConditionId) {
    this.listingConditionId = listingConditionId;
  }


  public ListingDetail listingId(String listingId) {
    
    this.listingId = listingId;
    return this;
  }

   /**
   * A unique eBay-assigned ID that is generated when the item is listed.
   * @return listingId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique eBay-assigned ID that is generated when the item is listed.")

  public String getListingId() {
    return listingId;
  }


  public void setListingId(String listingId) {
    this.listingId = listingId;
  }


  public ListingDetail listingPromotionStatuses(List<ItemMarkdownStatus> listingPromotionStatuses) {
    
    this.listingPromotionStatuses = listingPromotionStatuses;
    return this;
  }

  public ListingDetail addListingPromotionStatusesItem(ItemMarkdownStatus listingPromotionStatusesItem) {
    if (this.listingPromotionStatuses == null) {
      this.listingPromotionStatuses = new ArrayList<ItemMarkdownStatus>();
    }
    this.listingPromotionStatuses.add(listingPromotionStatusesItem);
    return this;
  }

   /**
   * A list of the status values assigned to the item and the date that each new status was assigned.
   * @return listingPromotionStatuses
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "A list of the status values assigned to the item and the date that each new status was assigned.")

  public List<ItemMarkdownStatus> getListingPromotionStatuses() {
    return listingPromotionStatuses;
  }


  public void setListingPromotionStatuses(List<ItemMarkdownStatus> listingPromotionStatuses) {
    this.listingPromotionStatuses = listingPromotionStatuses;
  }


  public ListingDetail quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * The number of items being sold in the listing.
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of items being sold in the listing.")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public ListingDetail storeCategoryId(String storeCategoryId) {
    
    this.storeCategoryId = storeCategoryId;
    return this;
  }

   /**
   * Store CategoryId (if any) that to which the listing belongs. This field is blank if there is no seller Store category ID.
   * @return storeCategoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Store CategoryId (if any) that to which the listing belongs. This field is blank if there is no seller Store category ID.")

  public String getStoreCategoryId() {
    return storeCategoryId;
  }


  public void setStoreCategoryId(String storeCategoryId) {
    this.storeCategoryId = storeCategoryId;
  }


  public ListingDetail title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The seller-defined title of the listing that a seller can use to identify the item.  This label is not displayed in end-user flows.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The seller-defined title of the listing that a seller can use to identify the item.  This label is not displayed in end-user flows.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListingDetail listingDetail = (ListingDetail) o;
    return Objects.equals(this.currentPrice, listingDetail.currentPrice) &&
        Objects.equals(this.freeShipping, listingDetail.freeShipping) &&
        Objects.equals(this.inventoryReferenceId, listingDetail.inventoryReferenceId) &&
        Objects.equals(this.inventoryReferenceType, listingDetail.inventoryReferenceType) &&
        Objects.equals(this.listingCategoryId, listingDetail.listingCategoryId) &&
        Objects.equals(this.listingCondition, listingDetail.listingCondition) &&
        Objects.equals(this.listingConditionId, listingDetail.listingConditionId) &&
        Objects.equals(this.listingId, listingDetail.listingId) &&
        Objects.equals(this.listingPromotionStatuses, listingDetail.listingPromotionStatuses) &&
        Objects.equals(this.quantity, listingDetail.quantity) &&
        Objects.equals(this.storeCategoryId, listingDetail.storeCategoryId) &&
        Objects.equals(this.title, listingDetail.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentPrice, freeShipping, inventoryReferenceId, inventoryReferenceType, listingCategoryId, listingCondition, listingConditionId, listingId, listingPromotionStatuses, quantity, storeCategoryId, title);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListingDetail {\n");
    sb.append("    currentPrice: ").append(toIndentedString(currentPrice)).append("\n");
    sb.append("    freeShipping: ").append(toIndentedString(freeShipping)).append("\n");
    sb.append("    inventoryReferenceId: ").append(toIndentedString(inventoryReferenceId)).append("\n");
    sb.append("    inventoryReferenceType: ").append(toIndentedString(inventoryReferenceType)).append("\n");
    sb.append("    listingCategoryId: ").append(toIndentedString(listingCategoryId)).append("\n");
    sb.append("    listingCondition: ").append(toIndentedString(listingCondition)).append("\n");
    sb.append("    listingConditionId: ").append(toIndentedString(listingConditionId)).append("\n");
    sb.append("    listingId: ").append(toIndentedString(listingId)).append("\n");
    sb.append("    listingPromotionStatuses: ").append(toIndentedString(listingPromotionStatuses)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    storeCategoryId: ").append(toIndentedString(storeCategoryId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

