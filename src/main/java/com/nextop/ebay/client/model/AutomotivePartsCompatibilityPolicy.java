/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * AutomotivePartsCompatibilityPolicy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class AutomotivePartsCompatibilityPolicy implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "categoryId";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private String categoryId;

  public static final String SERIALIZED_NAME_CATEGORY_TREE_ID = "categoryTreeId";
  @SerializedName(SERIALIZED_NAME_CATEGORY_TREE_ID)
  private String categoryTreeId;

  public static final String SERIALIZED_NAME_COMPATIBILITY_BASED_ON = "compatibilityBasedOn";
  @SerializedName(SERIALIZED_NAME_COMPATIBILITY_BASED_ON)
  private String compatibilityBasedOn;

  public static final String SERIALIZED_NAME_COMPATIBLE_VEHICLE_TYPES = "compatibleVehicleTypes";
  @SerializedName(SERIALIZED_NAME_COMPATIBLE_VEHICLE_TYPES)
  private List<String> compatibleVehicleTypes = null;

  public static final String SERIALIZED_NAME_MAX_NUMBER_OF_COMPATIBLE_VEHICLES = "maxNumberOfCompatibleVehicles";
  @SerializedName(SERIALIZED_NAME_MAX_NUMBER_OF_COMPATIBLE_VEHICLES)
  private Integer maxNumberOfCompatibleVehicles;


  public AutomotivePartsCompatibilityPolicy categoryId(String categoryId) {
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * The category ID to which the automotive-parts-compatibility policies apply.
   * @return categoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The category ID to which the automotive-parts-compatibility policies apply.")

  public String getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }


  public AutomotivePartsCompatibilityPolicy categoryTreeId(String categoryTreeId) {
    
    this.categoryTreeId = categoryTreeId;
    return this;
  }

   /**
   * A value that indicates the root node of the category tree used for the response set. Each marketplace is based on a category tree whose root node is indicated by this unique category ID value. All category policy information returned by this call pertains to the categories included below this root node of the tree.    &lt;br&gt;&lt;br&gt;A &lt;i&gt;category tree&lt;/i&gt; is a hierarchical framework of eBay categories that begins at the root node of the tree and extends to include all the child nodes in the tree. Each child node in the tree is an eBay category that is represented by a unique &lt;b&gt;categoryId&lt;/b&gt; value. Within a category tree, the root node has no parent node and &lt;i&gt;leaf nodes&lt;/i&gt; are nodes that have no child nodes.
   * @return categoryTreeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A value that indicates the root node of the category tree used for the response set. Each marketplace is based on a category tree whose root node is indicated by this unique category ID value. All category policy information returned by this call pertains to the categories included below this root node of the tree.    <br><br>A <i>category tree</i> is a hierarchical framework of eBay categories that begins at the root node of the tree and extends to include all the child nodes in the tree. Each child node in the tree is an eBay category that is represented by a unique <b>categoryId</b> value. Within a category tree, the root node has no parent node and <i>leaf nodes</i> are nodes that have no child nodes.")

  public String getCategoryTreeId() {
    return categoryTreeId;
  }


  public void setCategoryTreeId(String categoryTreeId) {
    this.categoryTreeId = categoryTreeId;
  }


  public AutomotivePartsCompatibilityPolicy compatibilityBasedOn(String compatibilityBasedOn) {
    
    this.compatibilityBasedOn = compatibilityBasedOn;
    return this;
  }

   /**
   * Indicates whether the category supports parts compatibility by either &lt;code&gt;ASSEMBLY&lt;/code&gt; or by &lt;code&gt;SPECIFICATION&lt;/code&gt;. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/metadata/types/sel:CompatibilityTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return compatibilityBasedOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the category supports parts compatibility by either <code>ASSEMBLY</code> or by <code>SPECIFICATION</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:CompatibilityTypeEnum'>eBay API documentation</a>")

  public String getCompatibilityBasedOn() {
    return compatibilityBasedOn;
  }


  public void setCompatibilityBasedOn(String compatibilityBasedOn) {
    this.compatibilityBasedOn = compatibilityBasedOn;
  }


  public AutomotivePartsCompatibilityPolicy compatibleVehicleTypes(List<String> compatibleVehicleTypes) {
    
    this.compatibleVehicleTypes = compatibleVehicleTypes;
    return this;
  }

  public AutomotivePartsCompatibilityPolicy addCompatibleVehicleTypesItem(String compatibleVehicleTypesItem) {
    if (this.compatibleVehicleTypes == null) {
      this.compatibleVehicleTypes = new ArrayList<String>();
    }
    this.compatibleVehicleTypes.add(compatibleVehicleTypesItem);
    return this;
  }

   /**
   * Indicates the compatibility classification of the part based on high-level vehicle types.
   * @return compatibleVehicleTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the compatibility classification of the part based on high-level vehicle types.")

  public List<String> getCompatibleVehicleTypes() {
    return compatibleVehicleTypes;
  }


  public void setCompatibleVehicleTypes(List<String> compatibleVehicleTypes) {
    this.compatibleVehicleTypes = compatibleVehicleTypes;
  }


  public AutomotivePartsCompatibilityPolicy maxNumberOfCompatibleVehicles(Integer maxNumberOfCompatibleVehicles) {
    
    this.maxNumberOfCompatibleVehicles = maxNumberOfCompatibleVehicles;
    return this;
  }

   /**
   * Specifies the maximum number of compatible vehicle-applications allowed per item.
   * @return maxNumberOfCompatibleVehicles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum number of compatible vehicle-applications allowed per item.")

  public Integer getMaxNumberOfCompatibleVehicles() {
    return maxNumberOfCompatibleVehicles;
  }


  public void setMaxNumberOfCompatibleVehicles(Integer maxNumberOfCompatibleVehicles) {
    this.maxNumberOfCompatibleVehicles = maxNumberOfCompatibleVehicles;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomotivePartsCompatibilityPolicy automotivePartsCompatibilityPolicy = (AutomotivePartsCompatibilityPolicy) o;
    return Objects.equals(this.categoryId, automotivePartsCompatibilityPolicy.categoryId) &&
        Objects.equals(this.categoryTreeId, automotivePartsCompatibilityPolicy.categoryTreeId) &&
        Objects.equals(this.compatibilityBasedOn, automotivePartsCompatibilityPolicy.compatibilityBasedOn) &&
        Objects.equals(this.compatibleVehicleTypes, automotivePartsCompatibilityPolicy.compatibleVehicleTypes) &&
        Objects.equals(this.maxNumberOfCompatibleVehicles, automotivePartsCompatibilityPolicy.maxNumberOfCompatibleVehicles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryId, categoryTreeId, compatibilityBasedOn, compatibleVehicleTypes, maxNumberOfCompatibleVehicles);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomotivePartsCompatibilityPolicy {\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    categoryTreeId: ").append(toIndentedString(categoryTreeId)).append("\n");
    sb.append("    compatibilityBasedOn: ").append(toIndentedString(compatibilityBasedOn)).append("\n");
    sb.append("    compatibleVehicleTypes: ").append(toIndentedString(compatibleVehicleTypes)).append("\n");
    sb.append("    maxNumberOfCompatibleVehicles: ").append(toIndentedString(maxNumberOfCompatibleVehicles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

