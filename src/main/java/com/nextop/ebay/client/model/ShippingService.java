/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.Amount;
import com.nextop.ebay.client.model.RegionSet;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type is used by the &lt;b&gt;shippingServices&lt;/b&gt; array, an array that provides details about every domestic and international shipping service option that is defined for the policy.
 */
@ApiModel(description = "This type is used by the <b>shippingServices</b> array, an array that provides details about every domestic and international shipping service option that is defined for the policy.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class ShippingService implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ADDITIONAL_SHIPPING_COST = "additionalShippingCost";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_SHIPPING_COST)
  private Amount additionalShippingCost;

  public static final String SERIALIZED_NAME_BUYER_RESPONSIBLE_FOR_PICKUP = "buyerResponsibleForPickup";
  @SerializedName(SERIALIZED_NAME_BUYER_RESPONSIBLE_FOR_PICKUP)
  private Boolean buyerResponsibleForPickup;

  public static final String SERIALIZED_NAME_BUYER_RESPONSIBLE_FOR_SHIPPING = "buyerResponsibleForShipping";
  @SerializedName(SERIALIZED_NAME_BUYER_RESPONSIBLE_FOR_SHIPPING)
  private Boolean buyerResponsibleForShipping;

  public static final String SERIALIZED_NAME_CASH_ON_DELIVERY_FEE = "cashOnDeliveryFee";
  @SerializedName(SERIALIZED_NAME_CASH_ON_DELIVERY_FEE)
  private Amount cashOnDeliveryFee;

  public static final String SERIALIZED_NAME_FREE_SHIPPING = "freeShipping";
  @SerializedName(SERIALIZED_NAME_FREE_SHIPPING)
  private Boolean freeShipping;

  public static final String SERIALIZED_NAME_SHIPPING_CARRIER_CODE = "shippingCarrierCode";
  @SerializedName(SERIALIZED_NAME_SHIPPING_CARRIER_CODE)
  private String shippingCarrierCode;

  public static final String SERIALIZED_NAME_SHIPPING_COST = "shippingCost";
  @SerializedName(SERIALIZED_NAME_SHIPPING_COST)
  private Amount shippingCost;

  public static final String SERIALIZED_NAME_SHIPPING_SERVICE_CODE = "shippingServiceCode";
  @SerializedName(SERIALIZED_NAME_SHIPPING_SERVICE_CODE)
  private String shippingServiceCode;

  public static final String SERIALIZED_NAME_SHIP_TO_LOCATIONS = "shipToLocations";
  @SerializedName(SERIALIZED_NAME_SHIP_TO_LOCATIONS)
  private RegionSet shipToLocations;

  public static final String SERIALIZED_NAME_SORT_ORDER = "sortOrder";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  private Integer sortOrder;

  public static final String SERIALIZED_NAME_SURCHARGE = "surcharge";
  @SerializedName(SERIALIZED_NAME_SURCHARGE)
  private Amount surcharge;


  public ShippingService additionalShippingCost(Amount additionalShippingCost) {
    
    this.additionalShippingCost = additionalShippingCost;
    return this;
  }

   /**
   * Get additionalShippingCost
   * @return additionalShippingCost
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getAdditionalShippingCost() {
    return additionalShippingCost;
  }


  public void setAdditionalShippingCost(Amount additionalShippingCost) {
    this.additionalShippingCost = additionalShippingCost;
  }


  public ShippingService buyerResponsibleForPickup(Boolean buyerResponsibleForPickup) {
    
    this.buyerResponsibleForPickup = buyerResponsibleForPickup;
    return this;
  }

   /**
   * This field should be included and set to &lt;code&gt;true&lt;/code&gt; for a motor vehicle listing if it will be the buyer&#39;s responsibility to pick up the purchased motor vehicle after full payment is made. This field is only applicable to motor vehicle listings. In the majority of motor vehicle listings, the seller does make the buyer responsible for pickup or shipment of the vehicle. &lt;br/&gt;&lt;br/&gt;This field is returned if set.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Default&lt;/b&gt;: false
   * @return buyerResponsibleForPickup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field should be included and set to <code>true</code> for a motor vehicle listing if it will be the buyer's responsibility to pick up the purchased motor vehicle after full payment is made. This field is only applicable to motor vehicle listings. In the majority of motor vehicle listings, the seller does make the buyer responsible for pickup or shipment of the vehicle. <br/><br/>This field is returned if set.<br/><br/><b>Default</b>: false")

  public Boolean getBuyerResponsibleForPickup() {
    return buyerResponsibleForPickup;
  }


  public void setBuyerResponsibleForPickup(Boolean buyerResponsibleForPickup) {
    this.buyerResponsibleForPickup = buyerResponsibleForPickup;
  }


  public ShippingService buyerResponsibleForShipping(Boolean buyerResponsibleForShipping) {
    
    this.buyerResponsibleForShipping = buyerResponsibleForShipping;
    return this;
  }

   /**
   * This field should be included and set to &lt;code&gt;true&lt;/code&gt; for a motor vehicle listing if it will be the buyer&#39;s responsibility to arrange for shipment of a purchased motor vehicle after full payment is made. This field is only applicable to motor vehicle listings. In the majority of motor vehicle listings, the seller does make the buyer responsible for pickup or shipment of the vehicle. &lt;br/&gt;&lt;br/&gt;This field is returned if set.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Default&lt;/b&gt;: false
   * @return buyerResponsibleForShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field should be included and set to <code>true</code> for a motor vehicle listing if it will be the buyer's responsibility to arrange for shipment of a purchased motor vehicle after full payment is made. This field is only applicable to motor vehicle listings. In the majority of motor vehicle listings, the seller does make the buyer responsible for pickup or shipment of the vehicle. <br/><br/>This field is returned if set.<br/><br/><b>Default</b>: false")

  public Boolean getBuyerResponsibleForShipping() {
    return buyerResponsibleForShipping;
  }


  public void setBuyerResponsibleForShipping(Boolean buyerResponsibleForShipping) {
    this.buyerResponsibleForShipping = buyerResponsibleForShipping;
  }


  public ShippingService cashOnDeliveryFee(Amount cashOnDeliveryFee) {
    
    this.cashOnDeliveryFee = cashOnDeliveryFee;
    return this;
  }

   /**
   * Get cashOnDeliveryFee
   * @return cashOnDeliveryFee
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getCashOnDeliveryFee() {
    return cashOnDeliveryFee;
  }


  public void setCashOnDeliveryFee(Amount cashOnDeliveryFee) {
    this.cashOnDeliveryFee = cashOnDeliveryFee;
  }


  public ShippingService freeShipping(Boolean freeShipping) {
    
    this.freeShipping = freeShipping;
    return this;
  }

   /**
   * This field is included and set to &lt;code&gt;true&lt;/code&gt; if the seller offers a free shipping option to the buyer. This field can only be included and set to &lt;code&gt;true&lt;/code&gt; for the first domestic shipping service option specified in the &lt;b&gt;shippingServices&lt;/b&gt; container (it is ignored if set for subsequent shipping services or for any international shipping service option). The first specified shipping service option has a &lt;b&gt;sortOrder&lt;/b&gt; value of &lt;code&gt;1&lt;/code&gt; or if the &lt;b&gt;sortOrderId&lt;/b&gt; field is not used, it is the shipping service option that&#39;s specified first in the &lt;b&gt;shippingServices&lt;/b&gt; container.&lt;br/&gt;&lt;br/&gt;This container is returned if set.
   * @return freeShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field is included and set to <code>true</code> if the seller offers a free shipping option to the buyer. This field can only be included and set to <code>true</code> for the first domestic shipping service option specified in the <b>shippingServices</b> container (it is ignored if set for subsequent shipping services or for any international shipping service option). The first specified shipping service option has a <b>sortOrder</b> value of <code>1</code> or if the <b>sortOrderId</b> field is not used, it is the shipping service option that's specified first in the <b>shippingServices</b> container.<br/><br/>This container is returned if set.")

  public Boolean getFreeShipping() {
    return freeShipping;
  }


  public void setFreeShipping(Boolean freeShipping) {
    this.freeShipping = freeShipping;
  }


  public ShippingService shippingCarrierCode(String shippingCarrierCode) {
    
    this.shippingCarrierCode = shippingCarrierCode;
    return this;
  }

   /**
   * This field sets/indicates the shipping carrier, such as &lt;code&gt;USPS&lt;/code&gt;, &lt;code&gt;FedEx&lt;/code&gt;, or &lt;code&gt;UPS&lt;/code&gt;. Although this field uses the &lt;b&gt;string&lt;/b&gt; type, the seller must pass in a pre-defined enumeration value here. For a full list of shipping carrier enum values for a specified eBay marketplace, the &lt;b&gt;GeteBayDetails&lt;/b&gt; call of the &lt;b&gt;Trading API&lt;/b&gt; can be used, and the &lt;b&gt;DetailName&lt;/b&gt; field&#39;s value should be set to &lt;code&gt;ShippingCarrierDetails&lt;/code&gt;. The enum values for each shipping carriers can be found in each &lt;b&gt;ShippingCarrierDetails.ShippingCarrier&lt;/b&gt; field in the response payload.&lt;br/&gt;&lt;br/&gt; This field is actually optional, as the shipping carrier is also tied into the &lt;b&gt;shippingServiceCode&lt;/b&gt; enum value, and that field is required for every specified shipping service option.&lt;br/&gt;&lt;br/&gt;This field is returned if set.
   * @return shippingCarrierCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field sets/indicates the shipping carrier, such as <code>USPS</code>, <code>FedEx</code>, or <code>UPS</code>. Although this field uses the <b>string</b> type, the seller must pass in a pre-defined enumeration value here. For a full list of shipping carrier enum values for a specified eBay marketplace, the <b>GeteBayDetails</b> call of the <b>Trading API</b> can be used, and the <b>DetailName</b> field's value should be set to <code>ShippingCarrierDetails</code>. The enum values for each shipping carriers can be found in each <b>ShippingCarrierDetails.ShippingCarrier</b> field in the response payload.<br/><br/> This field is actually optional, as the shipping carrier is also tied into the <b>shippingServiceCode</b> enum value, and that field is required for every specified shipping service option.<br/><br/>This field is returned if set.")

  public String getShippingCarrierCode() {
    return shippingCarrierCode;
  }


  public void setShippingCarrierCode(String shippingCarrierCode) {
    this.shippingCarrierCode = shippingCarrierCode;
  }


  public ShippingService shippingCost(Amount shippingCost) {
    
    this.shippingCost = shippingCost;
    return this;
  }

   /**
   * Get shippingCost
   * @return shippingCost
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getShippingCost() {
    return shippingCost;
  }


  public void setShippingCost(Amount shippingCost) {
    this.shippingCost = shippingCost;
  }


  public ShippingService shippingServiceCode(String shippingServiceCode) {
    
    this.shippingServiceCode = shippingServiceCode;
    return this;
  }

   /**
   * This field sets/indicates the domestic or international shipping service option, such as &lt;code&gt;USPSPriority&lt;/code&gt;, &lt;code&gt;FedEx2Day&lt;/code&gt;, or &lt;code&gt;UPS3rdDay&lt;/code&gt;. Although this field uses the &lt;b&gt;string&lt;/b&gt; type, the seller must pass in a pre-defined enumeration value here. For a full list of shipping service option enum values for a specified eBay marketplace, the &lt;b&gt;GeteBayDetails&lt;/b&gt; call of the &lt;b&gt;Trading API&lt;/b&gt; can be used, and the &lt;b&gt;DetailName&lt;/b&gt; field&#39;s value should be set to &lt;code&gt;ShippingServiceDetails&lt;/code&gt;. The enum values for each shipping service option can be found in each &lt;b&gt;ShippingServiceDetails.ShippingService&lt;/b&gt; field in the response payload. The seller must make sure that the shipping service option is still valid, which is indicated by a &lt;code&gt;true&lt;/code&gt; value in the corresponding &lt;b&gt;ValidForSellingFlow&lt;/b&gt; boolean field. International shipping service options are typically returned at the top of the response payload, and are indicated by an &lt;b&gt;InternationalService&lt;/b&gt; boolean field that reads &lt;code&gt;true&lt;/code&gt;. The &lt;b&gt;InternationalService&lt;/b&gt; boolean field is not returned at all for domestic shipping service options. &lt;br/&gt;&lt;br/&gt; This field is required for every specified shipping service option.&lt;br/&gt;&lt;br/&gt;This field is returned if set.
   * @return shippingServiceCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field sets/indicates the domestic or international shipping service option, such as <code>USPSPriority</code>, <code>FedEx2Day</code>, or <code>UPS3rdDay</code>. Although this field uses the <b>string</b> type, the seller must pass in a pre-defined enumeration value here. For a full list of shipping service option enum values for a specified eBay marketplace, the <b>GeteBayDetails</b> call of the <b>Trading API</b> can be used, and the <b>DetailName</b> field's value should be set to <code>ShippingServiceDetails</code>. The enum values for each shipping service option can be found in each <b>ShippingServiceDetails.ShippingService</b> field in the response payload. The seller must make sure that the shipping service option is still valid, which is indicated by a <code>true</code> value in the corresponding <b>ValidForSellingFlow</b> boolean field. International shipping service options are typically returned at the top of the response payload, and are indicated by an <b>InternationalService</b> boolean field that reads <code>true</code>. The <b>InternationalService</b> boolean field is not returned at all for domestic shipping service options. <br/><br/> This field is required for every specified shipping service option.<br/><br/>This field is returned if set.")

  public String getShippingServiceCode() {
    return shippingServiceCode;
  }


  public void setShippingServiceCode(String shippingServiceCode) {
    this.shippingServiceCode = shippingServiceCode;
  }


  public ShippingService shipToLocations(RegionSet shipToLocations) {
    
    this.shipToLocations = shipToLocations;
    return this;
  }

   /**
   * Get shipToLocations
   * @return shipToLocations
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public RegionSet getShipToLocations() {
    return shipToLocations;
  }


  public void setShipToLocations(RegionSet shipToLocations) {
    this.shipToLocations = shipToLocations;
  }


  public ShippingService sortOrder(Integer sortOrder) {
    
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * The integer value set in this field controls the order of the corresponding domestic or international shipping service option in the View Item and Checkout pages. &lt;br/&gt;&lt;br/&gt;Sellers can specify up to four domestic shipping services (in four separate &lt;b&gt;shippingService&lt;/b&gt; containers), so valid values are 1, 2, 3, and 4. A shipping service option with a &lt;b&gt;sortOrder&lt;/b&gt; value of &lt;code&gt;1&lt;/code&gt; appears at the top of View Item and Checkout pages. Conversely, a shipping service option with a &lt;b&gt;sortOrder&lt;/b&gt; value of &lt;code&gt;1&lt;/code&gt; appears at the bottom of the list. &lt;br/&gt;&lt;br/&gt;Sellers can specify up to five international shipping services (in five separate &lt;b&gt;shippingService&lt;/b&gt; containers), so valid values for international shipping services are 1, 2, 3, 4, and 5. Similarly to domestic shipping service options, the &lt;b&gt;sortOrder&lt;/b&gt; value of a international shipping service option controls the placement of that shipping service option in the View Item and Checkout pages. &lt;br/&gt;&lt;br/&gt;If the &lt;b&gt;sortOrder&lt;/b&gt; field is not supplied, the order of domestic and international shipping service options is determined by the order in which they are listed in the API call. &lt;br/&gt;&lt;br/&gt;&lt;b&gt;Min&lt;/b&gt;: 1. &lt;b&gt;Max&lt;/b&gt;: 4 (for domestic shipping service) or 5 (for international shipping service).
   * @return sortOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The integer value set in this field controls the order of the corresponding domestic or international shipping service option in the View Item and Checkout pages. <br/><br/>Sellers can specify up to four domestic shipping services (in four separate <b>shippingService</b> containers), so valid values are 1, 2, 3, and 4. A shipping service option with a <b>sortOrder</b> value of <code>1</code> appears at the top of View Item and Checkout pages. Conversely, a shipping service option with a <b>sortOrder</b> value of <code>1</code> appears at the bottom of the list. <br/><br/>Sellers can specify up to five international shipping services (in five separate <b>shippingService</b> containers), so valid values for international shipping services are 1, 2, 3, 4, and 5. Similarly to domestic shipping service options, the <b>sortOrder</b> value of a international shipping service option controls the placement of that shipping service option in the View Item and Checkout pages. <br/><br/>If the <b>sortOrder</b> field is not supplied, the order of domestic and international shipping service options is determined by the order in which they are listed in the API call. <br/><br/><b>Min</b>: 1. <b>Max</b>: 4 (for domestic shipping service) or 5 (for international shipping service).")

  public Integer getSortOrder() {
    return sortOrder;
  }


  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }


  public ShippingService surcharge(Amount surcharge) {
    
    this.surcharge = surcharge;
    return this;
  }

   /**
   * Get surcharge
   * @return surcharge
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getSurcharge() {
    return surcharge;
  }


  public void setSurcharge(Amount surcharge) {
    this.surcharge = surcharge;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShippingService shippingService = (ShippingService) o;
    return Objects.equals(this.additionalShippingCost, shippingService.additionalShippingCost) &&
        Objects.equals(this.buyerResponsibleForPickup, shippingService.buyerResponsibleForPickup) &&
        Objects.equals(this.buyerResponsibleForShipping, shippingService.buyerResponsibleForShipping) &&
        Objects.equals(this.cashOnDeliveryFee, shippingService.cashOnDeliveryFee) &&
        Objects.equals(this.freeShipping, shippingService.freeShipping) &&
        Objects.equals(this.shippingCarrierCode, shippingService.shippingCarrierCode) &&
        Objects.equals(this.shippingCost, shippingService.shippingCost) &&
        Objects.equals(this.shippingServiceCode, shippingService.shippingServiceCode) &&
        Objects.equals(this.shipToLocations, shippingService.shipToLocations) &&
        Objects.equals(this.sortOrder, shippingService.sortOrder) &&
        Objects.equals(this.surcharge, shippingService.surcharge);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalShippingCost, buyerResponsibleForPickup, buyerResponsibleForShipping, cashOnDeliveryFee, freeShipping, shippingCarrierCode, shippingCost, shippingServiceCode, shipToLocations, sortOrder, surcharge);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShippingService {\n");
    sb.append("    additionalShippingCost: ").append(toIndentedString(additionalShippingCost)).append("\n");
    sb.append("    buyerResponsibleForPickup: ").append(toIndentedString(buyerResponsibleForPickup)).append("\n");
    sb.append("    buyerResponsibleForShipping: ").append(toIndentedString(buyerResponsibleForShipping)).append("\n");
    sb.append("    cashOnDeliveryFee: ").append(toIndentedString(cashOnDeliveryFee)).append("\n");
    sb.append("    freeShipping: ").append(toIndentedString(freeShipping)).append("\n");
    sb.append("    shippingCarrierCode: ").append(toIndentedString(shippingCarrierCode)).append("\n");
    sb.append("    shippingCost: ").append(toIndentedString(shippingCost)).append("\n");
    sb.append("    shippingServiceCode: ").append(toIndentedString(shippingServiceCode)).append("\n");
    sb.append("    shipToLocations: ").append(toIndentedString(shipToLocations)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    surcharge: ").append(toIndentedString(surcharge)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

