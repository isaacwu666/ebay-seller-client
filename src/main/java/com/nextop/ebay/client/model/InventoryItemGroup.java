/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.VariesBy;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type is used by the base request payload of the &lt;strong&gt;createOrReplaceInventoryItemGroup&lt;/strong&gt; call and the base response payload of the &lt;strong&gt;getInventoryItemGroup&lt;/strong&gt; call.
 */
@ApiModel(description = "This type is used by the base request payload of the <strong>createOrReplaceInventoryItemGroup</strong> call and the base response payload of the <strong>getInventoryItemGroup</strong> call.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class InventoryItemGroup implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ASPECTS = "aspects";
  @SerializedName(SERIALIZED_NAME_ASPECTS)
  private String aspects;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_IMAGE_URLS = "imageUrls";
  @SerializedName(SERIALIZED_NAME_IMAGE_URLS)
  private List<String> imageUrls = null;

  public static final String SERIALIZED_NAME_INVENTORY_ITEM_GROUP_KEY = "inventoryItemGroupKey";
  @SerializedName(SERIALIZED_NAME_INVENTORY_ITEM_GROUP_KEY)
  private String inventoryItemGroupKey;

  public static final String SERIALIZED_NAME_SUBTITLE = "subtitle";
  @SerializedName(SERIALIZED_NAME_SUBTITLE)
  private String subtitle;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_VARIANT_S_K_US = "variantSKUs";
  @SerializedName(SERIALIZED_NAME_VARIANT_S_K_US)
  private List<String> variantSKUs = null;

  public static final String SERIALIZED_NAME_VARIES_BY = "variesBy";
  @SerializedName(SERIALIZED_NAME_VARIES_BY)
  private VariesBy variesBy;

  public static final String SERIALIZED_NAME_VIDEO_IDS = "videoIds";
  @SerializedName(SERIALIZED_NAME_VIDEO_IDS)
  private List<String> videoIds = null;


  public InventoryItemGroup aspects(String aspects) {
    
    this.aspects = aspects;
    return this;
  }

   /**
   * This is a collection of item specifics (aka product aspects) name-value pairs that are shared by all product variations within the inventory item group. Common aspects for the inventory item group are not immediately required upon creating an inventory item group, but these aspects will be required before the first offer of the group is published. Common aspects for a men&#39;s t-shirt might be pattern and sleeve length. Below is an example of the proper JSON syntax to use when manually inputting item specifics. Note that one item specific name, such as &#39;Features&#39;, can have more than one value. If an item specific name has more than one value, each value is delimited with a comma.&lt;br/&gt; &lt;pre&gt;&lt;code&gt;\&quot;aspects\&quot;: {&lt;br/&gt; \&quot;pattern\&quot;: [\&quot;solid\&quot;],&lt;br/&gt; \&quot;sleeves\&quot;: [\&quot;short\&quot;]&lt;br/&gt; }&lt;/code&gt;&lt;/pre&gt;This container is always returned if one or more offers associated with the inventory item group have been published, and is only returned if set for an inventory item group if that group has yet to have any offers published.&lt;br/&gt;
   * @return aspects
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is a collection of item specifics (aka product aspects) name-value pairs that are shared by all product variations within the inventory item group. Common aspects for the inventory item group are not immediately required upon creating an inventory item group, but these aspects will be required before the first offer of the group is published. Common aspects for a men's t-shirt might be pattern and sleeve length. Below is an example of the proper JSON syntax to use when manually inputting item specifics. Note that one item specific name, such as 'Features', can have more than one value. If an item specific name has more than one value, each value is delimited with a comma.<br/> <pre><code>\"aspects\": {<br/> \"pattern\": [\"solid\"],<br/> \"sleeves\": [\"short\"]<br/> }</code></pre>This container is always returned if one or more offers associated with the inventory item group have been published, and is only returned if set for an inventory item group if that group has yet to have any offers published.<br/>")

  public String getAspects() {
    return aspects;
  }


  public void setAspects(String aspects) {
    this.aspects = aspects;
  }


  public InventoryItemGroup description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the inventory item group. This description should fully describe the product and the variations of the product that are available in the inventory item group, since this description will ultimately become the listing description once the first offer of the group is published. This field is not initially required when first creating an inventory item group, but will be required before the first offer of the group is published. &lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Since this description will ultimately  become the listing description in a multiple-variation listing, the seller should omit the &lt;strong&gt;listingDescription&lt;/strong&gt; field when creating the offers for each variation. If they include the &lt;strong&gt;listingDescription&lt;/strong&gt; field for the individual offer(s) in an item group, the text in that field for a published offer will overwrite the text provided in this &lt;strong&gt;description&lt;/strong&gt; field for the inventory item group.&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;HTML tags and markup can be used in this field, but each character counts toward the max length limit.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; To ensure that their short listing description is optimized when viewed on mobile devices, sellers should strongly consider using eBay&#39;s &lt;a href&#x3D;\&quot;https://pages.ebay.com/sell/itemdescription/customizeyoursummary.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;View Item description summary feature&lt;/a&gt; when listing their items. Keep in mind that the &#39;short&#39; listing description is what prospective buyers first see when they view the listing on a mobile device. The &#39;full&#39; listing description is also available to mobile users when they click on the short listing description, but the full description is not automatically optimized for viewing in mobile devices, and many users won&#39;t even drill down to the full description.&lt;br&gt;&lt;br&gt; Using HTML div and span tag attributes, this feature allows sellers to customize and fully control the short listing description that is displayed to prospective buyers when viewing the listing on a mobile device. The short listing description on mobile devices is limited to 800 characters, and whenever the full listing description (provided in this field, in UI, or seller tool) exceeds this limit, eBay uses a special algorithm to derive the best possible short listing description within the 800-character limit. However, due to some short listing description content being removed, it is definitely not ideal for the seller, and could lead to a bad buyer experience and possibly to a Significantly not as described (SNAD) case, since the buyer may not get complete details on the item when viewing the short listing description. See the eBay help page for more details on using the HTML div and span tags.&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;This field is always returned if one or more offers associated with the inventory item group have been published, and is only returned if set for an inventory item group if that group has yet to have any offers published.&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Max Length&lt;/strong&gt;: 500000 (which includes HTML markup/tags)&lt;br&gt;
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the inventory item group. This description should fully describe the product and the variations of the product that are available in the inventory item group, since this description will ultimately become the listing description once the first offer of the group is published. This field is not initially required when first creating an inventory item group, but will be required before the first offer of the group is published. <br><br><span class=\"tablenote\"> <strong>Note:</strong> Since this description will ultimately  become the listing description in a multiple-variation listing, the seller should omit the <strong>listingDescription</strong> field when creating the offers for each variation. If they include the <strong>listingDescription</strong> field for the individual offer(s) in an item group, the text in that field for a published offer will overwrite the text provided in this <strong>description</strong> field for the inventory item group.</span><br/><br/>HTML tags and markup can be used in this field, but each character counts toward the max length limit.<br/><br/><span class=\"tablenote\"> <strong>Note:</strong> To ensure that their short listing description is optimized when viewed on mobile devices, sellers should strongly consider using eBay's <a href=\"https://pages.ebay.com/sell/itemdescription/customizeyoursummary.html\" target=\"_blank\">View Item description summary feature</a> when listing their items. Keep in mind that the 'short' listing description is what prospective buyers first see when they view the listing on a mobile device. The 'full' listing description is also available to mobile users when they click on the short listing description, but the full description is not automatically optimized for viewing in mobile devices, and many users won't even drill down to the full description.<br><br> Using HTML div and span tag attributes, this feature allows sellers to customize and fully control the short listing description that is displayed to prospective buyers when viewing the listing on a mobile device. The short listing description on mobile devices is limited to 800 characters, and whenever the full listing description (provided in this field, in UI, or seller tool) exceeds this limit, eBay uses a special algorithm to derive the best possible short listing description within the 800-character limit. However, due to some short listing description content being removed, it is definitely not ideal for the seller, and could lead to a bad buyer experience and possibly to a Significantly not as described (SNAD) case, since the buyer may not get complete details on the item when viewing the short listing description. See the eBay help page for more details on using the HTML div and span tags.</span><br/><br/>This field is always returned if one or more offers associated with the inventory item group have been published, and is only returned if set for an inventory item group if that group has yet to have any offers published.<br/><br/><strong>Max Length</strong>: 500000 (which includes HTML markup/tags)<br>")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public InventoryItemGroup imageUrls(List<String> imageUrls) {
    
    this.imageUrls = imageUrls;
    return this;
  }

  public InventoryItemGroup addImageUrlsItem(String imageUrlsItem) {
    if (this.imageUrls == null) {
      this.imageUrls = new ArrayList<String>();
    }
    this.imageUrls.add(imageUrlsItem);
    return this;
  }

   /**
   * An array of one or more links to images for the inventory item group. URLs must use the \&quot;HTTPS\&quot; protocol. Images can be self-hosted by the seller, or sellers can use the &lt;a href&#x3D;\&quot;https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/UploadSiteHostedPictures.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;UploadSiteHostedPictures&lt;/a&gt; call of the Trading API to upload images to an eBay Picture Server. If successful, the response of the &lt;a href&#x3D;\&quot;https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/UploadSiteHostedPictures.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;UploadSiteHostedPictures&lt;/a&gt; call will contain a full URL to the image on an eBay Picture Server. This is the URL that will be passed in through the &lt;strong&gt;imageUrls&lt;/strong&gt; array. &lt;br/&gt;&lt;br/&gt; Before any offer can be published, at least one image must exist for the offer. Links to images can either be passed in through this &lt;strong&gt;imageUrls&lt;/strong&gt; container, or they can be passed in through the &lt;strong&gt;product.imageUrls&lt;/strong&gt; container when creating each inventory item in the group. If the &lt;strong&gt;variesBy.aspectsImageVariesBy&lt;/strong&gt; field is used to specify the main product aspect where the variations vary, the links to the images must be passed in through this &lt;strong&gt;imageUrls&lt;/strong&gt; container, and there should be a picture for each variation. So, if the &lt;strong&gt;variesBy.aspectsImageVariesBy&lt;/strong&gt; field is set to &lt;code&gt;Color&lt;/code&gt;, a link should be included to an image demonstrating each available color in the group.&lt;br&gt;&lt;br&gt; Most eBay sites support up to 12 pictures free of charge, and eBay Motors listings can have up to 24 pictures.&lt;br/&gt;&lt;br/&gt; This container will always be returned for an inventory item group that has at least one published offer since a published offer will always have at least one picture, but this container will only be returned if defined for inventory item groups that have yet to have any published offers.
   * @return imageUrls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of one or more links to images for the inventory item group. URLs must use the \"HTTPS\" protocol. Images can be self-hosted by the seller, or sellers can use the <a href=\"https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/UploadSiteHostedPictures.html\" target=\"_blank\">UploadSiteHostedPictures</a> call of the Trading API to upload images to an eBay Picture Server. If successful, the response of the <a href=\"https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/UploadSiteHostedPictures.html\" target=\"_blank\">UploadSiteHostedPictures</a> call will contain a full URL to the image on an eBay Picture Server. This is the URL that will be passed in through the <strong>imageUrls</strong> array. <br/><br/> Before any offer can be published, at least one image must exist for the offer. Links to images can either be passed in through this <strong>imageUrls</strong> container, or they can be passed in through the <strong>product.imageUrls</strong> container when creating each inventory item in the group. If the <strong>variesBy.aspectsImageVariesBy</strong> field is used to specify the main product aspect where the variations vary, the links to the images must be passed in through this <strong>imageUrls</strong> container, and there should be a picture for each variation. So, if the <strong>variesBy.aspectsImageVariesBy</strong> field is set to <code>Color</code>, a link should be included to an image demonstrating each available color in the group.<br><br> Most eBay sites support up to 12 pictures free of charge, and eBay Motors listings can have up to 24 pictures.<br/><br/> This container will always be returned for an inventory item group that has at least one published offer since a published offer will always have at least one picture, but this container will only be returned if defined for inventory item groups that have yet to have any published offers.")

  public List<String> getImageUrls() {
    return imageUrls;
  }


  public void setImageUrls(List<String> imageUrls) {
    this.imageUrls = imageUrls;
  }


  public InventoryItemGroup inventoryItemGroupKey(String inventoryItemGroupKey) {
    
    this.inventoryItemGroupKey = inventoryItemGroupKey;
    return this;
  }

   /**
   * This is the unique identifier of the inventory item group. This identifier is created by the seller when an inventory item group is created. This field is only applicable to the &lt;strong&gt;getInventoryItemGroup&lt;/strong&gt; call and not to the &lt;strong&gt;createOrReplaceInventoryItemGroup&lt;/strong&gt; call. In the &lt;strong&gt;createOrReplaceInventoryItemGroup&lt;/strong&gt; call, the &lt;strong&gt;inventoryItemGroupKey&lt;/strong&gt; value is passed into the end of the call URI instead. 
   * @return inventoryItemGroupKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is the unique identifier of the inventory item group. This identifier is created by the seller when an inventory item group is created. This field is only applicable to the <strong>getInventoryItemGroup</strong> call and not to the <strong>createOrReplaceInventoryItemGroup</strong> call. In the <strong>createOrReplaceInventoryItemGroup</strong> call, the <strong>inventoryItemGroupKey</strong> value is passed into the end of the call URI instead. ")

  public String getInventoryItemGroupKey() {
    return inventoryItemGroupKey;
  }


  public void setInventoryItemGroupKey(String inventoryItemGroupKey) {
    this.inventoryItemGroupKey = inventoryItemGroupKey;
  }


  public InventoryItemGroup subtitle(String subtitle) {
    
    this.subtitle = subtitle;
    return this;
  }

   /**
   * A subtitle is an optional listing feature that allows the seller to provide more information about the product, possibly including keywords that may assist with search results. An additional listing fee will be charged to the seller if a subtitle is used. For more information on using listing subtitles on the US site, see the &lt;a href&#x3D;\&quot;https://pages.ebay.com/help/sell/itemsubtitle.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Adding a subtitle to your listings&lt;/a&gt; help page. &lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Since this subtitle will ultimately  become the subtitle in a multiple-variation listing, the seller should not include the &lt;strong&gt;subtitle&lt;/strong&gt; field when creating the inventory items that are members of the group. If they do include the &lt;strong&gt;subtitle&lt;/strong&gt; field in an inventory item record, the text in that field will overwrite the text provided in this &lt;strong&gt;subtitle&lt;/strong&gt; field for each inventory item in the group that is published.&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;This field will only be returned if set for an inventory item.&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Max Length&lt;/strong&gt;: 55&lt;br/&gt;
   * @return subtitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A subtitle is an optional listing feature that allows the seller to provide more information about the product, possibly including keywords that may assist with search results. An additional listing fee will be charged to the seller if a subtitle is used. For more information on using listing subtitles on the US site, see the <a href=\"https://pages.ebay.com/help/sell/itemsubtitle.html\" target=\"_blank\">Adding a subtitle to your listings</a> help page. <br><br><span class=\"tablenote\"> <strong>Note:</strong> Since this subtitle will ultimately  become the subtitle in a multiple-variation listing, the seller should not include the <strong>subtitle</strong> field when creating the inventory items that are members of the group. If they do include the <strong>subtitle</strong> field in an inventory item record, the text in that field will overwrite the text provided in this <strong>subtitle</strong> field for each inventory item in the group that is published.</span><br/><br/>This field will only be returned if set for an inventory item.<br/><br/><strong>Max Length</strong>: 55<br/>")

  public String getSubtitle() {
    return subtitle;
  }


  public void setSubtitle(String subtitle) {
    this.subtitle = subtitle;
  }


  public InventoryItemGroup title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The title of the inventory item group. This title will ultimately become the listing title once the first offer of the group is published. This field is not initially required when first creating an inventory item group, but will be required before the first offer of the group is published.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; Since this title will ultimately  become the listing title in a multiple-variation listing, the seller should omit the &lt;strong&gt;title&lt;/strong&gt; field when creating the inventory items that are members of the group. If they do include the &lt;strong&gt;title&lt;/strong&gt; field in an inventory item record, the text in that field will overwrite the text provided in this &lt;strong&gt;title&lt;/strong&gt; field for each inventory item in the group that is published.&lt;/span&gt;&lt;br/&gt;&lt;br/&gt; This field is always returned if one or more offers associated with the inventory item group have been published, and is only returned if set for an inventory item group if that group has yet to have any offers published.&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Max Length&lt;/strong&gt;: 80 &lt;br/&gt;
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The title of the inventory item group. This title will ultimately become the listing title once the first offer of the group is published. This field is not initially required when first creating an inventory item group, but will be required before the first offer of the group is published.<br><br><span class=\"tablenote\"> <strong>Note:</strong> Since this title will ultimately  become the listing title in a multiple-variation listing, the seller should omit the <strong>title</strong> field when creating the inventory items that are members of the group. If they do include the <strong>title</strong> field in an inventory item record, the text in that field will overwrite the text provided in this <strong>title</strong> field for each inventory item in the group that is published.</span><br/><br/> This field is always returned if one or more offers associated with the inventory item group have been published, and is only returned if set for an inventory item group if that group has yet to have any offers published.<br/><br/><strong>Max Length</strong>: 80 <br/>")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public InventoryItemGroup variantSKUs(List<String> variantSKUs) {
    
    this.variantSKUs = variantSKUs;
    return this;
  }

  public InventoryItemGroup addVariantSKUsItem(String variantSKUsItem) {
    if (this.variantSKUs == null) {
      this.variantSKUs = new ArrayList<String>();
    }
    this.variantSKUs.add(variantSKUsItem);
    return this;
  }

   /**
   * This required container is used to assign individual inventory items to the inventory item group. Multiple SKU values are passed in to this container. If updating an existing inventory item group, the seller should make sure that all member SKU values are passed in, as long as the seller wants that SKU to remain in the group.&lt;br&gt;&lt;br&gt; It is also possible to add or remove SKUs with a &lt;strong&gt;createOrReplaceInventoryItemGroup&lt;/strong&gt; call. If the seller wants to remove a SKU from the group, that seller will just omit that SKU value from this container to remove that inventory item/SKU from the inventory item group and any published, multiple-variation listing. However, a variation cannot be removed from the group if that variation has one or more sales for that listing. A workaround for this is to set that variation&#39;s quantity to &lt;code&gt;0&lt;/code&gt; and it will be &#39;grayed out&#39; in the View Item page.&lt;br&gt;&lt;br&gt;This container is always returned.
   * @return variantSKUs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This required container is used to assign individual inventory items to the inventory item group. Multiple SKU values are passed in to this container. If updating an existing inventory item group, the seller should make sure that all member SKU values are passed in, as long as the seller wants that SKU to remain in the group.<br><br> It is also possible to add or remove SKUs with a <strong>createOrReplaceInventoryItemGroup</strong> call. If the seller wants to remove a SKU from the group, that seller will just omit that SKU value from this container to remove that inventory item/SKU from the inventory item group and any published, multiple-variation listing. However, a variation cannot be removed from the group if that variation has one or more sales for that listing. A workaround for this is to set that variation's quantity to <code>0</code> and it will be 'grayed out' in the View Item page.<br><br>This container is always returned.")

  public List<String> getVariantSKUs() {
    return variantSKUs;
  }


  public void setVariantSKUs(List<String> variantSKUs) {
    this.variantSKUs = variantSKUs;
  }


  public InventoryItemGroup variesBy(VariesBy variesBy) {
    
    this.variesBy = variesBy;
    return this;
  }

   /**
   * Get variesBy
   * @return variesBy
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public VariesBy getVariesBy() {
    return variesBy;
  }


  public void setVariesBy(VariesBy variesBy) {
    this.variesBy = variesBy;
  }


  public InventoryItemGroup videoIds(List<String> videoIds) {
    
    this.videoIds = videoIds;
    return this;
  }

  public InventoryItemGroup addVideoIdsItem(String videoIdsItem) {
    if (this.videoIds == null) {
      this.videoIds = new ArrayList<String>();
    }
    this.videoIds.add(videoIdsItem);
    return this;
  }

   /**
   * An array of one or more VideoId values for the inventory item group. A VideoId is a unique identifier that is automatically created by eBay when a seller successfully uploads a video to eBay using the  &lt;a href&#x3D;\&quot;https://developer.ebay.com/api-docs/commerce/media/resources/video/methods/uploadVideo\&quot; target&#x3D;\&quot;_blank\&quot;&gt;uploadVideo&lt;/a&gt; method of the &lt;a href&#x3D;\&quot;https://developer.ebay.com/api-docs/commerce/media/overview.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Media API&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;For information on supported marketplaces and platforms, as well as other requirements and limitations of video support, please refer to &lt;a href&#x3D;\&quot;https://developer.ebay.com/api-docs/sell/static/inventory/managing-video-media.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Managing videos&lt;/a&gt;.
   * @return videoIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of one or more VideoId values for the inventory item group. A VideoId is a unique identifier that is automatically created by eBay when a seller successfully uploads a video to eBay using the  <a href=\"https://developer.ebay.com/api-docs/commerce/media/resources/video/methods/uploadVideo\" target=\"_blank\">uploadVideo</a> method of the <a href=\"https://developer.ebay.com/api-docs/commerce/media/overview.html\" target=\"_blank\">Media API</a>.<br /><br />For information on supported marketplaces and platforms, as well as other requirements and limitations of video support, please refer to <a href=\"https://developer.ebay.com/api-docs/sell/static/inventory/managing-video-media.html\" target=\"_blank\">Managing videos</a>.")

  public List<String> getVideoIds() {
    return videoIds;
  }


  public void setVideoIds(List<String> videoIds) {
    this.videoIds = videoIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InventoryItemGroup inventoryItemGroup = (InventoryItemGroup) o;
    return Objects.equals(this.aspects, inventoryItemGroup.aspects) &&
        Objects.equals(this.description, inventoryItemGroup.description) &&
        Objects.equals(this.imageUrls, inventoryItemGroup.imageUrls) &&
        Objects.equals(this.inventoryItemGroupKey, inventoryItemGroup.inventoryItemGroupKey) &&
        Objects.equals(this.subtitle, inventoryItemGroup.subtitle) &&
        Objects.equals(this.title, inventoryItemGroup.title) &&
        Objects.equals(this.variantSKUs, inventoryItemGroup.variantSKUs) &&
        Objects.equals(this.variesBy, inventoryItemGroup.variesBy) &&
        Objects.equals(this.videoIds, inventoryItemGroup.videoIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aspects, description, imageUrls, inventoryItemGroupKey, subtitle, title, variantSKUs, variesBy, videoIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InventoryItemGroup {\n");
    sb.append("    aspects: ").append(toIndentedString(aspects)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    imageUrls: ").append(toIndentedString(imageUrls)).append("\n");
    sb.append("    inventoryItemGroupKey: ").append(toIndentedString(inventoryItemGroupKey)).append("\n");
    sb.append("    subtitle: ").append(toIndentedString(subtitle)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    variantSKUs: ").append(toIndentedString(variantSKUs)).append("\n");
    sb.append("    variesBy: ").append(toIndentedString(variesBy)).append("\n");
    sb.append("    videoIds: ").append(toIndentedString(videoIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

