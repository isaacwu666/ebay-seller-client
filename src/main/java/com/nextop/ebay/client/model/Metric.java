/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.MetricBenchmark;
import com.nextop.ebay.client.model.MetricDistribution;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This complex data type defines the details of the customer service metric and benchmark data related to the associated dimension.
 */
@ApiModel(description = "This complex data type defines the details of the customer service metric and benchmark data related to the associated dimension.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class Metric implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_BENCHMARK = "benchmark";
  @SerializedName(SERIALIZED_NAME_BENCHMARK)
  private MetricBenchmark benchmark;

  public static final String SERIALIZED_NAME_DISTRIBUTIONS = "distributions";
  @SerializedName(SERIALIZED_NAME_DISTRIBUTIONS)
  private List<MetricDistribution> distributions = null;

  public static final String SERIALIZED_NAME_METRIC_KEY = "metricKey";
  @SerializedName(SERIALIZED_NAME_METRIC_KEY)
  private String metricKey;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;


  public Metric benchmark(MetricBenchmark benchmark) {
    
    this.benchmark = benchmark;
    return this;
  }

   /**
   * Get benchmark
   * @return benchmark
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public MetricBenchmark getBenchmark() {
    return benchmark;
  }


  public void setBenchmark(MetricBenchmark benchmark) {
    this.benchmark = benchmark;
  }


  public Metric distributions(List<MetricDistribution> distributions) {
    
    this.distributions = distributions;
    return this;
  }

  public Metric addDistributionsItem(MetricDistribution distributionsItem) {
    if (this.distributions == null) {
      this.distributions = new ArrayList<MetricDistribution>();
    }
    this.distributions.add(distributionsItem);
    return this;
  }

   /**
   * Returned when metricKey equals COUNT, this field returns an array of seller data where each set of data is grouped according by an overarching basis. When the seller distribution is returned, the numeric value of the associated value container equals the sum of the transactions where the seller meets the criteria of the customer service metric type for the given dimension during the evaluationCycle.
   * @return distributions
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Returned when metricKey equals COUNT, this field returns an array of seller data where each set of data is grouped according by an overarching basis. When the seller distribution is returned, the numeric value of the associated value container equals the sum of the transactions where the seller meets the criteria of the customer service metric type for the given dimension during the evaluationCycle.")

  public List<MetricDistribution> getDistributions() {
    return distributions;
  }


  public void setDistributions(List<MetricDistribution> distributions) {
    this.distributions = distributions;
  }


  public Metric metricKey(String metricKey) {
    
    this.metricKey = metricKey;
    return this;
  }

   /**
   * This field indicates the customer service metric being returned in the associated metrics container. The field is set as follows: TRANSACTION_COUNT &amp;ndash; When set to this value, the associated value field equals the total number of transactions completed in the seller group for the metric in the given dimension during the associated evaluationCycle. COUNT &amp;ndash; When set to this value, the associated value field is set to the total number of transactions the seller completed that meet the criteria of the customer service metric type for the given dimension that occurred during the evaluationCycle. RATE &amp;ndash; When set to this value, the value of the associated value field is the rate of the customer service metric type in the given dimension during the associated evaluationCycle. Specifically, when metricKey is set to RATE, the associated value field is set to the value of metricKey TRANSACTION_COUNT divided by the value of metricKey COUNT. The returned benchmark.rating for the seller is based on this calculated value.
   * @return metricKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field indicates the customer service metric being returned in the associated metrics container. The field is set as follows: TRANSACTION_COUNT &ndash; When set to this value, the associated value field equals the total number of transactions completed in the seller group for the metric in the given dimension during the associated evaluationCycle. COUNT &ndash; When set to this value, the associated value field is set to the total number of transactions the seller completed that meet the criteria of the customer service metric type for the given dimension that occurred during the evaluationCycle. RATE &ndash; When set to this value, the value of the associated value field is the rate of the customer service metric type in the given dimension during the associated evaluationCycle. Specifically, when metricKey is set to RATE, the associated value field is set to the value of metricKey TRANSACTION_COUNT divided by the value of metricKey COUNT. The returned benchmark.rating for the seller is based on this calculated value.")

  public String getMetricKey() {
    return metricKey;
  }


  public void setMetricKey(String metricKey) {
    this.metricKey = metricKey;
  }


  public Metric value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * This field is set to the seller&#39;s numeric rating for the associated metricKey for the given dimension during the evaluationCycle. To determine the seller&#39;s rating for this metric, the value of this field is compared to the average metric value of the group.
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field is set to the seller's numeric rating for the associated metricKey for the given dimension during the evaluationCycle. To determine the seller's rating for this metric, the value of this field is compared to the average metric value of the group.")

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Metric metric = (Metric) o;
    return Objects.equals(this.benchmark, metric.benchmark) &&
        Objects.equals(this.distributions, metric.distributions) &&
        Objects.equals(this.metricKey, metric.metricKey) &&
        Objects.equals(this.value, metric.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(benchmark, distributions, metricKey, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Metric {\n");
    sb.append("    benchmark: ").append(toIndentedString(benchmark)).append("\n");
    sb.append("    distributions: ").append(toIndentedString(distributions)).append("\n");
    sb.append("    metricKey: ").append(toIndentedString(metricKey)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

