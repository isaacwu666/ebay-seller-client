/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * ListingStructurePolicy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class ListingStructurePolicy implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "categoryId";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private String categoryId;

  public static final String SERIALIZED_NAME_CATEGORY_TREE_ID = "categoryTreeId";
  @SerializedName(SERIALIZED_NAME_CATEGORY_TREE_ID)
  private String categoryTreeId;

  public static final String SERIALIZED_NAME_VARIATIONS_SUPPORTED = "variationsSupported";
  @SerializedName(SERIALIZED_NAME_VARIATIONS_SUPPORTED)
  private Boolean variationsSupported;


  public ListingStructurePolicy categoryId(String categoryId) {
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * The category ID to which the listing-structure policy applies.
   * @return categoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The category ID to which the listing-structure policy applies.")

  public String getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }


  public ListingStructurePolicy categoryTreeId(String categoryTreeId) {
    
    this.categoryTreeId = categoryTreeId;
    return this;
  }

   /**
   * A value that indicates the root node of the category tree used for the response set. Each marketplace is based on a category tree whose root node is indicated by this unique category ID value. All category policy information returned by this call pertains to the categories included below this root node of the tree.    &lt;br&gt;&lt;br&gt;A &lt;i&gt;category tree&lt;/i&gt; is a hierarchical framework of eBay categories that begins at the root node of the tree and extends to include all the child nodes in the tree. Each child node in the tree is an eBay category that is represented by a unique &lt;b&gt;categoryId&lt;/b&gt; value. Within a category tree, the root node has no parent node and &lt;i&gt;leaf nodes&lt;/i&gt; are nodes that have no child nodes.
   * @return categoryTreeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A value that indicates the root node of the category tree used for the response set. Each marketplace is based on a category tree whose root node is indicated by this unique category ID value. All category policy information returned by this call pertains to the categories included below this root node of the tree.    <br><br>A <i>category tree</i> is a hierarchical framework of eBay categories that begins at the root node of the tree and extends to include all the child nodes in the tree. Each child node in the tree is an eBay category that is represented by a unique <b>categoryId</b> value. Within a category tree, the root node has no parent node and <i>leaf nodes</i> are nodes that have no child nodes.")

  public String getCategoryTreeId() {
    return categoryTreeId;
  }


  public void setCategoryTreeId(String categoryTreeId) {
    this.categoryTreeId = categoryTreeId;
  }


  public ListingStructurePolicy variationsSupported(Boolean variationsSupported) {
    
    this.variationsSupported = variationsSupported;
    return this;
  }

   /**
   * This flag denotes whether or not the associated category supports listings with item variations. If set to &lt;code&gt;true&lt;/code&gt;, the category does support item variations.
   * @return variationsSupported
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This flag denotes whether or not the associated category supports listings with item variations. If set to <code>true</code>, the category does support item variations.")

  public Boolean getVariationsSupported() {
    return variationsSupported;
  }


  public void setVariationsSupported(Boolean variationsSupported) {
    this.variationsSupported = variationsSupported;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListingStructurePolicy listingStructurePolicy = (ListingStructurePolicy) o;
    return Objects.equals(this.categoryId, listingStructurePolicy.categoryId) &&
        Objects.equals(this.categoryTreeId, listingStructurePolicy.categoryTreeId) &&
        Objects.equals(this.variationsSupported, listingStructurePolicy.variationsSupported);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryId, categoryTreeId, variationsSupported);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListingStructurePolicy {\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    categoryTreeId: ").append(toIndentedString(categoryTreeId)).append("\n");
    sb.append("    variationsSupported: ").append(toIndentedString(variationsSupported)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

