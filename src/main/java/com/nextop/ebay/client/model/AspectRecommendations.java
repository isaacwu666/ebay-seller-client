/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type is used by the aspectsRecommendation container, which is returned if eBay has found a listing with missing or invalid item aspects (ASPECTS_ADOPTION compliance type).
 */
@ApiModel(description = "This type is used by the aspectsRecommendation container, which is returned if eBay has found a listing with missing or invalid item aspects (ASPECTS_ADOPTION compliance type).")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class AspectRecommendations implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_LOCALIZED_ASPECT_NAME = "localizedAspectName";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_ASPECT_NAME)
  private String localizedAspectName;

  public static final String SERIALIZED_NAME_SUGGESTED_VALUES = "suggestedValues";
  @SerializedName(SERIALIZED_NAME_SUGGESTED_VALUES)
  private List<String> suggestedValues = null;


  public AspectRecommendations localizedAspectName(String localizedAspectName) {
    
    this.localizedAspectName = localizedAspectName;
    return this;
  }

   /**
   * The name of the item aspect for which eBay has a recommendation. In many cases, the same item aspect(s) that are returned under the violationData array for ASPECTS_ADOPTION listing violations are also returned here Note: This name is always localized for the specified marketplace.
   * @return localizedAspectName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the item aspect for which eBay has a recommendation. In many cases, the same item aspect(s) that are returned under the violationData array for ASPECTS_ADOPTION listing violations are also returned here Note: This name is always localized for the specified marketplace.")

  public String getLocalizedAspectName() {
    return localizedAspectName;
  }


  public void setLocalizedAspectName(String localizedAspectName) {
    this.localizedAspectName = localizedAspectName;
  }


  public AspectRecommendations suggestedValues(List<String> suggestedValues) {
    
    this.suggestedValues = suggestedValues;
    return this;
  }

  public AspectRecommendations addSuggestedValuesItem(String suggestedValuesItem) {
    if (this.suggestedValues == null) {
      this.suggestedValues = new ArrayList<String>();
    }
    this.suggestedValues.add(suggestedValuesItem);
    return this;
  }

   /**
   * One or more valid values for the corresponding item aspect (in localizedAspectName) are returned here. These suggested values for the item aspect depend on the listing category and on the information specified in the listing. Sellers should confirm accuracy of the values before applying them to the listing. Please use getItemAspectsForCategory in the Taxonomy API or GetCategorySpecifics in the Trading API to get a comprehensive list of required and recommended aspects for a given category and a list of supported aspect values for each.
   * @return suggestedValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One or more valid values for the corresponding item aspect (in localizedAspectName) are returned here. These suggested values for the item aspect depend on the listing category and on the information specified in the listing. Sellers should confirm accuracy of the values before applying them to the listing. Please use getItemAspectsForCategory in the Taxonomy API or GetCategorySpecifics in the Trading API to get a comprehensive list of required and recommended aspects for a given category and a list of supported aspect values for each.")

  public List<String> getSuggestedValues() {
    return suggestedValues;
  }


  public void setSuggestedValues(List<String> suggestedValues) {
    this.suggestedValues = suggestedValues;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AspectRecommendations aspectRecommendations = (AspectRecommendations) o;
    return Objects.equals(this.localizedAspectName, aspectRecommendations.localizedAspectName) &&
        Objects.equals(this.suggestedValues, aspectRecommendations.suggestedValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(localizedAspectName, suggestedValues);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AspectRecommendations {\n");
    sb.append("    localizedAspectName: ").append(toIndentedString(localizedAspectName)).append("\n");
    sb.append("    suggestedValues: ").append(toIndentedString(suggestedValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

