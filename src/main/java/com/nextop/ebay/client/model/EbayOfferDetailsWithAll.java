/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.Charity;
import com.nextop.ebay.client.model.ExtendedProducerResponsibility;
import com.nextop.ebay.client.model.ListingDetails;
import com.nextop.ebay.client.model.ListingPolicies;
import com.nextop.ebay.client.model.PricingSummary;
import com.nextop.ebay.client.model.Tax;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type provides details of an offer, and is used by the response payloads of the &lt;strong&gt;getOffer&lt;/strong&gt; and the &lt;strong&gt;getOffers&lt;/strong&gt; calls.
 */
@ApiModel(description = "This type provides details of an offer, and is used by the response payloads of the <strong>getOffer</strong> and the <strong>getOffers</strong> calls.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class EbayOfferDetailsWithAll implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_AVAILABLE_QUANTITY = "availableQuantity";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_QUANTITY)
  private Integer availableQuantity;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "categoryId";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private String categoryId;

  public static final String SERIALIZED_NAME_CHARITY = "charity";
  @SerializedName(SERIALIZED_NAME_CHARITY)
  private Charity charity;

  public static final String SERIALIZED_NAME_EXTENDED_PRODUCER_RESPONSIBILITY = "extendedProducerResponsibility";
  @SerializedName(SERIALIZED_NAME_EXTENDED_PRODUCER_RESPONSIBILITY)
  private ExtendedProducerResponsibility extendedProducerResponsibility;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format;

  public static final String SERIALIZED_NAME_HIDE_BUYER_DETAILS = "hideBuyerDetails";
  @SerializedName(SERIALIZED_NAME_HIDE_BUYER_DETAILS)
  private Boolean hideBuyerDetails;

  public static final String SERIALIZED_NAME_INCLUDE_CATALOG_PRODUCT_DETAILS = "includeCatalogProductDetails";
  @SerializedName(SERIALIZED_NAME_INCLUDE_CATALOG_PRODUCT_DETAILS)
  private Boolean includeCatalogProductDetails;

  public static final String SERIALIZED_NAME_LISTING = "listing";
  @SerializedName(SERIALIZED_NAME_LISTING)
  private ListingDetails listing;

  public static final String SERIALIZED_NAME_LISTING_DESCRIPTION = "listingDescription";
  @SerializedName(SERIALIZED_NAME_LISTING_DESCRIPTION)
  private String listingDescription;

  public static final String SERIALIZED_NAME_LISTING_DURATION = "listingDuration";
  @SerializedName(SERIALIZED_NAME_LISTING_DURATION)
  private String listingDuration;

  public static final String SERIALIZED_NAME_LISTING_POLICIES = "listingPolicies";
  @SerializedName(SERIALIZED_NAME_LISTING_POLICIES)
  private ListingPolicies listingPolicies;

  public static final String SERIALIZED_NAME_LISTING_START_DATE = "listingStartDate";
  @SerializedName(SERIALIZED_NAME_LISTING_START_DATE)
  private String listingStartDate;

  public static final String SERIALIZED_NAME_LOT_SIZE = "lotSize";
  @SerializedName(SERIALIZED_NAME_LOT_SIZE)
  private Integer lotSize;

  public static final String SERIALIZED_NAME_MARKETPLACE_ID = "marketplaceId";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_ID)
  private String marketplaceId;

  public static final String SERIALIZED_NAME_MERCHANT_LOCATION_KEY = "merchantLocationKey";
  @SerializedName(SERIALIZED_NAME_MERCHANT_LOCATION_KEY)
  private String merchantLocationKey;

  public static final String SERIALIZED_NAME_OFFER_ID = "offerId";
  @SerializedName(SERIALIZED_NAME_OFFER_ID)
  private String offerId;

  public static final String SERIALIZED_NAME_PRICING_SUMMARY = "pricingSummary";
  @SerializedName(SERIALIZED_NAME_PRICING_SUMMARY)
  private PricingSummary pricingSummary;

  public static final String SERIALIZED_NAME_QUANTITY_LIMIT_PER_BUYER = "quantityLimitPerBuyer";
  @SerializedName(SERIALIZED_NAME_QUANTITY_LIMIT_PER_BUYER)
  private Integer quantityLimitPerBuyer;

  public static final String SERIALIZED_NAME_SECONDARY_CATEGORY_ID = "secondaryCategoryId";
  @SerializedName(SERIALIZED_NAME_SECONDARY_CATEGORY_ID)
  private String secondaryCategoryId;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STORE_CATEGORY_NAMES = "storeCategoryNames";
  @SerializedName(SERIALIZED_NAME_STORE_CATEGORY_NAMES)
  private List<String> storeCategoryNames = null;

  public static final String SERIALIZED_NAME_TAX = "tax";
  @SerializedName(SERIALIZED_NAME_TAX)
  private Tax tax;


  public EbayOfferDetailsWithAll availableQuantity(Integer availableQuantity) {
    
    this.availableQuantity = availableQuantity;
    return this;
  }

   /**
   * This integer value indicates the quantity of the inventory item (specified by the &lt;strong&gt;sku&lt;/strong&gt; value) that will be available for purchase by buyers shopping on the eBay site specified in the &lt;strong&gt;marketplaceId&lt;/strong&gt; field. For unpublished offers where the available quantity has yet to be set, the &lt;strong&gt;availableQuantity&lt;/strong&gt; value is set to &lt;code&gt;0&lt;/code&gt;.
   * @return availableQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This integer value indicates the quantity of the inventory item (specified by the <strong>sku</strong> value) that will be available for purchase by buyers shopping on the eBay site specified in the <strong>marketplaceId</strong> field. For unpublished offers where the available quantity has yet to be set, the <strong>availableQuantity</strong> value is set to <code>0</code>.")

  public Integer getAvailableQuantity() {
    return availableQuantity;
  }


  public void setAvailableQuantity(Integer availableQuantity) {
    this.availableQuantity = availableQuantity;
  }


  public EbayOfferDetailsWithAll categoryId(String categoryId) {
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * The unique identifier of the primary eBay category that the inventory item is listed under. This field is always returned for published offers, but is only returned if set for unpublished offers.
   * @return categoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier of the primary eBay category that the inventory item is listed under. This field is always returned for published offers, but is only returned if set for unpublished offers.")

  public String getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }


  public EbayOfferDetailsWithAll charity(Charity charity) {
    
    this.charity = charity;
    return this;
  }

   /**
   * Get charity
   * @return charity
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Charity getCharity() {
    return charity;
  }


  public void setCharity(Charity charity) {
    this.charity = charity;
  }


  public EbayOfferDetailsWithAll extendedProducerResponsibility(ExtendedProducerResponsibility extendedProducerResponsibility) {
    
    this.extendedProducerResponsibility = extendedProducerResponsibility;
    return this;
  }

   /**
   * Get extendedProducerResponsibility
   * @return extendedProducerResponsibility
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public ExtendedProducerResponsibility getExtendedProducerResponsibility() {
    return extendedProducerResponsibility;
  }


  public void setExtendedProducerResponsibility(ExtendedProducerResponsibility extendedProducerResponsibility) {
    this.extendedProducerResponsibility = extendedProducerResponsibility;
  }


  public EbayOfferDetailsWithAll format(String format) {
    
    this.format = format;
    return this;
  }

   /**
   * This enumerated value indicates the listing format of the offer. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/inventory/types/slr:FormatTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return format
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This enumerated value indicates the listing format of the offer. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:FormatTypeEnum'>eBay API documentation</a>")

  public String getFormat() {
    return format;
  }


  public void setFormat(String format) {
    this.format = format;
  }


  public EbayOfferDetailsWithAll hideBuyerDetails(Boolean hideBuyerDetails) {
    
    this.hideBuyerDetails = hideBuyerDetails;
    return this;
  }

   /**
   * This field is returned as &lt;code&gt;true&lt;/code&gt; if the private listing feature has been enabled for the offer. Sellers may want to use this feature when they believe that a listing&#39;s potential bidders/buyers would not want their obfuscated user IDs (and feedback scores) exposed to other users. &lt;br&gt;&lt;br&gt; This field is always returned even if not explicitly set in the offer. It defaults to &lt;code&gt;false&lt;/code&gt;, so will get returned as &lt;code&gt;false&lt;/code&gt; if seller does not set this feature with a &#39;Create&#39; or &#39;Update&#39; offer method.
   * @return hideBuyerDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field is returned as <code>true</code> if the private listing feature has been enabled for the offer. Sellers may want to use this feature when they believe that a listing's potential bidders/buyers would not want their obfuscated user IDs (and feedback scores) exposed to other users. <br><br> This field is always returned even if not explicitly set in the offer. It defaults to <code>false</code>, so will get returned as <code>false</code> if seller does not set this feature with a 'Create' or 'Update' offer method.")

  public Boolean getHideBuyerDetails() {
    return hideBuyerDetails;
  }


  public void setHideBuyerDetails(Boolean hideBuyerDetails) {
    this.hideBuyerDetails = hideBuyerDetails;
  }


  public EbayOfferDetailsWithAll includeCatalogProductDetails(Boolean includeCatalogProductDetails) {
    
    this.includeCatalogProductDetails = includeCatalogProductDetails;
    return this;
  }

   /**
   * This field indicates whether or not eBay product catalog details are applied to a listing. A value of &lt;code&gt;true&lt;/code&gt; indicates the listing corresponds to the eBay product associated with the provided product identifier. The product identifier is provided in &lt;strong&gt;createOrReplaceInventoryItem&lt;/strong&gt;.&lt;p&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; Though the &lt;strong&gt;includeCatalogProductDetails&lt;/strong&gt; parameter is not required to be submitted in the request, the parameter defaults to &#39;true&#39; if omitted.&lt;/span&gt;&lt;/p&gt;
   * @return includeCatalogProductDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field indicates whether or not eBay product catalog details are applied to a listing. A value of <code>true</code> indicates the listing corresponds to the eBay product associated with the provided product identifier. The product identifier is provided in <strong>createOrReplaceInventoryItem</strong>.<p><span class=\"tablenote\"><strong>Note:</strong> Though the <strong>includeCatalogProductDetails</strong> parameter is not required to be submitted in the request, the parameter defaults to 'true' if omitted.</span></p>")

  public Boolean getIncludeCatalogProductDetails() {
    return includeCatalogProductDetails;
  }


  public void setIncludeCatalogProductDetails(Boolean includeCatalogProductDetails) {
    this.includeCatalogProductDetails = includeCatalogProductDetails;
  }


  public EbayOfferDetailsWithAll listing(ListingDetails listing) {
    
    this.listing = listing;
    return this;
  }

   /**
   * Get listing
   * @return listing
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public ListingDetails getListing() {
    return listing;
  }


  public void setListing(ListingDetails listing) {
    this.listing = listing;
  }


  public EbayOfferDetailsWithAll listingDescription(String listingDescription) {
    
    this.listingDescription = listingDescription;
    return this;
  }

   /**
   * The description of the eBay listing that is part of the unpublished or published offer. This field is always returned for published offers, but is only returned if set for unpublished offers.&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Max Length&lt;/strong&gt;: 500000 (which includes HTML markup/tags)
   * @return listingDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the eBay listing that is part of the unpublished or published offer. This field is always returned for published offers, but is only returned if set for unpublished offers.<br/><br/><strong>Max Length</strong>: 500000 (which includes HTML markup/tags)")

  public String getListingDescription() {
    return listingDescription;
  }


  public void setListingDescription(String listingDescription) {
    this.listingDescription = listingDescription;
  }


  public EbayOfferDetailsWithAll listingDuration(String listingDuration) {
    
    this.listingDuration = listingDuration;
    return this;
  }

   /**
   * This field indicates the number of days that the listing will be active.&lt;br /&gt;&lt;br /&gt;This field is returned for both auction and fixed-price listings; however, the value returned for fixed-price listings will always be &lt;code&gt;GTC&lt;/code&gt;. The GTC (Good &#39;Til Cancelled) listings are automatically renewed each calendar month until the seller decides to end the listing.&lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;strong&gt;Note:&lt;/strong&gt; If the listing duration expires for an auction offer, the listing then becomes available as a fixed-price offer and will be GTC.&lt;/span&gt; For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/inventory/types/slr:ListingDurationEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return listingDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field indicates the number of days that the listing will be active.<br /><br />This field is returned for both auction and fixed-price listings; however, the value returned for fixed-price listings will always be <code>GTC</code>. The GTC (Good 'Til Cancelled) listings are automatically renewed each calendar month until the seller decides to end the listing.<br /><br /><span class=\"tablenote\"> <strong>Note:</strong> If the listing duration expires for an auction offer, the listing then becomes available as a fixed-price offer and will be GTC.</span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:ListingDurationEnum'>eBay API documentation</a>")

  public String getListingDuration() {
    return listingDuration;
  }


  public void setListingDuration(String listingDuration) {
    this.listingDuration = listingDuration;
  }


  public EbayOfferDetailsWithAll listingPolicies(ListingPolicies listingPolicies) {
    
    this.listingPolicies = listingPolicies;
    return this;
  }

   /**
   * Get listingPolicies
   * @return listingPolicies
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public ListingPolicies getListingPolicies() {
    return listingPolicies;
  }


  public void setListingPolicies(ListingPolicies listingPolicies) {
    this.listingPolicies = listingPolicies;
  }


  public EbayOfferDetailsWithAll listingStartDate(String listingStartDate) {
    
    this.listingStartDate = listingStartDate;
    return this;
  }

   /**
   * This timestamp is the date/time that the seller set for the scheduled listing. With the scheduled listing feature, the seller can set a time in the future that the listing will become active, instead of the listing becoming active immediately after a &lt;strong&gt;publishOffer&lt;/strong&gt; call. &lt;br&gt;&lt;br&gt; Scheduled listings do not always start at the exact date/time specified by the seller, but the date/time of the timestamp returned in &lt;strong&gt;getOffer&lt;/strong&gt;/&lt;strong&gt;getOffers&lt;/strong&gt; will be the same as the timestamp passed into a &#39;Create&#39; or &#39;Update&#39; offer call. &lt;br&gt;&lt;br&gt; This field is returned if set for an offer.
   * @return listingStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This timestamp is the date/time that the seller set for the scheduled listing. With the scheduled listing feature, the seller can set a time in the future that the listing will become active, instead of the listing becoming active immediately after a <strong>publishOffer</strong> call. <br><br> Scheduled listings do not always start at the exact date/time specified by the seller, but the date/time of the timestamp returned in <strong>getOffer</strong>/<strong>getOffers</strong> will be the same as the timestamp passed into a 'Create' or 'Update' offer call. <br><br> This field is returned if set for an offer.")

  public String getListingStartDate() {
    return listingStartDate;
  }


  public void setListingStartDate(String listingStartDate) {
    this.listingStartDate = listingStartDate;
  }


  public EbayOfferDetailsWithAll lotSize(Integer lotSize) {
    
    this.lotSize = lotSize;
    return this;
  }

   /**
   * This field is only applicable and returned if the listing is a lot listing. A lot listing is a listing that has multiple quantity of the same product. An example would be a set of four identical car tires. The integer value in this field is the number of identical items being sold through the lot listing.
   * @return lotSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field is only applicable and returned if the listing is a lot listing. A lot listing is a listing that has multiple quantity of the same product. An example would be a set of four identical car tires. The integer value in this field is the number of identical items being sold through the lot listing.")

  public Integer getLotSize() {
    return lotSize;
  }


  public void setLotSize(Integer lotSize) {
    this.lotSize = lotSize;
  }


  public EbayOfferDetailsWithAll marketplaceId(String marketplaceId) {
    
    this.marketplaceId = marketplaceId;
    return this;
  }

   /**
   * This enumeration value is the unique identifier of the eBay site on which the offer is available, or will be made available. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/inventory/types/slr:MarketplaceEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return marketplaceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This enumeration value is the unique identifier of the eBay site on which the offer is available, or will be made available. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:MarketplaceEnum'>eBay API documentation</a>")

  public String getMarketplaceId() {
    return marketplaceId;
  }


  public void setMarketplaceId(String marketplaceId) {
    this.marketplaceId = marketplaceId;
  }


  public EbayOfferDetailsWithAll merchantLocationKey(String merchantLocationKey) {
    
    this.merchantLocationKey = merchantLocationKey;
    return this;
  }

   /**
   * The unique identifier of the inventory location. This identifier is set up by the merchant when the inventory location is first created with the &lt;strong&gt;createInventoryLocation&lt;/strong&gt; call. Once this value is set for an inventory location, it can not be modified. To get more information about this inventory location, the &lt;strong&gt;getInventoryLocation&lt;/strong&gt; call can be used, passing in this value at the end of the call URI.&lt;br/&gt;&lt;br/&gt;This field is always returned for published offers, but is only returned if set for unpublished offers.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Max length&lt;/b&gt;: 36
   * @return merchantLocationKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier of the inventory location. This identifier is set up by the merchant when the inventory location is first created with the <strong>createInventoryLocation</strong> call. Once this value is set for an inventory location, it can not be modified. To get more information about this inventory location, the <strong>getInventoryLocation</strong> call can be used, passing in this value at the end of the call URI.<br/><br/>This field is always returned for published offers, but is only returned if set for unpublished offers.<br/><br/><b>Max length</b>: 36")

  public String getMerchantLocationKey() {
    return merchantLocationKey;
  }


  public void setMerchantLocationKey(String merchantLocationKey) {
    this.merchantLocationKey = merchantLocationKey;
  }


  public EbayOfferDetailsWithAll offerId(String offerId) {
    
    this.offerId = offerId;
    return this;
  }

   /**
   * The unique identifier of the offer. This identifier is used in many offer-related calls, and it is also used in the &lt;strong&gt;bulkUpdatePriceQuantity&lt;/strong&gt; call.
   * @return offerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier of the offer. This identifier is used in many offer-related calls, and it is also used in the <strong>bulkUpdatePriceQuantity</strong> call.")

  public String getOfferId() {
    return offerId;
  }


  public void setOfferId(String offerId) {
    this.offerId = offerId;
  }


  public EbayOfferDetailsWithAll pricingSummary(PricingSummary pricingSummary) {
    
    this.pricingSummary = pricingSummary;
    return this;
  }

   /**
   * Get pricingSummary
   * @return pricingSummary
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public PricingSummary getPricingSummary() {
    return pricingSummary;
  }


  public void setPricingSummary(PricingSummary pricingSummary) {
    this.pricingSummary = pricingSummary;
  }


  public EbayOfferDetailsWithAll quantityLimitPerBuyer(Integer quantityLimitPerBuyer) {
    
    this.quantityLimitPerBuyer = quantityLimitPerBuyer;
    return this;
  }

   /**
   * This field is only applicable and set if the seller wishes to set a restriction on the purchase quantity of an inventory item per seller. If this field is set by the seller for the offer, then each distinct buyer may purchase up to, but not exceed the quantity in this field. So, if this field&#39;s value is &lt;code&gt;5&lt;/code&gt;, each buyer may purchase a quantity of the inventory item between one and five, and the purchases can occur in one multiple-quantity purchase, or over multiple transactions. If a buyer attempts to purchase one or more of these products, and the cumulative quantity will take the buyer beyond the quantity limit, that buyer will be blocked from that purchase.&lt;br/&gt;
   * @return quantityLimitPerBuyer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field is only applicable and set if the seller wishes to set a restriction on the purchase quantity of an inventory item per seller. If this field is set by the seller for the offer, then each distinct buyer may purchase up to, but not exceed the quantity in this field. So, if this field's value is <code>5</code>, each buyer may purchase a quantity of the inventory item between one and five, and the purchases can occur in one multiple-quantity purchase, or over multiple transactions. If a buyer attempts to purchase one or more of these products, and the cumulative quantity will take the buyer beyond the quantity limit, that buyer will be blocked from that purchase.<br/>")

  public Integer getQuantityLimitPerBuyer() {
    return quantityLimitPerBuyer;
  }


  public void setQuantityLimitPerBuyer(Integer quantityLimitPerBuyer) {
    this.quantityLimitPerBuyer = quantityLimitPerBuyer;
  }


  public EbayOfferDetailsWithAll secondaryCategoryId(String secondaryCategoryId) {
    
    this.secondaryCategoryId = secondaryCategoryId;
    return this;
  }

   /**
   * The unique identifier for a secondary category. This field is applicable if the seller decides to list the item under two categories. Sellers can use the &lt;a href&#x3D;\&quot;/api-docs/commerce/taxonomy/resources/category_tree/methods/getCategorySuggestions\&quot; target&#x3D;\&quot;_blank\&quot;&gt;getCategorySuggestions&lt;/a&gt; method of the Taxonomy API to retrieve suggested category ID values. A fee may be charged when adding a secondary category to a listing. &lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; You cannot list &lt;strong&gt;US eBay Motors&lt;/strong&gt; vehicles in two categories. However, you can list &lt;strong&gt;Parts &amp; Accessories&lt;/strong&gt; in two categories.&lt;/span&gt;
   * @return secondaryCategoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier for a secondary category. This field is applicable if the seller decides to list the item under two categories. Sellers can use the <a href=\"/api-docs/commerce/taxonomy/resources/category_tree/methods/getCategorySuggestions\" target=\"_blank\">getCategorySuggestions</a> method of the Taxonomy API to retrieve suggested category ID values. A fee may be charged when adding a secondary category to a listing. <br/><br/><span class=\"tablenote\"><strong>Note:</strong> You cannot list <strong>US eBay Motors</strong> vehicles in two categories. However, you can list <strong>Parts & Accessories</strong> in two categories.</span>")

  public String getSecondaryCategoryId() {
    return secondaryCategoryId;
  }


  public void setSecondaryCategoryId(String secondaryCategoryId) {
    this.secondaryCategoryId = secondaryCategoryId;
  }


  public EbayOfferDetailsWithAll sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * This is the seller-defined SKU value of the product in the offer.&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Max Length&lt;/strong&gt;: 50 &lt;br/&gt;
   * @return sku
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is the seller-defined SKU value of the product in the offer.<br/><br/><strong>Max Length</strong>: 50 <br/>")

  public String getSku() {
    return sku;
  }


  public void setSku(String sku) {
    this.sku = sku;
  }


  public EbayOfferDetailsWithAll status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * The enumeration value in this field specifies the status of the offer - either &lt;code&gt;PUBLISHED&lt;/code&gt; or &lt;code&gt;UNPUBLISHED&lt;/code&gt;. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/inventory/types/slr:OfferStatusEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The enumeration value in this field specifies the status of the offer - either <code>PUBLISHED</code> or <code>UNPUBLISHED</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:OfferStatusEnum'>eBay API documentation</a>")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public EbayOfferDetailsWithAll storeCategoryNames(List<String> storeCategoryNames) {
    
    this.storeCategoryNames = storeCategoryNames;
    return this;
  }

  public EbayOfferDetailsWithAll addStoreCategoryNamesItem(String storeCategoryNamesItem) {
    if (this.storeCategoryNames == null) {
      this.storeCategoryNames = new ArrayList<String>();
    }
    this.storeCategoryNames.add(storeCategoryNamesItem);
    return this;
  }

   /**
   * This container is returned if the seller chose to place the inventory item into one or two eBay store categories that the seller has set up for their eBay store. The string value(s) in this container will be the full path(s) to the eBay store categories, as shown below:&lt;br&gt; &lt;pre&gt;&lt;code&gt;\&quot;storeCategoryNames\&quot;: [&lt;br/&gt; \&quot;/Fashion/Men/Shirts\&quot;, &lt;br/&gt; \&quot;/Fashion/Men/Accessories\&quot; ], &lt;/pre&gt;&lt;/code&gt;
   * @return storeCategoryNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This container is returned if the seller chose to place the inventory item into one or two eBay store categories that the seller has set up for their eBay store. The string value(s) in this container will be the full path(s) to the eBay store categories, as shown below:<br> <pre><code>\"storeCategoryNames\": [<br/> \"/Fashion/Men/Shirts\", <br/> \"/Fashion/Men/Accessories\" ], </pre></code>")

  public List<String> getStoreCategoryNames() {
    return storeCategoryNames;
  }


  public void setStoreCategoryNames(List<String> storeCategoryNames) {
    this.storeCategoryNames = storeCategoryNames;
  }


  public EbayOfferDetailsWithAll tax(Tax tax) {
    
    this.tax = tax;
    return this;
  }

   /**
   * Get tax
   * @return tax
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Tax getTax() {
    return tax;
  }


  public void setTax(Tax tax) {
    this.tax = tax;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EbayOfferDetailsWithAll ebayOfferDetailsWithAll = (EbayOfferDetailsWithAll) o;
    return Objects.equals(this.availableQuantity, ebayOfferDetailsWithAll.availableQuantity) &&
        Objects.equals(this.categoryId, ebayOfferDetailsWithAll.categoryId) &&
        Objects.equals(this.charity, ebayOfferDetailsWithAll.charity) &&
        Objects.equals(this.extendedProducerResponsibility, ebayOfferDetailsWithAll.extendedProducerResponsibility) &&
        Objects.equals(this.format, ebayOfferDetailsWithAll.format) &&
        Objects.equals(this.hideBuyerDetails, ebayOfferDetailsWithAll.hideBuyerDetails) &&
        Objects.equals(this.includeCatalogProductDetails, ebayOfferDetailsWithAll.includeCatalogProductDetails) &&
        Objects.equals(this.listing, ebayOfferDetailsWithAll.listing) &&
        Objects.equals(this.listingDescription, ebayOfferDetailsWithAll.listingDescription) &&
        Objects.equals(this.listingDuration, ebayOfferDetailsWithAll.listingDuration) &&
        Objects.equals(this.listingPolicies, ebayOfferDetailsWithAll.listingPolicies) &&
        Objects.equals(this.listingStartDate, ebayOfferDetailsWithAll.listingStartDate) &&
        Objects.equals(this.lotSize, ebayOfferDetailsWithAll.lotSize) &&
        Objects.equals(this.marketplaceId, ebayOfferDetailsWithAll.marketplaceId) &&
        Objects.equals(this.merchantLocationKey, ebayOfferDetailsWithAll.merchantLocationKey) &&
        Objects.equals(this.offerId, ebayOfferDetailsWithAll.offerId) &&
        Objects.equals(this.pricingSummary, ebayOfferDetailsWithAll.pricingSummary) &&
        Objects.equals(this.quantityLimitPerBuyer, ebayOfferDetailsWithAll.quantityLimitPerBuyer) &&
        Objects.equals(this.secondaryCategoryId, ebayOfferDetailsWithAll.secondaryCategoryId) &&
        Objects.equals(this.sku, ebayOfferDetailsWithAll.sku) &&
        Objects.equals(this.status, ebayOfferDetailsWithAll.status) &&
        Objects.equals(this.storeCategoryNames, ebayOfferDetailsWithAll.storeCategoryNames) &&
        Objects.equals(this.tax, ebayOfferDetailsWithAll.tax);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availableQuantity, categoryId, charity, extendedProducerResponsibility, format, hideBuyerDetails, includeCatalogProductDetails, listing, listingDescription, listingDuration, listingPolicies, listingStartDate, lotSize, marketplaceId, merchantLocationKey, offerId, pricingSummary, quantityLimitPerBuyer, secondaryCategoryId, sku, status, storeCategoryNames, tax);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EbayOfferDetailsWithAll {\n");
    sb.append("    availableQuantity: ").append(toIndentedString(availableQuantity)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    charity: ").append(toIndentedString(charity)).append("\n");
    sb.append("    extendedProducerResponsibility: ").append(toIndentedString(extendedProducerResponsibility)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    hideBuyerDetails: ").append(toIndentedString(hideBuyerDetails)).append("\n");
    sb.append("    includeCatalogProductDetails: ").append(toIndentedString(includeCatalogProductDetails)).append("\n");
    sb.append("    listing: ").append(toIndentedString(listing)).append("\n");
    sb.append("    listingDescription: ").append(toIndentedString(listingDescription)).append("\n");
    sb.append("    listingDuration: ").append(toIndentedString(listingDuration)).append("\n");
    sb.append("    listingPolicies: ").append(toIndentedString(listingPolicies)).append("\n");
    sb.append("    listingStartDate: ").append(toIndentedString(listingStartDate)).append("\n");
    sb.append("    lotSize: ").append(toIndentedString(lotSize)).append("\n");
    sb.append("    marketplaceId: ").append(toIndentedString(marketplaceId)).append("\n");
    sb.append("    merchantLocationKey: ").append(toIndentedString(merchantLocationKey)).append("\n");
    sb.append("    offerId: ").append(toIndentedString(offerId)).append("\n");
    sb.append("    pricingSummary: ").append(toIndentedString(pricingSummary)).append("\n");
    sb.append("    quantityLimitPerBuyer: ").append(toIndentedString(quantityLimitPerBuyer)).append("\n");
    sb.append("    secondaryCategoryId: ").append(toIndentedString(secondaryCategoryId)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    storeCategoryNames: ").append(toIndentedString(storeCategoryNames)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

