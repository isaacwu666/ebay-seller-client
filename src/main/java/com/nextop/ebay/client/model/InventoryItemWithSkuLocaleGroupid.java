/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.AvailabilityWithAll;
import com.nextop.ebay.client.model.PackageWeightAndSize;
import com.nextop.ebay.client.model.Product;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * InventoryItemWithSkuLocaleGroupid
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class InventoryItemWithSkuLocaleGroupid implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_AVAILABILITY = "availability";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY)
  private AvailabilityWithAll availability;

  public static final String SERIALIZED_NAME_CONDITION = "condition";
  @SerializedName(SERIALIZED_NAME_CONDITION)
  private String condition;

  public static final String SERIALIZED_NAME_CONDITION_DESCRIPTION = "conditionDescription";
  @SerializedName(SERIALIZED_NAME_CONDITION_DESCRIPTION)
  private String conditionDescription;

  public static final String SERIALIZED_NAME_GROUP_IDS = "groupIds";
  @SerializedName(SERIALIZED_NAME_GROUP_IDS)
  private List<String> groupIds = null;

  public static final String SERIALIZED_NAME_INVENTORY_ITEM_GROUP_KEYS = "inventoryItemGroupKeys";
  @SerializedName(SERIALIZED_NAME_INVENTORY_ITEM_GROUP_KEYS)
  private List<String> inventoryItemGroupKeys = null;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  private String locale;

  public static final String SERIALIZED_NAME_PACKAGE_WEIGHT_AND_SIZE = "packageWeightAndSize";
  @SerializedName(SERIALIZED_NAME_PACKAGE_WEIGHT_AND_SIZE)
  private PackageWeightAndSize packageWeightAndSize;

  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private Product product;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;


  public InventoryItemWithSkuLocaleGroupid availability(AvailabilityWithAll availability) {
    
    this.availability = availability;
    return this;
  }

   /**
   * Get availability
   * @return availability
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public AvailabilityWithAll getAvailability() {
    return availability;
  }


  public void setAvailability(AvailabilityWithAll availability) {
    this.availability = availability;
  }


  public InventoryItemWithSkuLocaleGroupid condition(String condition) {
    
    this.condition = condition;
    return this;
  }

   /**
   * This enumeration value indicates the condition of the item. Supported item condition values will vary by eBay site and category. &lt;br /&gt;&lt;br /&gt; Since the condition of an inventory item must be specified before being published in an offer, this field is always returned in the &#39;Get&#39; calls for SKUs that are part of a published offer. If a SKU is not part of a published offer, this field will only be returned if set for the inventory item. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/inventory/types/slr:ConditionEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return condition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This enumeration value indicates the condition of the item. Supported item condition values will vary by eBay site and category. <br /><br /> Since the condition of an inventory item must be specified before being published in an offer, this field is always returned in the 'Get' calls for SKUs that are part of a published offer. If a SKU is not part of a published offer, this field will only be returned if set for the inventory item. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:ConditionEnum'>eBay API documentation</a>")

  public String getCondition() {
    return condition;
  }


  public void setCondition(String condition) {
    this.condition = condition;
  }


  public InventoryItemWithSkuLocaleGroupid conditionDescription(String conditionDescription) {
    
    this.conditionDescription = conditionDescription;
    return this;
  }

   /**
   * This string field is used by the seller to more clearly describe the condition of used items, or items that are not &#39;Brand New&#39;, &#39;New with tags&#39;, or &#39;New in box&#39;. The ConditionDescription field is available for all categories. If the ConditionDescription field is used with an item in a new condition (Condition IDs 1000-1499), eBay will simply ignore this field if included, and eBay will return a warning message to the user. This field should only be used to further clarify the condition of the used item. It should not be used for branding, promotions, shipping, returns, payment or other information unrelated to the condition of the item. Make sure that the condition value, condition description, listing description, and the item&#39;s pictures do not contradict one another.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Max length&lt;/strong&gt;/: 1000.
   * @return conditionDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This string field is used by the seller to more clearly describe the condition of used items, or items that are not 'Brand New', 'New with tags', or 'New in box'. The ConditionDescription field is available for all categories. If the ConditionDescription field is used with an item in a new condition (Condition IDs 1000-1499), eBay will simply ignore this field if included, and eBay will return a warning message to the user. This field should only be used to further clarify the condition of the used item. It should not be used for branding, promotions, shipping, returns, payment or other information unrelated to the condition of the item. Make sure that the condition value, condition description, listing description, and the item's pictures do not contradict one another.<br /><br /><strong>Max length</strong>/: 1000.")

  public String getConditionDescription() {
    return conditionDescription;
  }


  public void setConditionDescription(String conditionDescription) {
    this.conditionDescription = conditionDescription;
  }


  public InventoryItemWithSkuLocaleGroupid groupIds(List<String> groupIds) {
    
    this.groupIds = groupIds;
    return this;
  }

  public InventoryItemWithSkuLocaleGroupid addGroupIdsItem(String groupIdsItem) {
    if (this.groupIds == null) {
      this.groupIds = new ArrayList<String>();
    }
    this.groupIds.add(groupIdsItem);
    return this;
  }

   /**
   * This array is returned if the inventory item is associated with any inventory item group(s). The value(s) returned in this array are the unique identifier(s) of the inventory item group(s). This array is not returned if the inventory item is not associated with any inventory item groups.
   * @return groupIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This array is returned if the inventory item is associated with any inventory item group(s). The value(s) returned in this array are the unique identifier(s) of the inventory item group(s). This array is not returned if the inventory item is not associated with any inventory item groups.")

  public List<String> getGroupIds() {
    return groupIds;
  }


  public void setGroupIds(List<String> groupIds) {
    this.groupIds = groupIds;
  }


  public InventoryItemWithSkuLocaleGroupid inventoryItemGroupKeys(List<String> inventoryItemGroupKeys) {
    
    this.inventoryItemGroupKeys = inventoryItemGroupKeys;
    return this;
  }

  public InventoryItemWithSkuLocaleGroupid addInventoryItemGroupKeysItem(String inventoryItemGroupKeysItem) {
    if (this.inventoryItemGroupKeys == null) {
      this.inventoryItemGroupKeys = new ArrayList<String>();
    }
    this.inventoryItemGroupKeys.add(inventoryItemGroupKeysItem);
    return this;
  }

   /**
   * This array is returned if the inventory item is associated with any inventory item group(s). The value(s) returned in this array are the unique identifier(s) of the inventory item&#39;s variation in a multiple-variation listing. This array is not returned if the inventory item is not associated with any inventory item groups.
   * @return inventoryItemGroupKeys
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This array is returned if the inventory item is associated with any inventory item group(s). The value(s) returned in this array are the unique identifier(s) of the inventory item's variation in a multiple-variation listing. This array is not returned if the inventory item is not associated with any inventory item groups.")

  public List<String> getInventoryItemGroupKeys() {
    return inventoryItemGroupKeys;
  }


  public void setInventoryItemGroupKeys(List<String> inventoryItemGroupKeys) {
    this.inventoryItemGroupKeys = inventoryItemGroupKeys;
  }


  public InventoryItemWithSkuLocaleGroupid locale(String locale) {
    
    this.locale = locale;
    return this;
  }

   /**
   * This field is for future use only. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/inventory/types/slr:LocaleEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return locale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field is for future use only. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:LocaleEnum'>eBay API documentation</a>")

  public String getLocale() {
    return locale;
  }


  public void setLocale(String locale) {
    this.locale = locale;
  }


  public InventoryItemWithSkuLocaleGroupid packageWeightAndSize(PackageWeightAndSize packageWeightAndSize) {
    
    this.packageWeightAndSize = packageWeightAndSize;
    return this;
  }

   /**
   * Get packageWeightAndSize
   * @return packageWeightAndSize
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public PackageWeightAndSize getPackageWeightAndSize() {
    return packageWeightAndSize;
  }


  public void setPackageWeightAndSize(PackageWeightAndSize packageWeightAndSize) {
    this.packageWeightAndSize = packageWeightAndSize;
  }


  public InventoryItemWithSkuLocaleGroupid product(Product product) {
    
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Product getProduct() {
    return product;
  }


  public void setProduct(Product product) {
    this.product = product;
  }


  public InventoryItemWithSkuLocaleGroupid sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * The seller-defined Stock-Keeping Unit (SKU) of the inventory item. The seller should have a unique SKU value for every product that they sell.
   * @return sku
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The seller-defined Stock-Keeping Unit (SKU) of the inventory item. The seller should have a unique SKU value for every product that they sell.")

  public String getSku() {
    return sku;
  }


  public void setSku(String sku) {
    this.sku = sku;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InventoryItemWithSkuLocaleGroupid inventoryItemWithSkuLocaleGroupid = (InventoryItemWithSkuLocaleGroupid) o;
    return Objects.equals(this.availability, inventoryItemWithSkuLocaleGroupid.availability) &&
        Objects.equals(this.condition, inventoryItemWithSkuLocaleGroupid.condition) &&
        Objects.equals(this.conditionDescription, inventoryItemWithSkuLocaleGroupid.conditionDescription) &&
        Objects.equals(this.groupIds, inventoryItemWithSkuLocaleGroupid.groupIds) &&
        Objects.equals(this.inventoryItemGroupKeys, inventoryItemWithSkuLocaleGroupid.inventoryItemGroupKeys) &&
        Objects.equals(this.locale, inventoryItemWithSkuLocaleGroupid.locale) &&
        Objects.equals(this.packageWeightAndSize, inventoryItemWithSkuLocaleGroupid.packageWeightAndSize) &&
        Objects.equals(this.product, inventoryItemWithSkuLocaleGroupid.product) &&
        Objects.equals(this.sku, inventoryItemWithSkuLocaleGroupid.sku);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availability, condition, conditionDescription, groupIds, inventoryItemGroupKeys, locale, packageWeightAndSize, product, sku);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InventoryItemWithSkuLocaleGroupid {\n");
    sb.append("    availability: ").append(toIndentedString(availability)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    conditionDescription: ").append(toIndentedString(conditionDescription)).append("\n");
    sb.append("    groupIds: ").append(toIndentedString(groupIds)).append("\n");
    sb.append("    inventoryItemGroupKeys: ").append(toIndentedString(inventoryItemGroupKeys)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    packageWeightAndSize: ").append(toIndentedString(packageWeightAndSize)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

