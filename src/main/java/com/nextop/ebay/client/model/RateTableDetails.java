/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.Rate;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This container includes all information pertaining to a shipping rate table. A successful call returns the requested shipping rate information.
 */
@ApiModel(description = "This container includes all information pertaining to a shipping rate table. A successful call returns the requested shipping rate information.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class RateTableDetails implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_MARKETPLACE_ID = "marketplaceId";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_ID)
  private String marketplaceId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RATES = "rates";
  @SerializedName(SERIALIZED_NAME_RATES)
  private List<Rate> rates = null;

  public static final String SERIALIZED_NAME_RATE_TABLE_BASIS = "rateTableBasis";
  @SerializedName(SERIALIZED_NAME_RATE_TABLE_BASIS)
  private String rateTableBasis;

  public static final String SERIALIZED_NAME_RATE_TABLE_ID = "rateTableId";
  @SerializedName(SERIALIZED_NAME_RATE_TABLE_ID)
  private String rateTableId;

  public static final String SERIALIZED_NAME_SHIPPING_OPTION_TYPE = "shippingOptionType";
  @SerializedName(SERIALIZED_NAME_SHIPPING_OPTION_TYPE)
  private String shippingOptionType;


  public RateTableDetails marketplaceId(String marketplaceId) {
    
    this.marketplaceId = marketplaceId;
    return this;
  }

   /**
   * Identifies the eBay marketplace to which the shipping rate table applies. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return marketplaceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the eBay marketplace to which the shipping rate table applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>")

  public String getMarketplaceId() {
    return marketplaceId;
  }


  public void setMarketplaceId(String marketplaceId) {
    this.marketplaceId = marketplaceId;
  }


  public RateTableDetails name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The seller-defined name for the shipping rate table. Names must be unique for each table assigned to the same seller, shippingOptionType, and eBay marketplace.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Max length:&lt;/b&gt; 50
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The seller-defined name for the shipping rate table. Names must be unique for each table assigned to the same seller, shippingOptionType, and eBay marketplace.<br/><br/><b>Max length:</b> 50")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public RateTableDetails rates(List<Rate> rates) {
    
    this.rates = rates;
    return this;
  }

  public RateTableDetails addRatesItem(Rate ratesItem) {
    if (this.rates == null) {
      this.rates = new ArrayList<Rate>();
    }
    this.rates.add(ratesItem);
    return this;
  }

   /**
   * An array of rate objects associated with the specified shipping rate table. Each rate object is identified by a unique system-generated ID and defines specific shipping rate information.
   * @return rates
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "An array of rate objects associated with the specified shipping rate table. Each rate object is identified by a unique system-generated ID and defines specific shipping rate information.")

  public List<Rate> getRates() {
    return rates;
  }


  public void setRates(List<Rate> rates) {
    this.rates = rates;
  }


  public RateTableDetails rateTableBasis(String rateTableBasis) {
    
    this.rateTableBasis = rateTableBasis;
    return this;
  }

   /**
   * The rate calculation type provides three methods of calculating the shipping cost based on the seller&#39;s selection/input:&lt;ul&gt;&lt;li&gt;&lt;b&gt;ITEM&lt;/b&gt;: Specifies the flat rate shipping cost that buyers in the specified shipping region will pay. When this option is selected, information specified in the rate table overrides all shipping options/costs that are specified at the listing level. Buyers in the specified regions will only see the services provided in the rate table. Buyers in other regions that are not specified in the rate table will see the shipping services associated with the listing.&lt;/li&gt;&lt;li&gt;&lt;b&gt;WEIGHT&lt;/b&gt;: Seller can provide minimum shipping cost and an additional shipping cost per pound. The additional cost will be calculated based on the weight the seller provide at the time of listing. Buyers will see the total shipping cost and won’t see these calculations.  Buyers in the specified regions will only see the services provided in the rate table. Buyers in other regions that were not specified in the rate table, will see the shipping services associated with the listing.&lt;/li&gt;&lt;li&gt;&lt;b&gt;SURCHARGE&lt;/b&gt;: Lists surcharges for buyers within specified regions, or indicates a flat amount added to the shipping cost specified within an item&#39;s listing. Buyers will see only the total shipping cost as well as shipping services associated with the item&#39;s listing. If a SURCHARGE is specified in the rate table for certain regions, buyers in those regions will see the (shipping cost + SURCHARGE) total.&lt;/li&gt;&lt;/ul&gt; For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:ShippingRateCalculationEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return rateTableBasis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The rate calculation type provides three methods of calculating the shipping cost based on the seller's selection/input:<ul><li><b>ITEM</b>: Specifies the flat rate shipping cost that buyers in the specified shipping region will pay. When this option is selected, information specified in the rate table overrides all shipping options/costs that are specified at the listing level. Buyers in the specified regions will only see the services provided in the rate table. Buyers in other regions that are not specified in the rate table will see the shipping services associated with the listing.</li><li><b>WEIGHT</b>: Seller can provide minimum shipping cost and an additional shipping cost per pound. The additional cost will be calculated based on the weight the seller provide at the time of listing. Buyers will see the total shipping cost and won’t see these calculations.  Buyers in the specified regions will only see the services provided in the rate table. Buyers in other regions that were not specified in the rate table, will see the shipping services associated with the listing.</li><li><b>SURCHARGE</b>: Lists surcharges for buyers within specified regions, or indicates a flat amount added to the shipping cost specified within an item's listing. Buyers will see only the total shipping cost as well as shipping services associated with the item's listing. If a SURCHARGE is specified in the rate table for certain regions, buyers in those regions will see the (shipping cost + SURCHARGE) total.</li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ShippingRateCalculationEnum'>eBay API documentation</a>")

  public String getRateTableBasis() {
    return rateTableBasis;
  }


  public void setRateTableBasis(String rateTableBasis) {
    this.rateTableBasis = rateTableBasis;
  }


  public RateTableDetails rateTableId(String rateTableId) {
    
    this.rateTableId = rateTableId;
    return this;
  }

   /**
   * A unique, system-generated ID assigned to the shipping rate table when it is initially created.
   * @return rateTableId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique, system-generated ID assigned to the shipping rate table when it is initially created.")

  public String getRateTableId() {
    return rateTableId;
  }


  public void setRateTableId(String rateTableId) {
    this.rateTableId = rateTableId;
  }


  public RateTableDetails shippingOptionType(String shippingOptionType) {
    
    this.shippingOptionType = shippingOptionType;
    return this;
  }

   /**
   * The region serviced by the shipping rate table. Valid values are:&lt;ul&gt;&lt;li&gt;&lt;b&gt;DOMESTIC&lt;/b&gt;: Indicates that the shipping rate table applies to shipping destinations within the country in which an item has been listed (i.e., the &lt;i&gt;source&lt;/i&gt; country).&lt;/li&gt;&lt;li&gt;&lt;b&gt;INTERNATIONAL&lt;/b&gt;: Indicates that the shipping rate table applies to shipping destinations outside of the country in which an item has been listed.&lt;/li&gt;&lt;/ul&gt; For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/api:ShippingOptionTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return shippingOptionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The region serviced by the shipping rate table. Valid values are:<ul><li><b>DOMESTIC</b>: Indicates that the shipping rate table applies to shipping destinations within the country in which an item has been listed (i.e., the <i>source</i> country).</li><li><b>INTERNATIONAL</b>: Indicates that the shipping rate table applies to shipping destinations outside of the country in which an item has been listed.</li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ShippingOptionTypeEnum'>eBay API documentation</a>")

  public String getShippingOptionType() {
    return shippingOptionType;
  }


  public void setShippingOptionType(String shippingOptionType) {
    this.shippingOptionType = shippingOptionType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RateTableDetails rateTableDetails = (RateTableDetails) o;
    return Objects.equals(this.marketplaceId, rateTableDetails.marketplaceId) &&
        Objects.equals(this.name, rateTableDetails.name) &&
        Objects.equals(this.rates, rateTableDetails.rates) &&
        Objects.equals(this.rateTableBasis, rateTableDetails.rateTableBasis) &&
        Objects.equals(this.rateTableId, rateTableDetails.rateTableId) &&
        Objects.equals(this.shippingOptionType, rateTableDetails.shippingOptionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(marketplaceId, name, rates, rateTableBasis, rateTableId, shippingOptionType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RateTableDetails {\n");
    sb.append("    marketplaceId: ").append(toIndentedString(marketplaceId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rates: ").append(toIndentedString(rates)).append("\n");
    sb.append("    rateTableBasis: ").append(toIndentedString(rateTableBasis)).append("\n");
    sb.append("    rateTableId: ").append(toIndentedString(rateTableId)).append("\n");
    sb.append("    shippingOptionType: ").append(toIndentedString(shippingOptionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

