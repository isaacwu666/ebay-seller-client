/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.TimeDuration;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type is used to specify/indicate the quantity of the inventory item that is available for an In-Store Pickup order at the merchant&#39;s physical store (specified by the &lt;strong&gt;merchantLocationKey&lt;/strong&gt; field).
 */
@ApiModel(description = "This type is used to specify/indicate the quantity of the inventory item that is available for an In-Store Pickup order at the merchant's physical store (specified by the <strong>merchantLocationKey</strong> field).")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class PickupAtLocationAvailability implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_AVAILABILITY_TYPE = "availabilityType";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_TYPE)
  private String availabilityType;

  public static final String SERIALIZED_NAME_FULFILLMENT_TIME = "fulfillmentTime";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_TIME)
  private TimeDuration fulfillmentTime;

  public static final String SERIALIZED_NAME_MERCHANT_LOCATION_KEY = "merchantLocationKey";
  @SerializedName(SERIALIZED_NAME_MERCHANT_LOCATION_KEY)
  private String merchantLocationKey;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;


  public PickupAtLocationAvailability availabilityType(String availabilityType) {
    
    this.availabilityType = availabilityType;
    return this;
  }

   /**
   * The enumeration value in this field indicates the availability status of the inventory item at the merchant&#39;s physical store specified by the &lt;strong&gt;pickupAtLocationAvailability.merchantLocationKey&lt;/strong&gt; field. This field is required if the &lt;strong&gt;pickupAtLocationAvailability&lt;/strong&gt; container is used, and is always returned with the &lt;strong&gt;pickupAtLocationAvailability&lt;/strong&gt; container.  &lt;br/&gt;&lt;br/&gt; See &lt;a href&#x3D;\&quot;/api-docs/sell/inventory/types/slr:AvailabilityTypeEnum\&quot;&gt;AvailabilityTypeEnum&lt;/a&gt; for more information about how/when you use each enumeration value. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/inventory/types/slr:AvailabilityTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return availabilityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The enumeration value in this field indicates the availability status of the inventory item at the merchant's physical store specified by the <strong>pickupAtLocationAvailability.merchantLocationKey</strong> field. This field is required if the <strong>pickupAtLocationAvailability</strong> container is used, and is always returned with the <strong>pickupAtLocationAvailability</strong> container.  <br/><br/> See <a href=\"/api-docs/sell/inventory/types/slr:AvailabilityTypeEnum\">AvailabilityTypeEnum</a> for more information about how/when you use each enumeration value. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/inventory/types/slr:AvailabilityTypeEnum'>eBay API documentation</a>")

  public String getAvailabilityType() {
    return availabilityType;
  }


  public void setAvailabilityType(String availabilityType) {
    this.availabilityType = availabilityType;
  }


  public PickupAtLocationAvailability fulfillmentTime(TimeDuration fulfillmentTime) {
    
    this.fulfillmentTime = fulfillmentTime;
    return this;
  }

   /**
   * Get fulfillmentTime
   * @return fulfillmentTime
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public TimeDuration getFulfillmentTime() {
    return fulfillmentTime;
  }


  public void setFulfillmentTime(TimeDuration fulfillmentTime) {
    this.fulfillmentTime = fulfillmentTime;
  }


  public PickupAtLocationAvailability merchantLocationKey(String merchantLocationKey) {
    
    this.merchantLocationKey = merchantLocationKey;
    return this;
  }

   /**
   * The unique identifier of a merchant&#39;s store where the In-Store Pickup inventory item is currently located, or where inventory will be sent to. If the merchant&#39;s store is currently awaiting for inventory, the &lt;strong&gt;availabilityType&lt;/strong&gt; value should be &lt;code&gt;SHIP_TO_STORE&lt;/code&gt;. This field is required if the &lt;strong&gt;pickupAtLocationAvailability&lt;/strong&gt; container is used, and is always returned with the &lt;strong&gt;pickupAtLocationAvailability&lt;/strong&gt; container.&lt;br/&gt; &lt;br/&gt;&lt;b&gt;Max length&lt;/b&gt;: 36
   * @return merchantLocationKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier of a merchant's store where the In-Store Pickup inventory item is currently located, or where inventory will be sent to. If the merchant's store is currently awaiting for inventory, the <strong>availabilityType</strong> value should be <code>SHIP_TO_STORE</code>. This field is required if the <strong>pickupAtLocationAvailability</strong> container is used, and is always returned with the <strong>pickupAtLocationAvailability</strong> container.<br/> <br/><b>Max length</b>: 36")

  public String getMerchantLocationKey() {
    return merchantLocationKey;
  }


  public void setMerchantLocationKey(String merchantLocationKey) {
    this.merchantLocationKey = merchantLocationKey;
  }


  public PickupAtLocationAvailability quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * This integer value indicates the quantity of the inventory item that is available for In-Store Pickup at the store identified by the  &lt;strong&gt;merchantLocationKey&lt;/strong&gt; value.  The value of &lt;strong&gt;quantity&lt;/strong&gt; should be an integer value greater than &lt;code&gt;0&lt;/code&gt;, unless the inventory item is out of stock. This field is required if the &lt;strong&gt;pickupAtLocationAvailability&lt;/strong&gt; container is used, and is always returned with the &lt;strong&gt;pickupAtLocationAvailability&lt;/strong&gt; container.
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This integer value indicates the quantity of the inventory item that is available for In-Store Pickup at the store identified by the  <strong>merchantLocationKey</strong> value.  The value of <strong>quantity</strong> should be an integer value greater than <code>0</code>, unless the inventory item is out of stock. This field is required if the <strong>pickupAtLocationAvailability</strong> container is used, and is always returned with the <strong>pickupAtLocationAvailability</strong> container.")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PickupAtLocationAvailability pickupAtLocationAvailability = (PickupAtLocationAvailability) o;
    return Objects.equals(this.availabilityType, pickupAtLocationAvailability.availabilityType) &&
        Objects.equals(this.fulfillmentTime, pickupAtLocationAvailability.fulfillmentTime) &&
        Objects.equals(this.merchantLocationKey, pickupAtLocationAvailability.merchantLocationKey) &&
        Objects.equals(this.quantity, pickupAtLocationAvailability.quantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availabilityType, fulfillmentTime, merchantLocationKey, quantity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PickupAtLocationAvailability {\n");
    sb.append("    availabilityType: ").append(toIndentedString(availabilityType)).append("\n");
    sb.append("    fulfillmentTime: ").append(toIndentedString(fulfillmentTime)).append("\n");
    sb.append("    merchantLocationKey: ").append(toIndentedString(merchantLocationKey)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

