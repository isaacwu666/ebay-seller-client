/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.Region;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type consists of the &lt;b&gt;regionIncluded&lt;/b&gt; and &lt;b&gt;regionExcluded&lt;/b&gt; arrays, which indicate the areas to where the seller does and doesn&#39;t ship.
 */
@ApiModel(description = "This type consists of the <b>regionIncluded</b> and <b>regionExcluded</b> arrays, which indicate the areas to where the seller does and doesn't ship.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class RegionSet implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_REGION_EXCLUDED = "regionExcluded";
  @SerializedName(SERIALIZED_NAME_REGION_EXCLUDED)
  private List<Region> regionExcluded = null;

  public static final String SERIALIZED_NAME_REGION_INCLUDED = "regionIncluded";
  @SerializedName(SERIALIZED_NAME_REGION_INCLUDED)
  private List<Region> regionIncluded = null;


  public RegionSet regionExcluded(List<Region> regionExcluded) {
    
    this.regionExcluded = regionExcluded;
    return this;
  }

  public RegionSet addRegionExcludedItem(Region regionExcludedItem) {
    if (this.regionExcluded == null) {
      this.regionExcluded = new ArrayList<Region>();
    }
    this.regionExcluded.add(regionExcludedItem);
    return this;
  }

   /**
   * An array of one or more &lt;b&gt;regionName&lt;/b&gt; values that specify the areas to where a seller does not ship. A &lt;b&gt;regionExcluded&lt;/b&gt; list should only be set in the top-level &lt;b&gt;shipToLocations&lt;/b&gt; container and not within the &lt;b&gt;shippingServices.shipToLocations&lt;/b&gt; container used to specify which shipping regions are serviced by each available shipping service option. &lt;p&gt;Many sellers are willing to ship to many international locations, but they may want to exclude some world regions or some countries as places they are willing to ship to.&lt;br/&gt;&lt;br/&gt;This array will be returned as empty if no shipping regions are excluded with the fulfillment business policy.
   * @return regionExcluded
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "An array of one or more <b>regionName</b> values that specify the areas to where a seller does not ship. A <b>regionExcluded</b> list should only be set in the top-level <b>shipToLocations</b> container and not within the <b>shippingServices.shipToLocations</b> container used to specify which shipping regions are serviced by each available shipping service option. <p>Many sellers are willing to ship to many international locations, but they may want to exclude some world regions or some countries as places they are willing to ship to.<br/><br/>This array will be returned as empty if no shipping regions are excluded with the fulfillment business policy.")

  public List<Region> getRegionExcluded() {
    return regionExcluded;
  }


  public void setRegionExcluded(List<Region> regionExcluded) {
    this.regionExcluded = regionExcluded;
  }


  public RegionSet regionIncluded(List<Region> regionIncluded) {
    
    this.regionIncluded = regionIncluded;
    return this;
  }

  public RegionSet addRegionIncludedItem(Region regionIncludedItem) {
    if (this.regionIncluded == null) {
      this.regionIncluded = new ArrayList<Region>();
    }
    this.regionIncluded.add(regionIncludedItem);
    return this;
  }

   /**
   * An array of one or more &lt;b&gt;regionName&lt;/b&gt; fields that specify the areas to where a seller ships. &lt;br&gt;&lt;br&gt;Each eBay marketplace supports its own set of allowable shipping locations.
   * @return regionIncluded
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "An array of one or more <b>regionName</b> fields that specify the areas to where a seller ships. <br><br>Each eBay marketplace supports its own set of allowable shipping locations.")

  public List<Region> getRegionIncluded() {
    return regionIncluded;
  }


  public void setRegionIncluded(List<Region> regionIncluded) {
    this.regionIncluded = regionIncluded;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegionSet regionSet = (RegionSet) o;
    return Objects.equals(this.regionExcluded, regionSet.regionExcluded) &&
        Objects.equals(this.regionIncluded, regionSet.regionIncluded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(regionExcluded, regionIncluded);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegionSet {\n");
    sb.append("    regionExcluded: ").append(toIndentedString(regionExcluded)).append("\n");
    sb.append("    regionIncluded: ").append(toIndentedString(regionIncluded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

