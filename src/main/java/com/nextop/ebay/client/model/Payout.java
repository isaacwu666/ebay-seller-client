/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.Amount;
import com.nextop.ebay.client.model.PayoutInstrument;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type is used to express the details of one seller payout that is returned with the &lt;strong&gt;getPayout&lt;/strong&gt; or &lt;strong&gt;getPayouts&lt;/strong&gt; methods.
 */
@ApiModel(description = "This type is used to express the details of one seller payout that is returned with the <strong>getPayout</strong> or <strong>getPayouts</strong> methods.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class Payout implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Amount amount;

  public static final String SERIALIZED_NAME_BANK_REFERENCE = "bankReference";
  @SerializedName(SERIALIZED_NAME_BANK_REFERENCE)
  private String bankReference;

  public static final String SERIALIZED_NAME_LAST_ATTEMPTED_PAYOUT_DATE = "lastAttemptedPayoutDate";
  @SerializedName(SERIALIZED_NAME_LAST_ATTEMPTED_PAYOUT_DATE)
  private String lastAttemptedPayoutDate;

  public static final String SERIALIZED_NAME_PAYOUT_DATE = "payoutDate";
  @SerializedName(SERIALIZED_NAME_PAYOUT_DATE)
  private String payoutDate;

  public static final String SERIALIZED_NAME_PAYOUT_ID = "payoutId";
  @SerializedName(SERIALIZED_NAME_PAYOUT_ID)
  private String payoutId;

  public static final String SERIALIZED_NAME_PAYOUT_INSTRUMENT = "payoutInstrument";
  @SerializedName(SERIALIZED_NAME_PAYOUT_INSTRUMENT)
  private PayoutInstrument payoutInstrument;

  public static final String SERIALIZED_NAME_PAYOUT_MEMO = "payoutMemo";
  @SerializedName(SERIALIZED_NAME_PAYOUT_MEMO)
  private String payoutMemo;

  public static final String SERIALIZED_NAME_PAYOUT_STATUS = "payoutStatus";
  @SerializedName(SERIALIZED_NAME_PAYOUT_STATUS)
  private String payoutStatus;

  public static final String SERIALIZED_NAME_PAYOUT_STATUS_DESCRIPTION = "payoutStatusDescription";
  @SerializedName(SERIALIZED_NAME_PAYOUT_STATUS_DESCRIPTION)
  private String payoutStatusDescription;

  public static final String SERIALIZED_NAME_TRANSACTION_COUNT = "transactionCount";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_COUNT)
  private Integer transactionCount;


  public Payout amount(Amount amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getAmount() {
    return amount;
  }


  public void setAmount(Amount amount) {
    this.amount = amount;
  }


  public Payout bankReference(String bankReference) {
    
    this.bankReference = bankReference;
    return this;
  }

   /**
   * This field contains additional information provided by the bank and passed on by the payment processor; e.g., the manner in which the transaction will appear on the seller&#39;s bank statement. The field is returned only when provided by the bank and processor.
   * @return bankReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field contains additional information provided by the bank and passed on by the payment processor; e.g., the manner in which the transaction will appear on the seller's bank statement. The field is returned only when provided by the bank and processor.")

  public String getBankReference() {
    return bankReference;
  }


  public void setBankReference(String bankReference) {
    this.bankReference = bankReference;
  }


  public Payout lastAttemptedPayoutDate(String lastAttemptedPayoutDate) {
    
    this.lastAttemptedPayoutDate = lastAttemptedPayoutDate;
    return this;
  }

   /**
   * This timestamp indicates the date/time when eBay last attempted to process a seller payout but it failed. This field is only returned if a seller payout fails, and the &lt;strong&gt;payoutStatus&lt;/strong&gt; value shows &lt;code&gt;RETRYABLE_FAILED&lt;/code&gt; or &lt;code&gt;TERMINAL_FAILED&lt;/code&gt;. A seller can filter on the &lt;b&gt;lastAttemptedPayoutDate&lt;/b&gt; in a &lt;b&gt;getPayouts&lt;/b&gt; request.
   * @return lastAttemptedPayoutDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This timestamp indicates the date/time when eBay last attempted to process a seller payout but it failed. This field is only returned if a seller payout fails, and the <strong>payoutStatus</strong> value shows <code>RETRYABLE_FAILED</code> or <code>TERMINAL_FAILED</code>. A seller can filter on the <b>lastAttemptedPayoutDate</b> in a <b>getPayouts</b> request.")

  public String getLastAttemptedPayoutDate() {
    return lastAttemptedPayoutDate;
  }


  public void setLastAttemptedPayoutDate(String lastAttemptedPayoutDate) {
    this.lastAttemptedPayoutDate = lastAttemptedPayoutDate;
  }


  public Payout payoutDate(String payoutDate) {
    
    this.payoutDate = payoutDate;
    return this;
  }

   /**
   * This timestamp indicates when the seller payout began processing. The following format is used: &lt;code&gt;YYYY-MM-DDTHH:MM:SS.SSSZ&lt;/code&gt;. For example, &lt;code&gt;2015-08-04T19:09:02.768Z&lt;/code&gt;. This field is still returned even if the payout was pending but failed (&lt;strong&gt;payoutStatus&lt;/strong&gt; value shows &lt;code&gt;RETRYABLE_FAILED&lt;/code&gt; or &lt;code&gt;TERMINAL_FAILED&lt;/code&gt;).
   * @return payoutDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This timestamp indicates when the seller payout began processing. The following format is used: <code>YYYY-MM-DDTHH:MM:SS.SSSZ</code>. For example, <code>2015-08-04T19:09:02.768Z</code>. This field is still returned even if the payout was pending but failed (<strong>payoutStatus</strong> value shows <code>RETRYABLE_FAILED</code> or <code>TERMINAL_FAILED</code>).")

  public String getPayoutDate() {
    return payoutDate;
  }


  public void setPayoutDate(String payoutDate) {
    this.payoutDate = payoutDate;
  }


  public Payout payoutId(String payoutId) {
    
    this.payoutId = payoutId;
    return this;
  }

   /**
   * The unique identifier of the seller payout. This identifier is generated once eBay begins processing the payout to the seller&#39;s bank account.
   * @return payoutId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier of the seller payout. This identifier is generated once eBay begins processing the payout to the seller's bank account.")

  public String getPayoutId() {
    return payoutId;
  }


  public void setPayoutId(String payoutId) {
    this.payoutId = payoutId;
  }


  public Payout payoutInstrument(PayoutInstrument payoutInstrument) {
    
    this.payoutInstrument = payoutInstrument;
    return this;
  }

   /**
   * Get payoutInstrument
   * @return payoutInstrument
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public PayoutInstrument getPayoutInstrument() {
    return payoutInstrument;
  }


  public void setPayoutInstrument(PayoutInstrument payoutInstrument) {
    this.payoutInstrument = payoutInstrument;
  }


  public Payout payoutMemo(String payoutMemo) {
    
    this.payoutMemo = payoutMemo;
    return this;
  }

   /**
   * This field contains information provided by upstream components, based on internal and external commitments. A typical message would contain the expected arrival time of the payout.
   * @return payoutMemo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field contains information provided by upstream components, based on internal and external commitments. A typical message would contain the expected arrival time of the payout.")

  public String getPayoutMemo() {
    return payoutMemo;
  }


  public void setPayoutMemo(String payoutMemo) {
    this.payoutMemo = payoutMemo;
  }


  public Payout payoutStatus(String payoutStatus) {
    
    this.payoutStatus = payoutStatus;
    return this;
  }

   /**
   * This enumeration value indicates the current status of the seller payout. For a successful payout, the value returned will be &lt;code&gt;SUCCEEDED&lt;/code&gt;. See the &lt;strong&gt;PayoutStatusEnum&lt;/strong&gt; type for more details on each payout status value. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/finances/types/pay:PayoutStatusEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return payoutStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This enumeration value indicates the current status of the seller payout. For a successful payout, the value returned will be <code>SUCCEEDED</code>. See the <strong>PayoutStatusEnum</strong> type for more details on each payout status value. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:PayoutStatusEnum'>eBay API documentation</a>")

  public String getPayoutStatus() {
    return payoutStatus;
  }


  public void setPayoutStatus(String payoutStatus) {
    this.payoutStatus = payoutStatus;
  }


  public Payout payoutStatusDescription(String payoutStatusDescription) {
    
    this.payoutStatusDescription = payoutStatusDescription;
    return this;
  }

   /**
   * This field provides more details about the current status of payout. The description returned here will correspond with enumeration value returned in the &lt;strong&gt;payoutStatus&lt;/strong&gt; field. The following shows what description text might appear based on the different &lt;strong&gt;payoutStatus&lt;/strong&gt; values:&lt;ul&gt;&lt;li&gt;&lt;code&gt;INITIATED&lt;/code&gt;: &lt;em&gt;Preparing to send&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;SUCCEEDED&lt;/code&gt;: &lt;em&gt;Funds sent&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;REVERSED&lt;/code&gt;: &lt;em&gt;Waiting to retry : Money rejected by seller&#39;s bank&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;RETRYABLE_FAILED&lt;/code&gt;: &lt;em&gt;Waiting to retry&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;TERMINAL_FAILED&lt;/code&gt;: &lt;em&gt;Payout failed&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;
   * @return payoutStatusDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field provides more details about the current status of payout. The description returned here will correspond with enumeration value returned in the <strong>payoutStatus</strong> field. The following shows what description text might appear based on the different <strong>payoutStatus</strong> values:<ul><li><code>INITIATED</code>: <em>Preparing to send</em></li><li><code>SUCCEEDED</code>: <em>Funds sent</em></li><li><code>REVERSED</code>: <em>Waiting to retry : Money rejected by seller's bank</em></li><li><code>RETRYABLE_FAILED</code>: <em>Waiting to retry</em></li><li><code>TERMINAL_FAILED</code>: <em>Payout failed</em></li></ul>")

  public String getPayoutStatusDescription() {
    return payoutStatusDescription;
  }


  public void setPayoutStatusDescription(String payoutStatusDescription) {
    this.payoutStatusDescription = payoutStatusDescription;
  }


  public Payout transactionCount(Integer transactionCount) {
    
    this.transactionCount = transactionCount;
    return this;
  }

   /**
   * This integer value indicates the number of monetary transactions (all orders, refunds, and credits, etc.) that have occurred with the corresponding payout. Its value should always be at least &lt;code&gt;1&lt;/code&gt;, since there is at least one order per seller payout.
   * @return transactionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This integer value indicates the number of monetary transactions (all orders, refunds, and credits, etc.) that have occurred with the corresponding payout. Its value should always be at least <code>1</code>, since there is at least one order per seller payout.")

  public Integer getTransactionCount() {
    return transactionCount;
  }


  public void setTransactionCount(Integer transactionCount) {
    this.transactionCount = transactionCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Payout payout = (Payout) o;
    return Objects.equals(this.amount, payout.amount) &&
        Objects.equals(this.bankReference, payout.bankReference) &&
        Objects.equals(this.lastAttemptedPayoutDate, payout.lastAttemptedPayoutDate) &&
        Objects.equals(this.payoutDate, payout.payoutDate) &&
        Objects.equals(this.payoutId, payout.payoutId) &&
        Objects.equals(this.payoutInstrument, payout.payoutInstrument) &&
        Objects.equals(this.payoutMemo, payout.payoutMemo) &&
        Objects.equals(this.payoutStatus, payout.payoutStatus) &&
        Objects.equals(this.payoutStatusDescription, payout.payoutStatusDescription) &&
        Objects.equals(this.transactionCount, payout.transactionCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, bankReference, lastAttemptedPayoutDate, payoutDate, payoutId, payoutInstrument, payoutMemo, payoutStatus, payoutStatusDescription, transactionCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Payout {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    bankReference: ").append(toIndentedString(bankReference)).append("\n");
    sb.append("    lastAttemptedPayoutDate: ").append(toIndentedString(lastAttemptedPayoutDate)).append("\n");
    sb.append("    payoutDate: ").append(toIndentedString(payoutDate)).append("\n");
    sb.append("    payoutId: ").append(toIndentedString(payoutId)).append("\n");
    sb.append("    payoutInstrument: ").append(toIndentedString(payoutInstrument)).append("\n");
    sb.append("    payoutMemo: ").append(toIndentedString(payoutMemo)).append("\n");
    sb.append("    payoutStatus: ").append(toIndentedString(payoutStatus)).append("\n");
    sb.append("    payoutStatusDescription: ").append(toIndentedString(payoutStatusDescription)).append("\n");
    sb.append("    transactionCount: ").append(toIndentedString(transactionCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

