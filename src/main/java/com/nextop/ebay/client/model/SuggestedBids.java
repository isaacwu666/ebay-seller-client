/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.ProposedBid;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The suggested bid rate for the item.
 */
@ApiModel(description = "The suggested bid rate for the item.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class SuggestedBids implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_KEYWORD_TEXT = "keywordText";
  @SerializedName(SERIALIZED_NAME_KEYWORD_TEXT)
  private String keywordText;

  public static final String SERIALIZED_NAME_MATCH_TYPE = "matchType";
  @SerializedName(SERIALIZED_NAME_MATCH_TYPE)
  private String matchType;

  public static final String SERIALIZED_NAME_PROPOSED_BID = "proposedBid";
  @SerializedName(SERIALIZED_NAME_PROPOSED_BID)
  private ProposedBid proposedBid;


  public SuggestedBids keywordText(String keywordText) {
    
    this.keywordText = keywordText;
    return this;
  }

   /**
   * The text for the keyword.
   * @return keywordText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The text for the keyword.")

  public String getKeywordText() {
    return keywordText;
  }


  public void setKeywordText(String keywordText) {
    this.keywordText = keywordText;
  }


  public SuggestedBids matchType(String matchType) {
    
    this.matchType = matchType;
    return this;
  }

   /**
   * A field that defines the match type for the keyword.&lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;span style&#x3D;\&quot;color:#004680\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/span&gt; Broad matching of keywords is currently only supported in the AU marketplace.&lt;/span&gt;&lt;br /&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;BROAD&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EXACT&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;PHRASE&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt; For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return matchType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A field that defines the match type for the keyword.<br /><br /><span class=\"tablenote\"><span style=\"color:#004680\"><strong>Note:</strong></span> Broad matching of keywords is currently only supported in the AU marketplace.</span><br /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay API documentation</a>")

  public String getMatchType() {
    return matchType;
  }


  public void setMatchType(String matchType) {
    this.matchType = matchType;
  }


  public SuggestedBids proposedBid(ProposedBid proposedBid) {
    
    this.proposedBid = proposedBid;
    return this;
  }

   /**
   * Get proposedBid
   * @return proposedBid
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public ProposedBid getProposedBid() {
    return proposedBid;
  }


  public void setProposedBid(ProposedBid proposedBid) {
    this.proposedBid = proposedBid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SuggestedBids suggestedBids = (SuggestedBids) o;
    return Objects.equals(this.keywordText, suggestedBids.keywordText) &&
        Objects.equals(this.matchType, suggestedBids.matchType) &&
        Objects.equals(this.proposedBid, suggestedBids.proposedBid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(keywordText, matchType, proposedBid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SuggestedBids {\n");
    sb.append("    keywordText: ").append(toIndentedString(keywordText)).append("\n");
    sb.append("    matchType: ").append(toIndentedString(matchType)).append("\n");
    sb.append("    proposedBid: ").append(toIndentedString(proposedBid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

