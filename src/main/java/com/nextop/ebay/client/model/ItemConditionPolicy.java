/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.ItemCondition;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * ItemConditionPolicy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class ItemConditionPolicy implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "categoryId";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private String categoryId;

  public static final String SERIALIZED_NAME_CATEGORY_TREE_ID = "categoryTreeId";
  @SerializedName(SERIALIZED_NAME_CATEGORY_TREE_ID)
  private String categoryTreeId;

  public static final String SERIALIZED_NAME_ITEM_CONDITION_REQUIRED = "itemConditionRequired";
  @SerializedName(SERIALIZED_NAME_ITEM_CONDITION_REQUIRED)
  private Boolean itemConditionRequired;

  public static final String SERIALIZED_NAME_ITEM_CONDITIONS = "itemConditions";
  @SerializedName(SERIALIZED_NAME_ITEM_CONDITIONS)
  private List<ItemCondition> itemConditions = null;


  public ItemConditionPolicy categoryId(String categoryId) {
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * The category ID to which the item-condition policy applies.
   * @return categoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The category ID to which the item-condition policy applies.")

  public String getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }


  public ItemConditionPolicy categoryTreeId(String categoryTreeId) {
    
    this.categoryTreeId = categoryTreeId;
    return this;
  }

   /**
   * A value that indicates the root node of the category tree used for the response set. Each marketplace is based on a category tree whose root node is indicated by this unique category ID value. All category policy information returned by this call pertains to the categories included below this root node of the tree.    &lt;br&gt;&lt;br&gt;A &lt;i&gt;category tree&lt;/i&gt; is a hierarchical framework of eBay categories that begins at the root node of the tree and extends to include all the child nodes in the tree. Each child node in the tree is an eBay category that is represented by a unique &lt;b&gt;categoryId&lt;/b&gt; value. Within a category tree, the root node has no parent node and &lt;i&gt;leaf nodes&lt;/i&gt; are nodes that have no child nodes.
   * @return categoryTreeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A value that indicates the root node of the category tree used for the response set. Each marketplace is based on a category tree whose root node is indicated by this unique category ID value. All category policy information returned by this call pertains to the categories included below this root node of the tree.    <br><br>A <i>category tree</i> is a hierarchical framework of eBay categories that begins at the root node of the tree and extends to include all the child nodes in the tree. Each child node in the tree is an eBay category that is represented by a unique <b>categoryId</b> value. Within a category tree, the root node has no parent node and <i>leaf nodes</i> are nodes that have no child nodes.")

  public String getCategoryTreeId() {
    return categoryTreeId;
  }


  public void setCategoryTreeId(String categoryTreeId) {
    this.categoryTreeId = categoryTreeId;
  }


  public ItemConditionPolicy itemConditionRequired(Boolean itemConditionRequired) {
    
    this.itemConditionRequired = itemConditionRequired;
    return this;
  }

   /**
   * This flag denotes whether or not you must list the item condition in a listing for the specified category. If set to &lt;code&gt;true&lt;/code&gt;, you must specify an item condition for the associated category.
   * @return itemConditionRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This flag denotes whether or not you must list the item condition in a listing for the specified category. If set to <code>true</code>, you must specify an item condition for the associated category.")

  public Boolean getItemConditionRequired() {
    return itemConditionRequired;
  }


  public void setItemConditionRequired(Boolean itemConditionRequired) {
    this.itemConditionRequired = itemConditionRequired;
  }


  public ItemConditionPolicy itemConditions(List<ItemCondition> itemConditions) {
    
    this.itemConditions = itemConditions;
    return this;
  }

  public ItemConditionPolicy addItemConditionsItem(ItemCondition itemConditionsItem) {
    if (this.itemConditions == null) {
      this.itemConditions = new ArrayList<ItemCondition>();
    }
    this.itemConditions.add(itemConditionsItem);
    return this;
  }

   /**
   * The item-condition values allowed in the category.&lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; The ‘Seller Refurbished’ item condition (condition ID 2500) has been replaced by the &#39;Excellent - Refurbished&#39;, &#39;Very Good - Refurbished&#39;, and &#39;Good - Refurbished&#39; item conditions in a select number of eBay marketplaces and categories. See the &lt;a href&#x3D;\&quot;/api-docs/sell/static/metadata/condition-id-values.html#Category \&quot; target&#x3D;\&quot;_blank \&quot;&gt; eBay Refurbished Program - Category and marketplace support&lt;/a&gt; topic for more details.&lt;br/&gt;&lt;br/&gt;Similar to the ‘Certified Refurbished’ item condition (condition ID 2000), a seller’s OAuth user token will have to be used instead of an OAuth application token, since each seller must  go through an application and qualification process before using any of these new refurbished item conditions in supported categories. If a seller is not qualified to use the new refurbished item conditions, these item condition values will not be returned by &lt;b&gt;getItemConditionPolicies&lt;/b&gt;.&lt;/span&gt;
   * @return itemConditions
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The item-condition values allowed in the category.<br /><br /><span class=\"tablenote\"><b>Note:</b> The ‘Seller Refurbished’ item condition (condition ID 2500) has been replaced by the 'Excellent - Refurbished', 'Very Good - Refurbished', and 'Good - Refurbished' item conditions in a select number of eBay marketplaces and categories. See the <a href=\"/api-docs/sell/static/metadata/condition-id-values.html#Category \" target=\"_blank \"> eBay Refurbished Program - Category and marketplace support</a> topic for more details.<br/><br/>Similar to the ‘Certified Refurbished’ item condition (condition ID 2000), a seller’s OAuth user token will have to be used instead of an OAuth application token, since each seller must  go through an application and qualification process before using any of these new refurbished item conditions in supported categories. If a seller is not qualified to use the new refurbished item conditions, these item condition values will not be returned by <b>getItemConditionPolicies</b>.</span>")

  public List<ItemCondition> getItemConditions() {
    return itemConditions;
  }


  public void setItemConditions(List<ItemCondition> itemConditions) {
    this.itemConditions = itemConditions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemConditionPolicy itemConditionPolicy = (ItemConditionPolicy) o;
    return Objects.equals(this.categoryId, itemConditionPolicy.categoryId) &&
        Objects.equals(this.categoryTreeId, itemConditionPolicy.categoryTreeId) &&
        Objects.equals(this.itemConditionRequired, itemConditionPolicy.itemConditionRequired) &&
        Objects.equals(this.itemConditions, itemConditionPolicy.itemConditions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryId, categoryTreeId, itemConditionRequired, itemConditions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemConditionPolicy {\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    categoryTreeId: ").append(toIndentedString(categoryTreeId)).append("\n");
    sb.append("    itemConditionRequired: ").append(toIndentedString(itemConditionRequired)).append("\n");
    sb.append("    itemConditions: ").append(toIndentedString(itemConditions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

