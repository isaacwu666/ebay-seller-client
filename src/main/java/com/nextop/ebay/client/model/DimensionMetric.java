/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.Dimension;
import com.nextop.ebay.client.model.Metric;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This complex type defines a the customer service metrics and seller benchmark performance related to a given dimension.
 */
@ApiModel(description = "This complex type defines a the customer service metrics and seller benchmark performance related to a given dimension.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class DimensionMetric implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_DIMENSION = "dimension";
  @SerializedName(SERIALIZED_NAME_DIMENSION)
  private Dimension dimension;

  public static final String SERIALIZED_NAME_METRICS = "metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private List<Metric> metrics = null;


  public DimensionMetric dimension(Dimension dimension) {
    
    this.dimension = dimension;
    return this;
  }

   /**
   * Get dimension
   * @return dimension
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Dimension getDimension() {
    return dimension;
  }


  public void setDimension(Dimension dimension) {
    this.dimension = dimension;
  }


  public DimensionMetric metrics(List<Metric> metrics) {
    
    this.metrics = metrics;
    return this;
  }

  public DimensionMetric addMetricsItem(Metric metricsItem) {
    if (this.metrics == null) {
      this.metrics = new ArrayList<Metric>();
    }
    this.metrics.add(metricsItem);
    return this;
  }

   /**
   * This is a list of Metric elements where each element contains data and information related to the transactions grouped by the associated dimension.
   * @return metrics
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "This is a list of Metric elements where each element contains data and information related to the transactions grouped by the associated dimension.")

  public List<Metric> getMetrics() {
    return metrics;
  }


  public void setMetrics(List<Metric> metrics) {
    this.metrics = metrics;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DimensionMetric dimensionMetric = (DimensionMetric) o;
    return Objects.equals(this.dimension, dimensionMetric.dimension) &&
        Objects.equals(this.metrics, dimensionMetric.metrics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dimension, metrics);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DimensionMetric {\n");
    sb.append("    dimension: ").append(toIndentedString(dimension)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

