/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type is used to provide sales tax settings for a specific tax jurisdiction.
 */
@ApiModel(description = "This type is used to provide sales tax settings for a specific tax jurisdiction.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class SalesTax implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_SALES_TAX_JURISDICTION_ID = "salesTaxJurisdictionId";
  @SerializedName(SERIALIZED_NAME_SALES_TAX_JURISDICTION_ID)
  private String salesTaxJurisdictionId;

  public static final String SERIALIZED_NAME_SALES_TAX_PERCENTAGE = "salesTaxPercentage";
  @SerializedName(SERIALIZED_NAME_SALES_TAX_PERCENTAGE)
  private String salesTaxPercentage;

  public static final String SERIALIZED_NAME_SHIPPING_AND_HANDLING_TAXED = "shippingAndHandlingTaxed";
  @SerializedName(SERIALIZED_NAME_SHIPPING_AND_HANDLING_TAXED)
  private Boolean shippingAndHandlingTaxed;


  public SalesTax countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * The country code enumeration value identifies the country to which this sales tax rate applies. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/account/types/ba:CountryCodeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The country code enumeration value identifies the country to which this sales tax rate applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:CountryCodeEnum'>eBay API documentation</a>")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public SalesTax salesTaxJurisdictionId(String salesTaxJurisdictionId) {
    
    this.salesTaxJurisdictionId = salesTaxJurisdictionId;
    return this;
  }

   /**
   * A unique ID that identifies the sales tax jurisdiction to which the salest tax rate applies (for example, a state within the United States).
   * @return salesTaxJurisdictionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique ID that identifies the sales tax jurisdiction to which the salest tax rate applies (for example, a state within the United States).")

  public String getSalesTaxJurisdictionId() {
    return salesTaxJurisdictionId;
  }


  public void setSalesTaxJurisdictionId(String salesTaxJurisdictionId) {
    this.salesTaxJurisdictionId = salesTaxJurisdictionId;
  }


  public SalesTax salesTaxPercentage(String salesTaxPercentage) {
    
    this.salesTaxPercentage = salesTaxPercentage;
    return this;
  }

   /**
   * The sales tax rate that will be applied to sales price. The &lt;b&gt;shippingAndHandlingTaxed&lt;/b&gt; value will indicate whether or not sales tax is also applied to shipping and handling charges&lt;br&gt;&lt;br&gt;Although it is a string, a percentage value is returned here, such as &lt;code&gt;7.75&lt;/code&gt;
   * @return salesTaxPercentage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The sales tax rate that will be applied to sales price. The <b>shippingAndHandlingTaxed</b> value will indicate whether or not sales tax is also applied to shipping and handling charges<br><br>Although it is a string, a percentage value is returned here, such as <code>7.75</code>")

  public String getSalesTaxPercentage() {
    return salesTaxPercentage;
  }


  public void setSalesTaxPercentage(String salesTaxPercentage) {
    this.salesTaxPercentage = salesTaxPercentage;
  }


  public SalesTax shippingAndHandlingTaxed(Boolean shippingAndHandlingTaxed) {
    
    this.shippingAndHandlingTaxed = shippingAndHandlingTaxed;
    return this;
  }

   /**
   * If returned as &lt;code&gt;true&lt;/code&gt;, sales tax is also applied to shipping and handling charges, and not just the total sales price of the order.
   * @return shippingAndHandlingTaxed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If returned as <code>true</code>, sales tax is also applied to shipping and handling charges, and not just the total sales price of the order.")

  public Boolean getShippingAndHandlingTaxed() {
    return shippingAndHandlingTaxed;
  }


  public void setShippingAndHandlingTaxed(Boolean shippingAndHandlingTaxed) {
    this.shippingAndHandlingTaxed = shippingAndHandlingTaxed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesTax salesTax = (SalesTax) o;
    return Objects.equals(this.countryCode, salesTax.countryCode) &&
        Objects.equals(this.salesTaxJurisdictionId, salesTax.salesTaxJurisdictionId) &&
        Objects.equals(this.salesTaxPercentage, salesTax.salesTaxPercentage) &&
        Objects.equals(this.shippingAndHandlingTaxed, salesTax.shippingAndHandlingTaxed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countryCode, salesTaxJurisdictionId, salesTaxPercentage, shippingAndHandlingTaxed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesTax {\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    salesTaxJurisdictionId: ").append(toIndentedString(salesTaxJurisdictionId)).append("\n");
    sb.append("    salesTaxPercentage: ").append(toIndentedString(salesTaxPercentage)).append("\n");
    sb.append("    shippingAndHandlingTaxed: ").append(toIndentedString(shippingAndHandlingTaxed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

