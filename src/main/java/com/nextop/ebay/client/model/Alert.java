/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.AlertDetails;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * A type that contains the alert message fields for the ad.
 */
@ApiModel(description = "A type that contains the alert message fields for the ad.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class Alert implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ALERT_TYPE = "alertType";
  @SerializedName(SERIALIZED_NAME_ALERT_TYPE)
  private String alertType;

  public static final String SERIALIZED_NAME_DETAILS = "details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private List<AlertDetails> details = null;


  public Alert alertType(String alertType) {
    
    this.alertType = alertType;
    return this;
  }

   /**
   * The type of alert message. For example, an invalid bid percentage. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/marketing/types/pls:AlertTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return alertType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of alert message. For example, an invalid bid percentage. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:AlertTypeEnum'>eBay API documentation</a>")

  public String getAlertType() {
    return alertType;
  }


  public void setAlertType(String alertType) {
    this.alertType = alertType;
  }


  public Alert details(List<AlertDetails> details) {
    
    this.details = details;
    return this;
  }

  public Alert addDetailsItem(AlertDetails detailsItem) {
    if (this.details == null) {
      this.details = new ArrayList<AlertDetails>();
    }
    this.details.add(detailsItem);
    return this;
  }

   /**
   * A description of the alert including dimensions and aspects.
   * @return details
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "A description of the alert including dimensions and aspects.")

  public List<AlertDetails> getDetails() {
    return details;
  }


  public void setDetails(List<AlertDetails> details) {
    this.details = details;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Alert alert = (Alert) o;
    return Objects.equals(this.alertType, alert.alertType) &&
        Objects.equals(this.details, alert.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertType, details);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Alert {\n");
    sb.append("    alertType: ").append(toIndentedString(alertType)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

