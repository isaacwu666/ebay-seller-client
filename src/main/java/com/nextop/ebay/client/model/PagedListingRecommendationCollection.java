/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.ListingRecommendation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The high-level object used to return a set of Promoted Listings ad recommendations.
 */
@ApiModel(description = "The high-level object used to return a set of Promoted Listings ad recommendations.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class PagedListingRecommendationCollection implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_HREF = "href";
  @SerializedName(SERIALIZED_NAME_HREF)
  private String href;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private Integer limit;

  public static final String SERIALIZED_NAME_LISTING_RECOMMENDATIONS = "listingRecommendations";
  @SerializedName(SERIALIZED_NAME_LISTING_RECOMMENDATIONS)
  private List<ListingRecommendation> listingRecommendations = null;

  public static final String SERIALIZED_NAME_NEXT = "next";
  @SerializedName(SERIALIZED_NAME_NEXT)
  private String next;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private Integer offset;

  public static final String SERIALIZED_NAME_PREV = "prev";
  @SerializedName(SERIALIZED_NAME_PREV)
  private String prev;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Integer total;


  public PagedListingRecommendationCollection href(String href) {
    
    this.href = href;
    return this;
  }

   /**
   * The URI of the current page of results from the result set.
   * @return href
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URI of the current page of results from the result set.")

  public String getHref() {
    return href;
  }


  public void setHref(String href) {
    this.href = href;
  }


  public PagedListingRecommendationCollection limit(Integer limit) {
    
    this.limit = limit;
    return this;
  }

   /**
   * The number of items returned on a single page from the result set. This value can be set in the request with the limit query parameter.
   * @return limit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of items returned on a single page from the result set. This value can be set in the request with the limit query parameter.")

  public Integer getLimit() {
    return limit;
  }


  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  public PagedListingRecommendationCollection listingRecommendations(List<ListingRecommendation> listingRecommendations) {
    
    this.listingRecommendations = listingRecommendations;
    return this;
  }

  public PagedListingRecommendationCollection addListingRecommendationsItem(ListingRecommendation listingRecommendationsItem) {
    if (this.listingRecommendations == null) {
      this.listingRecommendations = new ArrayList<ListingRecommendation>();
    }
    this.listingRecommendations.add(listingRecommendationsItem);
    return this;
  }

   /**
   * Returns a list of listingRecommendations, where each element in the list offers recommendations for the associated listingId. Which elements are returned depend on how you structure the request. For example, if you request recommendations for all of a sellers listings (by leaving the request payload empty), ad recommendations are returned only for those listings where promoteWithAd is set to RECOMMENDED.
   * @return listingRecommendations
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Returns a list of listingRecommendations, where each element in the list offers recommendations for the associated listingId. Which elements are returned depend on how you structure the request. For example, if you request recommendations for all of a sellers listings (by leaving the request payload empty), ad recommendations are returned only for those listings where promoteWithAd is set to RECOMMENDED.")

  public List<ListingRecommendation> getListingRecommendations() {
    return listingRecommendations;
  }


  public void setListingRecommendations(List<ListingRecommendation> listingRecommendations) {
    this.listingRecommendations = listingRecommendations;
  }


  public PagedListingRecommendationCollection next(String next) {
    
    this.next = next;
    return this;
  }

   /**
   * The URI for the following page of results. This value is returned only if there is an additional page of results to display from the result set. Max length: 2048
   * @return next
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URI for the following page of results. This value is returned only if there is an additional page of results to display from the result set. Max length: 2048")

  public String getNext() {
    return next;
  }


  public void setNext(String next) {
    this.next = next;
  }


  public PagedListingRecommendationCollection offset(Integer offset) {
    
    this.offset = offset;
    return this;
  }

   /**
   * The number of results skipped in the result set before listing the first returned result. This value can be set in the request with the offset query parameter. Note: The items in a paginated result set use a zero-based list where the first item in the list has an offset of 0.
   * @return offset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of results skipped in the result set before listing the first returned result. This value can be set in the request with the offset query parameter. Note: The items in a paginated result set use a zero-based list where the first item in the list has an offset of 0.")

  public Integer getOffset() {
    return offset;
  }


  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public PagedListingRecommendationCollection prev(String prev) {
    
    this.prev = prev;
    return this;
  }

   /**
   * The URI for the preceding page of results. This value is returned only if there is a previous page of results to display from the result set. Max length: 2048
   * @return prev
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URI for the preceding page of results. This value is returned only if there is a previous page of results to display from the result set. Max length: 2048")

  public String getPrev() {
    return prev;
  }


  public void setPrev(String prev) {
    this.prev = prev;
  }


  public PagedListingRecommendationCollection total(Integer total) {
    
    this.total = total;
    return this;
  }

   /**
   * The total number of items retrieved in the result set. If no items are found, this field is returned with a value of 0.
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total number of items retrieved in the result set. If no items are found, this field is returned with a value of 0.")

  public Integer getTotal() {
    return total;
  }


  public void setTotal(Integer total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PagedListingRecommendationCollection pagedListingRecommendationCollection = (PagedListingRecommendationCollection) o;
    return Objects.equals(this.href, pagedListingRecommendationCollection.href) &&
        Objects.equals(this.limit, pagedListingRecommendationCollection.limit) &&
        Objects.equals(this.listingRecommendations, pagedListingRecommendationCollection.listingRecommendations) &&
        Objects.equals(this.next, pagedListingRecommendationCollection.next) &&
        Objects.equals(this.offset, pagedListingRecommendationCollection.offset) &&
        Objects.equals(this.prev, pagedListingRecommendationCollection.prev) &&
        Objects.equals(this.total, pagedListingRecommendationCollection.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(href, limit, listingRecommendations, next, offset, prev, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PagedListingRecommendationCollection {\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    listingRecommendations: ").append(toIndentedString(listingRecommendations)).append("\n");
    sb.append("    next: ").append(toIndentedString(next)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    prev: ").append(toIndentedString(prev)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

