/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.InventoryItem;
import com.nextop.ebay.client.model.SelectionRule;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type defines the fields for a set of inventory selection rules.  &lt;br&gt;&lt;br&gt;&lt;b&gt;Required:&lt;/b&gt; When &lt;b&gt;inventoryCriterionType&lt;/b&gt; is set to &lt;code&gt;INVENTORY_BY_RULE&lt;/code&gt; or &lt;code&gt;INVENTORY_ANY&lt;/code&gt;.
 */
@ApiModel(description = "This type defines the fields for a set of inventory selection rules.  <br><br><b>Required:</b> When <b>inventoryCriterionType</b> is set to <code>INVENTORY_BY_RULE</code> or <code>INVENTORY_ANY</code>.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class RuleCriteria implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_EXCLUDE_INVENTORY_ITEMS = "excludeInventoryItems";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_INVENTORY_ITEMS)
  private List<InventoryItem> excludeInventoryItems = null;

  public static final String SERIALIZED_NAME_EXCLUDE_LISTING_IDS = "excludeListingIds";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_LISTING_IDS)
  private List<String> excludeListingIds = null;

  public static final String SERIALIZED_NAME_MARKUP_INVENTORY_ITEMS = "markupInventoryItems";
  @SerializedName(SERIALIZED_NAME_MARKUP_INVENTORY_ITEMS)
  private List<InventoryItem> markupInventoryItems = null;

  public static final String SERIALIZED_NAME_MARKUP_LISTING_IDS = "markupListingIds";
  @SerializedName(SERIALIZED_NAME_MARKUP_LISTING_IDS)
  private List<String> markupListingIds = null;

  public static final String SERIALIZED_NAME_SELECTION_RULES = "selectionRules";
  @SerializedName(SERIALIZED_NAME_SELECTION_RULES)
  private List<SelectionRule> selectionRules = null;


  public RuleCriteria excludeInventoryItems(List<InventoryItem> excludeInventoryItems) {
    
    this.excludeInventoryItems = excludeInventoryItems;
    return this;
  }

  public RuleCriteria addExcludeInventoryItemsItem(InventoryItem excludeInventoryItemsItem) {
    if (this.excludeInventoryItems == null) {
      this.excludeInventoryItems = new ArrayList<InventoryItem>();
    }
    this.excludeInventoryItems.add(excludeInventoryItemsItem);
    return this;
  }

   /**
   * A list of seller inventory reference IDs to exclude from the promotion.  &lt;br&gt;&lt;br&gt;&lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; The request can have either &lt;b&gt;excludeInventoryItems&lt;/b&gt; or &lt;b&gt;excludeListingIds&lt;/b&gt; but not both.&lt;/p&gt; &lt;b&gt;Maximum:&lt;/b&gt; 100 parent items &lt;br&gt;&lt;b&gt;Maximum SKU or custom label length:&lt;/b&gt; 50 characters
   * @return excludeInventoryItems
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "A list of seller inventory reference IDs to exclude from the promotion.  <br><br><p class=\"tablenote\"><b>Note:</b> The request can have either <b>excludeInventoryItems</b> or <b>excludeListingIds</b> but not both.</p> <b>Maximum:</b> 100 parent items <br><b>Maximum SKU or custom label length:</b> 50 characters")

  public List<InventoryItem> getExcludeInventoryItems() {
    return excludeInventoryItems;
  }


  public void setExcludeInventoryItems(List<InventoryItem> excludeInventoryItems) {
    this.excludeInventoryItems = excludeInventoryItems;
  }


  public RuleCriteria excludeListingIds(List<String> excludeListingIds) {
    
    this.excludeListingIds = excludeListingIds;
    return this;
  }

  public RuleCriteria addExcludeListingIdsItem(String excludeListingIdsItem) {
    if (this.excludeListingIds == null) {
      this.excludeListingIds = new ArrayList<String>();
    }
    this.excludeListingIds.add(excludeListingIdsItem);
    return this;
  }

   /**
   * A list of eBay listing IDs to exclude from the promotion.  &lt;br&gt;&lt;br&gt;&lt;p class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; The request can have either &lt;b&gt;excludeInventoryItems&lt;/b&gt; or &lt;b&gt;excludeListingIds&lt;/b&gt; but not both.&lt;/p&gt; &lt;b&gt;Maximum:&lt;/b&gt; 100 parent items &lt;br&gt;&lt;b&gt;Maximum SKU or custom label length:&lt;/b&gt; 50 characters
   * @return excludeListingIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of eBay listing IDs to exclude from the promotion.  <br><br><p class=\"tablenote\"><b>Note:</b> The request can have either <b>excludeInventoryItems</b> or <b>excludeListingIds</b> but not both.</p> <b>Maximum:</b> 100 parent items <br><b>Maximum SKU or custom label length:</b> 50 characters")

  public List<String> getExcludeListingIds() {
    return excludeListingIds;
  }


  public void setExcludeListingIds(List<String> excludeListingIds) {
    this.excludeListingIds = excludeListingIds;
  }


  public RuleCriteria markupInventoryItems(List<InventoryItem> markupInventoryItems) {
    
    this.markupInventoryItems = markupInventoryItems;
    return this;
  }

  public RuleCriteria addMarkupInventoryItemsItem(InventoryItem markupInventoryItemsItem) {
    if (this.markupInventoryItems == null) {
      this.markupInventoryItems = new ArrayList<InventoryItem>();
    }
    this.markupInventoryItems.add(markupInventoryItemsItem);
    return this;
  }

   /**
   * A list of SKUs to remove from a markdown promotion. The listed SKUs are &#39;marked up&#39; to their standard price after being part of the markdown promotion.
   * @return markupInventoryItems
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "A list of SKUs to remove from a markdown promotion. The listed SKUs are 'marked up' to their standard price after being part of the markdown promotion.")

  public List<InventoryItem> getMarkupInventoryItems() {
    return markupInventoryItems;
  }


  public void setMarkupInventoryItems(List<InventoryItem> markupInventoryItems) {
    this.markupInventoryItems = markupInventoryItems;
  }


  public RuleCriteria markupListingIds(List<String> markupListingIds) {
    
    this.markupListingIds = markupListingIds;
    return this;
  }

  public RuleCriteria addMarkupListingIdsItem(String markupListingIdsItem) {
    if (this.markupListingIds == null) {
      this.markupListingIds = new ArrayList<String>();
    }
    this.markupListingIds.add(markupListingIdsItem);
    return this;
  }

   /**
   * A list of listing IDs to remove from a markdown promotion. The listed items are &#39;marked up&#39; to their standard price after being part of the markdown promotion.
   * @return markupListingIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of listing IDs to remove from a markdown promotion. The listed items are 'marked up' to their standard price after being part of the markdown promotion.")

  public List<String> getMarkupListingIds() {
    return markupListingIds;
  }


  public void setMarkupListingIds(List<String> markupListingIds) {
    this.markupListingIds = markupListingIds;
  }


  public RuleCriteria selectionRules(List<SelectionRule> selectionRules) {
    
    this.selectionRules = selectionRules;
    return this;
  }

  public RuleCriteria addSelectionRulesItem(SelectionRule selectionRulesItem) {
    if (this.selectionRules == null) {
      this.selectionRules = new ArrayList<SelectionRule>();
    }
    this.selectionRules.add(selectionRulesItem);
    return this;
  }

   /**
   * The container for the rules that select the items to include in a promotion.  &lt;br&gt;&lt;br&gt;&lt;i&gt;Required if &lt;/i&gt; &lt;b&gt;inventoryCriterionType&lt;/b&gt; is set to &lt;code&gt;INVENTORY_BY_RULE&lt;/code&gt;.
   * @return selectionRules
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The container for the rules that select the items to include in a promotion.  <br><br><i>Required if </i> <b>inventoryCriterionType</b> is set to <code>INVENTORY_BY_RULE</code>.")

  public List<SelectionRule> getSelectionRules() {
    return selectionRules;
  }


  public void setSelectionRules(List<SelectionRule> selectionRules) {
    this.selectionRules = selectionRules;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RuleCriteria ruleCriteria = (RuleCriteria) o;
    return Objects.equals(this.excludeInventoryItems, ruleCriteria.excludeInventoryItems) &&
        Objects.equals(this.excludeListingIds, ruleCriteria.excludeListingIds) &&
        Objects.equals(this.markupInventoryItems, ruleCriteria.markupInventoryItems) &&
        Objects.equals(this.markupListingIds, ruleCriteria.markupListingIds) &&
        Objects.equals(this.selectionRules, ruleCriteria.selectionRules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(excludeInventoryItems, excludeListingIds, markupInventoryItems, markupListingIds, selectionRules);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RuleCriteria {\n");
    sb.append("    excludeInventoryItems: ").append(toIndentedString(excludeInventoryItems)).append("\n");
    sb.append("    excludeListingIds: ").append(toIndentedString(excludeListingIds)).append("\n");
    sb.append("    markupInventoryItems: ").append(toIndentedString(markupInventoryItems)).append("\n");
    sb.append("    markupListingIds: ").append(toIndentedString(markupListingIds)).append("\n");
    sb.append("    selectionRules: ").append(toIndentedString(selectionRules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

