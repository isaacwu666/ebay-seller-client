/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.Amount;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This type is the base response type of the &lt;strong&gt;getTransactionSummary&lt;/strong&gt; method, and based on the filters that are used in the &lt;strong&gt;getTransactionSummary&lt;/strong&gt; call URI, the response may include  total count and amount of the seller&#39;s sales and credits, total count and amount of buyer refunds, and total count and amount of seller payment holds.
 */
@ApiModel(description = "This type is the base response type of the <strong>getTransactionSummary</strong> method, and based on the filters that are used in the <strong>getTransactionSummary</strong> call URI, the response may include  total count and amount of the seller's sales and credits, total count and amount of buyer refunds, and total count and amount of seller payment holds.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class TransactionSummaryResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ADJUSTMENT_AMOUNT = "adjustmentAmount";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_AMOUNT)
  private Amount adjustmentAmount;

  public static final String SERIALIZED_NAME_ADJUSTMENT_BOOKING_ENTRY = "adjustmentBookingEntry";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_BOOKING_ENTRY)
  private String adjustmentBookingEntry;

  public static final String SERIALIZED_NAME_ADJUSTMENT_COUNT = "adjustmentCount";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_COUNT)
  private Integer adjustmentCount;

  public static final String SERIALIZED_NAME_BALANCE_TRANSFER_AMOUNT = "balanceTransferAmount";
  @SerializedName(SERIALIZED_NAME_BALANCE_TRANSFER_AMOUNT)
  private Amount balanceTransferAmount;

  public static final String SERIALIZED_NAME_BALANCE_TRANSFER_BOOKING_ENTRY = "balanceTransferBookingEntry";
  @SerializedName(SERIALIZED_NAME_BALANCE_TRANSFER_BOOKING_ENTRY)
  private String balanceTransferBookingEntry;

  public static final String SERIALIZED_NAME_BALANCE_TRANSFER_COUNT = "balanceTransferCount";
  @SerializedName(SERIALIZED_NAME_BALANCE_TRANSFER_COUNT)
  private Integer balanceTransferCount;

  public static final String SERIALIZED_NAME_CREDIT_AMOUNT = "creditAmount";
  @SerializedName(SERIALIZED_NAME_CREDIT_AMOUNT)
  private Amount creditAmount;

  public static final String SERIALIZED_NAME_CREDIT_BOOKING_ENTRY = "creditBookingEntry";
  @SerializedName(SERIALIZED_NAME_CREDIT_BOOKING_ENTRY)
  private String creditBookingEntry;

  public static final String SERIALIZED_NAME_CREDIT_COUNT = "creditCount";
  @SerializedName(SERIALIZED_NAME_CREDIT_COUNT)
  private Integer creditCount;

  public static final String SERIALIZED_NAME_DISPUTE_AMOUNT = "disputeAmount";
  @SerializedName(SERIALIZED_NAME_DISPUTE_AMOUNT)
  private Amount disputeAmount;

  public static final String SERIALIZED_NAME_DISPUTE_BOOKING_ENTRY = "disputeBookingEntry";
  @SerializedName(SERIALIZED_NAME_DISPUTE_BOOKING_ENTRY)
  private String disputeBookingEntry;

  public static final String SERIALIZED_NAME_DISPUTE_COUNT = "disputeCount";
  @SerializedName(SERIALIZED_NAME_DISPUTE_COUNT)
  private Integer disputeCount;

  public static final String SERIALIZED_NAME_NON_SALE_CHARGE_AMOUNT = "nonSaleChargeAmount";
  @SerializedName(SERIALIZED_NAME_NON_SALE_CHARGE_AMOUNT)
  private Amount nonSaleChargeAmount;

  public static final String SERIALIZED_NAME_NON_SALE_CHARGE_BOOKING_ENTRY = "nonSaleChargeBookingEntry";
  @SerializedName(SERIALIZED_NAME_NON_SALE_CHARGE_BOOKING_ENTRY)
  private String nonSaleChargeBookingEntry;

  public static final String SERIALIZED_NAME_NON_SALE_CHARGE_COUNT = "nonSaleChargeCount";
  @SerializedName(SERIALIZED_NAME_NON_SALE_CHARGE_COUNT)
  private Integer nonSaleChargeCount;

  public static final String SERIALIZED_NAME_ON_HOLD_AMOUNT = "onHoldAmount";
  @SerializedName(SERIALIZED_NAME_ON_HOLD_AMOUNT)
  private Amount onHoldAmount;

  public static final String SERIALIZED_NAME_ON_HOLD_BOOKING_ENTRY = "onHoldBookingEntry";
  @SerializedName(SERIALIZED_NAME_ON_HOLD_BOOKING_ENTRY)
  private String onHoldBookingEntry;

  public static final String SERIALIZED_NAME_ON_HOLD_COUNT = "onHoldCount";
  @SerializedName(SERIALIZED_NAME_ON_HOLD_COUNT)
  private Integer onHoldCount;

  public static final String SERIALIZED_NAME_REFUND_AMOUNT = "refundAmount";
  @SerializedName(SERIALIZED_NAME_REFUND_AMOUNT)
  private Amount refundAmount;

  public static final String SERIALIZED_NAME_REFUND_BOOKING_ENTRY = "refundBookingEntry";
  @SerializedName(SERIALIZED_NAME_REFUND_BOOKING_ENTRY)
  private String refundBookingEntry;

  public static final String SERIALIZED_NAME_REFUND_COUNT = "refundCount";
  @SerializedName(SERIALIZED_NAME_REFUND_COUNT)
  private Integer refundCount;

  public static final String SERIALIZED_NAME_SHIPPING_LABEL_AMOUNT = "shippingLabelAmount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_LABEL_AMOUNT)
  private Amount shippingLabelAmount;

  public static final String SERIALIZED_NAME_SHIPPING_LABEL_BOOKING_ENTRY = "shippingLabelBookingEntry";
  @SerializedName(SERIALIZED_NAME_SHIPPING_LABEL_BOOKING_ENTRY)
  private String shippingLabelBookingEntry;

  public static final String SERIALIZED_NAME_SHIPPING_LABEL_COUNT = "shippingLabelCount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_LABEL_COUNT)
  private Integer shippingLabelCount;

  public static final String SERIALIZED_NAME_TRANSFER_AMOUNT = "transferAmount";
  @SerializedName(SERIALIZED_NAME_TRANSFER_AMOUNT)
  private Amount transferAmount;

  public static final String SERIALIZED_NAME_TRANSFER_BOOKING_ENTRY = "transferBookingEntry";
  @SerializedName(SERIALIZED_NAME_TRANSFER_BOOKING_ENTRY)
  private String transferBookingEntry;

  public static final String SERIALIZED_NAME_TRANSFER_COUNT = "transferCount";
  @SerializedName(SERIALIZED_NAME_TRANSFER_COUNT)
  private Integer transferCount;

  public static final String SERIALIZED_NAME_WITHDRAWAL_AMOUNT = "withdrawalAmount";
  @SerializedName(SERIALIZED_NAME_WITHDRAWAL_AMOUNT)
  private Amount withdrawalAmount;

  public static final String SERIALIZED_NAME_WITHDRAWAL_BOOKING_ENTRY = "withdrawalBookingEntry";
  @SerializedName(SERIALIZED_NAME_WITHDRAWAL_BOOKING_ENTRY)
  private String withdrawalBookingEntry;

  public static final String SERIALIZED_NAME_WITHDRAWAL_COUNT = "withdrawalCount";
  @SerializedName(SERIALIZED_NAME_WITHDRAWAL_COUNT)
  private Integer withdrawalCount;


  public TransactionSummaryResponse adjustmentAmount(Amount adjustmentAmount) {
    
    this.adjustmentAmount = adjustmentAmount;
    return this;
  }

   /**
   * Get adjustmentAmount
   * @return adjustmentAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getAdjustmentAmount() {
    return adjustmentAmount;
  }


  public void setAdjustmentAmount(Amount adjustmentAmount) {
    this.adjustmentAmount = adjustmentAmount;
  }


  public TransactionSummaryResponse adjustmentBookingEntry(String adjustmentBookingEntry) {
    
    this.adjustmentBookingEntry = adjustmentBookingEntry;
    return this;
  }

   /**
   * The credit debit sign indicator for adjustment. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return adjustmentBookingEntry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The credit debit sign indicator for adjustment. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay API documentation</a>")

  public String getAdjustmentBookingEntry() {
    return adjustmentBookingEntry;
  }


  public void setAdjustmentBookingEntry(String adjustmentBookingEntry) {
    this.adjustmentBookingEntry = adjustmentBookingEntry;
  }


  public TransactionSummaryResponse adjustmentCount(Integer adjustmentCount) {
    
    this.adjustmentCount = adjustmentCount;
    return this;
  }

   /**
   * Total adjustment count for given payee within a specified period.
   * @return adjustmentCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total adjustment count for given payee within a specified period.")

  public Integer getAdjustmentCount() {
    return adjustmentCount;
  }


  public void setAdjustmentCount(Integer adjustmentCount) {
    this.adjustmentCount = adjustmentCount;
  }


  public TransactionSummaryResponse balanceTransferAmount(Amount balanceTransferAmount) {
    
    this.balanceTransferAmount = balanceTransferAmount;
    return this;
  }

   /**
   * Get balanceTransferAmount
   * @return balanceTransferAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getBalanceTransferAmount() {
    return balanceTransferAmount;
  }


  public void setBalanceTransferAmount(Amount balanceTransferAmount) {
    this.balanceTransferAmount = balanceTransferAmount;
  }


  public TransactionSummaryResponse balanceTransferBookingEntry(String balanceTransferBookingEntry) {
    
    this.balanceTransferBookingEntry = balanceTransferBookingEntry;
    return this;
  }

   /**
   * The credit debit sign indicator for the balance transfer. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return balanceTransferBookingEntry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The credit debit sign indicator for the balance transfer. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay API documentation</a>")

  public String getBalanceTransferBookingEntry() {
    return balanceTransferBookingEntry;
  }


  public void setBalanceTransferBookingEntry(String balanceTransferBookingEntry) {
    this.balanceTransferBookingEntry = balanceTransferBookingEntry;
  }


  public TransactionSummaryResponse balanceTransferCount(Integer balanceTransferCount) {
    
    this.balanceTransferCount = balanceTransferCount;
    return this;
  }

   /**
   * The total balance transfer count for given payee within the specified period.
   * @return balanceTransferCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total balance transfer count for given payee within the specified period.")

  public Integer getBalanceTransferCount() {
    return balanceTransferCount;
  }


  public void setBalanceTransferCount(Integer balanceTransferCount) {
    this.balanceTransferCount = balanceTransferCount;
  }


  public TransactionSummaryResponse creditAmount(Amount creditAmount) {
    
    this.creditAmount = creditAmount;
    return this;
  }

   /**
   * Get creditAmount
   * @return creditAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getCreditAmount() {
    return creditAmount;
  }


  public void setCreditAmount(Amount creditAmount) {
    this.creditAmount = creditAmount;
  }


  public TransactionSummaryResponse creditBookingEntry(String creditBookingEntry) {
    
    this.creditBookingEntry = creditBookingEntry;
    return this;
  }

   /**
   * The enumeration value indicates whether the dollar amount in the &lt;strong&gt;creditAmount&lt;/strong&gt; field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be &lt;code&gt;CREDIT&lt;/code&gt;. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return creditBookingEntry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The enumeration value indicates whether the dollar amount in the <strong>creditAmount</strong> field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be <code>CREDIT</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay API documentation</a>")

  public String getCreditBookingEntry() {
    return creditBookingEntry;
  }


  public void setCreditBookingEntry(String creditBookingEntry) {
    this.creditBookingEntry = creditBookingEntry;
  }


  public TransactionSummaryResponse creditCount(Integer creditCount) {
    
    this.creditCount = creditCount;
    return this;
  }

   /**
   * This integer value indicates the total number of the seller&#39;s sales and/or credits that match the input criteria. &lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; Unless the &lt;b&gt;transactionType&lt;/b&gt; filter is used in the request to retrieve a specific type of monetary transaction (sale, buyer refund, or seller credit), the &lt;b&gt;creditCount&lt;/b&gt; and &lt;b&gt;creditAmount&lt;/b&gt; fields account for both order sales and seller credits (the count and value is not distinguished between the two monetary transaction types).&lt;/span&gt;&lt;br&gt;&lt;br&gt;This field is generally returned, even if &lt;code&gt;0&lt;/code&gt;, but it will not be returned if a &lt;strong&gt;transactionType&lt;/strong&gt; filter is used, and its value is set to either &lt;code&gt;REFUND&lt;/code&gt;, &lt;code&gt;DISPUTE&lt;/code&gt;, or &lt;code&gt;SHIPPING_LABEL&lt;/code&gt;.
   * @return creditCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This integer value indicates the total number of the seller's sales and/or credits that match the input criteria. <br/><br/><span class=\"tablenote\"><strong>Note:</strong> Unless the <b>transactionType</b> filter is used in the request to retrieve a specific type of monetary transaction (sale, buyer refund, or seller credit), the <b>creditCount</b> and <b>creditAmount</b> fields account for both order sales and seller credits (the count and value is not distinguished between the two monetary transaction types).</span><br><br>This field is generally returned, even if <code>0</code>, but it will not be returned if a <strong>transactionType</strong> filter is used, and its value is set to either <code>REFUND</code>, <code>DISPUTE</code>, or <code>SHIPPING_LABEL</code>.")

  public Integer getCreditCount() {
    return creditCount;
  }


  public void setCreditCount(Integer creditCount) {
    this.creditCount = creditCount;
  }


  public TransactionSummaryResponse disputeAmount(Amount disputeAmount) {
    
    this.disputeAmount = disputeAmount;
    return this;
  }

   /**
   * Get disputeAmount
   * @return disputeAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getDisputeAmount() {
    return disputeAmount;
  }


  public void setDisputeAmount(Amount disputeAmount) {
    this.disputeAmount = disputeAmount;
  }


  public TransactionSummaryResponse disputeBookingEntry(String disputeBookingEntry) {
    
    this.disputeBookingEntry = disputeBookingEntry;
    return this;
  }

   /**
   * The enumeration value indicates whether the dollar amount in the &lt;strong&gt;disputeAmount&lt;/strong&gt; field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be &lt;code&gt;DEBIT&lt;/code&gt;, but its possible that &lt;code&gt;CREDIT&lt;/code&gt; could be returned if the seller contested one or more payment disputes and won the dispute. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return disputeBookingEntry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The enumeration value indicates whether the dollar amount in the <strong>disputeAmount</strong> field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be <code>DEBIT</code>, but its possible that <code>CREDIT</code> could be returned if the seller contested one or more payment disputes and won the dispute. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay API documentation</a>")

  public String getDisputeBookingEntry() {
    return disputeBookingEntry;
  }


  public void setDisputeBookingEntry(String disputeBookingEntry) {
    this.disputeBookingEntry = disputeBookingEntry;
  }


  public TransactionSummaryResponse disputeCount(Integer disputeCount) {
    
    this.disputeCount = disputeCount;
    return this;
  }

   /**
   * This integer value indicates the total number of payment disputes that have been initiated by one or more buyers. Only the orders that match the input criteria are considered. The Payment Disputes methods in the Fulfillment API can be used by the seller to retrieve more information about any payment disputes. &lt;br&gt;&lt;br&gt;This field is generally returned, even if &lt;code&gt;0&lt;/code&gt;, but it will not be returned if a &lt;strong&gt;transactionType&lt;/strong&gt; filter is used, and its value is set to any value other than &lt;code&gt;DISPUTE&lt;/code&gt;.
   * @return disputeCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This integer value indicates the total number of payment disputes that have been initiated by one or more buyers. Only the orders that match the input criteria are considered. The Payment Disputes methods in the Fulfillment API can be used by the seller to retrieve more information about any payment disputes. <br><br>This field is generally returned, even if <code>0</code>, but it will not be returned if a <strong>transactionType</strong> filter is used, and its value is set to any value other than <code>DISPUTE</code>.")

  public Integer getDisputeCount() {
    return disputeCount;
  }


  public void setDisputeCount(Integer disputeCount) {
    this.disputeCount = disputeCount;
  }


  public TransactionSummaryResponse nonSaleChargeAmount(Amount nonSaleChargeAmount) {
    
    this.nonSaleChargeAmount = nonSaleChargeAmount;
    return this;
  }

   /**
   * Get nonSaleChargeAmount
   * @return nonSaleChargeAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getNonSaleChargeAmount() {
    return nonSaleChargeAmount;
  }


  public void setNonSaleChargeAmount(Amount nonSaleChargeAmount) {
    this.nonSaleChargeAmount = nonSaleChargeAmount;
  }


  public TransactionSummaryResponse nonSaleChargeBookingEntry(String nonSaleChargeBookingEntry) {
    
    this.nonSaleChargeBookingEntry = nonSaleChargeBookingEntry;
    return this;
  }

   /**
   * The credit/debit sign indicator for the non-sale charge. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return nonSaleChargeBookingEntry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The credit/debit sign indicator for the non-sale charge. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay API documentation</a>")

  public String getNonSaleChargeBookingEntry() {
    return nonSaleChargeBookingEntry;
  }


  public void setNonSaleChargeBookingEntry(String nonSaleChargeBookingEntry) {
    this.nonSaleChargeBookingEntry = nonSaleChargeBookingEntry;
  }


  public TransactionSummaryResponse nonSaleChargeCount(Integer nonSaleChargeCount) {
    
    this.nonSaleChargeCount = nonSaleChargeCount;
    return this;
  }

   /**
   * The total non-sale charge count for given payee within a specified period.
   * @return nonSaleChargeCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total non-sale charge count for given payee within a specified period.")

  public Integer getNonSaleChargeCount() {
    return nonSaleChargeCount;
  }


  public void setNonSaleChargeCount(Integer nonSaleChargeCount) {
    this.nonSaleChargeCount = nonSaleChargeCount;
  }


  public TransactionSummaryResponse onHoldAmount(Amount onHoldAmount) {
    
    this.onHoldAmount = onHoldAmount;
    return this;
  }

   /**
   * Get onHoldAmount
   * @return onHoldAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getOnHoldAmount() {
    return onHoldAmount;
  }


  public void setOnHoldAmount(Amount onHoldAmount) {
    this.onHoldAmount = onHoldAmount;
  }


  public TransactionSummaryResponse onHoldBookingEntry(String onHoldBookingEntry) {
    
    this.onHoldBookingEntry = onHoldBookingEntry;
    return this;
  }

   /**
   * The enumeration value indicates whether the dollar amount in the &lt;strong&gt;onHoldAmount&lt;/strong&gt; field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be &lt;code&gt;CREDIT&lt;/code&gt;, since on-hold funds should eventually be released as part of a payout to the seller once the hold is cleared. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return onHoldBookingEntry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The enumeration value indicates whether the dollar amount in the <strong>onHoldAmount</strong> field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be <code>CREDIT</code>, since on-hold funds should eventually be released as part of a payout to the seller once the hold is cleared. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay API documentation</a>")

  public String getOnHoldBookingEntry() {
    return onHoldBookingEntry;
  }


  public void setOnHoldBookingEntry(String onHoldBookingEntry) {
    this.onHoldBookingEntry = onHoldBookingEntry;
  }


  public TransactionSummaryResponse onHoldCount(Integer onHoldCount) {
    
    this.onHoldCount = onHoldCount;
    return this;
  }

   /**
   * This integer value indicates the total number of order sales where the associated funds are on hold. Only the orders that match the input criteria are considered.&lt;br&gt;&lt;br&gt;This field is generally returned, even if &lt;code&gt;0&lt;/code&gt;, but it will not be returned if a &lt;strong&gt;transactionStatus&lt;/strong&gt; filter is used, and its value is set to any value other than &lt;code&gt;FUNDS_ON_HOLD&lt;/code&gt;.
   * @return onHoldCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This integer value indicates the total number of order sales where the associated funds are on hold. Only the orders that match the input criteria are considered.<br><br>This field is generally returned, even if <code>0</code>, but it will not be returned if a <strong>transactionStatus</strong> filter is used, and its value is set to any value other than <code>FUNDS_ON_HOLD</code>.")

  public Integer getOnHoldCount() {
    return onHoldCount;
  }


  public void setOnHoldCount(Integer onHoldCount) {
    this.onHoldCount = onHoldCount;
  }


  public TransactionSummaryResponse refundAmount(Amount refundAmount) {
    
    this.refundAmount = refundAmount;
    return this;
  }

   /**
   * Get refundAmount
   * @return refundAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getRefundAmount() {
    return refundAmount;
  }


  public void setRefundAmount(Amount refundAmount) {
    this.refundAmount = refundAmount;
  }


  public TransactionSummaryResponse refundBookingEntry(String refundBookingEntry) {
    
    this.refundBookingEntry = refundBookingEntry;
    return this;
  }

   /**
   * The enumeration value indicates whether the dollar amount in the &lt;strong&gt;refundAmount&lt;/strong&gt; field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be &lt;code&gt;DEBIT&lt;/code&gt; since this a refund from the seller to the buyer. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return refundBookingEntry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The enumeration value indicates whether the dollar amount in the <strong>refundAmount</strong> field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be <code>DEBIT</code> since this a refund from the seller to the buyer. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay API documentation</a>")

  public String getRefundBookingEntry() {
    return refundBookingEntry;
  }


  public void setRefundBookingEntry(String refundBookingEntry) {
    this.refundBookingEntry = refundBookingEntry;
  }


  public TransactionSummaryResponse refundCount(Integer refundCount) {
    
    this.refundCount = refundCount;
    return this;
  }

   /**
   * This integer value indicates the total number of buyer refunds that match the input criteria. &lt;br&gt;&lt;br&gt;This field is generally returned, even if &lt;code&gt;0&lt;/code&gt;, but it will not be returned if a &lt;strong&gt;transactionType&lt;/strong&gt; filter is used, and its value is set to any value other than &lt;code&gt;REFUND&lt;/code&gt;.
   * @return refundCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This integer value indicates the total number of buyer refunds that match the input criteria. <br><br>This field is generally returned, even if <code>0</code>, but it will not be returned if a <strong>transactionType</strong> filter is used, and its value is set to any value other than <code>REFUND</code>.")

  public Integer getRefundCount() {
    return refundCount;
  }


  public void setRefundCount(Integer refundCount) {
    this.refundCount = refundCount;
  }


  public TransactionSummaryResponse shippingLabelAmount(Amount shippingLabelAmount) {
    
    this.shippingLabelAmount = shippingLabelAmount;
    return this;
  }

   /**
   * Get shippingLabelAmount
   * @return shippingLabelAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getShippingLabelAmount() {
    return shippingLabelAmount;
  }


  public void setShippingLabelAmount(Amount shippingLabelAmount) {
    this.shippingLabelAmount = shippingLabelAmount;
  }


  public TransactionSummaryResponse shippingLabelBookingEntry(String shippingLabelBookingEntry) {
    
    this.shippingLabelBookingEntry = shippingLabelBookingEntry;
    return this;
  }

   /**
   * The enumeration value indicates whether the dollar amount in the &lt;strong&gt;shippingLabelAmount&lt;/strong&gt; field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be &lt;code&gt;DEBIT&lt;/code&gt;, as eBay will charge the seller when eBay shipping labels are purchased, but it can be &lt;code&gt;CREDIT&lt;/code&gt; if the seller was refunded for a shipping label or was possibly overcharged for a shipping label. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return shippingLabelBookingEntry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The enumeration value indicates whether the dollar amount in the <strong>shippingLabelAmount</strong> field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be <code>DEBIT</code>, as eBay will charge the seller when eBay shipping labels are purchased, but it can be <code>CREDIT</code> if the seller was refunded for a shipping label or was possibly overcharged for a shipping label. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay API documentation</a>")

  public String getShippingLabelBookingEntry() {
    return shippingLabelBookingEntry;
  }


  public void setShippingLabelBookingEntry(String shippingLabelBookingEntry) {
    this.shippingLabelBookingEntry = shippingLabelBookingEntry;
  }


  public TransactionSummaryResponse shippingLabelCount(Integer shippingLabelCount) {
    
    this.shippingLabelCount = shippingLabelCount;
    return this;
  }

   /**
   * This is the total number of eBay shipping labels purchased by the seller. The count returned here may depend on the specified input criteria.
   * @return shippingLabelCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is the total number of eBay shipping labels purchased by the seller. The count returned here may depend on the specified input criteria.")

  public Integer getShippingLabelCount() {
    return shippingLabelCount;
  }


  public void setShippingLabelCount(Integer shippingLabelCount) {
    this.shippingLabelCount = shippingLabelCount;
  }


  public TransactionSummaryResponse transferAmount(Amount transferAmount) {
    
    this.transferAmount = transferAmount;
    return this;
  }

   /**
   * Get transferAmount
   * @return transferAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getTransferAmount() {
    return transferAmount;
  }


  public void setTransferAmount(Amount transferAmount) {
    this.transferAmount = transferAmount;
  }


  public TransactionSummaryResponse transferBookingEntry(String transferBookingEntry) {
    
    this.transferBookingEntry = transferBookingEntry;
    return this;
  }

   /**
   * The enumeration value indicates whether the dollar amount in the &lt;strong&gt;transferAmount&lt;/strong&gt; field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be &lt;code&gt;DEBIT&lt;/code&gt; since this a seller reimbursement to eBay for buyer refunds. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return transferBookingEntry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The enumeration value indicates whether the dollar amount in the <strong>transferAmount</strong> field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be <code>DEBIT</code> since this a seller reimbursement to eBay for buyer refunds. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay API documentation</a>")

  public String getTransferBookingEntry() {
    return transferBookingEntry;
  }


  public void setTransferBookingEntry(String transferBookingEntry) {
    this.transferBookingEntry = transferBookingEntry;
  }


  public TransactionSummaryResponse transferCount(Integer transferCount) {
    
    this.transferCount = transferCount;
    return this;
  }

   /**
   * This integer value indicates the total number of buyer refund transfers that match the input criteria. &lt;br&gt;&lt;br&gt;This field is generally returned, even if &lt;code&gt;0&lt;/code&gt;, but it will not be returned if a &lt;strong&gt;transactionType&lt;/strong&gt; filter is used, and its value is set to any value other than &lt;code&gt;TRANSFER&lt;/code&gt;.
   * @return transferCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This integer value indicates the total number of buyer refund transfers that match the input criteria. <br><br>This field is generally returned, even if <code>0</code>, but it will not be returned if a <strong>transactionType</strong> filter is used, and its value is set to any value other than <code>TRANSFER</code>.")

  public Integer getTransferCount() {
    return transferCount;
  }


  public void setTransferCount(Integer transferCount) {
    this.transferCount = transferCount;
  }


  public TransactionSummaryResponse withdrawalAmount(Amount withdrawalAmount) {
    
    this.withdrawalAmount = withdrawalAmount;
    return this;
  }

   /**
   * Get withdrawalAmount
   * @return withdrawalAmount
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")

  public Amount getWithdrawalAmount() {
    return withdrawalAmount;
  }


  public void setWithdrawalAmount(Amount withdrawalAmount) {
    this.withdrawalAmount = withdrawalAmount;
  }


  public TransactionSummaryResponse withdrawalBookingEntry(String withdrawalBookingEntry) {
    
    this.withdrawalBookingEntry = withdrawalBookingEntry;
    return this;
  }

   /**
   * The enumeration value indicates whether the dollar amount in the &lt;strong&gt;withdrawalAmount&lt;/strong&gt; field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be &lt;code&gt;DEBIT&lt;/code&gt; since this transaction involves a debit to the seller&#39;s available payout funds. For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return withdrawalBookingEntry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The enumeration value indicates whether the dollar amount in the <strong>withdrawalAmount</strong> field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be <code>DEBIT</code> since this transaction involves a debit to the seller's available payout funds. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'>eBay API documentation</a>")

  public String getWithdrawalBookingEntry() {
    return withdrawalBookingEntry;
  }


  public void setWithdrawalBookingEntry(String withdrawalBookingEntry) {
    this.withdrawalBookingEntry = withdrawalBookingEntry;
  }


  public TransactionSummaryResponse withdrawalCount(Integer withdrawalCount) {
    
    this.withdrawalCount = withdrawalCount;
    return this;
  }

   /**
   * This integer value indicates the total number of on-demand payouts (withdrawals) that match the input criteria. &lt;br&gt;&lt;br&gt;This field is generally returned, even if &lt;code&gt;0&lt;/code&gt;, but it will not be returned if a &lt;strong&gt;transactionType&lt;/strong&gt; filter is used, and its value is set to any value other than &lt;code&gt;WITHDRAWAL&lt;/code&gt;.
   * @return withdrawalCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This integer value indicates the total number of on-demand payouts (withdrawals) that match the input criteria. <br><br>This field is generally returned, even if <code>0</code>, but it will not be returned if a <strong>transactionType</strong> filter is used, and its value is set to any value other than <code>WITHDRAWAL</code>.")

  public Integer getWithdrawalCount() {
    return withdrawalCount;
  }


  public void setWithdrawalCount(Integer withdrawalCount) {
    this.withdrawalCount = withdrawalCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionSummaryResponse transactionSummaryResponse = (TransactionSummaryResponse) o;
    return Objects.equals(this.adjustmentAmount, transactionSummaryResponse.adjustmentAmount) &&
        Objects.equals(this.adjustmentBookingEntry, transactionSummaryResponse.adjustmentBookingEntry) &&
        Objects.equals(this.adjustmentCount, transactionSummaryResponse.adjustmentCount) &&
        Objects.equals(this.balanceTransferAmount, transactionSummaryResponse.balanceTransferAmount) &&
        Objects.equals(this.balanceTransferBookingEntry, transactionSummaryResponse.balanceTransferBookingEntry) &&
        Objects.equals(this.balanceTransferCount, transactionSummaryResponse.balanceTransferCount) &&
        Objects.equals(this.creditAmount, transactionSummaryResponse.creditAmount) &&
        Objects.equals(this.creditBookingEntry, transactionSummaryResponse.creditBookingEntry) &&
        Objects.equals(this.creditCount, transactionSummaryResponse.creditCount) &&
        Objects.equals(this.disputeAmount, transactionSummaryResponse.disputeAmount) &&
        Objects.equals(this.disputeBookingEntry, transactionSummaryResponse.disputeBookingEntry) &&
        Objects.equals(this.disputeCount, transactionSummaryResponse.disputeCount) &&
        Objects.equals(this.nonSaleChargeAmount, transactionSummaryResponse.nonSaleChargeAmount) &&
        Objects.equals(this.nonSaleChargeBookingEntry, transactionSummaryResponse.nonSaleChargeBookingEntry) &&
        Objects.equals(this.nonSaleChargeCount, transactionSummaryResponse.nonSaleChargeCount) &&
        Objects.equals(this.onHoldAmount, transactionSummaryResponse.onHoldAmount) &&
        Objects.equals(this.onHoldBookingEntry, transactionSummaryResponse.onHoldBookingEntry) &&
        Objects.equals(this.onHoldCount, transactionSummaryResponse.onHoldCount) &&
        Objects.equals(this.refundAmount, transactionSummaryResponse.refundAmount) &&
        Objects.equals(this.refundBookingEntry, transactionSummaryResponse.refundBookingEntry) &&
        Objects.equals(this.refundCount, transactionSummaryResponse.refundCount) &&
        Objects.equals(this.shippingLabelAmount, transactionSummaryResponse.shippingLabelAmount) &&
        Objects.equals(this.shippingLabelBookingEntry, transactionSummaryResponse.shippingLabelBookingEntry) &&
        Objects.equals(this.shippingLabelCount, transactionSummaryResponse.shippingLabelCount) &&
        Objects.equals(this.transferAmount, transactionSummaryResponse.transferAmount) &&
        Objects.equals(this.transferBookingEntry, transactionSummaryResponse.transferBookingEntry) &&
        Objects.equals(this.transferCount, transactionSummaryResponse.transferCount) &&
        Objects.equals(this.withdrawalAmount, transactionSummaryResponse.withdrawalAmount) &&
        Objects.equals(this.withdrawalBookingEntry, transactionSummaryResponse.withdrawalBookingEntry) &&
        Objects.equals(this.withdrawalCount, transactionSummaryResponse.withdrawalCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adjustmentAmount, adjustmentBookingEntry, adjustmentCount, balanceTransferAmount, balanceTransferBookingEntry, balanceTransferCount, creditAmount, creditBookingEntry, creditCount, disputeAmount, disputeBookingEntry, disputeCount, nonSaleChargeAmount, nonSaleChargeBookingEntry, nonSaleChargeCount, onHoldAmount, onHoldBookingEntry, onHoldCount, refundAmount, refundBookingEntry, refundCount, shippingLabelAmount, shippingLabelBookingEntry, shippingLabelCount, transferAmount, transferBookingEntry, transferCount, withdrawalAmount, withdrawalBookingEntry, withdrawalCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionSummaryResponse {\n");
    sb.append("    adjustmentAmount: ").append(toIndentedString(adjustmentAmount)).append("\n");
    sb.append("    adjustmentBookingEntry: ").append(toIndentedString(adjustmentBookingEntry)).append("\n");
    sb.append("    adjustmentCount: ").append(toIndentedString(adjustmentCount)).append("\n");
    sb.append("    balanceTransferAmount: ").append(toIndentedString(balanceTransferAmount)).append("\n");
    sb.append("    balanceTransferBookingEntry: ").append(toIndentedString(balanceTransferBookingEntry)).append("\n");
    sb.append("    balanceTransferCount: ").append(toIndentedString(balanceTransferCount)).append("\n");
    sb.append("    creditAmount: ").append(toIndentedString(creditAmount)).append("\n");
    sb.append("    creditBookingEntry: ").append(toIndentedString(creditBookingEntry)).append("\n");
    sb.append("    creditCount: ").append(toIndentedString(creditCount)).append("\n");
    sb.append("    disputeAmount: ").append(toIndentedString(disputeAmount)).append("\n");
    sb.append("    disputeBookingEntry: ").append(toIndentedString(disputeBookingEntry)).append("\n");
    sb.append("    disputeCount: ").append(toIndentedString(disputeCount)).append("\n");
    sb.append("    nonSaleChargeAmount: ").append(toIndentedString(nonSaleChargeAmount)).append("\n");
    sb.append("    nonSaleChargeBookingEntry: ").append(toIndentedString(nonSaleChargeBookingEntry)).append("\n");
    sb.append("    nonSaleChargeCount: ").append(toIndentedString(nonSaleChargeCount)).append("\n");
    sb.append("    onHoldAmount: ").append(toIndentedString(onHoldAmount)).append("\n");
    sb.append("    onHoldBookingEntry: ").append(toIndentedString(onHoldBookingEntry)).append("\n");
    sb.append("    onHoldCount: ").append(toIndentedString(onHoldCount)).append("\n");
    sb.append("    refundAmount: ").append(toIndentedString(refundAmount)).append("\n");
    sb.append("    refundBookingEntry: ").append(toIndentedString(refundBookingEntry)).append("\n");
    sb.append("    refundCount: ").append(toIndentedString(refundCount)).append("\n");
    sb.append("    shippingLabelAmount: ").append(toIndentedString(shippingLabelAmount)).append("\n");
    sb.append("    shippingLabelBookingEntry: ").append(toIndentedString(shippingLabelBookingEntry)).append("\n");
    sb.append("    shippingLabelCount: ").append(toIndentedString(shippingLabelCount)).append("\n");
    sb.append("    transferAmount: ").append(toIndentedString(transferAmount)).append("\n");
    sb.append("    transferBookingEntry: ").append(toIndentedString(transferBookingEntry)).append("\n");
    sb.append("    transferCount: ").append(toIndentedString(transferCount)).append("\n");
    sb.append("    withdrawalAmount: ").append(toIndentedString(withdrawalAmount)).append("\n");
    sb.append("    withdrawalBookingEntry: ").append(toIndentedString(withdrawalBookingEntry)).append("\n");
    sb.append("    withdrawalCount: ").append(toIndentedString(withdrawalCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

