/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * A type that provides details for the targeted keywords.
 */
@ApiModel(description = "A type that provides details for the targeted keywords.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class TargetedKeywordRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ADDITIONAL_INFO = "additionalInfo";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_INFO)
  private List<String> additionalInfo = null;

  public static final String SERIALIZED_NAME_EXCLUSIONS = "exclusions";
  @SerializedName(SERIALIZED_NAME_EXCLUSIONS)
  private List<String> exclusions = null;

  public static final String SERIALIZED_NAME_LISTING_IDS = "listingIds";
  @SerializedName(SERIALIZED_NAME_LISTING_IDS)
  private List<String> listingIds = null;

  public static final String SERIALIZED_NAME_MATCH_TYPE = "matchType";
  @SerializedName(SERIALIZED_NAME_MATCH_TYPE)
  private String matchType;


  public TargetedKeywordRequest additionalInfo(List<String> additionalInfo) {
    
    this.additionalInfo = additionalInfo;
    return this;
  }

  public TargetedKeywordRequest addAdditionalInfoItem(String additionalInfoItem) {
    if (this.additionalInfo == null) {
      this.additionalInfo = new ArrayList<String>();
    }
    this.additionalInfo.add(additionalInfoItem);
    return this;
  }

   /**
   * A field used to indicate whether additional information and insight data shall be provided for suggested keywords.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Valid Value:&lt;/strong&gt; &lt;code&gt;KEYWORD_INSIGHTS&lt;/code&gt;
   * @return additionalInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A field used to indicate whether additional information and insight data shall be provided for suggested keywords.<br /><br /><strong>Valid Value:</strong> <code>KEYWORD_INSIGHTS</code>")

  public List<String> getAdditionalInfo() {
    return additionalInfo;
  }


  public void setAdditionalInfo(List<String> additionalInfo) {
    this.additionalInfo = additionalInfo;
  }


  public TargetedKeywordRequest exclusions(List<String> exclusions) {
    
    this.exclusions = exclusions;
    return this;
  }

  public TargetedKeywordRequest addExclusionsItem(String exclusionsItem) {
    if (this.exclusions == null) {
      this.exclusions = new ArrayList<String>();
    }
    this.exclusions.add(exclusionsItem);
    return this;
  }

   /**
   * A field used to indicate that the keywords already selected by sellers for the specified listing IDs should be filtered out of the response, and only new and unique keyword recommendations shall be returned.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Valid Value:&lt;/strong&gt; &lt;code&gt;ADOPTED_KEYWORDS&lt;/code&gt;
   * @return exclusions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A field used to indicate that the keywords already selected by sellers for the specified listing IDs should be filtered out of the response, and only new and unique keyword recommendations shall be returned.<br /><br /><strong>Valid Value:</strong> <code>ADOPTED_KEYWORDS</code>")

  public List<String> getExclusions() {
    return exclusions;
  }


  public void setExclusions(List<String> exclusions) {
    this.exclusions = exclusions;
  }


  public TargetedKeywordRequest listingIds(List<String> listingIds) {
    
    this.listingIds = listingIds;
    return this;
  }

  public TargetedKeywordRequest addListingIdsItem(String listingIdsItem) {
    if (this.listingIds == null) {
      this.listingIds = new ArrayList<String>();
    }
    this.listingIds.add(listingIdsItem);
    return this;
  }

   /**
   * A set of comma-separated listing IDs in the paginated collection. &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Maximum number of listings requested: &lt;/b&gt;300
   * @return listingIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A set of comma-separated listing IDs in the paginated collection. <br /><br /><b>Maximum number of listings requested: </b>300")

  public List<String> getListingIds() {
    return listingIds;
  }


  public void setListingIds(List<String> listingIds) {
    this.listingIds = listingIds;
  }


  public TargetedKeywordRequest matchType(String matchType) {
    
    this.matchType = matchType;
    return this;
  }

   /**
   * A field that defines the match type for the keyword.&lt;br /&gt;&lt;br /&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;span style&#x3D;\&quot;color:#004680\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/span&gt; Broad matching of keywords is currently only supported in the AU marketplace.&lt;/span&gt;&lt;br /&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;BROAD&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EXACT&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;PHRASE&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt; For implementation help, refer to &lt;a href&#x3D;&#39;https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum&#39;&gt;eBay API documentation&lt;/a&gt;
   * @return matchType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A field that defines the match type for the keyword.<br /><br /><span class=\"tablenote\"><span style=\"color:#004680\"><strong>Note:</strong></span> Broad matching of keywords is currently only supported in the AU marketplace.</span><br /><b>Valid Values:</b><ul><li><code>BROAD</code></li><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'>eBay API documentation</a>")

  public String getMatchType() {
    return matchType;
  }


  public void setMatchType(String matchType) {
    this.matchType = matchType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TargetedKeywordRequest targetedKeywordRequest = (TargetedKeywordRequest) o;
    return Objects.equals(this.additionalInfo, targetedKeywordRequest.additionalInfo) &&
        Objects.equals(this.exclusions, targetedKeywordRequest.exclusions) &&
        Objects.equals(this.listingIds, targetedKeywordRequest.listingIds) &&
        Objects.equals(this.matchType, targetedKeywordRequest.matchType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalInfo, exclusions, listingIds, matchType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TargetedKeywordRequest {\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("    exclusions: ").append(toIndentedString(exclusions)).append("\n");
    sb.append("    listingIds: ").append(toIndentedString(listingIds)).append("\n");
    sb.append("    matchType: ").append(toIndentedString(matchType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

