/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nextop.ebay.client.model.ErrorParameter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * A container that defines the elements of error and warning message.
 */
@ApiModel(description = "A container that defines the elements of error and warning message.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class Error implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_ERROR_ID = "errorId";
  @SerializedName(SERIALIZED_NAME_ERROR_ID)
  private Integer errorId;

  public static final String SERIALIZED_NAME_INPUT_REF_IDS = "inputRefIds";
  @SerializedName(SERIALIZED_NAME_INPUT_REF_IDS)
  private List<String> inputRefIds = null;

  public static final String SERIALIZED_NAME_LONG_MESSAGE = "longMessage";
  @SerializedName(SERIALIZED_NAME_LONG_MESSAGE)
  private String longMessage;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_OUTPUT_REF_IDS = "outputRefIds";
  @SerializedName(SERIALIZED_NAME_OUTPUT_REF_IDS)
  private List<String> outputRefIds = null;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<ErrorParameter> parameters = null;

  public static final String SERIALIZED_NAME_SUBDOMAIN = "subdomain";
  @SerializedName(SERIALIZED_NAME_SUBDOMAIN)
  private String subdomain;


  public Error category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * The category type for this error or warning. It takes a string that can have one of three values:&lt;ul&gt;&lt;li&gt;&lt;code&gt;Application&lt;/code&gt;: Indicates an exception or error occurred in the application code or at runtime. Examples include catching an exception in a service&#39;s business logic, system failures, or request errors from a dependency.&lt;/li&gt;&lt;li&gt;&lt;code&gt;Business&lt;/code&gt;: Used when your service or a dependent service refused to continue processing on the resource because of a business rule violation such as \&quot;Seller does not ship item to Antarctica\&quot; or \&quot;Buyer ineligible to purchase an alcoholic item\&quot;. Business errors are not syntactical input errors.&lt;/li&gt;&lt;li&gt;&lt;code&gt;Request&lt;/code&gt;: Used when there is anything wrong with the request, such as authentication, syntactical errors, rate limiting or missing headers, bad HTTP header values, and so on.&lt;/li&gt;&lt;/ul&gt;
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The category type for this error or warning. It takes a string that can have one of three values:<ul><li><code>Application</code>: Indicates an exception or error occurred in the application code or at runtime. Examples include catching an exception in a service's business logic, system failures, or request errors from a dependency.</li><li><code>Business</code>: Used when your service or a dependent service refused to continue processing on the resource because of a business rule violation such as \"Seller does not ship item to Antarctica\" or \"Buyer ineligible to purchase an alcoholic item\". Business errors are not syntactical input errors.</li><li><code>Request</code>: Used when there is anything wrong with the request, such as authentication, syntactical errors, rate limiting or missing headers, bad HTTP header values, and so on.</li></ul>")

  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }


  public Error domain(String domain) {
    
    this.domain = domain;
    return this;
  }

   /**
   * Name of the domain containing the service or application.
   * @return domain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the domain containing the service or application.")

  public String getDomain() {
    return domain;
  }


  public void setDomain(String domain) {
    this.domain = domain;
  }


  public Error errorId(Integer errorId) {
    
    this.errorId = errorId;
    return this;
  }

   /**
   * A positive integer that uniquely identifies the specific error condition that occurred. Your application can use error codes as identifiers in your customized error-handling algorithms.
   * @return errorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A positive integer that uniquely identifies the specific error condition that occurred. Your application can use error codes as identifiers in your customized error-handling algorithms.")

  public Integer getErrorId() {
    return errorId;
  }


  public void setErrorId(Integer errorId) {
    this.errorId = errorId;
  }


  public Error inputRefIds(List<String> inputRefIds) {
    
    this.inputRefIds = inputRefIds;
    return this;
  }

  public Error addInputRefIdsItem(String inputRefIdsItem) {
    if (this.inputRefIds == null) {
      this.inputRefIds = new ArrayList<String>();
    }
    this.inputRefIds.add(inputRefIdsItem);
    return this;
  }

   /**
   * Identifies specific request elements associated with the error, if any. inputRefId&#39;s response is format specific. For JSON, use &lt;i&gt;JSONPath&lt;/i&gt; notation.
   * @return inputRefIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies specific request elements associated with the error, if any. inputRefId's response is format specific. For JSON, use <i>JSONPath</i> notation.")

  public List<String> getInputRefIds() {
    return inputRefIds;
  }


  public void setInputRefIds(List<String> inputRefIds) {
    this.inputRefIds = inputRefIds;
  }


  public Error longMessage(String longMessage) {
    
    this.longMessage = longMessage;
    return this;
  }

   /**
   * An expanded version of message that should be around 100-200 characters long, but is not required to be such.
   * @return longMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An expanded version of message that should be around 100-200 characters long, but is not required to be such.")

  public String getLongMessage() {
    return longMessage;
  }


  public void setLongMessage(String longMessage) {
    this.longMessage = longMessage;
  }


  public Error message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * An end user and app-developer friendly device agnostic message. It explains what the error or warning is, and how to fix it (in a general sense). Its value is at most 50 characters long. If applicable, the value is localized in the end user&#39;s requested locale.
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An end user and app-developer friendly device agnostic message. It explains what the error or warning is, and how to fix it (in a general sense). Its value is at most 50 characters long. If applicable, the value is localized in the end user's requested locale.")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public Error outputRefIds(List<String> outputRefIds) {
    
    this.outputRefIds = outputRefIds;
    return this;
  }

  public Error addOutputRefIdsItem(String outputRefIdsItem) {
    if (this.outputRefIds == null) {
      this.outputRefIds = new ArrayList<String>();
    }
    this.outputRefIds.add(outputRefIdsItem);
    return this;
  }

   /**
   * Identifies specific response elements associated with the error, if any. Path format is the same as &lt;code&gt;inputRefId&lt;/code&gt;.
   * @return outputRefIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies specific response elements associated with the error, if any. Path format is the same as <code>inputRefId</code>.")

  public List<String> getOutputRefIds() {
    return outputRefIds;
  }


  public void setOutputRefIds(List<String> outputRefIds) {
    this.outputRefIds = outputRefIds;
  }


  public Error parameters(List<ErrorParameter> parameters) {
    
    this.parameters = parameters;
    return this;
  }

  public Error addParametersItem(ErrorParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<ErrorParameter>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * This optional complex field type contains a list of one or more context-specific &lt;code&gt;ErrorParameter&lt;/code&gt; objects, with each item in the list entry being a parameter (or input field name) that caused an error condition. Each &lt;code&gt;ErrorParameter&lt;/code&gt; object consists of two fields, a &lt;code&gt;name&lt;/code&gt; and a &lt;code&gt;value&lt;/code&gt;.
   * @return parameters
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "This optional complex field type contains a list of one or more context-specific <code>ErrorParameter</code> objects, with each item in the list entry being a parameter (or input field name) that caused an error condition. Each <code>ErrorParameter</code> object consists of two fields, a <code>name</code> and a <code>value</code>.")

  public List<ErrorParameter> getParameters() {
    return parameters;
  }


  public void setParameters(List<ErrorParameter> parameters) {
    this.parameters = parameters;
  }


  public Error subdomain(String subdomain) {
    
    this.subdomain = subdomain;
    return this;
  }

   /**
   * Name of the domain&#39;s subsystem or subdivision. For example, checkout is a subdomain in the buying domain.
   * @return subdomain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the domain's subsystem or subdivision. For example, checkout is a subdomain in the buying domain.")

  public String getSubdomain() {
    return subdomain;
  }


  public void setSubdomain(String subdomain) {
    this.subdomain = subdomain;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Error error = (Error) o;
    return Objects.equals(this.category, error.category) &&
        Objects.equals(this.domain, error.domain) &&
        Objects.equals(this.errorId, error.errorId) &&
        Objects.equals(this.inputRefIds, error.inputRefIds) &&
        Objects.equals(this.longMessage, error.longMessage) &&
        Objects.equals(this.message, error.message) &&
        Objects.equals(this.outputRefIds, error.outputRefIds) &&
        Objects.equals(this.parameters, error.parameters) &&
        Objects.equals(this.subdomain, error.subdomain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, domain, errorId, inputRefIds, longMessage, message, outputRefIds, parameters, subdomain);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Error {\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    errorId: ").append(toIndentedString(errorId)).append("\n");
    sb.append("    inputRefIds: ").append(toIndentedString(inputRefIds)).append("\n");
    sb.append("    longMessage: ").append(toIndentedString(longMessage)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    outputRefIds: ").append(toIndentedString(outputRefIds)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    subdomain: ").append(toIndentedString(subdomain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

