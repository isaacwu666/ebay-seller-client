/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This container provides summary information on an upload feed (not applicable for download feed types).
 */
@ApiModel(description = "This container provides summary information on an upload feed (not applicable for download feed types).")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-07T14:51:10.412+08:00[Asia/Shanghai]")
public class UploadSummary implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_FAILURE_COUNT = "failureCount";
  @SerializedName(SERIALIZED_NAME_FAILURE_COUNT)
  private Integer failureCount;

  public static final String SERIALIZED_NAME_SUCCESS_COUNT = "successCount";
  @SerializedName(SERIALIZED_NAME_SUCCESS_COUNT)
  private Integer successCount;


  public UploadSummary failureCount(Integer failureCount) {
    
    this.failureCount = failureCount;
    return this;
  }

   /**
   * The number of records, such as the number of listings created or the number of pictures uploaded to a listing, that failed to process during the upload feed. Check the response file and correct any issues mentioned. If the feed fails before processing, no response file is provided. In this case check the REST output response.
   * @return failureCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of records, such as the number of listings created or the number of pictures uploaded to a listing, that failed to process during the upload feed. Check the response file and correct any issues mentioned. If the feed fails before processing, no response file is provided. In this case check the REST output response.")

  public Integer getFailureCount() {
    return failureCount;
  }


  public void setFailureCount(Integer failureCount) {
    this.failureCount = failureCount;
  }


  public UploadSummary successCount(Integer successCount) {
    
    this.successCount = successCount;
    return this;
  }

   /**
   * The number of records that were successfully processed during the upload feed.
   * @return successCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of records that were successfully processed during the upload feed.")

  public Integer getSuccessCount() {
    return successCount;
  }


  public void setSuccessCount(Integer successCount) {
    this.successCount = successCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadSummary uploadSummary = (UploadSummary) o;
    return Objects.equals(this.failureCount, uploadSummary.failureCount) &&
        Objects.equals(this.successCount, uploadSummary.successCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(failureCount, successCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadSummary {\n");
    sb.append("    failureCount: ").append(toIndentedString(failureCount)).append("\n");
    sb.append("    successCount: ").append(toIndentedString(successCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

