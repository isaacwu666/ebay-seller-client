/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.api;

import com.nextop.ebay.client.ApiException;
import com.nextop.ebay.client.model.IssueRefundRequest;
import com.nextop.ebay.client.model.Order;
import com.nextop.ebay.client.model.OrderSearchPagedCollection;
import com.nextop.ebay.client.model.Refund;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FulfillmentApiOrderApi
 */
@Ignore
public class FulfillmentApiOrderApiTest {

    private final FulfillmentApiOrderApi api = new FulfillmentApiOrderApi();

    
    /**
     * /order/{orderId}
     *
     * Use this call to retrieve the contents of an order based on its unique identifier, &lt;i&gt;orderId&lt;/i&gt;. This value was returned in the &lt;b&gt; getOrders&lt;/b&gt; call&#39;s &lt;b&gt;orders.orderId&lt;/b&gt; field when you searched for orders by creation date, modification date, or fulfillment status. Include the optional &lt;b&gt;fieldGroups&lt;/b&gt; query parameter set to &lt;code&gt;TAX_BREAKDOWN&lt;/code&gt; to return a breakdown of the taxes and fees. &lt;br /&gt;&lt;br /&gt; The returned &lt;b&gt;Order&lt;/b&gt; object contains information you can use to create and process fulfillments, including: &lt;ul&gt; &lt;li&gt;Information about the buyer and seller&lt;/li&gt; &lt;li&gt;Information about the order&#39;s line items&lt;/li&gt; &lt;li&gt; The plans for packaging, addressing and shipping the order&lt;/li&gt; &lt;li&gt;The status of payment, packaging, addressing, and shipping the order&lt;/li&gt; &lt;li&gt;A summary of monetary amounts specific to the order such as pricing, payments, and shipping costs&lt;/li&gt; &lt;li&gt;A summary of applied taxes and fees, and optionally a breakdown of each &lt;/li&gt;&lt;/ul&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOrderTest() throws ApiException {
        String orderId = null;
        String fieldGroups = null;
        Order response = api.getOrder(orderId, fieldGroups);

        // TODO: test validations
    }
    
    /**
     * /order
     *
     * Use this call to search for and retrieve one or more orders based on their creation date, last modification date, or fulfillment status using the &lt;b&gt;filter&lt;/b&gt; parameter. You can alternatively specify a list of orders using the &lt;b&gt;orderIds&lt;/b&gt; parameter. Include the optional &lt;b&gt;fieldGroups&lt;/b&gt; query parameter set to &lt;code&gt;TAX_BREAKDOWN&lt;/code&gt; to return a breakdown of the taxes and fees. &lt;br /&gt;&lt;br /&gt; The returned &lt;b&gt;Order&lt;/b&gt; objects contain information you can use to create and process fulfillments, including: &lt;ul&gt; &lt;li&gt;Information about the buyer and seller&lt;/li&gt; &lt;li&gt;Information about the order&#39;s line items&lt;/li&gt; &lt;li&gt;The plans for packaging, addressing and shipping the order&lt;/li&gt; &lt;li&gt;The status of payment, packaging, addressing, and shipping the order&lt;/li&gt; &lt;li&gt;A summary of monetary amounts specific to the order such as pricing, payments, and shipping costs&lt;/li&gt; &lt;li&gt;A summary of applied taxes and fees, and optionally a breakdown of each &lt;/li&gt;&lt;/ul&gt; &lt;br /&gt;&lt;br /&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Important:&lt;/strong&gt; In this call, the &lt;b&gt;cancelStatus.cancelRequests&lt;/b&gt; array is returned but is always empty. Use the &lt;b&gt;getOrder&lt;/b&gt; call instead, which returns this array fully populated with information about any cancellation requests.&lt;/span&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOrdersTest() throws ApiException {
        String fieldGroups = null;
        String filter = null;
        String limit = null;
        String offset = null;
        String orderIds = null;
        OrderSearchPagedCollection response = api.getOrders(fieldGroups, filter, limit, offset, orderIds);

        // TODO: test validations
    }
    
    /**
     * Issue Refund
     *
     * This method allows a seller to issue a full or partial refund to a buyer for an order. Full or partial refunds can be issued at the order level or line item level.&lt;br/&gt;&lt;br/&gt;The refunds issued through this method are processed asynchronously, so the refund will not show as &#39;Refunded&#39; right away. A seller will have to make a subsequent &lt;a href&#x3D;\&quot;https://developer.ebay.com/api-docs/sell/fulfillment/resources/order/methods/getOrder\&quot; target&#x3D;\&quot;_blank\&quot;&gt;getOrder&lt;/a&gt; call to check the status of the refund.  The status of an order refund can be found in the &lt;a href&#x3D;\&quot;https://developer.ebay.com/api-docs/sell/fulfillment/resources/order/methods/getOrder#response.paymentSummary.refunds.refundStatus\&quot; target&#x3D;\&quot;_blank\&quot;&gt;paymentSummary.refunds.refundStatus&lt;/a&gt; field of the &lt;a href&#x3D;\&quot;https://developer.ebay.com/api-docs/sell/fulfillment/resources/order/methods/getOrder\&quot; target&#x3D;\&quot;_blank\&quot;&gt;getOrder&lt;/a&gt; response.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void issueRefundTest() throws ApiException {
        String orderId = null;
        IssueRefundRequest issueRefundRequest = null;
        Refund response = api.issueRefund(orderId, issueRefundRequest);

        // TODO: test validations
    }
    
}
