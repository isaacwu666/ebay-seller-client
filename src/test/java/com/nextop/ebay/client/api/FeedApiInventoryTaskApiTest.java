/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.api;

import com.nextop.ebay.client.ApiException;
import com.nextop.ebay.client.model.CreateInventoryTaskRequest;
import com.nextop.ebay.client.model.InventoryTask;
import com.nextop.ebay.client.model.InventoryTaskCollection;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FeedApiInventoryTaskApi
 */
@Ignore
public class FeedApiInventoryTaskApiTest {

    private final FeedApiInventoryTaskApi api = new FeedApiInventoryTaskApi();

    
    /**
     * /inventory_task
     *
     * This method creates an inventory-related download task for a specified feed type with optional filter criteria. When using this method, specify the &lt;strong&gt;feedType&lt;/strong&gt;. &lt;br/&gt;&lt;br/&gt;This method returns the location response header containing the &lt;strong&gt;getInventoryTask&lt;/strong&gt; call URI to retrieve the inventory task you just created. The URL includes the eBay-assigned task ID, which you can use to reference the inventory task.&lt;br/&gt;&lt;br/&gt;To retrieve the status of the task, use the &lt;strong&gt;getInventoryTask&lt;/strong&gt; method to retrieve a single task ID or the &lt;strong&gt;getInventoryTasks&lt;/strong&gt; method to retrieve multiple task IDs.&lt;p&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; The scope depends on the feed type. An error message results when an unsupported scope or feed type is specified.&lt;/span&gt;&lt;/p&gt;Presently, this method supports Active Inventory Report. The &lt;strong&gt;ActiveInventoryReport&lt;/strong&gt; returns a report that contains price and quantity information for all of the active listings for a specific seller. A seller can use this information to maintain their inventory on eBay.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createInventoryTaskTest() throws ApiException {
        String X_EBAY_C_MARKETPLACE_ID = null;
        CreateInventoryTaskRequest createInventoryTaskRequest = null;
        Object response = api.createInventoryTask(X_EBAY_C_MARKETPLACE_ID, createInventoryTaskRequest);

        // TODO: test validations
    }
    
    /**
     * /inventory_task/{task_id}
     *
     * This method retrieves the task details and status of the specified inventory-related task. The input is &lt;strong&gt;task_id&lt;/strong&gt;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInventoryTaskTest() throws ApiException {
        String taskId = null;
        InventoryTask response = api.getInventoryTask(taskId);

        // TODO: test validations
    }
    
    /**
     * /inventory_task
     *
     * This method searches for multiple tasks of a specific feed type, and includes date filters and pagination.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInventoryTasksTest() throws ApiException {
        String feedType = null;
        String scheduleId = null;
        String lookBackDays = null;
        String dateRange = null;
        String limit = null;
        String offset = null;
        InventoryTaskCollection response = api.getInventoryTasks(feedType, scheduleId, lookBackDays, dateRange, limit, offset);

        // TODO: test validations
    }
    
}
