/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.api;

import com.nextop.ebay.client.ApiException;
import com.nextop.ebay.client.model.BaseResponse;
import com.nextop.ebay.client.model.Compatibility;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InventoryApiProductCompatibilityApi
 */
@Ignore
public class InventoryApiProductCompatibilityApiTest {

    private final InventoryApiProductCompatibilityApi api = new InventoryApiProductCompatibilityApi();

    
    /**
     * /inventory_item/{sku}/product_compatibility
     *
     * This call is used by the seller to create or replace a list of products that are compatible with the inventory item. The inventory item is identified with a SKU value in the URI. Product compatibility is currently only applicable to motor vehicle parts and accessory categories, but more categories may be supported in the future.&lt;br /&gt;&lt;br /&gt;&lt;p&gt;In addition to the &lt;code&gt;authorization&lt;/code&gt; header, which is required for all eBay REST API calls, the &lt;strong&gt;createOrReplaceProductCompatibility&lt;/strong&gt; call also requires the &lt;code&gt;Content-Language&lt;/code&gt; header, that sets the natural language that will be used in the field values of the request payload. For US English, the code value passed in this header should be &lt;code&gt;en-US&lt;/code&gt;. To view other supported &lt;code&gt;Content-Language&lt;/code&gt; values, and to read more about all supported HTTP headers for eBay REST API calls, see the &lt;a href&#x3D;\&quot;/api-docs/static/rest-request-components.html#HTTP\&quot;&gt;HTTP request headers&lt;/a&gt; topic in the &lt;strong&gt;Using eBay RESTful APIs&lt;/strong&gt; document.&lt;/p&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOrReplaceProductCompatibilityTest() throws ApiException {
        String sku = null;
        String contentLanguage = null;
        Compatibility compatibility = null;
        BaseResponse response = api.createOrReplaceProductCompatibility(sku, contentLanguage, compatibility);

        // TODO: test validations
    }
    
    /**
     * /inventory_item/{sku}/product_compatibility
     *
     * This call is used by the seller to delete the list of products that are compatible with the inventory item that is associated with the compatible product list. The inventory item is identified with a SKU value in the URI. Product compatibility is currently only applicable to motor vehicle parts and accessory categories, but more categories may be supported in the future.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteProductCompatibilityTest() throws ApiException {
        String sku = null;
        Object response = api.deleteProductCompatibility(sku);

        // TODO: test validations
    }
    
    /**
     * /inventory_item/{sku}/product_compatibility
     *
     * This call is used by the seller to retrieve the list of products that are compatible with the inventory item. The SKU value for the inventory item is passed into the call URI, and a successful call with return the compatible vehicle list associated with this inventory item. Product compatibility is currently only applicable to motor vehicle parts and accessory categories, but more categories may be supported in the future.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProductCompatibilityTest() throws ApiException {
        String sku = null;
        Compatibility response = api.getProductCompatibility(sku);

        // TODO: test validations
    }
    
}
