/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.api;

import com.nextop.ebay.client.ApiException;
import com.nextop.ebay.client.model.RateTableDetails;
import com.nextop.ebay.client.model.RateTableUpdate;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountApiV2RateTableApi
 */
@Ignore
public class AccountApiV2RateTableApiTest {

    private final AccountApiV2RateTableApi api = new AccountApiV2RateTableApi();

    
    /**
     * /rate_table/{rate_table_id}
     *
     * This method retrieves an existing rate table identified by the &lt;b&gt;rate_table_id&lt;/b&gt; path parameter.&lt;br&gt;&lt;br&gt;&lt;b&gt;getRateTable&lt;/b&gt; currently supports the retrieval of rate tables for the following eBay marketplace IDs:&lt;ul&gt;&lt;li&gt;&lt;code&gt;EBAY_AU&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_CA&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_DE&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_ES&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_FR&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_GB&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_IT&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EBAY_US&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables \&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables defined for each marketplace and their corresponding &lt;b&gt;rateTableId&lt;/b&gt; values.&lt;/span&gt;&lt;br/&gt;&lt;br/&gt; A successful call returns detailed information for the specified shipping rate table.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRateTableTest() throws ApiException {
        String rateTableId = null;
        RateTableDetails response = api.getRateTable(rateTableId);

        // TODO: test validations
    }
    
    /**
     * /rate_table/{rate_table_id}/update_shipping_cost
     *
     * This method allows sellers to update &lt;b&gt;shippingCost&lt;/b&gt; and/or &lt;b&gt;additionalCost&lt;/b&gt; information for an existing shipping rate table identified by the &lt;b&gt;rate_table_id&lt;/b&gt; path parameter.&lt;br/&gt;&lt;br/&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; To retrieve a list of all &lt;b&gt;rateTableId&lt;/b&gt; values, issue a &lt;a href&#x3D;\&quot;/api-docs/sell/account/resources/rate_table/methods/getRateTables \&quot; target&#x3D;\&quot;_blank\&quot;&gt;getRateTables&lt;/a&gt; call (part of &lt;a href&#x3D;\&quot;/api-docs/sell/account/static/overview.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Account API V1&lt;/a&gt;,) with no &lt;b&gt;countryCode&lt;/b&gt; query parameter specifed. This will return a list of all shipping rate tables and corresponding &lt;b&gt;rateTableId&lt;/b&gt; values.&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;A successful call returns an HTTP status code of &lt;b&gt;204 No Content&lt;/b&gt;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateShippingCostTest() throws ApiException {
        String rateTableId = null;
        RateTableUpdate rateTableUpdate = null;
        Object response = api.updateShippingCost(rateTableId, rateTableUpdate);

        // TODO: test validations
    }
    
}
