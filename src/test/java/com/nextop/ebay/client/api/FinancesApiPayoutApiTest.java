/*
 * ebay官方api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.nextop.ebay.client.api;

import com.nextop.ebay.client.ApiException;
import com.nextop.ebay.client.model.Payout;
import com.nextop.ebay.client.model.PayoutSummaryResponse;
import com.nextop.ebay.client.model.Payouts;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FinancesApiPayoutApi
 */
@Ignore
public class FinancesApiPayoutApiTest {

    private final FinancesApiPayoutApi api = new FinancesApiPayoutApi();

    
    /**
     * /payout/{payout_Id}
     *
     * This method retrieves details on a specific seller payout. The unique identfier of the payout is passed in as a path parameter at the end of the call URI. &lt;br/&gt;&lt;br/&gt;The &lt;b&gt;getPayouts&lt;/b&gt; method can be used to retrieve the unique identifier of a payout, or the user can check Seller Hub.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPayoutTest() throws ApiException {
        String payoutId = null;
        Payout response = api.getPayout(payoutId);

        // TODO: test validations
    }
    
    /**
     * /payout_summary
     *
     * This method is used to retrieve cumulative values for payouts in a particular state, or all states. The metadata in the response includes total payouts, the total number of monetary transactions (sales, refunds, credits) associated with those payouts, and the total dollar value of all payouts.&lt;br/&gt;&lt;br/&gt;If the &lt;b&gt;filter&lt;/b&gt; query parameter is used to filter by payout status, only one payout status value may be used. If the &lt;b&gt;filter&lt;/b&gt; query parameter is not used to filter by a specific payout status, cumulative values for payouts in all states are returned.&lt;br/&gt;&lt;br/&gt;The user can also use the &lt;b&gt;filter&lt;/b&gt; query parameter to specify a date range, and then only payouts that were processed within that date range are considered.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPayoutSummaryTest() throws ApiException {
        String filter = null;
        PayoutSummaryResponse response = api.getPayoutSummary(filter);

        // TODO: test validations
    }
    
    /**
     * /payout
     *
     * This method is used to retrieve the details of one or more seller payouts. By using the &lt;b&gt;filter&lt;/b&gt; query parameter, users can retrieve payouts processed within a specific date range, and/or they can retrieve payouts in a specific state.&lt;br/&gt;&lt;br/&gt;There are also pagination and sort query parameters that allow users to control the payouts that are returned in the response.&lt;br/&gt;&lt;br/&gt;If no payouts match the input criteria, an empty payload is returned.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPayoutsTest() throws ApiException {
        String filter = null;
        String limit = null;
        String offset = null;
        String sort = null;
        Payouts response = api.getPayouts(filter, limit, offset, sort);

        // TODO: test validations
    }
    
}
